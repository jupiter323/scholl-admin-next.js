{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap, { chartColorMap } from '../../utils/statusColorMap';\n\nvar _data = function data(percentage, status) {\n  return {\n    datasets: [{\n      data: [percentage, 100 - percentage],\n      backgroundColor: [chartColorMap[status], '#eaeaea']\n    }]\n  };\n};\n\nvar FullView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullView, _React$Component);\n\n  function FullView(props) {\n    var _this;\n\n    _classCallCheck(this, FullView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event, index) {\n      var dropdownIsOpen = _this.state.dropdownIsOpen;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return _this.onCloseDropdown();\n      }\n\n      return _this.onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapWorksheetCards\", function () {\n      var _this$props = _this.props,\n          worksheets = _this$props.worksheets,\n          onToggleDetailModalOpen = _this$props.onToggleDetailModalOpen;\n      var _this$state = _this.state,\n          dropdownIndex = _this$state.dropdownIndex,\n          dropdownIsOpen = _this$state.dropdownIsOpen;\n      return worksheets.map(function (worksheet, index) {\n        var disabled = worksheet.disabled,\n            worksheetName = worksheet.worksheetName,\n            worksheetSource = worksheet.worksheetSource,\n            subject = worksheet.subject,\n            problemType = worksheet.problemType,\n            difficulty = worksheet.difficulty,\n            score = worksheet.score,\n            status = worksheet.status,\n            problems = worksheet.problems,\n            timeEstimate = worksheet.timeEstimate,\n            availableDate = worksheet.availableDate,\n            dueDate = worksheet.dueDate,\n            classifications = worksheet.classifications,\n            flags = worksheet.flags,\n            late = worksheet.late;\n        return __jsx(\"div\", {\n          className: \"card-main-col col s12 m8 l7 xl5\",\n          key: worksheet.id\n        }, __jsx(\"div\", {\n          className: disabled ? 'card-main work-card card-disabled card' : 'card-main work-card card'\n        }, __jsx(\"div\", {\n          className: \"card-panel panel-border\"\n        }, __jsx(\"div\", {\n          className: \"card-panel-row row\"\n        }, __jsx(\"div\", {\n          className: \"icon-col col s2\"\n        }, __jsx(\"span\", {\n          className: \"block-icon\"\n        }, __jsx(\"i\", {\n          className: \"icon-sheets-w\"\n        }))), __jsx(\"div\", {\n          className: \"col s8\"\n        }, __jsx(\"div\", {\n          className: \"card-panel-text\"\n        }, __jsx(\"div\", {\n          className: \"text-small truncate\"\n        }, \"Worksheet (\", subject, \")\"), __jsx(\"div\", {\n          className: \"text-large truncate\"\n        }, worksheetName))), __jsx(\"div\", {\n          className: \"position-top right-align\"\n        }, __jsx(\"div\", {\n          className: \"icons-row\"\n        }, flags.length > 0 && __jsx(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, __jsx(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", __jsx(\"i\", {\n          className: \"icon-flag\"\n        })), __jsx(\"div\", {\n          className: \"dropdown-block col\"\n        }, __jsx(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown01\",\n          className: \"dropdown-trigger btn\",\n          onClick: function onClick(event) {\n            return _this.handleDropdownClick(event, index);\n          }\n        }, __jsx(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: 'block',\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#\",\n          className: \"modal-trigger link-block\",\n          onClick: function onClick() {\n            return onToggleDetailModalOpen(index);\n          }\n        }, \"View Details\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Dismiss Flags\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Reset\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\",\n          className: \"link-delete\"\n        }, \"Delete\"))) : null)))), __jsx(\"div\", {\n          className: \"card-top-block\"\n        }, __jsx(\"div\", {\n          className: \"d-flex row mb-0\"\n        }, __jsx(\"div\", {\n          className: \"left-col col s7\"\n        }, __jsx(\"dl\", {\n          className: \"dl-horizontal\"\n        }, __jsx(\"dt\", null, \"Problem Type:\"), __jsx(\"dd\", null, problemType))), __jsx(\"div\", {\n          className: \"right-col col s5 right-align\"\n        }, __jsx(\"dl\", {\n          className: \"dl-horizontal\"\n        }, __jsx(\"dt\", null, \"Di\\uFB03culty:\"), __jsx(\"dd\", null, difficulty)))))), __jsx(\"div\", {\n          className: \"card-content\"\n        }, __jsx(\"div\", {\n          className: \"d-flex sameheight-all row mb-0\"\n        }, __jsx(\"div\", {\n          className: \"col s6\"\n        }, __jsx(\"div\", {\n          className: \"chart-container\"\n        }, __jsx(\"div\", {\n          className: \"chart-holder\"\n        }, __jsx(Doughnut, {\n          data: function data() {\n            return _data(score, status);\n          },\n          options: {\n            circumference: 1 * Math.PI,\n            rotation: 1 * Math.PI,\n            cutoutPercentage: 60,\n            tooltips: false\n          }\n        }), __jsx(\"span\", {\n          className: \"chart-value\",\n          style: {\n            backgroundColor: chartColorMap[status]\n          }\n        }, __jsx(\"span\", {\n          \"data-count-up\": true,\n          \"data-start-val\": \"0\",\n          \"data-end-val\": \"96\",\n          \"data-duration\": \"1\"\n        }), __jsx(\"span\", {\n          className: \"percentage\"\n        }, score && \"\".concat(score, \"%\")))), __jsx(\"div\", {\n          className: \"chart-row\"\n        }, __jsx(\"div\", {\n          className: \"chart-col chart-start\"\n        }, \"\\xA0\"), __jsx(\"div\", {\n          className: \"chart-col chart-end\"\n        }, __jsx(\"span\", {\n          className: \"amount\",\n          style: {\n            color: chartColorMap[status]\n          }\n        }, problems))), __jsx(\"div\", {\n          className: \"chart-description\"\n        }, __jsx(\"dl\", {\n          className: \"dl-horizontal\"\n        }, __jsx(\"dt\", null, \"Time Est:\"), __jsx(\"dd\", null, formatTimeEstimate(timeEstimate))), __jsx(\"dl\", {\n          className: \"dl-horizontal\"\n        }, __jsx(\"dt\", null, \"Problems:\"), __jsx(\"dd\", null, problems))))), __jsx(\"div\", {\n          className: \"col s6 right-align justify-end\"\n        }, __jsx(\"div\", {\n          className: \"chart-description\"\n        }, __jsx(\"dl\", {\n          className: \"dl-horizontal\"\n        }, __jsx(\"dt\", null, \"Available:\"), __jsx(\"dd\", null, __jsx(\"time\", {\n          dateTime: availableDate\n        }, availableDate))), __jsx(\"dl\", {\n          className: late ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal'\n        }, disabled ? __jsx(\"dt\", null, \"No Due Date\") : [__jsx(\"dt\", {\n          key: \"0\"\n        }, \"Due:\"), __jsx(\"dd\", {\n          key: \"1\"\n        }, __jsx(\"time\", {\n          dateTime: dueDate\n        }, dueDate))])), __jsx(\"div\", {\n          className: \"align-self-end\"\n        }, __jsx(\"span\", {\n          className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\")\n        }, status)))), __jsx(\"div\", {\n          className: \"card-text\"\n        }, __jsx(\"dl\", {\n          className: \"dl-horizontal\"\n        }, __jsx(\"dt\", null, \"Worksheet Source:\"), __jsx(\"dd\", null, worksheetSource))), __jsx(\"div\", {\n          className: \"card-inner-row\"\n        }, __jsx(\"div\", {\n          className: \"row-holder\"\n        }, __jsx(\"ul\", {\n          className: \"classification-list\"\n        }, classifications.map(function (classification) {\n          return __jsx(\"li\", {\n            className: \"class-box\",\n            key: classification\n          }, classification);\n        })))))));\n      });\n    });\n\n    _this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(FullView, [{\n    key: \"render\",\n    value: function render() {\n      var worksheets = this.props.worksheets;\n      return __jsx(\"div\", {\n        className: \"content-section\"\n      }, __jsx(\"div\", {\n        className: \"result-row center-align\"\n      }, __jsx(\"b\", {\n        className: \"result\"\n      }, \" - \", worksheets.length, \" results -\")), __jsx(\"div\", {\n        className: \"row d-flex-content card-width-272\"\n      }, this.mapWorksheetCards()));\n    }\n  }]);\n\n  return FullView;\n}(React.Component);\n\nexport default FullView;","map":null,"metadata":{},"sourceType":"module"}