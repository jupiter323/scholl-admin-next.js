{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\n/* eslint-disable camelcase */\n\n/* eslint-disable jsx-control-statements/jsx-jcs-no-undef */\nconst API_URL = process.env.API_URL;\nimport { getToken } from \"../../../utils/AuthService\";\nexport const fetchStudentsApi = () => fetch(`${API_URL}/api/students`, {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => {\n  const formattedStudents = data.students.map(student => {\n    const {\n      user_address\n    } = student;\n    return {\n      id: student.id,\n      active: student.active,\n      studentInformation: {\n        firstName: student.first_name,\n        lastName: student.last_name\n      },\n      contactInformation: {\n        phone: user_address ? user_address.phone : \"\",\n        addressLine1: user_address ? user_address.address : \"\",\n        addressLine2: \"\",\n        city: user_address ? user_address.city : \"\",\n        state: user_address ? user_address.state : \"\",\n        zipCode: user_address ? user_address.zip : \"\"\n      },\n      emailAddress: {\n        email: student.email\n      },\n      location: {\n        locations: student.user_locations\n      },\n      stats: student.stats,\n      tutor: !student.hasOwnProperty(\"tutor\") ? \"\" : student.tutor,\n      testScores: {\n        initialScore: !student.hasOwnProperty(\"testScores\") ? \"0\" : student.testScores.initialScore,\n        currentScore: !student.hasOwnProperty(\"testScores\") ? \"0\" : student.testScores.currentScore\n      },\n      // courseContext: {\n      //   targetScore: !student.hasOwnProperty(\"courseContext\")\n      //     ? \"0\"\n      //     : student.courseContext.targetScore\n      // }\n      courseContext: {\n        courseStartDateOption: \"secondOption\",\n        courseStartDate: \"\",\n        courseEndDateOption: \"secondOption\",\n        courseEndDate: \"\",\n        targetTestDate: \"12/12/2019\",\n        targetScore: \"1400\",\n        highSchool: \"Everglades High\",\n        graduationYear: \"2018\"\n      },\n      courseProgress: {\n        startDate: \"6/03/18\",\n        testDate: \"10/14/18\",\n        progress: \"77\",\n        improvement: \"82\",\n        lessons: \"73\",\n        instruction: \"68\",\n        practiceTests: \"47\"\n      },\n      overdueWork: {\n        lessons: \"12\",\n        worksheets: \"3\",\n        quizzes: \"1\",\n        practiceTests: \"5\"\n      },\n      summary: {\n        questionsAnswered: \"791\",\n        videoWatched: \"416\",\n        notesTaken: \"52\",\n        totalTimeLoggedIn: \"220\",\n        lastLogIn: \"3:12\",\n        loginTimeCode: \"pm\",\n        onTimePercentage: \"77\"\n      },\n      testScores: {\n        initialScore: \"1040\",\n        currentScore: \"1300\",\n        compositeScore: {\n          reading: \"83\",\n          writing: \"31\",\n          math: \"105\",\n          composite: \"218\"\n        },\n        subjectScores: {\n          reading: \"58\",\n          writing: \"44\",\n          math: \"91\",\n          composite: \"195\"\n        }\n      },\n      strengthsAndWeaknesses: {\n        reading: {\n          correctAnswers: \"32\",\n          totalAnswers: \"52\"\n        },\n        writing: {\n          correctAnswers: \"35\",\n          totalAnswers: \"52\"\n        },\n        math: {\n          correctAnswers: \"37\",\n          totalAnswers: \"52\"\n        }\n      }\n    };\n  });\n  return formattedStudents;\n});\nexport const searchStudentsApi = filters => {\n  let queryString = `search=${filters.name}&location=${filters.location}`;\n\n  switch (filters.sort) {\n    case \"lastNameDescending\":\n      queryString += \"sort_by_field=last_name\";\n      break;\n\n    case \"firstNameDescending\":\n      queryString += \"sort_by_field=first_name\";\n      break;\n\n    case \"lastNameAscending\":\n      queryString += \"sort_by_field=last_name&sort_by_asc=true\";\n      break;\n\n    case \"firstNameAscending\":\n      queryString += \"sort_by_field=first_name&sort_by_asc=true\";\n      break;\n\n    default:\n      queryString += \"\";\n  }\n\n  return fetch(`${API_URL}/api/students?${queryString}`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    }\n  }).then(res => res.json()).then(({\n    data\n  }) => {\n    if (data.students.length < 1) {\n      return [];\n    }\n\n    const formattedStudents = data.students.map(student => {\n      const {\n        user_address\n      } = student;\n      return {\n        id: student.id,\n        active: student.active,\n        studentInformation: {\n          firstName: student.first_name,\n          lastName: student.last_name\n        },\n        contactInformation: {\n          phone: user_address ? user_address.phone : \"\",\n          addressLine1: user_address ? user_address.address : \"\",\n          addressLine2: \"\",\n          city: user_address ? user_address.city : \"\",\n          state: user_address ? user_address.state : \"\",\n          zipCode: user_address ? user_address.zip : \"\"\n        },\n        emailAddress: {\n          email: student.email\n        },\n        location: {\n          locations: student.user_locations\n        },\n        stats: student.stats,\n        tutor: !student.hasOwnProperty(\"tutor\") ? \"\" : student.tutor,\n        testScores: {\n          initialScore: !student.hasOwnProperty(\"testScores\") ? \"0\" : student.testScores.initialScore,\n          currentScore: !student.hasOwnProperty(\"testScores\") ? \"0\" : student.testScores.currentScore\n        },\n        courseContext: {\n          targetScore: !student.hasOwnProperty(\"courseContext\") ? \"0\" : student.courseContext.targetScore\n        }\n      };\n    });\n    return formattedStudents;\n  }).catch(err => err);\n};\nexport const createStudentApi = student => fetch(`${API_URL}/api/commands/create-student`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(student)\n}).then(res => res.json()).then(result => result).catch(err => err);\nexport const updateStudentActivationApi = body => fetch(`${API_URL}/api/commands/update-student-activation`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.status).catch(err => err);\nexport const updateStudentAddressApi = body => fetch(`${API_URL}/api/commands/update-student-address`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentCityApi = body => fetch(`${API_URL}/api/commands/update-student-city`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentEmailApi = body => fetch(`${API_URL}/api/commands/update-student-email`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentFirstNameApi = body => fetch(`${API_URL}/api/commands/update-student-first-name`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentLastNameApi = body => fetch(`${API_URL}/api/commands/update-student-last-name`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentPhoneApi = body => fetch(`${API_URL}/api/commands/update-student-phone`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentStateApi = body => fetch(`${API_URL}/api/commands/update-student-state`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentZipApi = body => fetch(`${API_URL}/api/commands/update-student-zip`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentTestDueDate = body => fetch(`${API_URL}/api/commands/update-student-test-due-date`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).catch(err => err);\nexport const updateStudentTestAssignmentDate = body => fetch(`${API_URL}/api/commands/update-student-test-assignment-date`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).catch(err => err);\nexport const deleteStudentApi = id => fetch(`${API_URL}/api/commands/delete-student`, {\n  method: \"DELETE\",\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify({\n    student_id: id\n  })\n}).then(res => res.json()).catch(err => err);\nexport const assignTestToStudentApi = test => fetch(`${API_URL}/api/commands/assign-test-to-student`, {\n  method: \"POST\",\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(test)\n}).then(res => res.json()).catch(err => err);\nexport const fetchTestsByStudentIdApi = student_id => fetch(`${API_URL}/api/students/${student_id}/student_tests`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => ({\n  data\n})).catch(err => err);\nexport const fetchTestByTestIdApi = (student_id, test_id) => {\n  fetch(`${API_URL}/api/students/${student_id}/student_tests/${test_id}`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    }\n  }).then(res => res.json()).catch(err => err);\n};\nexport const fetchStudentTestSectionsApi = (student_id, student_test_id) => fetch(`${API_URL}/api/students/${student_id}/student_tests/${student_test_id}/sections`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => data.sections).catch(err => err);\nexport const fetchStudentTestSectionProblemsApi = (student_id, student_test_id, section_id, student_token) => fetch(`${API_URL}/api/students/${student_id}/student_tests/${student_test_id}/sections/${section_id}/problems`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).catch(err => err);\nexport const addStudentAnswerToTestApi = answer => fetch(`${API_URL}/api/commands/add-student-answer-to-test`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(answer)\n}).then(res => res.json()).catch(err => err);\nexport const addStudentTestQuestionFlagApi = (body, studentToken) => fetch(`${API_URL}/api/commands/add-student-test-question-flag`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const fetchStudentTestScoreApi = (student_id, student_test_id) => fetch(`${API_URL}/api/students/${student_id}/student_tests/${student_test_id}/score`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Allow-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentTestQuestionFlagStatusApi = body => fetch(`${API_URL}/api/commands/update-student-test-question-flag-status`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const fetchLessonListApi = () => fetch(`${API_URL}/api/lessons`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => {\n  const lessons = data.lessons;\n  return lessons;\n});\nexport const fetchUnitsApi = () => fetch(`${API_URL}/api/units`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => {\n  const {\n    units = []\n  } = data;\n  const formattedUnits = units.reduce((finalArr, currentUnit) => {\n    const {\n      id,\n      name,\n      reference_id\n    } = currentUnit;\n    const newUnit = {\n      label: name,\n      value: id\n    };\n    finalArr.push(newUnit);\n    return finalArr;\n  }, []);\n  return {\n    formattedUnits\n  };\n}).catch(err => console.warn('err', err));\nexport const filterLessonListApi = filters => {\n  const {\n    unitFilter,\n    nameFilter\n  } = filters;\n  const unitString = unitFilter.length ? `unit_id=${unitFilter}&` : '';\n  const searchString = nameFilter.length ? `search=${nameFilter.toLowerCase().replace(/\\s/g, '+')}&` : '';\n  const filterQuery = `${searchString}${unitString}`;\n  return fetch(`${API_URL}/api/lessons?${filterQuery}`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    }\n  }).then(res => res.json()).then(({\n    data\n  }) => {\n    const lessons = data.lessons;\n    return lessons;\n  }).catch(err => err);\n};\nexport const fetchSubjectsApi = () => fetch(`${API_URL}/api/subjects`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => data.subjects).catch(err => console.warn(\"err\", err));\nexport const assignLessonToStudentApi = lesson => {\n  fetch(`${API_URL}/api/commands/assign-lesson-to-student`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: _JSON$stringify(lesson)\n  }).then(res => res.json()).catch(err => err);\n};\nexport const fetchStudentLessonListApi = (student, studentToken) => fetch(`${API_URL}/api/students/${student}/student_lessons`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(res => res).then(({\n  data\n}) => {\n  const studentLessons = data;\n  return studentLessons;\n});\nexport const resetStudentLessonsApi = lessons => {\n  fetch(`${API_URL}/api/commands/reset-student-lessons`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: _JSON$stringify(lessons)\n  }).then(res => res.json()).catch(err => err);\n};\nexport const unAssignLessonFromStudentApi = lessons => {\n  fetch(`${API_URL}/api/commands/unassign-lesson-from-student`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`\n    },\n    body: _JSON$stringify(lessons)\n  }).then(res => res.json()).catch(err => err);\n};\nexport const rescheduleStudentLessonsApi = lesson => fetch(`${API_URL}/api/commands/reschedule-student-lessons`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(lesson)\n}).then(res => res.json()).catch(err => err);\nexport const fetchStudentLessonApi = (student_id, lesson_id) => fetch(`${API_URL}/api/students/${student_id}/student_lessons/${lesson_id}`, {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(res => res).then(({\n  data\n}) => data);\nexport const fetchStudentLessonSectionApi = (student_id, lesson_id, section_id) => fetch(`${API_URL}/api/students/${student_id}/student_lessons/${lesson_id}/sections/${section_id}`, {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(res => res).then(({\n  data\n}) => data);\nexport const addStudentLessonProblemFlagApi = body => fetch(`${API_URL}/api/commands/flag-student-lesson-problem`, {\n  method: 'POST',\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const addVideoWatchedTime = body => fetch(`${API_URL}/api/commands/watch-student-lesson-problem-video`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const fetchAllTestsApi = () => fetch(`${API_URL}/api/tests`, {\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => ({\n  data\n})).catch(err => err);\nexport const addStudentLessonProblemAnswerApi = body => fetch(`${API_URL}/api/commands/add-student-lesson-problem-answer`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.status);\nexport const updateStudentTestStatusApi = body => fetch(`${API_URL}/api/commands/update-student-test-status`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const excuseStudentLessonLatenessApi = body => fetch(`${API_URL}/api/commands/excuse-student-lesson-lateness`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateStudentTestSectionStatusApi = body => fetch(`${API_URL}/api/commands/update-student-test-section-status`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const rescoreStudentLessonApi = body => fetch(`${API_URL}/api/commands/rescore-student-lesson`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res).catch(err => err);\nexport const deleteStudentTestApi = body => fetch(`${API_URL}/api/commands/delete-student-test`, {\n  method: \"DELETE\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res).catch(err => err);\nexport const updateStudentEssayScoreApi = scores => fetch(`${API_URL}/api/commands/update-student-test-essay-score`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(scores)\n}).then(res => res).catch(err => err);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/index/api.js"],"names":["API_URL","process","env","getToken","fetchStudentsApi","fetch","headers","Authorization","then","res","json","data","formattedStudents","students","map","student","user_address","id","active","studentInformation","firstName","first_name","lastName","last_name","contactInformation","phone","addressLine1","address","addressLine2","city","state","zipCode","zip","emailAddress","email","location","locations","user_locations","stats","tutor","hasOwnProperty","testScores","initialScore","currentScore","courseContext","courseStartDateOption","courseStartDate","courseEndDateOption","courseEndDate","targetTestDate","targetScore","highSchool","graduationYear","courseProgress","startDate","testDate","progress","improvement","lessons","instruction","practiceTests","overdueWork","worksheets","quizzes","summary","questionsAnswered","videoWatched","notesTaken","totalTimeLoggedIn","lastLogIn","loginTimeCode","onTimePercentage","compositeScore","reading","writing","math","composite","subjectScores","strengthsAndWeaknesses","correctAnswers","totalAnswers","searchStudentsApi","filters","queryString","name","sort","length","catch","err","createStudentApi","method","Accept","body","result","updateStudentActivationApi","status","updateStudentAddressApi","updateStudentCityApi","updateStudentEmailApi","updateStudentFirstNameApi","updateStudentLastNameApi","updateStudentPhoneApi","updateStudentStateApi","updateStudentZipApi","updateStudentTestDueDate","updateStudentTestAssignmentDate","deleteStudentApi","student_id","assignTestToStudentApi","test","fetchTestsByStudentIdApi","fetchTestByTestIdApi","test_id","fetchStudentTestSectionsApi","student_test_id","sections","fetchStudentTestSectionProblemsApi","section_id","student_token","addStudentAnswerToTestApi","answer","addStudentTestQuestionFlagApi","studentToken","fetchStudentTestScoreApi","updateStudentTestQuestionFlagStatusApi","fetchLessonListApi","fetchUnitsApi","units","formattedUnits","reduce","finalArr","currentUnit","reference_id","newUnit","label","value","push","console","warn","filterLessonListApi","unitFilter","nameFilter","unitString","searchString","toLowerCase","replace","filterQuery","fetchSubjectsApi","subjects","assignLessonToStudentApi","lesson","fetchStudentLessonListApi","studentLessons","resetStudentLessonsApi","unAssignLessonFromStudentApi","rescheduleStudentLessonsApi","fetchStudentLessonApi","lesson_id","fetchStudentLessonSectionApi","addStudentLessonProblemFlagApi","addVideoWatchedTime","fetchAllTestsApi","addStudentLessonProblemAnswerApi","updateStudentTestStatusApi","excuseStudentLessonLatenessApi","updateStudentTestSectionStatusApi","rescoreStudentLessonApi","deleteStudentTestApi","updateStudentEssayScoreApi","scores"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable jsx-control-statements/jsx-jcs-no-undef */\nconst API_URL = process.env.API_URL;\nimport { getToken } from \"../../../utils/AuthService\";\n\nexport const fetchStudentsApi = () =>\n  fetch(`${API_URL}/api/students`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => {\n      const formattedStudents = data.students.map(student => {\n        const { user_address } = student;\n        return ({\n          id: student.id,\n          active: student.active,\n          studentInformation: {\n            firstName: student.first_name,\n            lastName: student.last_name,\n          },\n          contactInformation: {\n            phone: user_address ? user_address.phone : \"\",\n            addressLine1: user_address ? user_address.address : \"\",\n            addressLine2: \"\",\n            city: user_address ? user_address.city : \"\",\n            state: user_address ? user_address.state : \"\",\n            zipCode: user_address ? user_address.zip : \"\",\n          },\n          emailAddress: {\n            email: student.email,\n          },\n          location: {\n            locations: student.user_locations,\n          },\n          stats: student.stats,\n          tutor: !student.hasOwnProperty(\"tutor\") ? \"\" : student.tutor,\n          testScores: {\n            initialScore: !student.hasOwnProperty(\"testScores\")\n              ? \"0\"\n              : student.testScores.initialScore,\n            currentScore: !student.hasOwnProperty(\"testScores\")\n              ? \"0\"\n              : student.testScores.currentScore,\n          },\n          // courseContext: {\n          //   targetScore: !student.hasOwnProperty(\"courseContext\")\n          //     ? \"0\"\n          //     : student.courseContext.targetScore\n          // }\n          courseContext: {\n            courseStartDateOption: \"secondOption\",\n            courseStartDate: \"\",\n            courseEndDateOption: \"secondOption\",\n            courseEndDate: \"\",\n            targetTestDate: \"12/12/2019\",\n            targetScore: \"1400\",\n            highSchool: \"Everglades High\",\n            graduationYear: \"2018\",\n          },\n          courseProgress: {\n            startDate: \"6/03/18\",\n            testDate: \"10/14/18\",\n            progress: \"77\",\n            improvement: \"82\",\n            lessons: \"73\",\n            instruction: \"68\",\n            practiceTests: \"47\",\n          },\n          overdueWork: {\n            lessons: \"12\",\n            worksheets: \"3\",\n            quizzes: \"1\",\n            practiceTests: \"5\",\n          },\n          summary: {\n            questionsAnswered: \"791\",\n            videoWatched: \"416\",\n            notesTaken: \"52\",\n            totalTimeLoggedIn: \"220\",\n            lastLogIn: \"3:12\",\n            loginTimeCode: \"pm\",\n            onTimePercentage: \"77\",\n          },\n          testScores: {\n            initialScore: \"1040\",\n            currentScore: \"1300\",\n            compositeScore: {\n              reading: \"83\",\n              writing: \"31\",\n              math: \"105\",\n              composite: \"218\",\n            },\n            subjectScores: {\n              reading: \"58\",\n              writing: \"44\",\n              math: \"91\",\n              composite: \"195\",\n            },\n          },\n          strengthsAndWeaknesses: {\n            reading: {\n              correctAnswers: \"32\",\n              totalAnswers: \"52\",\n            },\n            writing: {\n              correctAnswers: \"35\",\n              totalAnswers: \"52\",\n            },\n            math: {\n              correctAnswers: \"37\",\n              totalAnswers: \"52\",\n            },\n          },\n        });\n      });\n      return formattedStudents;\n    });\n\nexport const searchStudentsApi = filters => {\n  let queryString = `search=${filters.name}&location=${filters.location}`;\n  switch (filters.sort) {\n    case \"lastNameDescending\":\n      queryString += \"sort_by_field=last_name\";\n      break;\n    case \"firstNameDescending\":\n      queryString += \"sort_by_field=first_name\";\n      break;\n    case \"lastNameAscending\":\n      queryString += \"sort_by_field=last_name&sort_by_asc=true\";\n      break;\n    case \"firstNameAscending\":\n      queryString += \"sort_by_field=first_name&sort_by_asc=true\";\n      break;\n    default:\n      queryString += \"\";\n  }\n  return fetch(`${API_URL}/api/students?${queryString}`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => {\n      if (data.students.length < 1) {\n        return [];\n      }\n      const formattedStudents = data.students.map(student => {\n        const { user_address } = student;\n        return ({\n          id: student.id,\n          active: student.active,\n          studentInformation: {\n            firstName: student.first_name,\n            lastName: student.last_name,\n          },\n          contactInformation: {\n            phone: user_address ? user_address.phone : \"\",\n            addressLine1: user_address ? user_address.address : \"\",\n            addressLine2: \"\",\n            city: user_address ? user_address.city : \"\",\n            state: user_address ? user_address.state : \"\",\n            zipCode: user_address ? user_address.zip : \"\",\n          },\n          emailAddress: {\n            email: student.email,\n          },\n          location: {\n            locations: student.user_locations,\n          },\n          stats: student.stats,\n          tutor: !student.hasOwnProperty(\"tutor\") ? \"\" : student.tutor,\n          testScores: {\n            initialScore: !student.hasOwnProperty(\"testScores\")\n              ? \"0\"\n              : student.testScores.initialScore,\n            currentScore: !student.hasOwnProperty(\"testScores\")\n              ? \"0\"\n              : student.testScores.currentScore,\n          },\n          courseContext: {\n            targetScore: !student.hasOwnProperty(\"courseContext\")\n              ? \"0\"\n              : student.courseContext.targetScore,\n          },\n        });\n      });\n      return formattedStudents;\n    })\n    .catch(err => err);\n};\n\nexport const createStudentApi = student =>\n  fetch(`${API_URL}/api/commands/create-student`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(student),\n  })\n    .then(res => res.json())\n    .then(result => result)\n    .catch(err => err);\nexport const updateStudentActivationApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-activation`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.status)\n    .catch(err => err);\n\nexport const updateStudentAddressApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-address`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentCityApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-city`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentEmailApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-email`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentFirstNameApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-first-name`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentLastNameApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-last-name`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentPhoneApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-phone`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentStateApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-state`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentZipApi = body =>\n  fetch(`${API_URL}/api/commands/update-student-zip`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateStudentTestDueDate = body =>\n  fetch(`${API_URL}/api/commands/update-student-test-due-date`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  }).catch(err => err);\n\nexport const updateStudentTestAssignmentDate = body =>\n  fetch(`${API_URL}/api/commands/update-student-test-assignment-date`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  }).catch(err => err);\n\nexport const deleteStudentApi = id =>\n  fetch(`${API_URL}/api/commands/delete-student`, {\n    method: \"DELETE\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify({ student_id: id }),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const assignTestToStudentApi = test =>\n  fetch(`${API_URL}/api/commands/assign-test-to-student`, {\n    method: \"POST\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(test),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const fetchTestsByStudentIdApi = student_id =>\n  fetch(`${API_URL}/api/students/${student_id}/student_tests`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => ({ data }))\n    .catch(err => err);\n\nexport const fetchTestByTestIdApi = (student_id, test_id) => {\n  fetch(`${API_URL}/api/students/${student_id}/student_tests/${test_id}`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .catch(err => err);\n};\n\nexport const fetchStudentTestSectionsApi = (student_id, student_test_id) =>\n  fetch(`${API_URL}/api/students/${student_id}/student_tests/${student_test_id}/sections`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => data.sections)\n    .catch(err => err);\n\nexport const fetchStudentTestSectionProblemsApi = (student_id, student_test_id, section_id, student_token) =>\n  fetch(`${API_URL}/api/students/${student_id}/student_tests/${student_test_id}/sections/${section_id}/problems`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const addStudentAnswerToTestApi = answer =>\n  fetch(`${API_URL}/api/commands/add-student-answer-to-test`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(answer),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const addStudentTestQuestionFlagApi = (body, studentToken) =>\n  fetch(`${API_URL}/api/commands/add-student-test-question-flag`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const fetchStudentTestScoreApi = (student_id, student_test_id) =>\n  fetch(`${API_URL}/api/students/${student_id}/student_tests/${student_test_id}/score`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Allow-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .catch(err => err);\nexport const updateStudentTestQuestionFlagStatusApi = (body) =>\n  fetch(`${API_URL}/api/commands/update-student-test-question-flag-status`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\n\nexport const fetchLessonListApi = () =>\n  fetch(`${API_URL}/api/lessons`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => {\n      const lessons = data.lessons;\n      return lessons;\n    });\n\nexport const fetchUnitsApi = () =>\n  fetch(`${API_URL}/api/units`,\n    {\n      headers: {\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getToken()}`,\n      },\n    })\n    .then(res => res.json())\n    .then(({ data }) => {\n      const { units = [] } = data;\n      const formattedUnits = units.reduce((finalArr, currentUnit) => {\n        const { id, name, reference_id } = currentUnit;\n        const newUnit = {\n          label: name,\n          value: id,\n        };\n        finalArr.push(newUnit);\n        return finalArr;\n      }, []);\n      return { formattedUnits };\n    })\n    .catch(err => console.warn('err', err));\n\nexport const filterLessonListApi = (filters) => {\n  const { unitFilter, nameFilter } = filters;\n  const unitString = unitFilter.length ? `unit_id=${unitFilter}&` : '';\n  const searchString = nameFilter.length ? `search=${nameFilter.toLowerCase().replace(/\\s/g, '+')}&` : '';\n  const filterQuery = `${searchString}${unitString}`;\n  return fetch(`${API_URL}/api/lessons?${filterQuery}`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then((res) => res.json())\n    .then(({ data }) => {\n      const lessons = data.lessons;\n      return lessons;\n    })\n    .catch(err => err);\n};\nexport const fetchSubjectsApi = () =>\n  fetch(`${API_URL}/api/subjects`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then((res) => res.json())\n    .then(({ data }) => data.subjects)\n    .catch((err) => console.warn(\"err\", err));\n\nexport const assignLessonToStudentApi = lesson => {\n  fetch(`${API_URL}/api/commands/assign-lesson-to-student`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(lesson),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n};\n\n\nexport const fetchStudentLessonListApi = (student, studentToken) =>\n  fetch(`${API_URL}/api/students/${student}/student_lessons`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(res => res)\n    .then(({ data }) => {\n      const studentLessons = data;\n      return studentLessons;\n    });\n\nexport const resetStudentLessonsApi = (lessons) => {\n  fetch(`${API_URL}/api/commands/reset-student-lessons`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(lessons),\n  })\n    .then((res) => res.json())\n    .catch((err) => err);\n};\nexport const unAssignLessonFromStudentApi = lessons => {\n  fetch(`${API_URL}/api/commands/unassign-lesson-from-student`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(lessons),\n  })\n    .then((res) => res.json())\n    .catch((err) => err);\n};\n\nexport const rescheduleStudentLessonsApi = (lesson) =>\n  fetch(`${API_URL}/api/commands/reschedule-student-lessons`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(lesson),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const fetchStudentLessonApi = (student_id, lesson_id) =>\n  fetch(`${API_URL}/api/students/${student_id}/student_lessons/${lesson_id}`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((res) => res)\n    .then(({ data }) => data);\n\nexport const fetchStudentLessonSectionApi = (student_id, lesson_id, section_id) =>\n  fetch(`${API_URL}/api/students/${student_id}/student_lessons/${lesson_id}/sections/${section_id}`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((res) => res)\n    .then(({ data }) => data);\n\nexport const addStudentLessonProblemFlagApi = (body) =>\n  fetch(`${API_URL}/api/commands/flag-student-lesson-problem`, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then((res) => res.json())\n    .catch((err) => err);\n\nexport const addVideoWatchedTime = (body) =>\n  fetch(`${API_URL}/api/commands/watch-student-lesson-problem-video`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then((res) => res.json())\n    .catch((err) => err);\n\nexport const fetchAllTestsApi = () =>\n  fetch(`${API_URL}/api/tests`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => ({ data }))\n    .catch(err => err);\nexport const addStudentLessonProblemAnswerApi = (body) =>\n  fetch(`${API_URL}/api/commands/add-student-lesson-problem-answer`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  }).then((res) => res.status);\n\nexport const updateStudentTestStatusApi = (body) =>\n  fetch(`${API_URL}/api/commands/update-student-test-status`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\n\nexport const excuseStudentLessonLatenessApi = (body) =>\n  fetch(`${API_URL}/api/commands/excuse-student-lesson-lateness`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then((res) => res.json())\n    .catch((err) => err);\n\nexport const updateStudentTestSectionStatusApi = (body) =>\n  fetch(`${API_URL}/api/commands/update-student-test-section-status`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const rescoreStudentLessonApi = (body) =>\n  fetch(`${API_URL}/api/commands/rescore-student-lesson`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const deleteStudentTestApi = (body) =>\n  fetch(`${API_URL}/api/commands/delete-student-test`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then((res) => res)\n    .catch((err) => err);\n\nexport const updateStudentEssayScoreApi = (scores) =>\n  fetch(`${API_URL}/api/commands/update-student-test-essay-score`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(scores),\n  })\n    .then(res => res)\n    .catch(err => err);\n"]},"metadata":{},"sourceType":"module"}