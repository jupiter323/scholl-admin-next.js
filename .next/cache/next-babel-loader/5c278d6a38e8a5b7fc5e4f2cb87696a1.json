{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nclass TestSectionCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"viewTestSectionDetails\", () => console.warn('Pending implementation of view test section details functionality'));\n\n    _defineProperty(this, \"dismissFlags\", () => console.warn('Pending implementation of dismiss flags functionality'));\n\n    _defineProperty(this, \"resetTestSection\", () => console.warn('Pending implementation of reset test section functionality'));\n\n    _defineProperty(this, \"deleteTestSection\", () => console.warn('Pending implementation of delete test section functionality'));\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(this, \"renderFlags\", () => {\n      const {\n        testSection: {\n          flags\n        }\n      } = this.props;\n\n      if (flags.length) {\n        return __jsx(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, __jsx(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", __jsx(\"i\", {\n          className: \"icon-flag\"\n        }));\n      }\n\n      return null;\n    });\n\n    this.state = {\n      open: true\n    };\n  }\n\n  render() {\n    const {\n      testSection,\n      dropdownIsOpen,\n      dropdownIndex,\n      index\n    } = this.props;\n    const {\n      subject,\n      timeEstimate,\n      version,\n      availableDate,\n      dueDate,\n      problems,\n      disabled,\n      status,\n      percentageComplete\n    } = testSection;\n    return __jsx(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, __jsx(\"div\", {\n      className: disabled ? 'card-main test-card card-disabled card' : 'card-main test-card card'\n    }, __jsx(\"div\", {\n      className: \"card-panel panel-border\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-row row\"\n    }, __jsx(\"div\", {\n      className: \"icon-col col s2\"\n    }, __jsx(\"span\", {\n      className: \"block-icon\"\n    }, __jsx(\"i\", {\n      className: \"icon-assign-section\"\n    }), __jsx(\"span\", {\n      className: \"text-icon\"\n    }, \"Assigned \", __jsx(\"br\", null), \"Test Section\"))), __jsx(\"div\", {\n      className: \"col s8\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-text\"\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\"\n    }, subjectMap[subject], \" Section\"), __jsx(\"div\", {\n      className: \"text-small truncate\"\n    }, \"Version: \", version))), __jsx(\"div\", {\n      className: \"position-top right-align\"\n    }, __jsx(\"div\", {\n      className: \"icons-row\"\n    }, this.renderFlags(), __jsx(\"div\", {\n      className: \"dropdown-block col\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown01\",\n      className: \"dropdown-trigger btn\",\n      onClick: this.handleDropdownClick\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.viewTestSectionDetails,\n      className: \"modal-trigger link-block\"\n    }, \"View Details\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.dismissFlags\n    }, \"Dismiss Flags\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.resetTestSection\n    }, \"Reset\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.deleteTestSection,\n      className: \"link-delete\"\n    }, \"Delete\"))) : null))))), __jsx(\"div\", {\n      className: \"card-content\"\n    }, __jsx(\"div\", {\n      className: \"d-flex sameheight-all row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s6\"\n    }, __jsx(\"div\", {\n      className: \"chart-container\"\n    }, __jsx(\"div\", {\n      className: \"chart-holder\"\n    }, __jsx(Doughnut, {\n      data: () => data(percentageComplete, status),\n      options: {\n        circumference: 1 * Math.PI,\n        rotation: 1 * Math.PI,\n        cutoutPercentage: 60,\n        tooltips: false\n      }\n    }), __jsx(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: graphColorMap[status]\n      }\n    }, __jsx(\"span\", {\n      \"data-count-up\": true,\n      \"data-start-val\": \"0\",\n      \"data-end-val\": \"96\",\n      \"data-duration\": \"1\"\n    }), __jsx(\"span\", {\n      className: \"percentage\"\n    }, percentageComplete, \"%\"))), __jsx(\"div\", {\n      className: \"chart-row\"\n    }, __jsx(\"div\", {\n      className: \"chart-col chart-start\"\n    }, \"\\xA0\"), __jsx(\"div\", {\n      className: \"chart-col chart-end\"\n    }, __jsx(\"span\", {\n      className: \"amount\",\n      style: {\n        color: graphColorMap[status]\n      }\n    }, problems))), __jsx(\"div\", {\n      className: \"chart-description\"\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Time Est:\"), __jsx(\"dd\", null, timeEstimate, \" min\")), __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Problems:\"), __jsx(\"dd\", null, problems))))), __jsx(\"div\", {\n      className: \"col s6 right-align justify-end\"\n    }, __jsx(\"div\", {\n      className: \"chart-description\"\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Available:\"), __jsx(\"dd\", null, __jsx(\"time\", {\n      dateTime: \"2018-12-15\"\n    }, availableDate))), __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Due:\"), __jsx(\"dd\", null, __jsx(\"time\", {\n      dateTime: \"2018-12-15\"\n    }, dueDate)))), __jsx(\"div\", {\n      className: \"align-self-end\"\n    }, __jsx(\"span\", {\n      className: testSectionCardColorMap[status]\n    }, status)))))));\n  }\n\n}\n\nexport default TestSectionCard;","map":null,"metadata":{},"sourceType":"module"}