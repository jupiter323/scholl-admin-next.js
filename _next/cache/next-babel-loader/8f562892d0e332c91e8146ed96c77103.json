{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar API_URL = process.env.API_URL;\nimport { getToken } from '../../../utils/AuthService';\nexport var _checkStatus = function _checkStatus(response) {\n  // raises an error in case response status is not a success\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  var error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\nexport var oAuthTokenApi = function oAuthTokenApi(data) {\n  return fetch(\"\".concat(API_URL, \"/api/login\"), {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(data)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n};\nexport var fetchCurrentUserApi = function fetchCurrentUserApi() {\n  return fetch(\"\".concat(API_URL, \"/api/users\"), {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(getToken())\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (_ref) {\n    var data = _ref.data;\n    return data;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n};\nexport var LogoutApi = function LogoutApi() {\n  return fetch(\"\".concat(API_URL, \"/api/logout\"), {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(getToken())\n    }\n  }).then(_checkStatus).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  })[\"catch\"](function (err) {\n    return err;\n  });\n};\nexport default [oAuthTokenApi, fetchCurrentUserApi, LogoutApi];","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/User/index/api.js"],"names":["API_URL","process","env","getToken","_checkStatus","response","status","error","Error","statusText","oAuthTokenApi","data","fetch","method","headers","Accept","body","then","json","err","fetchCurrentUserApi","Authorization","res","LogoutApi"],"mappings":";AAAA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA5B;AACA,SAASG,QAAT,QAAyB,4BAAzB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACxC;AACA,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOD,QAAP;AACD;;AACD,MAAME,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,QAAME,KAAN;AACD,CARM;AAUP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;AAAA,SAC3BC,KAAK,WAAIZ,OAAJ,iBAAyB;AAC5Ba,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFmB;AAM5BC,IAAAA,IAAI,EAAE,gBAAeL,IAAf;AANsB,GAAzB,CAAL,CAQGM,IARH,CAQQ,UAAAZ,QAAQ;AAAA,WAAIA,QAAQ,CAACa,IAAT,EAAJ;AAAA,GARhB,EASGD,IATH,CASQ,UAAAN,IAAI;AAAA,WAAIA,IAAJ;AAAA,GATZ,WAUS,UAAAQ,GAAG;AAAA,WAAIA,GAAJ;AAAA,GAVZ,CAD2B;AAAA,CAAtB;AAaP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SACjCR,KAAK,WAAIZ,OAAJ,iBAAyB;AAC5Bc,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPM,MAAAA,aAAa,mBAAYlB,QAAQ,EAApB;AAHN;AADmB,GAAzB,CAAL,CAOGc,IAPH,CAOQ,UAAAK,GAAG;AAAA,WAAIA,GAAG,CAACJ,IAAJ,EAAJ;AAAA,GAPX,EAQGD,IARH,CAQQ;AAAA,QAAGN,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAd;AAAA,GARR,WASS,UAAAQ,GAAG;AAAA,WAAIA,GAAJ;AAAA,GATZ,CADiC;AAAA,CAA5B;AAWP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY;AAAA,SACvBX,KAAK,WAAIZ,OAAJ,kBAA0B;AAC7Ba,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPM,MAAAA,aAAa,mBAAYlB,QAAQ,EAApB;AAHN;AAFoB,GAA1B,CAAL,CAQGc,IARH,CAQQb,YARR,EASGa,IATH,CASQ,UAAAZ,QAAQ;AAAA,WAAIA,QAAQ,CAACa,IAAT,EAAJ;AAAA,GAThB,EAUGD,IAVH,CAUQ,UAAAN,IAAI;AAAA,WAAIA,IAAJ;AAAA,GAVZ,WAWS,UAAAQ,GAAG;AAAA,WAAIA,GAAJ;AAAA,GAXZ,CADuB;AAAA,CAAlB;AAaP,eAAe,CACbT,aADa,EAEbU,mBAFa,EAGbG,SAHa,CAAf","sourcesContent":["const API_URL = process.env.API_URL;\nimport { getToken } from '../../../utils/AuthService';\n\nexport const _checkStatus = (response) => {\n  // raises an error in case response status is not a success\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n};\n\nexport const oAuthTokenApi = (data) =>\n  fetch(`${API_URL}/api/login`, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json())\n    .then(data => data)\n    .catch(err => err);\n\nexport const fetchCurrentUserApi = () =>\n  fetch(`${API_URL}/api/users`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => data)\n    .catch(err => err);\nexport const LogoutApi = () =>\n  fetch(`${API_URL}/api/logout`, {\n    method: 'POST',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(_checkStatus)\n    .then(response => response.json())\n    .then(data => data)\n    .catch(err => err);\nexport default [\n  oAuthTokenApi,\n  fetchCurrentUserApi,\n  LogoutApi,\n];\n"]},"metadata":{},"sourceType":"module"}