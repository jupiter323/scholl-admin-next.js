{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\nimport modalSortOptions from '../../utils/modalSortOptions';\n\nclass ModalFilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"handleSortChange\", event => {\n      const {\n        onSetSort\n      } = this.props;\n      this.setState({\n        sort: event\n      });\n      onSetSort(event);\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        nameFilter\n      } = this.state;\n\n      if (nameFilter === '') {\n        onUnsetFilteredState(nameFilter);\n      }\n\n      const transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(this, \"handleUnitChange\", event => {\n      const {\n        onSetUnitFilter\n      } = this.props;\n      this.setState({\n        unitFilter: event\n      });\n      onSetUnitFilter(event);\n    });\n\n    _defineProperty(this, \"clearAllFilters\", () => {\n      const {\n        onClearFilters\n      } = this.props;\n      this.setState({\n        sort: {},\n        nameFilter: \"\",\n        unitFilter: \"\"\n      });\n      onClearFilters();\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onUnsetFilteredState,\n        onSetFilteredState,\n        onSetUnitFilter\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'nameFilter') {\n        if (event === '') {\n          return onUnsetFilteredState();\n        }\n\n        return onSetFilteredState(event);\n      }\n\n      if (name === 'unitFilter') {\n        if (event === \"\") {\n          return onUnsetFilteredState();\n        }\n\n        return onSetUnitFilter(event);\n      }\n    });\n\n    this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n  }\n\n  render() {\n    const {\n      open,\n      sort,\n      nameFilter,\n      unitFilter\n    } = this.state;\n    const {\n      subjectFilters,\n      statusFilters,\n      lessonTypeFilters,\n      handleFilterClick\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"assignedModal\",\n      checked: statusFilters.indexOf('Assigned') !== -1,\n      onChange: () => handleFilterClick('status', 'Assigned')\n    }), __jsx(\"label\", {\n      htmlFor: \"assignedModal\"\n    }, \"Assigned\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"unassigned\",\n      checked: statusFilters.indexOf('Unassigned') !== -1,\n      onChange: () => handleFilterClick('status', 'Unassigned')\n    }), __jsx(\"label\", {\n      htmlFor: \"unassigned\"\n    }, \"Unassigned\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"readingModal\",\n      checked: subjectFilters.indexOf('Reading') !== -1,\n      onChange: () => handleFilterClick('subject', 'Reading')\n    }), __jsx(\"label\", {\n      htmlFor: \"readingModal\"\n    }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"writingModal\",\n      checked: subjectFilters.indexOf('Writing') !== -1,\n      onChange: () => handleFilterClick('subject', 'Writing')\n    }), __jsx(\"label\", {\n      htmlFor: \"writingModal\"\n    }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"mathModal\",\n      checked: subjectFilters.indexOf('Math') !== -1,\n      onChange: () => handleFilterClick('subject', 'Math')\n    }), __jsx(\"label\", {\n      htmlFor: \"mathModal\"\n    }, \"Math\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"challengePractice\",\n      checked: lessonTypeFilters.indexOf('Challenge + Practice') !== -1,\n      onChange: () => handleFilterClick('lessonType', 'Challenge + Practice')\n    }), __jsx(\"label\", {\n      htmlFor: \"challengePractice\"\n    }, \"Challenge + Practice\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"homeworkDrill\",\n      checked: lessonTypeFilters.indexOf('Homework Drill') !== -1,\n      onChange: () => handleFilterClick('lessonType', 'Homework Drill')\n    }), __jsx(\"label\", {\n      htmlFor: \"homeworkDrill\"\n    }, \"Homework Drill\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"readingFromWorkbook\",\n      checked: lessonTypeFilters.indexOf('Read from the Book') !== -1,\n      onChange: () => handleFilterClick('lessonType', 'Read from the Book')\n    }), __jsx(\"label\", {\n      htmlFor: \"readingFromWorkbook\"\n    }, \"Reading from Workbook\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\",\n      style: {\n        marginTop: '30px'\n      }\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control  validate\",\n      name: \"nameFilter\",\n      value: nameFilter,\n      onChange: event => this.handleFilterChange(event, 'nameFilter')\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: nameFilter.length ? \"label active\" : \"label\",\n      htmlFor: \"name_search\"\n    }, \"Search\"))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\",\n      style: {\n        marginTop: '-7px'\n      }\n    }, __jsx(Dropdown, {\n      value: getValueFromState(unitFilter, unitOptions),\n      onChange: event => this.handleUnitChange(event),\n      options: unitOptions,\n      label: \"Unit Number\",\n      stateKey: \"unit\",\n      dropdownKey: \"unit\"\n    }))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 14\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, modalSortOptions),\n      onChange: event => this.handleSortChange(event),\n      options: modalSortOptions,\n      label: \"Sort by\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), __jsx(\"div\", {\n      className: \"col s12 l4 offset-s12\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\"\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.clearAllFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nModalFilterSection.propTypes = {\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  statusFilters: PropTypes.array.isRequired,\n  lessonTypeFilters: PropTypes.array.isRequired,\n  onSetUnitFilter: PropTypes.func.isRequired\n};\nexport default ModalFilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/components/ModalFilterSection/index.js"],"names":["React","update","PropTypes","Dropdown","getValueFromState","lessonSortOptions","unitOptions","modalSortOptions","ModalFilterSection","Component","constructor","props","setState","open","event","onSetSort","sort","onSetFilteredState","onUnsetFilteredState","nameFilter","state","transformedName","replace","toLowerCase","onSetUnitFilter","unitFilter","onClearFilters","name","value","target","updatedState","$merge","render","subjectFilters","statusFilters","lessonTypeFilters","handleFilterClick","display","indexOf","marginTop","handleFilterChange","submitNameFilter","length","handleUnitChange","handleSortChange","clearAllFilters","onToggleShowFilters","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\nimport modalSortOptions from '../../utils/modalSortOptions';\n\nclass ModalFilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\",\n    }\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  handleSortChange = (event) => {\n    const {onSetSort} = this.props;\n    this.setState({sort: event});\n    onSetSort(event);\n  }\n\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { nameFilter } = this.state;\n    if (nameFilter === '') {\n      onUnsetFilteredState(nameFilter);\n    }\n    const transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  handleUnitChange = (event) => {\n    const { onSetUnitFilter } = this.props;\n    this.setState({unitFilter: event});\n    onSetUnitFilter(event);\n  }\n\n  clearAllFilters = () => {\n    const { onClearFilters } = this.props;\n    this.setState({sort: {}, nameFilter: \"\", unitFilter: \"\"})\n    onClearFilters()\n  }\n  handleFilterChange = (event, name) => {\n    const { onUnsetFilteredState, onSetFilteredState, onSetUnitFilter} = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'nameFilter') {\n      if (event === '') {\n        return onUnsetFilteredState();\n      }\n      return onSetFilteredState(event);\n    }\n    if (name === 'unitFilter') {\n      if (event === \"\") {\n        return onUnsetFilteredState();\n      }\n      return onSetUnitFilter(event);\n    }\n  }\n  render() {\n    const { open, sort, nameFilter, unitFilter } = this.state;\n    const { subjectFilters, statusFilters, lessonTypeFilters, handleFilterClick } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n              <ul className=\"filter-form_checkbox-list\">\n              <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"assignedModal\"\n                      checked={statusFilters.indexOf('Assigned') !== -1}\n                      onChange={() => handleFilterClick('status', 'Assigned')}\n                    />\n                    <label htmlFor=\"assignedModal\">Assigned</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unassigned\"\n                      checked={statusFilters.indexOf('Unassigned') !== -1}\n                      onChange={() => handleFilterClick('status', 'Unassigned')}\n                    />\n                    <label htmlFor=\"unassigned\">Unassigned</label>\n                  </li>\n                </ul>\n                <ul className='filter-form_checkbox-list'>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"readingModal\"\n                      checked={subjectFilters.indexOf('Reading') !== -1}\n                      onChange={() => handleFilterClick('subject', 'Reading')}\n                    />\n                    <label htmlFor=\"readingModal\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writingModal\"\n                      checked={subjectFilters.indexOf('Writing') !== -1}\n                      onChange={() => handleFilterClick('subject', 'Writing')}\n                    />\n                    <label htmlFor=\"writingModal\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mathModal\"\n                      checked={subjectFilters.indexOf('Math') !== -1}\n                      onChange={() => handleFilterClick('subject', 'Math')}\n                    />\n                    <label htmlFor=\"mathModal\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"challengePractice\"\n                      checked={lessonTypeFilters.indexOf('Challenge + Practice') !== -1}\n                      onChange={() => handleFilterClick('lessonType', 'Challenge + Practice')}\n                    />\n                    <label htmlFor=\"challengePractice\">Challenge + Practice</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"homeworkDrill\"\n                      checked={lessonTypeFilters.indexOf('Homework Drill') !== -1}\n                      onChange={() => handleFilterClick('lessonType', 'Homework Drill')}\n                    />\n                    <label htmlFor=\"homeworkDrill\">Homework Drill</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"readingFromWorkbook\"\n                      checked={lessonTypeFilters.indexOf('Read from the Book') !== -1}\n                      onChange={() => handleFilterClick('lessonType', 'Read from the Book')}\n                    />\n                    <label htmlFor=\"readingFromWorkbook\">Reading from Workbook</label>\n                  </li>\n\n                </ul>\n              </div>\n            <div className=\"d-flex row mb-0 justify-center\">\n              <div className=\"col s12 m3\">\n                    <div className=\"search-field input-field\" style={{marginTop: '30px'}}>\n                      <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      className=\"input-control  validate\"\n                      name=\"nameFilter\"\n                      value={nameFilter}\n                      onChange={(event) =>  this.handleFilterChange(event, 'nameFilter')}\n                      />\n                      <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}><i className=\"icon-search\"></i></button>\n                      <label className={nameFilter.length ? \"label active\" : \"label\"} htmlFor=\"name_search\">Search</label>\n                    </div>\n              </div>\n            <div className=\"col s12 m3\">\n              <div className=\"input-field\" style={{marginTop: '-7px'}}>\n                <Dropdown\n                value={getValueFromState(unitFilter, unitOptions)}\n                onChange={(event) => this.handleUnitChange(event)}\n                options={unitOptions}\n                label=\"Unit Number\"\n                stateKey=\"unit\"\n                dropdownKey=\"unit\"\n                />\n              </div>\n            </div>\n\n            </div>\n            </div>\n\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n\n                  <div className=\"col s12 14\">\n                   <div className=\"input-field\"  >\n                      <Dropdown\n                        value={getValueFromState(sort, modalSortOptions)}\n                        onChange={(event) => this.handleSortChange(event)}\n                        options={modalSortOptions}\n                        label=\"Sort by\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                        />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 offset-s12\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.clearAllFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nModalFilterSection.propTypes = {\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  statusFilters: PropTypes.array.isRequired,\n  lessonTypeFilters: PropTypes.array.isRequired,\n  onSetUnitFilter: PropTypes.func.isRequired,\n}\nexport default ModalFilterSection;\n"]},"metadata":{},"sourceType":"module"}