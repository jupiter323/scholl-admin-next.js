{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = total => ({\n  datasets: [{\n    data: [total, 0],\n    backgroundColor: ['#3d8946', 'rgb(234, 234, 234)']\n  }]\n});\n\nconst formatEstimatedTotalCourseWork = minutes => Math.floor(minutes / 60);\n\nconst sourceMap = {\n  builtIn: 'Built-In',\n  userCreated: 'User Created'\n};\n\nclass TemplateCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(this, \"toggleEditModal\", event => {\n      const {\n        onToggleEditModal\n      } = this.props;\n      event.preventDefault();\n      onToggleEditModal();\n    });\n\n    _defineProperty(this, \"toggleExpandedState\", () => this.setState(({\n      expanded\n    }) => ({\n      expanded: !expanded\n    })));\n\n    this.state = {\n      expanded: false\n    };\n  }\n\n  render() {\n    const {\n      template,\n      dropdownIndex,\n      dropdownIsOpen,\n      index\n    } = this.props;\n    const {\n      title,\n      source,\n      sessions,\n      estimatedTotalCourseWork,\n      lessons,\n      description,\n      instructions\n    } = template;\n    const {\n      expanded\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"card-main-col col s12 l6\"\n    }, __jsx(\"div\", {\n      className: \"card-template card\"\n    }, __jsx(\"i\", {\n      className: \"icon-module icon-position-left\"\n    }), __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-card card-panel\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-row align-items-start row\"\n    }, __jsx(\"div\", {\n      className: \"col s10\"\n    }, __jsx(\"div\", {\n      className: \"card-header-block\"\n    }, __jsx(\"h3\", {\n      className: \"h4 collapsible-title\"\n    }, title), __jsx(\"div\", {\n      className: \"meta-info\"\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Source:\"), __jsx(\"dd\", null, sourceMap[source]))))), __jsx(\"div\", {\n      className: \"col s2 right-align\"\n    }, __jsx(\"div\", {\n      className: \"row icons-row\"\n    }, __jsx(\"div\", {\n      className: \"dropdown-block col\"\n    }, __jsx(\"a\", {\n      className: \"dropdown-trigger btn\",\n      href: \"#\",\n      \"data-target\": \"dropdown02\",\n      onClick: this.handleDropdownClick\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown02\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      className: \"modal-trigger link-block\",\n      onClick: this.toggleEditModal\n    }, \"Edit\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"link-delete\"\n    }, \"Delete\"))) : null), __jsx(\"div\", {\n      className: \"col right-align\"\n    }, __jsx(\"span\", {\n      onClick: this.toggleExpandedState,\n      className: \"collapsible-header collapsible-opener\"\n    }, __jsx(\"i\", {\n      className: \"custom-icon-triangle-right color-black\"\n    })))))), __jsx(\"div\", {\n      className: \"d-flex justify-content-center align-items-center row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col m6\"\n    }, __jsx(\"ul\", {\n      className: \"points-list list-two-cols badge-circle-78\"\n    }, __jsx(\"li\", {\n      className: \"style-purple-dark\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, sessions), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"Sessions\")), __jsx(\"li\", {\n      className: \"style-pink\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, formatEstimatedTotalCourseWork(estimatedTotalCourseWork), \" \", __jsx(\"span\", {\n      className: \"badge-text\"\n    }, \"hrs\")), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"Estimated Total Course Work\")))), __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(\"div\", {\n      className: \"chart-block chart-block-140\"\n    }, __jsx(Doughnut, {\n      data: () => data(lessons),\n      height: 140,\n      width: 140,\n      options: {\n        cutoutPercentage: 55,\n        tooltips: false\n      }\n    }), __jsx(\"div\", {\n      className: \"chart-text\"\n    }, __jsx(\"span\", {\n      className: \"value\",\n      style: {\n        color: '#3d8946'\n      }\n    }, lessons), __jsx(\"span\", {\n      className: \"title\",\n      style: {\n        color: '#3d8946'\n      }\n    }, \"Lessons\")))))), __jsx(\"div\", {\n      className: \"card-content collapsible-body\",\n      style: {\n        display: expanded ? 'block' : 'none'\n      }\n    }, __jsx(\"dl\", null, __jsx(\"dt\", null, __jsx(\"strong\", {\n      className: \"dl-title\"\n    }, \"Description:\")), __jsx(\"dd\", null, __jsx(\"p\", null, description))), __jsx(\"dl\", null, __jsx(\"dt\", null, __jsx(\"strong\", {\n      className: \"dl-title\"\n    }, \"Instructions:\")), __jsx(\"dd\", null, __jsx(\"p\", null, instructions))))))));\n  }\n\n}\n\nTemplateCard.propTypes = {\n  onToggleEditModal: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number,\n  template: PropTypes.object\n};\nexport default TemplateCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/CourseTemplate/components/TemplateCard/index.js"],"names":["React","PropTypes","Doughnut","data","total","datasets","backgroundColor","formatEstimatedTotalCourseWork","minutes","Math","floor","sourceMap","builtIn","userCreated","TemplateCard","Component","constructor","props","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","onToggleEditModal","setState","expanded","state","render","template","dropdownIndex","title","source","sessions","estimatedTotalCourseWork","lessons","description","instructions","handleDropdownClick","display","transformOrigin","opacity","transform","toggleEditModal","toggleExpandedState","cutoutPercentage","tooltips","color","propTypes","func","isRequired","bool","number","object"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (total) => ({\n  datasets: [{\n    data: [total, 0],\n    backgroundColor: [\n      '#3d8946',\n      'rgb(234, 234, 234)',\n    ],\n  }],\n})\n\nconst formatEstimatedTotalCourseWork = (minutes) => Math.floor(minutes / 60);\n\nconst sourceMap = {\n  builtIn: 'Built-In',\n  userCreated: 'User Created',\n};\n\nclass TemplateCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  toggleEditModal = (event) => {\n    const { onToggleEditModal } = this.props;\n    event.preventDefault();\n    onToggleEditModal();\n  }\n\n  toggleExpandedState = () => this.setState(({ expanded }) => ({ expanded: !expanded }))\n\n  render() {\n    const { template, dropdownIndex, dropdownIsOpen, index } = this.props;\n    const { title, source, sessions, estimatedTotalCourseWork, lessons, description, instructions } = template;\n    const { expanded } = this.state;\n    return (\n      <div className=\"card-main-col col s12 l6\">\n        <div className=\"card-template card\">\n          <i className=\"icon-module icon-position-left\"></i>\n          <ul className=\"collapsible expandable\">\n            <li>\n              <div className=\"collapsible-card card-panel\">\n                <div className=\"card-panel-row align-items-start row\">\n                  <div className=\"col s10\">\n                    <div className=\"card-header-block\">\n                      <h3 className=\"h4 collapsible-title\">{title}</h3>\n                      <div className=\"meta-info\">\n                        <dl className=\"dl-horizontal\">\n                          <dt>Source:</dt>\n                          <dd>{sourceMap[source]}</dd>\n                        </dl>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s2 right-align\">\n                    <div className=\"row icons-row\">\n                      <div className=\"dropdown-block col\">\n                        <a\n                          className='dropdown-trigger btn'\n                          href='#' data-target='dropdown02'\n                          onClick={this.handleDropdownClick}\n                        >\n                          <i className=\"material-icons dots-icon\">more_vert</i>\n                        </a>\n                        <If condition={dropdownIsOpen && dropdownIndex === index}>\n                          <ul\n                            id='dropdown02'\n                            className='dropdown-content dropdown-wide'\n                            style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                          >\n                            <li>\n                              <a\n                                href=\"#\"\n                                className=\"modal-trigger link-block\"\n                                onClick={this.toggleEditModal}\n                              >\n                                Edit\n                              </a>\n                            </li>\n                            <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                          </ul>\n                        </If>\n                      </div>\n                      <div className=\"col right-align\">\n                        <span\n                          onClick={this.toggleExpandedState}\n                          className=\"collapsible-header collapsible-opener\"\n                        >\n                          <i className=\"custom-icon-triangle-right color-black\"></i>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"d-flex justify-content-center align-items-center row mb-0\">\n                  <div className=\"col m6\">\n                    <ul className=\"points-list list-two-cols badge-circle-78\">\n                      <li className=\"style-purple-dark\">\n                        <span className=\"badge-circle\">{sessions}</span>\n                        <span className=\"point-text\">Sessions</span>\n                      </li>\n                      <li className=\"style-pink\">\n                        <span className=\"badge-circle\">{formatEstimatedTotalCourseWork(estimatedTotalCourseWork)} <span className=\"badge-text\">hrs</span></span>\n                        <span className=\"point-text\">Estimated Total Course Work</span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"chart-block chart-block-140\">\n                      <Doughnut\n                        data={() => data(lessons)}\n                        height={140}\n                        width={140}\n                        options={{\n                          cutoutPercentage: 55,\n                          tooltips: false,\n                        }}\n                        />\n                      <div className=\"chart-text\">\n                        <span className=\"value\" style={{color:  '#3d8946'}}>{lessons}</span>\n                        <span className=\"title\" style={{color:  '#3d8946'}}>Lessons</span>\n                      </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: expanded ? 'block' : 'none' }}\n              >\n                <dl>\n                  <dt><strong className=\"dl-title\">Description:</strong></dt>\n                  <dd>\n                    <p>{description}</p>\n                  </dd>\n                </dl>\n                <dl>\n                  <dt><strong className=\"dl-title\">Instructions:</strong></dt>\n                  <dd>\n                    <p>{instructions}</p>\n                  </dd>\n                </dl>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTemplateCard.propTypes = {\n  onToggleEditModal: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number,\n  template: PropTypes.object,\n};\n\nexport default TemplateCard;\n"]},"metadata":{},"sourceType":"module"}