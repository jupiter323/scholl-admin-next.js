{"version":3,"file":"static/development/pages/classes.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Classes/Calendar/index.js","webpack:///./components/Classes/ClassModal/index.js","webpack:///./components/Classes/DetailSummaryPage/components/ClassAverages/index.js","webpack:///./components/Classes/DetailSummaryPage/components/ClassAverages/utils/index.js","webpack:///./components/Classes/DetailSummaryPage/components/ScoreImprovement/index.js","webpack:///./components/Classes/DetailSummaryPage/components/StrengthsAndWeaknesses/index.js","webpack:///./components/Classes/DetailSummaryPage/components/StrengthsAndWeaknesses/utils/index.js","webpack:///./components/Classes/DetailSummaryPage/components/StudentsWhoHave/index.js","webpack:///./components/Classes/DetailSummaryPage/index.js","webpack:///./components/Classes/DetailWorksheetPage/components/FilterSection/index.js","webpack:///./components/Classes/DetailWorksheetPage/components/FullView/index.js","webpack:///./components/Classes/DetailWorksheetPage/components/ListView/components/TableHeader/index.js","webpack:///./components/Classes/DetailWorksheetPage/components/ListView/index.js","webpack:///./components/Classes/DetailWorksheetPage/index.js","webpack:///./components/Classes/DetailWorksheetPage/utils/sampleWorksheets.js","webpack:///./components/Classes/DetailWorksheetPage/utils/statusColorMap.js","webpack:///./components/Classes/InstructorModal/components/InstructorToggleCard/index.js","webpack:///./components/Classes/InstructorModal/index.js","webpack:///./components/Classes/ListPage/components/ClassCard/index.js","webpack:///./components/Classes/ListPage/components/ClassDetailModal/index.js","webpack:///./components/Classes/ListPage/components/FilterSection/index.js","webpack:///./components/Classes/ListPage/components/SharedModalComponents/AccountInfo/index.js","webpack:///./components/Classes/ListPage/components/SharedModalComponents/ContactInfo/index.js","webpack:///./components/Classes/ListPage/components/SharedModalComponents/Locations/components/LocationRow/index.js","webpack:///./components/Classes/ListPage/components/SharedModalComponents/Locations/index.js","webpack:///./components/Classes/ListPage/index.js","webpack:///./components/Classes/SharedModalComponents/AccountSettings/index.js","webpack:///./components/Classes/SharedModalComponents/ClassInformation/index.js","webpack:///./components/Classes/SharedModalComponents/Instructors/components/InstructorCard/index.js","webpack:///./components/Classes/SharedModalComponents/Instructors/index.js","webpack:///./components/Classes/SharedModalComponents/Locations/index.js","webpack:///./components/Classes/StatusPage/index.js","webpack:///./components/Classes/TestSectionsPage/components/FilterSection/index.js","webpack:///./components/Classes/TestSectionsPage/components/TestSectionCard/index.js","webpack:///./components/Classes/TestSectionsPage/index.js","webpack:///./components/Classes/components/ClassNavBar/index.js","webpack:///./components/Classes/index/actions.js","webpack:///./components/Classes/index/api.js","webpack:///./components/Classes/index/constants.js","webpack:///./components/Classes/index/selectors.js","webpack:///./components/Classes/utils/sampleClass.js","webpack:///./components/Classes/utils/sampleSummaryClass.js","webpack:///./components/Classes/utils/sampleTestSections.js","webpack:///./components/Classes/utils/sortOptions.js","webpack:///./components/Classes/utils/testSectionCardUtils.js","webpack:///./components/ClickOffComponentWrapper/index.js","webpack:///./components/Dashboard/components/CalendarDate/index.js","webpack:///./components/Dashboard/components/CalendarHeader/components/CalendarArrow/index.js","webpack:///./components/Dashboard/components/CalendarHeader/index.js","webpack:///./components/Dashboard/components/CalendarRow/index.js","webpack:///./components/Dashboard/components/FilterSection/index.js","webpack:///./components/Dashboard/components/Modals/AssignLessonModal/components/FilterSection/index.js","webpack:///./components/Dashboard/components/Modals/AssignLessonModal/components/LessonCard/index.js","webpack:///./components/Dashboard/components/Modals/AssignLessonModal/index.js","webpack:///./components/Dashboard/components/Modals/AssignSessionModal/index.js","webpack:///./components/Dashboard/components/Modals/AssignSimulatedSATModal/index.js","webpack:///./components/Dashboard/components/Modals/AssignTargetTestModal/index.js","webpack:///./components/Dashboard/components/Modals/AssignTestSectionModal/index.js","webpack:///./components/Dashboard/components/Modals/AssignWorksheetModal/components/FilterSection/index.js","webpack:///./components/Dashboard/components/Modals/AssignWorksheetModal/components/WorksheetCard/index.js","webpack:///./components/Dashboard/components/Modals/AssignWorksheetModal/index.js","webpack:///./components/Dashboard/utils/dateAndCalendarUtils.js","webpack:///./components/Dashboard/utils/sampleLessons.js","webpack:///./components/Dashboard/utils/sampleWorksheets.js","webpack:///./components/Dashboard/utils/sortOptions.js","webpack:///./components/Dashboard/utils/worksheetModalMaps.js","webpack:///./components/FormComponents/Dropdown/index.js","webpack:///./components/FormComponents/Dropdown/styles/ControlComponent.js","webpack:///./components/FormComponents/Dropdown/styles/dropdownStyles.js","webpack:///./components/FormComponents/Dropdown/styles/index.js","webpack:///./components/Location/components/LocationCard/index.js","webpack:///./components/Location/components/LocationDetailsModal/index.js","webpack:///./components/Location/components/LocationModal/components/LocationToggleCard/index.js","webpack:///./components/Location/components/LocationModal/index.js","webpack:///./components/Location/components/NewLocationModal/components/OwnerContactInfo/index.js","webpack:///./components/Location/components/NewLocationModal/index.js","webpack:///./components/Location/components/NewLocationModal/utils/sampleOwners.js","webpack:///./components/Location/components/SelectedUserRow/index.js","webpack:///./components/Location/components/SelectedUserRow/styles/index.js","webpack:///./components/Location/components/SharedModalComponents/LocationBranding/index.js","webpack:///./components/Location/components/SharedModalComponents/LocationContactInfo/index.js","webpack:///./components/Location/components/SharedModalComponents/LocationEmailSettings/index.js","webpack:///./components/Location/components/SharedModalComponents/OwnerSection/index.js","webpack:///./components/Location/components/UserListModal/index.js","webpack:///./components/Location/components/UserRow/index.js","webpack:///./components/Location/components/UserRow/styles/index.js","webpack:///./components/Location/utils/initialState.js","webpack:///./components/Location/utils/sampleLocationList.js","webpack:///./components/Modal/index.js","webpack:///./components/Portal/index.js","webpack:///./components/common/RadialBar/index.js","webpack:///./components/utils/RadialBar.js","webpack:///./components/utils/fieldValidation.js","webpack:///./components/utils/genderOptions.js","webpack:///./components/utils/getUserInitials.js","webpack:///./components/utils/getValueFromState.js","webpack:///./components/utils/locationOptions.js","webpack:///./components/utils/sampleInstructors.js","webpack:///./components/utils/sampleLocations.js","webpack:///./components/utils/sampleTopics.js","webpack:///./components/utils/sortFunctions.js","webpack:///./components/utils/sortOptions.js","webpack:///./components/utils/stateOptions.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./pages/classes.js","webpack:///./utils/formatTimeEstimate.js","webpack:///./utils/worksheetSortOptions.js","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"immutability-helper\"","webpack:///external \"moment\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-beautiful-dnd\"","webpack:///external \"react-chartjs-2\"","webpack:///external \"react-color\"","webpack:///external \"react-datepicker\"","webpack:///external \"react-dom\"","webpack:///external \"react-redux\"","webpack:///external \"react-select\"","webpack:///external \"react-slick\"","webpack:///external \"react-sticky\"","webpack:///external \"react-toastify\"","webpack:///external \"redux\"","webpack:///external \"reselect\"","webpack:///external \"styled-components\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport { connect} from 'react-redux'\nimport update from \"immutability-helper\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { StickyContainer } from \"react-sticky\";\nimport FilterSection from \"../../Dashboard/components/FilterSection\";\nimport CalendarHeader from \"../../Dashboard/components/CalendarHeader\";\nimport CalendarRow from \"../../Dashboard/components/CalendarRow\";\n\nimport AssignSessionModal from \"../../Dashboard/components/Modals/AssignSessionModal\";\nimport AssignTestSectionModal from \"../../Dashboard/components/Modals/AssignTestSectionModal\";\nimport AssignSimulatedSatModal from \"../../Dashboard/components/Modals/AssignSimulatedSATModal\";\nimport AssignTargetTestModal from \"../../Dashboard/components/Modals/AssignTargetTestModal\";\nimport AssignLessonModal from \"../../Dashboard/components/Modals/AssignLessonModal\";\nimport AssignWorksheetModal from '../../Dashboard/components/Modals/AssignWorksheetModal';\n\nimport {\n  currentYear,\n  getFirstDay,\n  getDaysInActiveMonth,\n  getDaysInPreviousMonth,\n  getDayDate,\n  getNextMonthAsCurrentMonth,\n} from \"../../Dashboard/utils/dateAndCalendarUtils\";\n\n\nimport {\n  makeSelectAssignLessonsModalOpen,\n  makeSelectAssignWorkSheetsModalOpen,\n  makeSelectCalendarRows,\n} from '../index/selectors';\n\nimport {\n  setAssignLessonsModalOpen,\n  setAssignWorksheetModalOpen,\n  setCalendarRows,\n} from '../index/actions';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n      filters: [],\n      eventFilters: [],\n      activeDate: null,\n      activeColumn: null,\n      addDropdownOpen: false,\n      deleteDropdownOpen: false,\n      assignDropdownIsOpen: false,\n      onToggleHandleFilteredItemsDropdown: false,\n      assignSessionModalOpen: false,\n      assignTestSectionModalOpen: false,\n      assignSimulatedSatModalOpen: false,\n      assignTargetTestDateModalOpen: false,\n      assignLessonsModalOpen: false,\n      assignWorksheetsModalOpen: false,\n      modalDate: null,\n      accountActivated: false,\n      activationDropdownOpen: false,\n      licenseCode: '',\n    };\n  }\n\n\n\n  // This is called onMount in CalendarHeader component to set the current month calendar rows, and every time the month changes afterward\n  // IMPORTANT: activeMonthIndex is zero-based, meaning January is 0, February is 1, etc.\n  onSetActiveMonth = activeMonthIndex => {\n    // daysInPreviousMonth is used to handle cases where the calendar for the month starts with dates from the preceding month\n    // firstDay indicates the day the first day of the month falls on in a zero-based index manner, meaning Sunday is 0, Monday is 1, etc\n    const daysInPreviousMonth = getDaysInPreviousMonth(activeMonthIndex);\n    const daysInActiveMonth = getDaysInActiveMonth(activeMonthIndex);\n    const firstDay = getFirstDay(activeMonthIndex);\n    const rows = [];\n\n    // We increment calDate and change inMonth in the case where dates from the next month appear in row 1 or row 6\n    // Since activeMonthIndex is zero-based, currentMonth adds 1 so the cells are accurate as actual calendar dates\n    // getNextMonthAsCurrentMonth is used to derive the current month to ensure it matches the format of incoming dates - 01/15/19 vs 1/15/19, otherwise new events wouldn't find the date to be assigned to\n    let inMonth = true;\n    let calDate = 1;\n    let currentMonth = getNextMonthAsCurrentMonth(activeMonthIndex);\n    if (firstDay !== 0) {\n      currentMonth =\n        currentMonth > 9 ? (currentMonth -= 1) : `0${currentMonth - 1}`;\n      calDate = daysInPreviousMonth - firstDay + 1;\n      inMonth = false;\n    }\n    // First for loop handles the 6 calendar rows, second for loop handles the 7 days of the week\n    for (let i = 0; i < 6; i++) {\n      const rowArr = [];\n      for (let j = 0; j < 7; j++) {\n        const date = `${currentMonth}/${\n          calDate > 9 ? calDate : `0${calDate}`\n        }/${currentYear}`;\n        const dayDate = getDayDate(date);\n        const activeDateKey = `row-${i + 1}-column-${j + 1}`;\n        // This if statement handles the easiest calendar month scenario, where the 1st of the month falls on a Sunday\n        if (firstDay === 0) {\n          const dateCell = {\n            date,\n            dayDate,\n            calDate,\n            activeDateKey,\n            inMonth,\n            sessions: [],\n            lessons: [],\n            worksheets: [],\n            testSections: [],\n            simulatedSat: [],\n          };\n          // This if statement handles the case where the date spills over into the next month\n          if (calDate === daysInActiveMonth) {\n            calDate = 1;\n            currentMonth =\n              activeMonthIndex > 9\n                ? activeMonthIndex + 2\n                : `0${activeMonthIndex + 2}`;\n            inMonth = false;\n          } else {\n            calDate += 1;\n          }\n          rowArr.push(dateCell);\n        }\n        // This else statement handles the more likely scenario, where the first row contains several days from the preceding month\n        else {\n          const dateCell = {\n            date,\n            dayDate,\n            calDate,\n            activeDateKey,\n            inMonth,\n            sessions: [],\n            lessons: [],\n            worksheets: [],\n            testSections: [],\n            simulatedSat: [],\n          };\n          // This if statement handles the case where the date spills over into the next month\n          if (inMonth === false && calDate === daysInPreviousMonth) {\n            calDate = 1;\n            currentMonth = getNextMonthAsCurrentMonth(activeMonthIndex);\n            inMonth = true;\n          } else if (inMonth === true && calDate === daysInActiveMonth) {\n            currentMonth =\n              activeMonthIndex > 9\n                ? activeMonthIndex + 2\n                : `0${activeMonthIndex + 2}`;\n            calDate = 1;\n            inMonth = false;\n          } else {\n            calDate += 1;\n          }\n          rowArr.push(dateCell);\n        }\n      }\n      rows.push(...rowArr);\n    }\n    this.setState({ activeMonth: activeMonthIndex });\n    if(this.props.rows.length === 0){\n      const { onSetCalendarRows } = this.props;\n      onSetCalendarRows(rows);\n    }\n  };\n\n  onSetActiveDate = incomingDate => {\n    this.setState({ activeDate: incomingDate, activeColumn: incomingDate[13] });\n  };\n\n  onAssignSession = session => {\n    const { rows } = this.props;\n    const updatedDate = rows.filter(row => row.date === session.date)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.sessions.push(session);\n    const updatedRows = update(rows, {\n      $splice: [[updatedDateIndex, 1, updatedDate]],\n    });\n    const { onSetCalendarRows } = this.props;\n    onSetCalendarRows(updatedRows);\n    this.onToggleAssignSessionModal();\n  };\n\n\n  onAssignLessons = (lessons, date) => {\n    const { rows } = this.props;\n    const updatedDate = rows.filter(row => row.date === date)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.lessons.push(...lessons);\n    const updatedRows = update(rows, {\n      $splice: [[updatedDateIndex, 1, updatedDate]],\n    });\n    const { onSetCalendarRows } = this.props;\n    onSetCalendarRows(updatedRows);\n    this.onToggleAssignLessonsModal();\n  };\n\n  onToggleAssignLessonsModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const { onSetAssignLessonsModalOpen,assignLessonsModalOpen } = this.props;\n    onSetAssignLessonsModalOpen(!assignLessonsModalOpen)\n    this.setState({ modalDate,assignDropdownIsOpen: false});\n  };\n\n  onAssignTestSection = testSection => {\n    const { rows } = this.props;\n    const updatedDate = rows.filter( row => row.date === testSection.assignDate)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.testSections.push(testSection);\n    const updatedRows = update(rows, {\n      $splice: [[updatedDateIndex, 1, updatedDate]],\n    });\n    const { onSetCalendarRows } = this.props;\n    onSetCalendarRows(updatedRows);\n    this.onToggleAssignTestSectionModal();\n  };\n\n  onAssignSimulatedSat = simulatedSat => {\n    const { rows } = this.props;\n    const updatedDate = rows.filter(\n      row => row.date === simulatedSat.assignDate\n    )[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.simulatedSat.push(simulatedSat);\n    const updatedRows = update(rows, {\n      $splice: [[updatedDateIndex, 1, updatedDate]],\n    });\n    const { onSetCalendarRows } = this.props;\n    onSetCalendarRows(updatedRows);\n    this.onToggleAssignSimulatedSatModal();\n  };\n\n  onAssignTargetTest = targetTestDate => {\n    throw `pending decision of what test date assign ui looks like${targetTestDate.toString()}`;\n    // console.warn(, targetTestDate);\n  };\n\n  onToggleAssignSessionModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignSessionModalOpen }) => ({\n      assignSessionModalOpen: !assignSessionModalOpen,\n      modalDate,\n      assignDropdownIsOpen: false,\n    }));\n  };\n\n  onToggleAssignTestSectionModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignTestSectionModalOpen }) => ({\n      assignTestSectionModalOpen: !assignTestSectionModalOpen,\n      modalDate,\n      assignDropdownIsOpen: false,\n    }));\n  };\n\n  onToggleAssignSimulatedSatModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignSimulatedSatModalOpen }) => ({\n      assignSimulatedSatModalOpen: !assignSimulatedSatModalOpen,\n      modalDate,\n      assignDropdownIsOpen: false,\n    }));\n  };\n\n  onToggleAssignTargetTestModal = (event = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignTargetTestDateModalOpen }) => ({\n      assignTargetTestDateModalOpen: !assignTargetTestDateModalOpen,\n      assignDropdownIsOpen: false,\n    }));\n  };\n\n  onToggleAddDropdown = () =>\n    this.setState(({ addDropdownOpen }) => ({\n      addDropdownOpen: !addDropdownOpen,\n      deleteDropdownOpen: false,\n    }));\n  onToggleDeleteDropdown = () =>\n    this.setState(({ deleteDropdownOpen }) => ({\n      deleteDropdownOpen: !deleteDropdownOpen,\n      addDropdownOpen: false,\n    }));\n\n  onToggleAssignDropdown = () =>\n    this.setState(({ assignDropdownIsOpen }) => ({\n      assignDropdownIsOpen: !assignDropdownIsOpen,\n    }));\n  onToggleHandleFilteredItemsDropdown = () =>\n    this.setState(({ onToggleHandleFilteredItemsDropdown }) => ({\n      onToggleHandleFilteredItemsDropdown: !onToggleHandleFilteredItemsDropdown,\n    }));\n\n  onClearFilters = () => this.setState({ filters: [], eventFilters: [] });\n\n  onHandleDetailsChange = (name, event) =>\n    this.setState({ [name]: event.target.value });\n\n  onDragEnd = result => {\n    const { rows } = this.props;\n    const { source, destination, draggableId } = result;\n    // The following draggable vars are pulled from the dragged item to identify the event type (lesson, worksheet, etc), date, and index in that date's array of that type of event\n    const draggableKeys = draggableId.split(\"-\");\n    const draggableType = draggableKeys[0];\n    const draggableIndex = draggableKeys[2];\n\n    // If the event isn't switching dates, we return out of the function early and do nothing\n    if (!destination || source.droppableId === destination.droppableId) {\n      return;\n    }\n\n    // The follwing sourceDate and destinationDate vars are used to find the dates being modified and their index in the month of calendar dates\n    const sourceDateKey = source.droppableId.split(\"-\")[1];\n    const destinationDateKey = destination.droppableId.split(\"-\")[1];\n\n    const sourceDate = rows.filter(row => row.date === sourceDateKey)[0];\n    const destinationDate = rows.filter(\n      row => row.date === destinationDateKey\n    )[0];\n\n    const sourceDateIndex = rows.indexOf(sourceDate);\n    const destinationDateIndex = rows.indexOf(destinationDate);\n\n    // Here we target the event being moved, alter its date to that of the destintion, splice it from the source and push it to the destination\n    // Finally, we perform two splice operations to replace the old source and destination dates with their updated equivalents\n    const movedEvent = sourceDate[draggableType][draggableIndex];\n    movedEvent.date = destinationDate.date;\n    sourceDate[draggableType].splice(draggableIndex, 1);\n    destinationDate[draggableType].push(movedEvent);\n    const updatedRows = update(rows, {\n      $splice: [+\n        [sourceDateIndex, 1, sourceDate],\n        [destinationDateIndex, 1, destinationDate],\n      ],\n    });\n    const { onSetCalendarRows } = this.props;\n    onSetCalendarRows(updatedRows);\n  };\n\n  handleFilterClick = (filter, eventFilter = false) => {\n    // TODO: Only the following filters are active: sessions, lessons, worksheets, test sections, simulated sats, target tests\n    // The other filters dont seem to have corresponding data in this page\n    const { filters: allFilters, eventFilters } = this.state;\n    let filters;\n    let filterName;\n    if (eventFilter) {\n      filters = eventFilters;\n      filterName = \"eventFilters\";\n    } else {\n      filters = allFilters;\n      filterName = \"filters\";\n    }\n    let updatedFilters;\n    if (filters.indexOf(filter) === -1) {\n      updatedFilters = update(filters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = filters.indexOf(filter);\n      updatedFilters = update(filters, {\n        $splice: [[filterIndex, 1]],\n      });\n    }\n    this.setState({ [filterName]: updatedFilters });\n  };\n\n\n\n  onToggleAssignWorksheetsModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modalDate,assignDropdownIsOpen: false });\n    const { onSetAssignWorksheetModalOpen,assignWorkSheetsModalOpen } = this.props;\n    onSetAssignWorksheetModalOpen(!assignWorkSheetsModalOpen);\n  };\n\n  onAssignWorksheets = (worksheets, date) => {\n    const { rows } = this.props;\n    const updatedDate = rows.filter(row => row.date === date)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.worksheets.push(...worksheets);\n    const updatedRows = update(rows, {\n      $splice: [[updatedDateIndex, 1, updatedDate]],\n    });\n    const { onSetCalendarRows } = this.props;\n    onSetCalendarRows(updatedRows);\n    this.onToggleAssignWorksheetsModal();\n  };\n\n\n\n  mapRows = () => {\n    const {\n      filters,\n      eventFilters,\n      activeDate,\n      activeColumn,\n      addDropdownOpen,\n      deleteDropdownOpen,\n    } = this.state;\n    const {\n      rows,\n    } = this.props;\n    let startIndex = -7;\n    let endIndex = 0;\n    const rowArray = [];\n    for (let i = 0; i < 6; i++) {\n      startIndex += 7;\n      endIndex += 7;\n      rowArray.push(\n        <CalendarRow\n        key={i}\n        rows={rows.slice(startIndex, endIndex)}\n        filters={filters}\n        eventFilters={eventFilters}\n        activeDate={activeDate}\n        activeColumn={activeColumn}\n        addDropdownOpen={addDropdownOpen}\n        deleteDropdownOpen={deleteDropdownOpen}\n        onSetActiveDate={this.onSetActiveDate}\n        onToggleAddDropdown={this.onToggleAddDropdown}\n        onToggleDeleteDropdown={this.onToggleDeleteDropdown}\n        onToggleAssignLessonsModal={this.onToggleAssignLessonsModal}\n        onToggleAssignSessionModal={this.onToggleAssignSessionModal}\n        onToggleAssignWorksheetsModal={this.onToggleAssignWorksheetsModal}\n        onToggleAssignTestSectionModal={this.onToggleAssignTestSectionModal}\n        onToggleAssignSimulatedSatModal={this.onToggleAssignSimulatedSatModal}\n        />\n      );\n    }\n    return rowArray;\n  };\n\n  render() {\n    const {\n      assignSessionModalOpen,\n      activeMonth,\n      assignTestSectionModalOpen,\n      assignSimulatedSatModalOpen,\n      assignTargetTestDateModalOpen,\n      modalDate,\n      assignDropdownIsOpen,\n      onToggleHandleFilteredItemsDropdown,\n      filters,\n      eventFilters,\n    } = this.state;\n    const {\n      assignLessonsModalOpen,\n      assignWorkSheetsModalOpen,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n        <When condition = {assignLessonsModalOpen}>\n        <AssignLessonModal\n            modalDate={modalDate}\n            open={assignLessonsModalOpen}\n            onClose={this.onToggleAssignLessonsModal}\n            onAssignLessons={this.onAssignLessons}\n          />\n        </When>\n        <When condition = {assignWorkSheetsModalOpen}>\n          <AssignWorksheetModal\n            modalDate={modalDate}\n            open={assignWorkSheetsModalOpen}\n            onClose={this.onToggleAssignWorksheetsModal}\n            onAssignWorksheets={this.onAssignWorksheets}\n            />\n        </When>\n        <Otherwise>\n        <AssignSessionModal\n          modalDate={modalDate}\n          open={assignSessionModalOpen}\n          onClose={this.onToggleAssignSessionModal}\n          onAssignSession={this.onAssignSession}\n        />\n        <AssignTestSectionModal\n          modalDate={modalDate}\n          open={assignTestSectionModalOpen}\n          onClose={this.onToggleAssignTestSectionModal}\n          onAssignTestSection={this.onAssignTestSection}\n        />\n        <AssignSimulatedSatModal\n          modalDate={modalDate}\n          open={assignSimulatedSatModalOpen}\n          onClose={this.onToggleAssignSimulatedSatModal}\n          onAssignSimulatedSat={this.onAssignSimulatedSat}\n        />\n        <AssignTargetTestModal\n          open={assignTargetTestDateModalOpen}\n          onClose={this.onToggleAssignTargetTestModal}\n          onAssignTargetTest={this.onAssignTargetTest}\n        />\n        <StickyContainer>\n          <FilterSection\n            filters={filters}\n            eventFilters={eventFilters}\n            onClearFilters={this.onClearFilters}\n            handleFilterClick={this.handleFilterClick}\n          />\n          <div className=\"calendar-section view-month\">\n            <div className=\"calendar-slider\">\n              <CalendarHeader\n                activeMonth={Number(activeMonth)}\n                onSetActiveMonth={this.onSetActiveMonth}\n              />\n              <div\n                id=\"calendar\"\n                className=\"main-slick-calendar cal-context\"\n                style={{ width: \"100%\" }}\n              >\n                <div className=\"slide\">\n                  <table className=\"calendar-table cal-month-box\">\n                    <thead>\n                      <tr className=\"calendar-head-row\">\n                        <th>Su</th>\n                        <th>M</th>\n                        <th>Tu</th>\n                        <th>W</th>\n                        <th>Th</th>\n                        <th>F</th>\n                        <th>Sa</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <DragDropContext onDragEnd={this.onDragEnd}>\n                        {this.mapRows()}\n                      </DragDropContext>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div className=\"add-btn-block\">\n                <a\n                  href=\"#\"\n                  data-target=\"dropdown_assign\"\n                  onClick={this.onToggleAssignDropdown}\n                  className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n                >\n                  Assign...\n                </a>\n                <ul\n                  id=\"dropdown_assign\"\n                  className=\"dropdown-content\"\n                  style={{\n                    display: assignDropdownIsOpen ? \"block\" : \"none\",\n                    opacity: assignDropdownIsOpen ? \"100\" : \"0\",\n                  }}\n                >\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleAssignSessionModal}\n                      className=\"modal-trigger\"\n                    >\n                      Session\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleAssignLessonsModal}\n                      className=\"modal-trigger\"\n                    >\n                      Lesson\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleAssignWorksheetsModal}\n                      className=\"modal-trigger\"\n                    >\n                      Worksheet\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleAssignTestSectionModal}\n                      className=\"modal-trigger\"\n                    >\n                      Test Section\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleAssignSimulatedSatModal}\n                      className=\"modal-trigger\"\n                    >\n                      Simulated SAT\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleAssignTargetTestModal}\n                      className=\"modal-trigger\"\n                    >\n                      Target Test\n                    </a>\n                  </li>\n                  <li className=\"divider\" tabIndex=\"-1\"></li>\n                  <li className=\"dropdown-footer\">\n                    <a href=\"#\" className=\"modal-trigger\">\n                      Apply Course Template\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"add-btn-block btn-block-right\">\n                <a\n                  href=\"#\"\n                  data-target=\"dropdown_other\"\n                  onClick={this.onToggleHandleFilteredItemsDropdown}\n                  className=\"dropdown-trigger waves-effect waves-teal btn add-btn-circle\"\n                >\n                  <i className=\"icon-dots\"></i>\n                </a>\n                <ul\n                  id=\"dropdown_other\"\n                  className=\"dropdown-content\"\n                  style={{\n                    display: onToggleHandleFilteredItemsDropdown\n                      ? \"block\"\n                      : \"none\",\n                    opacity: onToggleHandleFilteredItemsDropdown ? \"100\" : \"0\",\n                  }}\n                >\n                  <li className=\"dropdown-header\">\n                    <b>With Filtered Items... </b>\n                    <b className=\"small\">\n                      (items currently visible on calendar)\n                    </b>\n                  </li>\n                  <li className=\"divider\"></li>\n                  <li>\n                    <a href=\"#\" className=\"modal-trigger\">\n                      Save Course as Template\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\">Reset All</a>\n                  </li>\n                  <li>\n                    <a href=\"#\">Delete All</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </StickyContainer>\n        </Otherwise>\n        </Choose>\n      </React.Fragment>\n    );\n  }\n}\n\n\n\nCalendar.propTypes = {\n  assignLessonsModalOpen:PropTypes.bool.isRequired,\n  assignWorkSheetsModalOpen:PropTypes.bool.isRequired,\n  onSetAssignLessonsModalOpen:PropTypes.func.isRequired,\n  onSetAssignWorksheetModalOpen:PropTypes.func.isRequired,\n  onSetCalendarRows:PropTypes.func.isRequired,\n  rows:PropTypes.array.isRequired,\n}\n\n\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen:makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen:makeSelectAssignWorkSheetsModalOpen(),\n  rows:makeSelectCalendarRows(),\n})\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    onSetAssignLessonsModalOpen:(value) => dispatch(setAssignLessonsModalOpen(value)),\n    onSetAssignWorksheetModalOpen:(value) => dispatch(setAssignWorksheetModalOpen(value)),\n    onSetCalendarRows:(rows) =>dispatch(setCalendarRows(rows)),\n  }\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default compose(withConnect)(Calendar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport update from 'immutability-helper';\nimport Portal from \"../../Portal\";\n\nimport ClassInfo from '../SharedModalComponents/ClassInformation';\nimport AccountSetting from '../SharedModalComponents/AccountSettings';\nimport Locations from '../SharedModalComponents/Locations';\nimport Instructors from '../SharedModalComponents/Instructors';\n\n\nimport LocationModal from '../../Location/components/LocationModal';\nimport InstructorModal from '../InstructorModal';\n\nclass ClassModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classroom:{\n          classInfo:{\n            className:\"\",\n          },\n          accountInfo:{\n            start_date:\"\",\n            end_date:\"\",\n            active:false,\n            isExclude:false,\n          },\n          location:{\n            locations:[],\n          },\n          instructor:{\n            instructors:[],\n          },\n        },\n        locationModalOpen:false,\n        instructorModalOpen:false,\n        pendingLocationDelete: {},\n    }\n  }\n\n  onOpenLocationModal = (event) => {\n    event.preventDefault();\n    this.setState({locationModalOpen:true});\n  }\n\n  onOpenInstructorModal = (event) =>{\n    event.preventDefault();\n    this.setState({instructorModalOpen:true});\n  }\n\n  onCloseLocationModal = () => this.setState({locationModalOpen:false});\n\n  onCloseInstructorModal = () => this.setState({instructorModalOpen:false});\n\n  arrayItemRemover = (array, value) => array.filter((item) => item !== value)\n\n  onRemoveLocation = (index) => {\n    const {location: { locations } } = this.state.classroom;\n    const newLocationsArray = this.arrayItemRemover(locations, locations[index]);\n    const updatedClassRoom = update(this.state.classroom, {\n      location: { $set: {locations: newLocationsArray}},\n    })\n    this.setState({classroom:updatedClassRoom});\n  }\n\n  onRemoveInstructor = (index) => {\n    const  { instructor:{instructors}} = this.state.classroom;\n    const newInstructorsArray = this.arrayItemRemover(instructors,instructors[index]);\n    const updatedClassRoom = update(this.state.classroom,{\n      instructor:{$set:{instructors:newInstructorsArray}},\n    });\n    this.setState({classroom:updatedClassRoom});\n   }\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n  }\n\n  onSave = () => {\n    const { onClose,onSave } = this.props;\n    onClose();\n    const classroom = this.state.classroom;\n    onSave(classroom);\n  }\n\n\n  // We pull the value based on the field type then merge that updated key/value pair with the last version of component state\n  handleDetailsChange = (event, name, section,checkBox = false) => {\n    if(checkBox){\n      const updatedClassRoom = update(this.state.classroom, {\n        [section]: { $merge: { [name]: !this.state.classroom[section][name] } },\n      });\n      this.setState({classroom:updatedClassRoom});\n    }else{\n      const value = event.target ? event.target.value : event;\n      const updatedClassRoom = update(this.state.classroom, {\n        [section]: { $merge: { [name]: value } },\n      });\n      this.setState({classroom:updatedClassRoom});\n    }\n  }\n\n  render() {\n    const { open,onClose} = this.props;\n    const {\n      locationModalOpen,\n      instructorModalOpen,\n      classroom:{\n        classInfo,\n        accountInfo,\n        location,\n        instructor,\n      },\n    } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <React.Fragment>\n          <div className=\"overlay\">\n              <div id=\"modal_add_new_class\" className=\"modal modal-custom modal-460\" >\n                <form action=\"#\" className=\"custom-form\">\n                  <fieldset>\n                    <div className=\"card-modal card-main card\">\n                      <div className=\"card-panel card-panel-title\" style={{ backgroundColor: \"#408e49\", color: \"#fff\" }} >\n                        <div className=\"card-panel-row row\">\n                          <div className=\"col\">\n                            <h2>\n                              <span className=\"heading-holder\">\n                                <i className=\"icon-members\" />\n                                <span className=\"heading-block\"> New Class </span>\n                              </span>\n                            </h2>\n                          </div>\n                          <div className=\"col right-align\">\n                            <a href=\"#!\" className=\"panel-link close modal-close\" onClick = {onClose} >\n                              <i className=\"icon-close-thin\" />\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"card-content\">\n                        <div className=\"card-body\">\n                            <ClassInfo\n                              state = {classInfo}\n                              handleDetailsChange = {this.handleDetailsChange}\n                            />\n                            <AccountSetting\n                              state = {accountInfo}\n                              handleDetailsChange = {this.handleDetailsChange}\n                            />\n                            <Locations\n                              locations = {location.locations}\n                              onOpenLocationModal = {this.onOpenLocationModal}\n                              onRemoveLocation = {this.onRemoveLocation}\n                              handleDetailsChange={this.handleDetailsChange}\n                            />\n                            <Instructors\n                              instructors = {instructor.instructors}\n                              onOpenInstructorModal = {this.onOpenInstructorModal}\n                              onRemoveInstructor = {this.onRemoveInstructor}\n                            />\n                        </div>\n                        <div className=\"modal-footer\">\n                          <a\n                            href=\"#!\"\n                            className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n                            onClick = {onClose}\n                          >\n                            Cancel\n                          </a>\n                          <a href=\"#\" className=\"btn\" onClick = {this.onSave}>\n                            Create Class\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n                </form>\n              </div>\n          </div>\n          <LocationModal\n            open={locationModalOpen}\n            onClose = {this.onCloseLocationModal}\n            handleLocationsChange ={(selectedLocations) => this.handleDetailsChange(selectedLocations, 'locations', 'location')}\n        />\n        <InstructorModal\n          open = {instructorModalOpen}\n          onClose = {this.onCloseInstructorModal}\n          handleInstructorsChange ={(selectedInstructors) => this.handleDetailsChange(selectedInstructors, 'instructors', 'instructor')}\n        />\n        </React.Fragment>\n        )}\n        <style jsx>\n          {`\n            .overlay {\n              position: fixed;\n              background-color: rgba(0, 0, 0, 0.7);\n              top: 0;\n              right: 0;\n              bottom: 0;\n              left: 0;\n              z-index: 1999;\n            }\n            .card-modal {\n              margin: 0;\n              border-radius: 6px;\n            }\n            #modal_Location1 {\n              border-radius: 6px;\n            }\n            .modal {\n              display: block;\n              background-color: white;\n              position: absolute;\n              top: 10%;\n              right: 10%;\n              left: 10%;\n              box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14),\n                0 9px 46px 8px rgba(0, 0, 0, 0.12),\n                0 11px 15px -7px rgba(0, 0, 0, 0.2);\n            }\n            .modal-custom {\n              opacity: 1;\n              visibility: visible;\n            }\n            .modal-footer {\n              background-color: white;\n            }\n          `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nClassModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose:PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ClassModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatTimeLoggedIn, formatVideoWatched } from './utils';\n\nconst ClassAverages = ({ state: { questionsAnswered, flaggedProblems, timeLoggedIn, videoWatched, notesTaken, onTimePercentage } }) => (\n  <div className=\"card-block\">\n    <h2>Class Averages</h2>\n    <ul className=\"alerts-list list-three-columns\">\n      <li className=\"card card-alert\">\n        <span className=\"icon-box purple darken-3\"><i className=\"icon-pencil2\"></i></span>\n        <div className=\"alert-text purple-text text-darken-3\">\n          <p><b>Questions Answered</b></p>\n          <div className=\"value\"><b className=\"text-large\">{questionsAnswered}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box icon-box pink darken-3\"><i className=\"icon-flag\"></i></span>\n        <div className=\"alert-text pink-text text-darken-3\">\n          <p><b>Flagged Problems</b></p>\n          <div className=\"value\"><b className=\"text-large\">{flaggedProblems}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box icon-box green darken-3\"><i className=\"icon-clock\"></i></span>\n        <div className=\"alert-text green-text text-darken-3\">\n          <p><b>Time Logged In</b></p>\n          <div className=\"value\">\n            {formatTimeLoggedIn(timeLoggedIn)}\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert alert-blue-dark\">\n        <span className=\"icon-box cyan darken-2\"><i className=\"icon-videocam\"></i></span>\n        <div className=\"alert-text cyan-text text-darken-2\">\n          <p><b>Video Watched</b></p>\n          <div className=\"value\">\n            {formatVideoWatched(videoWatched)}\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box orange darken-2\"><i className=\"icon-note\"></i></span>\n        <div className=\"alert-text orange-text text-darken-2\">\n          <p><b>Notes Taken</b></p>\n          <div className=\"value\"><b className=\"text-large\">{notesTaken}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box red\"><i className=\"icon-bell\"></i></span>\n        <div className=\"alert-text red-text\">\n          <p><b>On-Time Percentage</b></p>\n          <div className=\"value\"><b className=\"text-large\">{onTimePercentage}%</b></div>\n        </div>\n      </li>\n    </ul>\n  </div>\n);\n\nClassAverages.propTypes = {\n  state: PropTypes.object.isRequired,\n}\n\nexport default ClassAverages;\n","import React from 'react';\n\nexport const formatTimeLoggedIn = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport const formatVideoWatched = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScoreImprovement = ({ state: { points, readingAndWriting, math, noGain, from0To50, from50To99, from100To149, from150To199, from200Plus } }) => (\n  <div className=\"card-block\">\n    <h2>Score Improvement</h2>\n    <div className=\"two-columns-sameheight row mb-0\">\n      <div className=\"col s12 xl6\">\n        <div className=\"card-main-full card\">\n          <div className=\"card-content\">\n            <ul className=\"points-list-custom\">\n              <li className=\"point-custom-xlarge style-aqua\">\n                <span className=\"badge-circle\">{points} <span className=\"badge-text\">points</span></span>\n              </li>\n              <li>\n                <ul>\n                  <li className=\"point-custom-114 style-green-light\">\n                    <span className=\"badge-circle\">+{readingAndWriting} <span className=\"badge-text\">Reading &amp; Writing</span></span>\n                  </li>\n                  <li className=\"point-custom-114 style-blue-lightdark\">\n                    <span className=\"badge-circle\">{math} <span className=\"badge-text\">Math</span></span>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s12 xl6\">\n        <div className=\"card-main-full card\">\n          <div className=\"card-content\">\n            <ul className=\"vertical-graphs-container\">\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{noGain}%</span>\n                    <span className=\"vertical-graph-box red darken-1\" style={{ height: `${noGain}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">no gain</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from0To50}%</span>\n                    <span className=\"vertical-graph-box pink darken-3\" style={{ height: `${from0To50}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">0 to 50 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from50To99}%</span>\n                    <span className=\"vertical-graph-box purple accent-4\" style={{ height: `${from50To99}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">50 to 99 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from100To149}%</span>\n                    <span className=\"vertical-graph-box purple darken-3\" style={{ height: `${from100To149}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">100-149 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from150To199}%</span>\n                    <span className=\"vertical-graph-box  deep-purple accent-4\" style={{ height: `${from150To199}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">150-199 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from200Plus}%</span>\n                    <span className=\"vertical-graph-box  indigo accent-4\" style={{ height: `${from200Plus}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">200+ <br />points</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nScoreImprovement.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default ScoreImprovement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getIndicatorStatus } from './utils';\n\nclass StrengthsAndWeaknesses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openSection: 'reading',\n    };\n  }\n\n  onSetOpenSection = (event, openSection) => {\n    event.preventDefault();\n    this.setState({ openSection })\n  }\n\n  render() {\n    const { openSection } = this.state;\n    // eslint-disable-next-line no-unused-vars\n    const { state: { reading, writing, math } } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h2 className=\"h1\">Strengths &amp; Weaknesses</h2>\n        <div className=\"card-main-full card\">\n          <div className=\"tabs-container\">\n            <div className=\"card-panel light-blue accent-2 white-text\">\n              <ul className=\"tabs row\">\n                <li className=\"tab col s4 l4\" style={{ margin: '0' }}>\n                  <a\n                    href=\"#\"\n                    className={openSection === 'reading' ? 'active' : ''}\n                    onClick={(event) => this.onSetOpenSection(event, 'reading')}\n                  >\n                    Reading\n                  </a>\n                </li>\n                <li className=\"tab col s4 l4\" style={{ margin: '0' }}>\n                  <a\n                    href=\"#\"\n                    className={openSection === 'writing' ? 'active' : ''}\n                    onClick={(event) => this.onSetOpenSection(event, 'writing')}\n                  >\n                    Writing\n                  </a>\n                </li>\n                <li className=\"tab col s4 l4\" style={{ margin: '0' }}>\n                  <a\n                    href=\"#\"\n                    className={openSection === 'math' ? 'active' : ''}\n                    onClick={(event) => this.onSetOpenSection(event, 'math')}\n                  >\n                    Math\n                  </a>\n                </li>\n                <li className=\"indicator\" style={getIndicatorStatus(openSection)}></li>\n              </ul>\n            </div>\n            <div className=\"card-content tabs-content\">\n              <div id=\"tabs_tab01\" className={openSection === 'reading' ? '' : 'tab-content'}>\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 l5 xl4 chart-column\">\n                    <div className=\"chart-block chart-block-large\">\n                      <div className=\"js-donut-chart js-donut-large\" strokeWidth=\"32\" data-source='./inc/score-data-reading.json'></div>\n                      <div className=\"chart-text\">\n                        <span className=\"title\">Reading</span>\n                        <span className=\"value\">{reading.correctAnswers}</span>\n                        <span className=\"description\">out of <b>{reading.totalAnswers}</b></span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s12 l7 xl8\">\n                    <ul className=\"collapsible expandable collapsible-explain\">\n                      <li>\n                        <div className=\"collapsible-header\"><b>Explain This Graph</b></div>\n                        <div className=\"collapsible-body\">\n                          <div className=\"row mb-0\">\n                            <div className=\"col l6\">\n                              <ul className=\"legend-list\">\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box red darken-2\"></span>\n                                    <strong className=\"text h3\">Focus Here!</strong>\n                                  </div>\n                                  <p>Most people with your score would get these correct, but you got them wrong. Work on these and you can pick up some easy points!</p>\n                                </li>\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box red lighten-5\"></span>\n                                    <strong className=\"text h3\">Tough Gains</strong>\n                                  </div>\n                                  <p>You missed these, but so did most others with a similar score. You’ll likely ﬁnd easier gains elsewhere.</p>\n                                </li>\n                              </ul>\n                            </div>\n                            <div className=\"col l6\">\n                              <ul className=\"legend-list\">\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box light-green darken-2\"></span>\n                                    <strong className=\"text h3\">Well Done!</strong>\n                                  </div>\n                                  <p>You’re overachiving in this category compared to other with your score. Keep up the good work!</p>\n                                </li>\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box  light-green lighten-4\"></span>\n                                    <strong className=\"text h3\">Piece o’ Cake</strong>\n                                  </div>\n                                  <p>You answered these correctly like others with a similar score.</p>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div className=\"graphs-section\">\n                  <div className=\"graphs-block\">\n                    <div className=\"graph-row graph-row-title\">\n                      <div className=\"graph-col text-column\">\n                        <h3 className=\"graph-title\">Passage Type</h3>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '100%' }}>\n                              <div className=\"part-red\" style={{ width: '80%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '80%'}}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">Science</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '85%' }}>\n                              <div className=\"part-red\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '100%' }}>\n                              <div className=\"part-green\" style={{ width: '70%' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">Informational Graphic Passage</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '75%' }}>\n                              <div className=\"part-red\" style={{ width: '70%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '70%' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">History/Social Science</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '85%' }}>\n                              <div className=\"part-red\" style={{ width: '5%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '15%' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">US &amp; World Literature</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '45%' }}>\n                              <div className=\"part-red\" style={{ width: '85%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '0' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">Paired Passages</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '35%' }}>\n                              <div className=\"part-red\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '60%' }}>\n                              <div className=\"part-green\" style={{ width: '10%' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"graphs-block\">\n                    <div className=\"graph-row graph-row-title\">\n                      <div className=\"graph-col text-column\">\n                        <h3 className=\"graph-title\">Question Type</h3>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '85%' }}>\n                              <div className=\"part-red\" style={{ width: '12%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '95%' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row-block\">\n                      <div className=\"graph-row graph-row-subtitle\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Citing Textual Evidence</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '55%' }}>\n                                <div className=\"part-red\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '70%' }}>\n                                <div className=\"part-green\" style={{ width: '12%' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Cite Text as Evidence</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '20%' }}>\n                                <div className=\"part-red\" style={{ width: '85%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '70%' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Author’s Intention and Method</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '55%' }}>\n                                <div className=\"part-red\" style={{ width: '7%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '15%' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Support / Refute a Claim</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '47%' }}>\n                                <div className=\"part-red\" style={{ width: '12%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '0' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"graph-row-block\">\n                      <div className=\"graph-row graph-row-subtitle\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Reading Closely</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '12%' }}>\n                                <div className=\"part-red\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '55%' }}>\n                                <div className=\"part-green\" style={{ width: '10%' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Detail Question</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '100%' }}>\n                                <div className=\"part-red\" style={{ width: '8%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '95%' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Support / Refute a Claim</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '75%' }}>\n                                <div className=\"part-red\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '100%' }}>\n                                <div className=\"part-green\" style={{ width: '70%' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div id=\"tabs_tab02\" className={openSection === 'writing' ? '' : 'tab-content'}>\n                <h3>Tab 02 content</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore quasi inventore expedita maxime, vero magnam architecto eius laudantium corrupti! Ut fuga sit corrupti, vitae cum temporibus sed dolore labore! Fugit.</p>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Maxime dolorem nihil minus, quasi, dicta cupiditate aut magni ea veniam natus provident eveniet tempore iure minima placeat distinctio ducimus quo cum.</p>\n              </div>\n              <div id=\"tabs_tab03\" className={openSection === 'math' ? '' : 'tab-content'}>\n                <h3>Tab 03 content</h3>\n                <p>Expedita quibusdam sed, temporibus quasi dolorem iure non inventore quaerat sit mollitia dolores minima illo perspiciatis omnis delectus, recusandae quos, incidunt ratione.</p>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quisquam, enim? Itaque reprehenderit, id eos quasi optio est. Soluta alias, minima consequuntur obcaecati odio maiores, molestiae, vel ipsum modi delectus enim!</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nStrengthsAndWeaknesses.propTypes = {\n  state: PropTypes.object.isRequired,\n}\n\nexport default StrengthsAndWeaknesses;\n","export const getIndicatorStatus = (activeSection) => {\n  switch (activeSection) {\n    case 'reading':\n      return {\n        left: '0',\n        right: '66%',\n      }\n    case 'writing':\n      return {\n        left: '33%',\n        right: '33%',\n      }\n    case 'math':\n      return {\n        left: '66%',\n        right: '0',\n      }\n    default:\n      return null;\n  }\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StudentsWhoHave = ({ state: { overdueCoursework, flaggedProblems, fewerThan2PracticeTests } }) => {\n  const [ overdueSectionOpen, setOverdueSectionOpen ] = useState(false);\n  const [ flaggedSectionOpen, setFlaggedSectionOpen ] = useState(false);\n  const [ fewerThan2PracticeTestsOpen, setFewerThan2PracticeTestsOpen ] = useState(false);\n    return (\n      <div className=\"card-block\">\n      <h2>Student Who Have...</h2>\n      <div className=\"row\">\n        <div className=\"card-main-col col s12 m8 l7 xl4\">\n          <ul className=\"card-detail card-main-full card collapsible expandable\">\n            <li className={overdueSectionOpen ? \"pink-darken-2 pink-text text-darken-2 active\" : \"pink-darken-2 pink-text text-darken-2\"}>\n              <div\n                onClick={() => setOverdueSectionOpen(!overdueSectionOpen)}\n                className=\"card card-alert collapsible-header\"\n              >\n                <span className=\"icon-box pink darken-2\"><i className=\"icon-exclamation-mark\"></i></span>\n                <div className=\"alert-text\">\n                  <p><b>Overdue Coursework</b></p>\n                  <div className=\"value\"><b className=\"text-large\">{overdueCoursework.length}</b></div>\n                </div>\n                <span className=\"collapsible-opener\">\n                  <i className=\"custom-icon-traingle-down\"></i>\n                </span>\n              </div>\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: overdueSectionOpen ? 'block' : '' }}\n              >\n                <table className=\"card-detail-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Name <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Overdue <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {overdueCoursework.map(student => (\n                      <tr key={student.name}>\n                        <td>{student.name}</td>\n                        <td>{student.overdueAssignments}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"card-main-col col s12 m8 l7 xl4\">\n          <ul className=\"card-detail card-main-full card collapsible expandable\">\n            <li className={flaggedSectionOpen ? \"pink-darken-3 pink-text text-darken-3 active\" : \"pink-darken-3 pink-text text-darken-3\"}>\n              <div\n                onClick={() => setFlaggedSectionOpen(!flaggedSectionOpen)}\n                className=\"card card-alert collapsible-header\"\n              >\n                <span className=\"icon-box pink darken-3\"><i className=\"icon-exclamation-mark\"></i></span>\n                <div className=\"alert-text\">\n                  <p><b>Flagged Problems</b></p>\n                  <div className=\"value\"><b className=\"text-large\">{flaggedProblems.length}</b></div>\n                </div>\n                <span className=\"collapsible-opener\">\n                  <i className=\"custom-icon-traingle-down\"></i>\n                </span>\n              </div>\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: flaggedSectionOpen ? 'block' : '' }}\n              >\n                <table className=\"card-detail-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Name <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Flags<i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {flaggedProblems.map(student => (\n                      <tr key={student.name}>\n                        <td>{student.name}</td>\n                        <td>{student.flaggedProblems}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"card-main-col col s12 m8 l7 xl4\">\n          <ul className=\"card-detail card-main-full card collapsible expandable\">\n            <li className={fewerThan2PracticeTestsOpen ? \"pink-darken-4 pink-text text-darken-4 active\" : \"pink-darken-4 pink-text text-darken-4\"}>\n              <div\n                onClick={() => setFewerThan2PracticeTestsOpen(!fewerThan2PracticeTestsOpen)}\n                className=\"card card-alert collapsible-header\"\n              >\n                <span className=\"icon-box pink darken-4\"><i className=\"icon-exclamation-mark\"></i></span>\n                <div className=\"alert-text\">\n                  <p><b>Fewer than 2  Practice Tests</b></p>\n                  <div className=\"value\"><b className=\"text-large\">{fewerThan2PracticeTests.length}</b></div>\n                </div>\n                <span className=\"collapsible-opener\">\n                  <i className=\"custom-icon-traingle-down\"></i>\n                </span>\n              </div>\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: fewerThan2PracticeTestsOpen ? 'block' : '' }}\n              >\n                <table className=\"card-detail-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Name <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Tests<i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {fewerThan2PracticeTests.map(student => (\n                      <tr key={student.name}>\n                        <td>{student.name}</td>\n                        <td>{student.fewerThan2PracticeTests}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nStudentsWhoHave.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default StudentsWhoHave;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ClassAverages from './components/ClassAverages';\nimport ScoreImprovement from './components/ScoreImprovement';\nimport StudentsWhoHave from './components/StudentsWhoHave';\nimport StrengthsAndWeaknesses from './components/StrengthsAndWeaknesses';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DetailSummaryPage extends React.Component {\n  render() {\n    const { currentClass: { classAverages, scoreImprovement, studentsWhoHave, strengthsAndWeaknesses } } = this.props;\n    return (\n      <div className=\"content-section\">\n        <div className=\"content-section-holder\">\n          <div className=\"container\">\n            <div className=\"cards-section\">\n              <div className=\"dashboard-section\">\n                <ClassAverages state={classAverages} />\n                <ScoreImprovement state={scoreImprovement} />\n                <StudentsWhoHave state={studentsWhoHave} />\n                <StrengthsAndWeaknesses state={strengthsAndWeaknesses} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetailSummaryPage.propTypes = {\n  currentClass: PropTypes.object.isRequired,\n};\n\nexport default DetailSummaryPage;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: {},\n      sort: {},\n      activeFilters: [],\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  handleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredTopicState, onUnsetFilteredTopicState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'topic') {\n      if (event === '') {\n        return onUnsetFilteredTopicState();\n      }\n      return onSetFilteredTopicState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { worksheetName } = this.state;\n    if (worksheetName === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  render() {\n    const { open, activeFilters, worksheetName, topic, sort } = this.state;\n    const { currentView, onChangeView } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      checked={activeFilters.indexOf('reading') !== -1}\n                      onChange={() => this.handleFilterClick('reading')}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      checked={activeFilters.indexOf('writing') !== -1}\n                      onChange={() => this.handleFilterClick('writing')}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      checked={activeFilters.indexOf('math') !== -1}\n                      onChange={() => this.handleFilterClick('math')}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"beginning\"\n                      checked={activeFilters.indexOf('beginning') !== -1}\n                      onChange={() => this.handleFilterClick('beginning')}\n                    />\n                    <label htmlFor=\"beginning\">Beginning</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"developing\"\n                      checked={activeFilters.indexOf('developing') !== -1}\n                      onChange={() => this.handleFilterClick('developing')}\n                    />\n                    <label htmlFor=\"developing\">Developing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"accomplished\"\n                      checked={activeFilters.indexOf('accomplished') !== -1}\n                      onChange={() => this.handleFilterClick('accomplished')}\n                    />\n                    <label htmlFor=\"accomplished\">Accomplished</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"exemplary\"\n                      checked={activeFilters.indexOf('exemplary') !== -1}\n                      onChange={() => this.handleFilterClick('exemplary')}\n                    />\n                    <label htmlFor=\"exemplary\">Exemplary</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unassigned\"\n                      checked={activeFilters.indexOf('unassigned') !== -1}\n                      onChange={() => this.handleFilterClick('unassigned')}\n                    />\n                    <label htmlFor=\"unassigned\">Unassigned</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      checked={activeFilters.indexOf('complete') !== -1}\n                      onChange={() => this.handleFilterClick('complete')}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"incomplete\"\n                      checked={activeFilters.indexOf('incomplete') !== -1}\n                      onChange={() => this.handleFilterClick('incomplete')}\n                    />\n                    <label htmlFor=\"incomplete\">Incomplete</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      checked={activeFilters.indexOf('hasReviewFlags') !== -1}\n                      onChange={() => this.handleFilterClick('hasReviewFlags')}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      checked={activeFilters.indexOf('dueToday') !== -1}\n                      onChange={() => this.handleFilterClick('dueToday')}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      checked={activeFilters.indexOf('dueNextSession') !== -1}\n                      onChange={() => this.handleFilterClick('dueNextSession')}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      checked={activeFilters.indexOf('dueThisWeek') !== -1}\n                      onChange={() => this.handleFilterClick('dueThisWeek')}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      checked={activeFilters.indexOf('overdue') !== -1}\n                      onChange={() => this.handleFilterClick('overdue')}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"some-class\"\n                      checked={activeFilters.indexOf('class') !== -1}\n                      onChange={() => this.handleFilterClick('class')}\n                    />\n                    <label htmlFor=\"some-class\">Some Class</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"tutoring\"\n                      checked={activeFilters.indexOf('tutoring') !== -1}\n                      onChange={() => this.handleFilterClick('tutoring')}\n                    />\n                    <label htmlFor=\"tutoring\">Tutoring</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      value={worksheetName}\n                      className=\"input-control validate\"\n                      onChange={(event) => this.handleFilterChange(event, 'worksheetName')}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    >\n                      <i className=\"icon-search\"></i>\n                    </button>\n                    <label className={worksheetName.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                      value={getValueFromState(topic, sampleTopics)}\n                      onChange={(event) => this.handleFilterChange(event, 'topic')}\n                      options={sampleTopics}\n                      label=\"Topic\"\n                      stateKey=\"topic\"\n                      dropdownKey=\"topic\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, worksheetSortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={worksheetSortOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li\n                      data-view=\"view-full\"\n                      className={currentView === 'full' ? 'active' : ''}\n                      onClick={() => onChangeView('full')}\n                    >\n                      <a href=\"#\">Full View</a>\n                    </li>\n                    <li\n                      data-view=\"view-list\"\n                      className={currentView === 'list' ? 'active' : ''}\n                      onClick={() => onChangeView('list')}\n                    >\n                      <a href=\"#\">List View</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap, { chartColorMap } from '../../utils/statusColorMap';\n\nconst data = (percentage, status) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      chartColorMap[status],\n      '#eaeaea',\n    ],\n  }],\n});\n\nclass FullView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    }\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetCards = () => {\n    const { worksheets, onToggleDetailModalOpen } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { disabled, worksheetName, worksheetSource, subject, problemType, difficulty, score, status, problems, timeEstimate, availableDate, dueDate, classifications, flags, late } = worksheet;\n      return (\n        <div className=\"card-main-col col s12 m8 l7 xl5\" key={worksheet.id}>\n          <div className={disabled ? 'card-main work-card card-disabled card' : 'card-main work-card card'}>\n            <div className=\"card-panel panel-border\">\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-sheets-w\"></i>\n                  </span>\n                </div>\n                <div className=\"col s8\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small truncate\">Worksheet ({subject})</div>\n                    <div className=\"text-large truncate\">{worksheetName}</div>\n                  </div>\n                </div>\n                <div className=\"position-top right-align\">\n                  <div className=\"icons-row\">\n                    {flags.length > 0 && (\n                      <span className=\"badge-rounded-xs badge red darken-2 white-text\">\n                        <b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i>\n                      </span>\n                    )}\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        data-target='dropdown01'\n                        className='dropdown-trigger btn'\n                        onClick={(event) => this.handleDropdownClick(event, index)}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                          <li>\n                            <a\n                              href=\"#\"\n                              className=\"modal-trigger link-block\"\n                              onClick={() => onToggleDetailModalOpen(index)}\n                            >\n                              View Details\n                            </a>\n                          </li>\n                          <li><a href=\"#!\">Dismiss Flags</a></li>\n                          <li><a href=\"#!\">Reset</a></li>\n                          <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-top-block\">\n                <div className=\"d-flex row mb-0\">\n                  <div className=\"left-col col s7\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problem Type:</dt>\n                      <dd>{problemType}</dd>\n                    </dl>\n                  </div>\n                  <div className=\"right-col col s5 right-align\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Diﬃculty:</dt>\n                      <dd>{difficulty}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"d-flex sameheight-all row mb-0\">\n                <div className=\"col s6\">\n                  <div className=\"chart-container\">\n                    <div className=\"chart-holder\">\n                      <Doughnut\n                        data={() => data(score, status)}\n                        options={{\n                          circumference: 1 * Math.PI,\n                          rotation: 1 * Math.PI,\n                          cutoutPercentage: 60,\n                          tooltips: false,\n                        }}\n                      />\n                      <span className=\"chart-value\" style={{ backgroundColor: chartColorMap[status] }}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span><span className=\"percentage\">{score && `${score}%`}</span></span>\n                    </div>\n                    <div className=\"chart-row\">\n                      <div className=\"chart-col chart-start\">&nbsp;</div>\n                      <div className=\"chart-col chart-end\">\n                        <span className=\"amount\" style={{ color: chartColorMap[status] }}>{problems}</span>\n                      </div>\n                    </div>\n                    <div className=\"chart-description\">\n                      <dl className=\"dl-horizontal\">\n                        <dt>Time Est:</dt>\n                        <dd>{formatTimeEstimate(timeEstimate)}</dd>\n                      </dl>\n                      <dl className=\"dl-horizontal\">\n                        <dt>Problems:</dt>\n                        <dd>{problems}</dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s6 right-align justify-end\">\n                  <div className=\"chart-description\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Available:</dt>\n                      <dd><time dateTime={availableDate}>{availableDate}</time></dd>\n                    </dl>\n                    <dl className={late ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal'}>\n                      <Choose>\n                        <When condition={disabled}>\n                          <dt>No Due Date</dt>\n                        </When>\n                        <Otherwise>\n                          <dt>Due:</dt>\n                          <dd><time dateTime={dueDate}>{dueDate}</time></dd>\n                        </Otherwise>\n                      </Choose>\n                    </dl>\n                  </div>\n                  <div className=\"align-self-end\">\n                    <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-text\">\n                <dl className=\"dl-horizontal\">\n                  <dt>Worksheet Source:</dt>\n                  <dd>{worksheetSource}</dd>\n                </dl>\n              </div>\n              <div className=\"card-inner-row\">\n                <div className=\"row-holder\">\n                  <ul className=\"classification-list\">\n                    {classifications.map(classification => (\n                      <li className=\"class-box\" key={classification}>\n                        {classification}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <div className=\"content-section\">\n          <div className=\"result-row center-align\">\n            <b className=\"result\"> - {worksheets.length} results -</b>\n          </div>\n          <div className=\"row d-flex-content card-width-272\">\n            {this.mapWorksheetCards()}\n          </div>\n        </div>\n    )\n  }\n}\n\nFullView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired,\n};\n\nexport default FullView;\n","import React from 'react';\n\nconst TableHeader = () => (\n  <div className=\"list-table-header\">\n    <div className=\"list-table-row\">\n      <div className=\"list-table-cell icon-cell\">&nbsp;</div>\n      <div className=\"list-table-cell name-cell\"><b>Worksheet</b></div>\n      <div className=\"list-table-cell graph-cell\"><b>Score</b></div>\n      <div className=\"list-table-cell description-cell\"><b>Problems</b></div>\n      <div className=\"list-table-cell time-cell\"><b>Time Est</b></div>\n      <div className=\"list-table-cell date-cell\"><b>Assign</b></div>\n      <div className=\"list-table-cell date-cell\"><b>Due</b></div>\n      <div className=\"list-table-cell completed-cell\"><b>Completed</b></div>\n      <div className=\"list-table-cell flags-cell\"><b>Flags</b></div>\n      <div className=\"list-table-cell status-cell\"><b>Status</b></div>\n      <div className=\"list-table-cell drop-cell\">&nbsp;</div>\n    </div>\n  </div>\n);\n\nexport default TableHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableHeader from './components/TableHeader';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap from '../../utils/statusColorMap';\n\nclass ListView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    };\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetRows = () => {\n    const { worksheets, onToggleDetailModalOpen } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { disabled, worksheetName, score, status, problems, timeEstimate, assignDate, dueDate, completed, flags } = worksheet;\n      return (\n        <div className={disabled ? 'card card-disabled list-table-row' : 'card list-table-row'} key={worksheet.id}>\n          <div className=\"list-table-cell icon-cell\">\n            <span className=\"block-icon\">\n              <i className=\"icon-sheets-w\"></i>\n            </span>\n          </div>\n          <div className=\"list-table-cell name-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\">{worksheetName}</div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\">\n            {score && (\n              <span className={`chart-bar ${statusColorMap[status]} white-text`}>{score}%</span>\n            )}\n          </div>\n          <div className=\"list-table-cell description-cell\">{problems}</div>\n          <div className=\"list-table-cell time-cell\">{formatTimeEstimate(timeEstimate)}</div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{assignDate}</time></div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{dueDate}</time></div>\n          <div className=\"list-table-cell completed-cell\">\n            {completed && (\n              <React.Fragment>\n                {completed} of {problems}\n              </React.Fragment>\n            )}\n          </div>\n          <div className=\"list-table-cell flags-cell\">\n            {flags.length > 0 && (\n              <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n          <div className=\"list-table-cell status-cell\">\n            <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n          </div>\n          <div className=\"list-table-cell drop-cell\">\n            <div className=\"dropdown-block\">\n              <a\n                href='#'\n                data-target='dropdown01'\n                className='dropdown-trigger btn'\n                onClick={(event) => this.handleDropdownClick(event, index)}\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  <li>\n                    <a\n                      href=\"#\"\n                      className=\"modal-trigger link-block\"\n                      onClick={() => onToggleDetailModalOpen(index)}\n                    >\n                      View Details\n                    </a>\n                  </li>\n                  <li><a href=\"#!\">Dismiss Flags</a></li>\n                  <li><a href=\"#!\">Reset</a></li>\n                  <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"content-section\">\n          <div className=\"container-md\">\n            <div className=\"result-row center-align\">\n              <b className=\"result\"> - {worksheets.length} results -</b>\n            </div>\n            <div className=\"list-view-section\">\n              <div className=\"list-table\">\n                <TableHeader />\n                <div className=\"list-table-body\">\n                  {this.mapWorksheetRows()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nListView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired,\n}\n\nexport default ListView;\n","import React from 'react';\n\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport FilterSection from './components/FilterSection';\n\nimport sampleWorksheets from './utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../../utils/sortFunctions';\n\nclass DetailWorksheetPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      assignWorksheetDropdownOpen: false,\n      worksheets: sampleWorksheets,\n      detailModalOpen: false,\n      activeWorksheet: null,\n    };\n  }\n\n  onToggleAssignWorksheetDropdown = (event) => {\n    event.preventDefault();\n    this.setState(({ assignWorksheetDropdownOpen }) => ({ assignWorksheetDropdownOpen: !assignWorksheetDropdownOpen }))\n  }\n\n  onToggleDetailModalOpen = (worksheetIndex) => this.setState(({ detailModalOpen, worksheets }) => ({ detailModalOpen: !detailModalOpen, activeWorksheet: worksheets[worksheetIndex] }))\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view });\n\n  onSetFilteredState = (filterName) => this.setState({ worksheetsAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ worksheetsAreFiltered: false, filterName: '' })\n\n  onSetFilteredTopicState = (filterTopic) => this.setState({ worksheetsAreFiltered: true, filterTopic })\n  onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onAssignWorksheet = (assignType) => {\n    console.warn('Stubbed out assign worksheet click', assignType);\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { accountInfo: { lastName, firstName } } = currentWorksheet;\n      const worksheetString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'dueDate':\n        return worksheets.sort(dueDate);\n      case 'assignDate':\n        return worksheets.sort(assignDate);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'completed':\n        return worksheets.sort(completed);\n      case 'flags':\n        return worksheets.sort(flags);\n      case 'score':\n        return worksheets.sort(score);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  getMappableWorksheets = () => {\n    const { filterName, filterTopic, worksheets: allWorksheets, sort } = this.state;\n    let worksheets;\n    if (filterName.length && !filterTopic.length) {\n      worksheets = this.onFilterByName();\n    } else if (!filterName.length && filterTopic.length) {\n      worksheets = this.onFilterByTopic();\n    } else if (filterName.length && filterTopic.length) {\n      const filteredByName = this.onFilterByName();\n      worksheets = this.onFilterByTopic(filteredByName);\n    } else {\n      worksheets = allWorksheets;\n    }\n    if (sort) {\n      return this.onSortWorksheets(worksheets);\n    }\n    return worksheets;\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterTopic } = this.state;\n    if (!filterName.length && !filterTopic.length) {\n      this.setState({ worksheetsAreFiltered: false });\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  renderWorksheetView = () => {\n    const { currentView } = this.state;\n    switch (currentView) {\n      case 'list':\n        return <ListView onToggleDetailModalOpen={this.onToggleDetailModalOpen} worksheets={this.getMappableWorksheets()} />\n      case 'full':\n        return <FullView onToggleDetailModalOpen={this.onToggleDetailModalOpen} worksheets={this.getMappableWorksheets()} />\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { currentView, assignWorksheetDropdownOpen } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"main-holder grey lighten-5 switcher-section\">\n          <FilterSection\n            currentView={currentView}\n            onChangeView={this.onChangeView}\n            onSetSort={this.onSetSort}\n            onSetFilteredState={this.onSetFilteredState}\n            onUnsetFilteredState={this.onUnsetFilteredState}\n            onSetFilteredTopicState={this.onSetFilteredTopicState}\n            onUnsetFilteredTopicState={this.onUnsetFilteredTopicState}\n          />\n          {this.renderWorksheetView()}\n        </div>\n        <div className=\"add-btn-block\">\n          <a\n            href=\"#\"\n            data-target='dropdown_assign_selected'\n            onClick={this.onToggleAssignWorksheetDropdown}\n            className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n          >\n            <i className=\"material-icons\">add</i> Assign Worksheet\n          </a>\n          <ul\n            id='dropdown_assign_selected'\n            className='dropdown-content dropdown-small'\n            style={{ display: assignWorksheetDropdownOpen ? 'block' : '0', opacity: assignWorksheetDropdownOpen ? '1' : '0' }}\n          >\n            <li><a href=\"#\" onClick={() => this.onAssignWorksheet('fromSaved')}>From Saved</a></li>\n            <li><a href=\"#\" onClick={() => this.onAssignWorksheet('createNew')}>Create New</a></li>\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DetailWorksheetPage;\n\n","export default [\n  {\n    id: 1,\n    worksheetName: 'Some SAT Problems about Triangles',\n    subject: 'Math',\n    score: '',\n    problems: 15,\n    problemType: 'Skill Builder',\n    difficulty: 'Beginner',\n    timeEstimate: '14',\n    assignDate: '1/27/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/27/19',\n    dueDate: '2/10/19',\n    dueTime: '9:32 AM',\n    completionDate: '3/12/19',\n    completionTime: '2:53 PM',\n    completedProblems: '',\n    completionLevel: 'Complete',\n    unit: 'Reading Unit #4',\n    passage: '214',\n    type: 'challenge + practice',\n    flags: [],\n    status: 'Assigned',\n    disabled: true,\n    late: false,\n    topic: 'specialRightTriangles',\n    worksheetSource: 'Admin Created',\n    classifications: ['Right Triangles', 'More Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '77',\n    totalVideoMinutesAllMissedProblems: '214',\n  },\n  {\n    id: 2,\n    worksheetName: 'Worksheet 2',\n    subject: 'Reading',\n    score: '',\n    problems: 18,\n    problemType: 'Skill Builder',\n    difficulty: 'Beginner',\n    timeEstimate: '30',\n    assignDate: '1/19/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/19/19',\n    dueDate: '2/02/19',\n    dueTime: '9:32 AM',\n    completionDate: '',\n    completionTime: '',\n    completedProblems: 0,\n    completionLevel: 'Not Started',\n    unit: 'Reading Unit #4',\n    passage: '51',\n    type: 'challenge + practice',\n    flags: [{ title: 'one', status: 'reviewed' }, { title: 'two', status: 'reviewed' }, { title: 'three', status: 'toReview' }],\n    status: 'Assigned',\n    disabled: false,\n    late: true,\n    topic: 'topic2',\n    worksheetSource: 'User Created',\n    classifications: ['Math', 'More Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '77',\n    totalVideoMinutesAllMissedProblems: '214',\n  },\n  {\n    id: 3,\n    worksheetName: 'Worksheet 3',\n    subject: 'Science',\n    score: '81',\n    problems: 16,\n    problemType: 'SAT Style',\n    difficulty: 'Advanced',\n    timeEstimate: '24',\n    assignDate: '1/11/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/11/19',\n    dueDate: '2/12/19',\n    dueTime: '9:32 AM',\n    completionDate: '3/12/19',\n    completionTime: '2:53 PM',\n    completedProblems: 10,\n    completionLevel: 'Complete',\n    unit: 'Reading Unit #4',\n    passage: '121',\n    type: 'challenge + practice',\n    flags: [],\n    status: 'Accomplished',\n    disabled: false,\n    late: false,\n    topic: 'topic2',\n    worksheetSource: 'Admin Created',\n    classifications: ['Right Triangles', 'Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '124',\n    totalVideoMinutesAllMissedProblems: '312',\n  },\n  {\n    id: 4,\n    worksheetName: 'Worksheet 4',\n    subject: 'Science',\n    score: '32',\n    problems: 14,\n    problemType: 'SAT Style',\n    difficulty: 'Mixed',\n    timeEstimate: '31',\n    assignDate: '1/24/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/24/19',\n    dueDate: '2/27/19',\n    dueTime: '9:32 AM',\n    completionDate: '',\n    completionTime: '',\n    completedProblems: 4,\n    completionLevel: 'Started',\n    unit: 'Reading Unit #4',\n    passage: '128',\n    type: 'challenge + practice',\n    flags: [{ title: 'one', status: 'reviewed' }, { title: 'two', status: 'reviewed' }, { title: 'three', status: 'toReview' }, { title: 'four', status: 'toReview' }],\n    status: 'Beginning',\n    disabled: false,\n    late: true,\n    topic: 'topic3',\n    worksheetSource: 'User Created',\n    classifications: ['Trigonometry', 'More Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '311',\n    totalVideoMinutesAllMissedProblems: '401',\n  },\n  {\n    id: 5,\n    worksheetName: 'Worksheet 5',\n    subject: 'Reading',\n    score: '93',\n    problems: 21,\n    problemType: 'Mixed',\n    difficulty: 'Mixed',\n    timeEstimate: '23',\n    assignDate: '1/12/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/12/19',\n    dueDate: '2/03/19',\n    dueTime: '9:32 AM',\n    completionDate: '3/12/19',\n    completionTime: '2:53 PM',\n    completedProblems: 6,\n    completionLevel: 'Instructor Editing',\n    unit: 'Reading Unit #4',\n    passage: '73',\n    type: 'challenge + practice',\n    flags: [{ title: 'one', status: 'toReview' }, { title: 'two', status: 'toReview' }],\n    status: 'Developing',\n    disabled: false,\n    late: false,\n    topic: 'topic3',\n    worksheetSource: 'Admin Created',\n    classifications: ['Trigonometry', 'Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '51',\n    totalVideoMinutesAllMissedProblems: '200',\n  },\n  {\n    id: 6,\n    worksheetName: 'Worksheet 6',\n    subject: 'Math',\n    score: '64',\n    problems: 30,\n    problemType: 'Mixed',\n    difficulty: 'Advanced',\n    timeEstimate: '65',\n    assignDate: '1/09/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/09/19',\n    dueDate: '2/12/19',\n    dueTime: '9:32 AM',\n    completionDate: '',\n    completionTime: '',\n    completedProblems: 5,\n    completionLevel: 'Not Started',\n    unit: 'Reading Unit #4',\n    passage: '153',\n    type: 'challenge + practice',\n    flags: [],\n    status: 'Developing',\n    disabled: false,\n    late: false,\n    topic: 'topic4',\n    worksheetSource: 'User Created',\n    classifications: ['Right Triangles', 'Trigonometry', 'More Math'],\n    totalVideoMinutesWatched: '83',\n    totalVideoMinutesAllMissedProblems: '305',\n  },\n];\n","const statusColorMap = {\n  Assigned: 'grey darken-4',\n  Accomplished: 'purple darken-3',\n  Beginning: 'red darken-3',\n  Exemplary: 'blue accent-4',\n  Developing: 'purple',\n};\n\nexport const chartColorMap = {\n  Assigned: '#333',\n  Accomplished: '#7327cc',\n  Beginning: '#ed1c24',\n  Exemplary: 'rgb(0, 100, 244)',\n  Developing: '#c10078',\n}\n\nexport default statusColorMap;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass InstructorToggleCard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n      const { instructor,onToggleInstructorSelect } = this.props;\n    return (\n      <li onClick={() => onToggleInstructorSelect(instructor)}>\n        <input type=\"checkbox\" />\n        <div className=\"owner-box card-panel card-panel-panel card-panel-large\" style={{ backgroundColor: \"#31837a\",color: \"#fff\" }}>\n          <span className=\"check-link icon-check\" />\n          <div className=\"card-panel-row row\">\n            <div className=\"col s10\">\n              <div className=\"user-block\">\n                <div className=\"user-circle\" style={{ backgroundColor: \"#0085ce\",color: \"#fff\"}}>\n                  <img src=\"./static/images/img-owner01.jpg\" alt=\"image description\"/>\n                </div>\n                <div className=\"user-text\" style={{ color: \"#fff\" }}>\n                  <h4 className=\"h3\">{instructor.firstName}, {instructor.lastName}</h4>\n                  <a href=\"mailto:jen.ownerly@gmail.com\">\n                    {instructor.email}\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"col s2 right-align\">\n              <span className=\"block-icon\">\n                <i className=\"icon-user\" />\n                <span className=\"text-icon\">Instructor</span>\n              </span>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\n\nInstructorToggleCard.propTypes = {\n    instructor:PropTypes.object.isRequired,\n    onToggleInstructorSelect: PropTypes.func.isRequired,\n}\n\nexport default InstructorToggleCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport update from 'immutability-helper';\nimport Portal from \"../../Portal\";\nimport InstructorToggleCard from './components/InstructorToggleCard';\n\nimport ClickOffComponentWrapper from \"../../ClickOffComponentWrapper\";\nimport sampleInstructors from '../../utils/sampleInstructors';\n\n\nclass InstructorModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        instructors:sampleInstructors,\n        selectedInstructors:[],\n    }\n  }\n\n\n  onCloseModal = () => this.setState({ selectedInstructors: [] }, this.props.onClose)\n\n  onToggleInstructorSelect = (instuctor) => {\n    const { selectedInstructors } = this.state;\n    if (selectedInstructors.indexOf(instuctor) === -1) {\n      this.setState({ selectedInstructors: [...selectedInstructors, instuctor] });\n    } else {\n      const updatedInstructors = update(selectedInstructors, {\n        $splice: [[selectedInstructors.indexOf(instuctor), 1]],\n      });\n      this.setState({ selectedInstructors: updatedInstructors });\n    }\n  }\n\n  onSaveInstructorChanges = () => {\n    const { selectedInstructors } = this.state;\n    const { handleInstructorsChange } = this.props;\n    handleInstructorsChange(selectedInstructors);\n    this.onCloseModal();\n  }\n\n\n  mapInstructorToggleCard = () => {\n      const { instructors } = this.state;\n    return instructors.map((instructor,index)=>(\n        <InstructorToggleCard\n            key = { index }\n            index = {index}\n            instructor = {instructor}\n            onToggleInstructorSelect={this.onToggleInstructorSelect}\n        />\n    ))\n  }\n  render() {\n    const { open } = this.props;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick = {this.onCloseModal}>\n            <div\n              id=\"modal_Instructor1\"\n              className=\"modal modal-custom modal-location\"\n            >\n              <form action=\"#\" className=\"custom-form\">\n                <fieldset>\n                  <div className=\"card-modal card-main card\">\n                    <div\n                      className=\"owner-box card-panel card-panel-title\"\n                      style={{ backgroundColor: \"#00456b\", color: \"#fff\" }}\n                    >\n                      <div className=\"card-panel-row row\">\n                        <div className=\"col\">\n                          <h3>Select Instructor(s)</h3>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"card-content\">\n                      <div className=\"card-body\">\n                        <span className=\"hint\">\n                          Click to select or deselect.\n                        </span>\n                        <div className=\"row-holder\">\n                          <div className=\"search-field input-field\">\n                            <input\n                              type=\"search\"\n                              id=\"insturtor_search_modal\"\n                              className=\"input-control  validate\"\n                              placeholder=\"Smith\"\n                            />\n                            <button type=\"submit\" className=\"search-button\">\n                              <i className=\"icon-search\" />\n                            </button>\n                            <label\n                              className=\"label\"\n                              htmlFor=\"insturtor_search_modal\"\n                            >\n                              Search\n                            </label>\n                          </div>\n                          <div className=\"input-field\">\n                            <select id=\"location_search_modal\">\n                              <option>Any</option>\n                              <option>option</option>\n                              <option>option</option>\n                            </select>\n                            <label\n                              className=\"label\"\n                              htmlFor=\"location_search_modal\"\n                            >\n                              Location\n                            </label>\n                          </div>\n                        </div>\n                        <div className=\"box-scrollable\">\n                          <div className=\"height-40 jcf-scrollable\">\n                            <div className=\"card-location-holder\" style ={{height:\"300px\",overflowY:\"scroll\"}}>\n                              <ul className=\"checkbox-list\">\n                               {this.mapInstructorToggleCard()}\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <a\n                          href=\"#!\"\n                          className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n                        >\n                          Cancel\n                        </a>\n                        <a href=\"#\" className=\"btn\" onClick={this.onSaveInstructorChanges}>\n                          Add\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </fieldset>\n              </form>\n            </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n          {`\n            h4 {\n              font-size: 2.28rem;\n              line-height: 110%;\n              margin: 1.52rem 0 0.912rem 0;\n              margin-top: 0;\n            }\n            .overlay {\n              position: fixed;\n              background-color: rgba(0, 0, 0, 0.7);\n              top: 0;\n              right: 0;\n              bottom: 0;\n              left: 0;\n              z-index: 1999;\n            }\n            .card-modal {\n              margin: 0;\n              border-radius: 6px;\n            }\n            #modal_Location1 {\n              border-radius: 6px;\n            }\n            .modal {\n              display: block;\n              background-color: white;\n              position: absolute;\n              top: 10%;\n              right: 10%;\n              left: 10%;\n              box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14),\n                0 9px 46px 8px rgba(0, 0, 0, 0.12),\n                0 11px 15px -7px rgba(0, 0, 0, 0.2);\n            }\n            .modal-custom {\n              opacity: 1;\n              visibility: visible;\n            }\n            .modal-footer {\n              background-color: white;\n            }\n          `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nInstructorModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose:PropTypes.func.isRequired,\n  handleInstructorsChange:PropTypes.func.isRequired,\n};\n\nexport default InstructorModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassDetailModal from '../ClassDetailModal';\nimport RadialBar from \"../../../../common/RadialBar\";\n\n\nclass ClassCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classDetailsModalOpen: false,\n      deleteModalOpen: false,\n    }\n  }\n\n  onOpenClassDetailsModal = (event) => {\n    event.preventDefault();\n    this.props.onCloseDropdown();\n    this.setState({ classDetailsModalOpen: true });\n  };\n\n  onCloseClassDetailsModal = () => this.setState({ classDetailsModalOpen: false });\n\n  onCloneClass = () => this.props.onCloneClass(this.props.classroom)\n\n  onOpenDeleteModal = () => this.setState({ deleteModalOpen: true });\n  onCloseDeleteModal = () => this.setState({ deleteModalOpen: false });\n\n  onConfirmDeleteClass = () => {\n    const { onDeleteClass, classroom, onCloseDropdown } = this.props;\n    onDeleteClass(classroom);\n    onCloseDropdown();\n    this.onCloseDeleteModal();\n  }\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  render() {\n    const { dropdownIsOpen, dropdownIndex, index,classroom,onHandleClassCard,onCloneClass,onDeleteClass,onSaveClassChanges } = this.props;\n    const { deleteModalOpen, classDetailsModalOpen } = this.state;\n    const {summary:{\n      amount_students,\n      start_date,\n      end_date,\n      improvement,\n      coursework_assigned,\n      coursework_completed,\n      problems_flagged_review,\n      average_score,\n      achieved_target_score,\n      average_practice_tests_completed,\n      instruction},\n    } = classroom;\n    return (\n      <React.Fragment>\n        <ClassDetailModal\n          index = {index}\n          classroom={classroom}\n          open={classDetailsModalOpen}\n          onClose={this.onCloseClassDetailsModal}\n          onOpenDeleteModal={this.onOpenDeleteModal}\n          deleteModalOpen={deleteModalOpen}\n          onSaveClassChanges = {onSaveClassChanges}\n          onDeleteClass={onDeleteClass}\n        />\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-main card-class card card-large\">\n          <div className=\"owner-box card-panel\" style={{ backgroundColor: \"#408e49\", color: \"#fff\",cursor:\"pointer\" }}>\n            <div className=\"card-panel-row row\">\n              <div className=\"col s9\">\n                <div className=\"user-block\">\n                  <div className=\"user-circle\" style={{ backgroundColor: \"#fff\", color: \"#408e49\" }}>\n                    <span className=\"initials\">{amount_students}</span>\n                    <span className=\"ititials-text\">students</span>\n                  </div>\n                  <div className=\"user-text\" style={{ color: \"#fff\" }} onClick={()=>onHandleClassCard(index)}>\n                    <h4 className=\"h3\">Some Class in June</h4>\n                    <time dateTime=\"P120D\">{start_date} - {end_date}</time>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s3 right-align\">\n                <div className=\"row icons-row\">\n                  <div className=\"col right-align\">\n                    <span className=\"block-icon\">\n                      <i className=\"icon-members\" />\n                      <span className=\"text-icon\">Class</span>\n                    </span>\n                  </div>\n                  <div className=\"dropdown-block col\">\n                    <a\n                      className=\"dropdown-trigger btn\"\n                      href=\"#\"\n                      onClick={this.handleDropdownClick}\n                      data-target=\"dropdown01\"\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen && dropdownIndex === index}>\n                      <ul\n                        id=\"dropdown01\"\n                        className=\"dropdown-content dropdown-wide\"\n                        style={{ display: 'block', width: '103.991px', left: '116.974px', top: '7.99716px', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                      >\n                        <li>\n                          <a\n                            href=\"#modal_user_edit\"\n                            onClick={this.onOpenClassDetailsModal}\n                            className=\"modal-trigger link-block\"\n                          >\n                            Edit\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#!\" onClick={() => onCloneClass(index)}>Clone</a>\n                        </li>\n                        <li>\n                          <a href=\"#!\">Impersonate</a>\n                        </li>\n                        <li>\n                          <a href=\"#!\" onClick={() => onDeleteClass(index)}>Delete</a>\n                        </li>\n                      </ul>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"row d-flex mb-0\">\n              <div className=\"col s12 m5\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s6 m12\">\n                    <ul className=\"points-list-custom\">\n                      <li className=\"style-aqua\">\n                        <span className=\"badge-circle\">\n                          +{improvement}\n                          <span className=\"badge-text\">improvement</span>\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"col s6 m12\">\n                    <div className=\"chart-block chart-block-test\">\n                      <span className=\"value-max\">24</span>\n                      <RadialBar\n                          svgWidth={104}\n                          svgHeight={104}\n                          strokeWidth={14}\n                          maxValue={24}\n                          currentValue={instruction}\n                          strokeColor = \"#55b24b\"\n                        />\n                      <div className=\"chart-text\">\n                        <span className=\"title\">Instruction</span>\n                        <span className=\"value\">{((instruction/24)*100).toFixed(1)}%</span>\n                        <span className=\"description\">\n                          vs scheduled instruction\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 m7\">\n                <ul className=\"points-list\">\n                  <li className=\"style-purple-darken\">\n                    <span className=\"badge-circle\">{coursework_assigned}</span>\n                    <span className=\"point-text\">coursework assigned</span>\n                  </li>\n                  <li className=\"style-purple-lighten\">\n                    <span className=\"badge-circle\">{coursework_completed}%</span>\n                    <span className=\"point-text\">coursework completed</span>\n                  </li>\n                  <li className=\"style-red-darken-3\">\n                    <span className=\"badge-circle\">{problems_flagged_review}</span>\n                    <span className=\"point-text\">\n                      problems ﬂagged for review\n                    </span>\n                  </li>\n                  <li className=\"style-blue-light\">\n                    <span className=\"badge-circle\">{average_score}</span>\n                    <span className=\"point-text\">average score</span>\n                  </li>\n                  <li className=\"style-blue\">\n                    <span className=\"badge-circle\">{achieved_target_score}%</span>\n                    <span className=\"point-text\">achieved target score</span>\n                  </li>\n                  <li className=\"style-orange-accent-4\">\n                    <span className=\"badge-circle\">{average_practice_tests_completed}</span>\n                    <span className=\"point-text\">\n                      average practice tests completed\n                    </span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"card-inner-row\">\n              <div className=\"row-holder\">\n                <ul className=\"category-list\">\n                  <li className=\"category-box \">\n                    <span className=\"category-badge badge-purple\">TW</span>\n                    <span className=\"category-text\">Tutor Withalongername</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nClassCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  classroom: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  dropdownIndex: PropTypes.number,\n  onHandleClassCard:PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass:PropTypes.func.isRequired,\n  onSaveClassChanges:PropTypes.func.isRequired,\n};\n\nexport default ClassCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Portal from \"../../../../Portal\";\nimport update from 'immutability-helper';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nimport AccountInfo from '../SharedModalComponents/AccountInfo';\nimport ContactInfo from '../SharedModalComponents/ContactInfo';\nimport Locations from '../SharedModalComponents/Locations';\n\nimport { nestedEditFieldValidation } from '../../../../utils/fieldValidation';\n\n\n\nclass ClassDetailModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteLocationModalOpen: false,\n      newLocationModalOpen: false,\n      editLocationModalOpen: false,\n      pendingLocationDelete: {},\n      activeLocation: {},\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n      originalClassRoom: {\n        summary:{\n          amount_students:'',\n          start_date:'',\n          end_date:'',\n          improvement:0,\n          coursework_assigned:0,\n          coursework_completed:0,\n          problems_flagged_review:0,\n          average_score:0,\n          achieved_target_score:0,\n          average_practice_tests_completed:0,\n          instruction:0,\n        },\n        accountInfo: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          gender: '',\n        },\n        contactInfo: {\n          phone: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: '',\n        },\n        locations: [],\n      },\n      updatedClassRoom: {\n        summary:{\n          amount_students:'',\n          start_date:'',\n          end_date:'',\n          improvement:0,\n          coursework_assigned:0,\n          coursework_completed:0,\n          problems_flagged_review:0,\n          average_score:0,\n          achieved_target_score:0,\n          average_practice_tests_completed:0,\n          instruction:0,\n        },\n        accountInfo: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          gender: '',\n        },\n        contactInfo: {\n          phone: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: '',\n        },\n        locations: [],\n      },\n      validation: {\n        accountInfo: {\n          firstName: true,\n          lastName: true,\n          email: true,\n          gender: true,\n        },\n      },\n    }\n  }\n\n  componentDidMount() {\n    const { classroom: { id, basicInfo, accountInfo, contactInfo, locations,summary } = {} } = this.props;\n    const updatedClassRoom = { id, basicInfo, accountInfo, contactInfo, locations,summary };\n    const { originalClassRoom: originalClassRoomState } = this.state;\n    const originalClassRoom = update(originalClassRoomState, {$merge: updatedClassRoom});\n    this.setState({ originalClassRoom, updatedClassRoom }); // eslint-disable-line\n  }\n\n  // This resets the component state to reflect the details of the next classroom the user clicks on\n  componentWillReceiveProps = (nextProps) => {\n    if ((!this.state.originalClassRoom || nextProps.classroom.id !== this.state.originalClassRoom.id)) {\n      const { classroom: { id, basicInfo, accountInfo, contactInfo, locations,summary } = {} } = nextProps;\n      const updatedClassRoom = { id, basicInfo, accountInfo, contactInfo, locations,summary };\n      const { originalClassRoom: originalClassRoomState } = this.state;\n      const originalClassRoom = update(originalClassRoomState, {\n        $merge: nextProps.classroom,\n      });\n      this.setState({ originalClassRoom, updatedClassRoom });\n    }\n  }\n\n  // We pull the value based on the field type then merge that updated key/value pair with the last version of component state\n  handleDetailsChange = (event, name, section) => {\n      const value = event.target ? event.target.value : event;\n      const updatedClassRoom = update(this.state.updatedClassRoom, {\n        [section]: { $merge: { [name]: value } },\n      });\n      this.setState({updatedClassRoom});\n  }\n\n  initialClassRoomMount = () => this.state.originalClassRoom.id !== this.props.classroom.id;\n\n  renderModalHeader = () => {\n    const { classroom: { accountInfo: { lastName: initialLastName, firstName: initialFIrstName, email: initialEmail } } } = this.props;\n    const { updatedClassRoom: { accountInfo: { lastName: updatedLastName, firstName: updatedFirstName, email: updatedEmail } } } = this.state;\n    let lastName;\n    let firstName;\n    let email;\n    if (this.initialClassRoomMount()) {\n      lastName = initialLastName;\n      firstName = initialFIrstName;\n      email = initialEmail;\n    } else {\n      lastName = updatedLastName;\n      firstName = updatedFirstName;\n      email = updatedEmail;\n    }\n    return (\n      <React.Fragment>\n        <h4 className=\"h3\">{lastName}, {firstName}</h4>\n        <a href={`mailto:${email}`}>{email}</a>\n      </React.Fragment>\n    );\n  }\n\n  // This function is passed into nestedEditFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n  onSetValidation = (validation, cb) => this.setState({ validation }, cb);\n\n  // If all the fields are valid, we construct a post body and call onSaveNewLocation passed down from the container level\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const { updatedClassRoom: { id, basicInfo, accountInfo, contactInfo, locations,summary } } = this.state;\n    const { onSaveLocationError, onSaveClassChanges, onClose } = this.props;\n    // NOTE: Swap out what instance of valid is active if you want to test saving a new location without worrying about validation\n    // const valid = true;\n    const valid = await nestedEditFieldValidation(this.state, this.state.updatedClassRoom, this.onSetValidation, (validation) => console.warn('validation', validation));\n    if (!valid) {\n      // return onSaveLocationError();\n      console.warn('not valid');\n    }\n    const postBody = { id, basicInfo, accountInfo, contactInfo, locations,summary };\n    onSaveClassChanges(postBody);\n    onClose();\n  }\n\n  onCancelChanges = () => {\n    const { onClose } = this.props;\n    const { originalClassRoom } = this.state;\n    this.setState({ updatedClassRoom: originalClassRoom }, onClose());\n  }\n\n  render() {\n    const { open,onOpenDeleteModal,onDeleteClass, deleteModalOpen,index } = this.props;\n    const { dropdownIsOpen, dropdownIndex, activeLocation, deleteLocationModalOpen, pendingLocationDelete, newLocationModalOpen, editLocationModalOpen,\n      updatedClassRoom: {accountInfo: updatedAccountInfo, contactInfo: updatedContactInfo, locations: updatedLocations},\n    } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper\n              onOuterClick={this.onCancelChanges}\n              nestedModals={ deleteModalOpen || deleteLocationModalOpen || editLocationModalOpen || newLocationModalOpen }\n            >\n              <div\n                id=\"modal_user_edit\"\n                className=\"modal modal-custom modal-custom-large modal-gray\"\n              >\n                <div className=\"card-modal card-main card grey lighten-3\">\n                  <div\n                    className=\"owner-box card-panel card-panel-title\"\n                    style={{ backgroundColor: \"#31837a\", color: \"#fff\" }}\n                  >\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col s9\">\n                        <div className=\"user-block\">\n                          <div\n                            className=\"user-circle\"\n                            style={{\n                              backgroundColor: \"#0085ce\",\n                              color: \"#fff\",\n                            }}\n                          >\n                            <img src=\"./static/images/img-owner01.jpg\" alt=\"\" />\n                          </div>\n                          <div className=\"user-text\" style={{ color: \"#fff\" }}>\n                            {this.renderModalHeader()}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col\" style={{ textAlign: \"right\" }}>\n                        <span className=\"block-icon\">\n                          <i className=\"icon-owner\"></i>\n                          <span className=\"text-icon\">Owner</span>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <div className=\"row mb-0\">\n                        <div className=\"col s12 l6\">\n                          <AccountInfo\n                            state={ this.initialClassRoomMount()? accountInfo: updatedAccountInfo }\n                            handleDetailsChange={this.handleDetailsChange}\n                          />\n                          <ContactInfo\n                            state={\n                              this.initialClassRoomMount()\n                                ? contactInfo\n                                : updatedContactInfo\n                            }\n                            handleDetailsChange={this.handleDetailsChange}\n                          />\n                        </div>\n                        <div className=\"col s12 l6\">\n                          <Locations\n                            state={ this.initialClassRoomMount()? locations : updatedLocations }\n                            handleDetailsChange={this.handleDetailsChange}\n                            dropdownIsOpen={dropdownIsOpen}\n                            dropdownIndex={dropdownIndex}\n                            activeLocation={activeLocation}\n                            deleteLocationModalOpen={deleteLocationModalOpen}\n                            pendingLocationDelete={pendingLocationDelete}\n                            newLocationModalOpen={newLocationModalOpen}\n                            editLocationModalOpen={editLocationModalOpen}\n                            onSetDropdown={this.onSetDropdown}\n                            onCloseDropdown={this.onCloseDropdown}\n                            onOpenNewLocationModal={this.onOpenNewLocationModal}\n                            onOpenEditLocationModal={ this.onOpenEditLocationModal }\n                            onCloseNewLocationModal={ this.onCloseNewLocationModal}\n                            onCloseEditLocationModal={ this.onCloseEditLocationModal}\n                            onOpenDeleteLocationModal={ this.onOpenDeleteLocationModal }\n                            onCloseDeleteLocationModal={ this.onCloseDeleteLocationModal}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <a\n                        href=\"#\"\n                        onClick={() => onDeleteClass(index)}\n                        className=\"waves-effect waves-teal btn-flat pink-text text-darken-1\"\n                      >\n                        Delete\n                      </a>\n                      <a\n                        href=\"#\"\n                        onClick={this.onCancelChanges}\n                        className=\"modal-close waves-effect waves-teal btn-flat grey-text text-darken-1\"\n                      >\n                        Cancel\n                      </a>\n                      <a href=\"#\" onClick={this.onSubmit} className=\"btn\">\n                        Save\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n          {`\n              .overlay {\n                position: fixed;\n                background-color: rgba(0, 0, 0, 0.7);\n                top: 0;\n                right: 0;\n                bottom: 0;\n                left: 0;\n                z-index: 1999;\n              }\n              .card-modal {\n                margin: 0;\n                border-radius: 6px;\n              }\n              .modal {\n                display: block;\n                background-color: white;\n                position: absolute;\n                top: 10%;\n                right: 10%;\n                left: 10%;\n                box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n              }\n              .modal-custom {\n                opacity: 1;\n                visibility: visible;\n              }\n              .modal-footer {\n                background-color: white;\n              }\n            `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nClassDetailModal.propTypes = {\n  index:PropTypes.number.isRequired,\n  open: PropTypes.bool.isRequired,\n  deleteModalOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onOpenDeleteModal: PropTypes.func.isRequired,\n  classroom: PropTypes.object.isRequired,\n  onSaveClassChanges:PropTypes.func.isRequired,\n};\n\nexport default ClassDetailModal;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      name: '',\n      activeFilters: [],\n      location: \"\",\n      sort: \"lastNameDescending\",\n    };\n  }\n\n  onHandleFilterClick = filter => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  };\n\n  // This function does two things - first, it changes the filter state regardless of the field it's coming from\n  // If either location or sort filters are changed, we dispatch the appropriate action in ListPage to ensure the rendered instructors are filtered/sorted appropriately\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredLocationState, onUnsetFilteredLocationState,onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'location') {\n      if (event === '') {\n        return onUnsetFilteredLocationState();\n      }\n      return onSetFilteredLocationState(event);\n    }else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { name } = this.state;\n    if (name === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  // eslint-disable-next-line consistent-return\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }));\n\n  render() {\n    const { open, activeFilters,location,sort } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div\n              className=\"collapsible-body\"\n              style={open ? { display: \"block\" } : { display: \"none\" }}\n            >\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"sessions_this_week\"\n                        checked={ activeFilters.indexOf(\"sessions_this_week\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"sessions_this_week\")}\n                    />\n                    <label htmlFor=\"sessions_this_week\">\n                      Sessions This Week\n                    </label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"session_today\"\n                        checked={ activeFilters.indexOf(\"session_today\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"session_today\")}\n                    />\n                    <label htmlFor=\"session_today\">Session Today</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"sessions_no\"\n                        checked={ activeFilters.indexOf(\"sessions_no\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"sessions_no\")}\n                    />\n                    <label htmlFor=\"sessions_no\">No Sessions Scheduled</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_no\"\n                        checked={ activeFilters.indexOf(\"gain_no\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_no\")}\n                    />\n                    <label htmlFor=\"gain_no\">No Gain</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_0_49\"\n                        checked={ activeFilters.indexOf(\"gain_0_49\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_0_49\")}\n                    />\n                    <label htmlFor=\"gain_0_49\">Gain of 0-49</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_50_100\"\n                        checked={ activeFilters.indexOf(\"gain_50_100\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_50_100\")}\n                    />\n                    <label htmlFor=\"gain_50_100\">Gain of 50-100</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_100_199\"\n                        checked={ activeFilters.indexOf(\"gain_100_199\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_100_199\")}\n                    />\n                    <label htmlFor=\"gain_100_199\">Gain of 100-199</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_200\"\n                        checked={ activeFilters.indexOf(\"gain_200\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_200\")}\n                    />\n                    <label htmlFor=\"gain_200\">Gain of 200+</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"current\"\n                        checked={ activeFilters.indexOf(\"current\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"current\")}\n                    />\n                    <label htmlFor=\"current\">Current</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"archived\"\n                        checked={ activeFilters.indexOf(\"archived\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"archived\")}\n                    />\n                    <label htmlFor=\"archived\">Archived</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                        value={getValueFromState(location, locationOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'location')}\n                        options={locationOptions}\n                        label=\"Location\"\n                        stateKey=\"location\"\n                        dropdownKey=\"location\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\" style  = {{marginTop:\"50px\"}}>\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      className=\"input-control  validate\"\n                    />\n                    <button type=\"submit\" className=\"search-button\" onClick={this.submitNameFilter}>\n                      <i className=\"icon-search\" />\n                    </button>\n                    <label className=\"label\" htmlFor=\"name_search\">\n                      Search\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, sortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={sortOptions}\n                        label=\"Sort\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 hide-on-med-and-down show-on-large\">\n                &nbsp;\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\" style = {{marginTop:\"50px\"}}>\n                  <div className=\"option-item clear\">\n                    <a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a>\n                  </div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">\n                        {open ? \"Hide Filters\" : \"Open Filters\"}\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTyes = {\n    onSetSort:PropTypes.func.isRequired,\n    onSetFilteredState:PropTypes.func.isRequired,\n    onUnsetFilteredState:PropTypes.func.isRequired,\n    onSetFilteredLocationState: PropTypes.func.isRequired,\n    onUnsetFilteredLocationState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../utils/getValueFromState';\nimport genderOptions from '../../../../../utils/genderOptions';\n\nconst AccountInfo = ({ state: { firstName, lastName, email, gender }, handleDetailsChange}) => (\n  <div className=\"card-block\">\n    <h3>Account Info</h3>\n    <div className=\"card-main card\">\n      <div className=\"card-content\">\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"first-name\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={(event) => handleDetailsChange(event, 'firstName', 'accountInfo')}\n            />\n            <label className={firstName.length ? 'label active' : 'label'} htmlFor=\"first-name\">First Name*</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"last-name\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={(event) => handleDetailsChange(event, 'lastName', 'accountInfo')}\n            />\n            <label className={lastName.length ? 'label active' : 'label'} htmlFor=\"last-name\">Last Name*</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"account_email_edit\"\n              name=\"email\"\n              value={email}\n              onChange={(event) => handleDetailsChange(event, 'email', 'accountInfo')}\n            />\n            <label className={email.length ? 'label active' : 'label'} htmlFor=\"account_email_edit\">Email Address*</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"\">\n            <div className=\"input-field col s12 l7\">\n              <Dropdown\n                value={getValueFromState(gender, genderOptions)}\n                onChange={(event) => handleDetailsChange(event, 'gender', 'accountInfo')}\n                options={genderOptions}\n                label=\"Gender*\"\n                stateKey=\"gender\"\n                dropdownKey=\"gender\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nAccountInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default AccountInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../utils/getValueFromState';\nimport stateOptions from '../../../../../utils/stateOptions';\n\n\nconst ContactInfo = ({ state: { phone, streetAddress, city, state, zip }, handleDetailsChange }) => (\n  <div className=\"card-block\">\n    <h3>Contact Info</h3>\n    <div className=\"card-main card\">\n      <div className=\"card-content\">\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"tel\"\n              id=\"contact_phone_edit\"\n              name=\"phone\"\n              value={phone}\n              onChange={(event) => handleDetailsChange(event, 'phone', 'contactInfo')}\n            />\n            <label className={phone.length ? 'label active' : 'label'} htmlFor=\"contact_phone_edit\">Phone (optional)</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"contact_address_edit\"\n              name=\"streetAddress\"\n              value={streetAddress}\n              onChange={(event) => handleDetailsChange(event, 'streetAddress', 'contactInfo')}\n            />\n            <label className={streetAddress.length ? 'label active' : 'label'} htmlFor=\"contact_address_edit\">Street Address (optional)</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"contact_city_edit\"\n              name=\"city\"\n              value={city}\n              onChange={(event) => handleDetailsChange(event, 'city', 'contactInfo')}\n            />\n            <label className={city.length ? 'label active' : 'label'} htmlFor=\"contact_city_edit\">City (optional)</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"col s12 m6 l5\">\n            <div className=\"input-field\">\n              <Dropdown\n                value={getValueFromState(state, stateOptions)}\n                onChange={(event) => handleDetailsChange(event, 'state', 'contactInfo')}\n                options={stateOptions}\n                label=\"State (optional)\"\n                stateKey=\"state\"\n                dropdownKey=\"state\"\n              />\n            </div>\n          </div>\n          <div className=\"col s12 m6 l7\">\n            <div className=\"input-field\">\n              <input\n                type=\"tel\"\n                id=\"contact_zip_edit\"\n                name=\"zip\"\n                value={zip}\n                onChange={(event) => handleDetailsChange(event, 'zip', 'contactInfo')}\n              />\n              <label className={zip.length ? 'label active' : 'label'} htmlFor=\"contact_zip_edit\">Zip (optional)</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default ContactInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LocationRow = ({ location: { locationContactInfo: { locationName, locationNickname } }, index, dropdownIndex, dropdownIsOpen, handleDropdownClick, onOpenEditLocationModal, onOpenDeleteModal }) => (\n  <div className=\"card-main card-location card card-large\">\n    <div className=\"card-panel card-panel-location\" style={{ backgroundColor: '#62b771', color: '#fff' }}>\n      <div className=\"card-panel-row row\">\n        <div className=\"col s9\">\n          <h3 className=\"h4 truncate\">{locationName}</h3>\n          <h4 className=\"sub-title\">{locationNickname}</h4>\n        </div>\n        <div className=\"col s3\">\n          <div className=\"row icons-row\">\n            <div className=\"col\">\n              <span className=\"block-icon\">\n                <i className=\"icon-location\"></i>\n                <span className=\"text-icon\">Location</span>\n              </span>\n            </div>\n            <div className=\"dropdown-block col\">\n              <a\n                href=\"#\"\n                onClick={(event) => handleDropdownClick(event, index)}\n                className=\"dropdown-trigger btn\"\n                data-target=\"dropdown105\"\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id=\"dropdown105\" className=\"dropdown-content dropdown-wide\" style={{ display: 'block', width: '103.991px', left: '116.974px', top: '7.99716px', height: '80.3409px', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={onOpenEditLocationModal}\n                      className=\"modal-trigger link-block\"\n                    >\n                      Edit\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                    >\n                      Clone\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href=\"#\"\n                      onClick={onOpenDeleteModal}\n                    >\n                      Delete\n                    </a>\n                  </li>\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocationRow.propTypes = {\n  location: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  onOpenDeleteModal: PropTypes.func.isRequired,\n  onOpenEditLocationModal: PropTypes.func.isRequired,\n};\n\nexport default LocationRow;\n","/* eslint-disable array-callback-return */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Modal from '../../../../../Modal';\n\nimport NewLocationModal from '../../../../../Location/components/NewLocationModal';\nimport LocationDetailsModal from '../../../../../Location/components/LocationDetailsModal';\nimport LocationRow from './components/LocationRow';\n\nimport { saveNewSuccess as saveLocationSuccess, saveChangesSuccess, saveNewError as saveLocationError } from '../../../../../utils/fieldValidation';\nimport sampleLocations from '../../../../../Location/utils/sampleLocationList';\n\nconst idGenerator = () => Math.floor((Math.random() * 100) + 1);\n\nconst validationFieldMap = {\n  locationName: 'Location Name',\n  locationNickname: 'Location Nickname',\n  locationEmail: 'Location Email',\n  automatedEmailOrigin: 'Automated Email Origin',\n  automatedEmailSalutation: 'Automated Email Salutation',\n  locationUrl: 'Location Url',\n  headerColor1: 'Header Color 1',\n  headerColor2: 'Header Color 2',\n  headerLogoBackgroundColor: 'Header Logo Background Color',\n  headerLogoBackgroundAlpha: 'Header Logo Background Alpha',\n  horizontalLogoVariation: 'Horizonal Logo Variation',\n  squareLogoVariation: 'Square Logo Variation',\n  backgroundImage: 'Background Image',\n  backgroundBlur: 'Background Blur',\n  backgroundOverlayAlpha: 'Background Overlay  Alpha',\n};\n\n// TODO: mock out update/delete action to backend\n// TODO: Will this delete just remove the location from the owner or delete the location altogethe?\nclass Locations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: sampleLocations,\n      dropdownIndex: null,\n      pendingLocationDelete: {},\n      locationValidation: {},\n    };\n  }\n\n  onSetLocationValidation = locationValidation => this.setState({ locationValidation });\n\n  // This function is stubbing out what should happen when the location is saved\n  // We finish by pushing the new location to this page's state\n  onSaveNewLocation = ({ locationContactInfo, locationEmailSettings, locationBranding, owner }) => {\n    this.onCloseNewLocationModal();\n    const newLocation = {\n      id: idGenerator(),\n      owner,\n      locationContactInfo,\n      locationEmailSettings,\n      locationBranding,\n      locationBasicInfo: {\n        activeStudents: 0,\n        pastStudents: 0,\n        unactivatedStudents: 0,\n        averageImprovement: 0,\n        averageInitialScore: 0,\n        averageFinalScore: 0,\n        studentsAchievingTargetScore: 0,\n      },\n    };\n    const locations = update(this.state.locations, {\n      $push: [newLocation],\n    });\n    this.setState({ locations });\n    saveLocationSuccess('location');\n  }\n\n  // IMPORTANT: This update implementation starts by destructuring the three sections of the location being edited in addition to its id\n  // Grabs location to update based on its index in array of current locations\n  // Use immutability-helper splice function to replace previous instace of the location with the incoming updated version\n  onSaveLocationChanges = ({ id, locationContactInfo, locationEmailSettings, locationBranding }) => {\n    const { locations: originalLocations } = this.state;\n    const { onCloseDropdown } = this.props;\n    const locationToUpdate = originalLocations.filter(location => location.id === id)[0];\n    const updatedLocation = update(locationToUpdate, {\n      locationContactInfo: {\n        $set: locationContactInfo,\n      },\n      locationEmailSettings: {\n        $set: locationEmailSettings,\n      },\n      locationBranding: {\n        $set: locationBranding,\n      },\n    });\n    const updatedLocationIndex = originalLocations.indexOf(locationToUpdate);\n    const locations = update(originalLocations, {\n      $splice: [[updatedLocationIndex, 1, updatedLocation]],\n    });\n    saveChangesSuccess();\n    this.setState({ locations });\n    onCloseDropdown();\n    return this.onCloseEditLocationModal();\n  }\n\n  onConfirmDeleteLocation = () => {\n    const { pendingLocationDelete, onCloseDeleteLocationModal } = this.props;\n    this.onDeleteLocation(pendingLocationDelete);\n    onCloseDeleteLocationModal();\n  }\n\n  onDeleteLocation = (deletedLocation) => {\n    const updatedState = update(this.state, {\n      locations: unfilteredLocations => unfilteredLocations.filter(location => location.id !== deletedLocation.id),\n    });\n    this.setState({ locations: updatedState.locations });\n    this.props.onCloseDropdown();\n  }\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen, onCloseDropdown, onSetDropdown } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  mapUserLocations = () => this.state.locations.map((location, index) => (\n    <LocationRow\n      key={index}\n      index={index}\n      location={location}\n      dropdownIndex={this.props.dropdownIndex}\n      dropdownIsOpen={this.props.dropdownIsOpen}\n      handleDropdownClick={this.handleDropdownClick}\n      onOpenEditLocationModal={() => this.props.onOpenEditLocationModal(location)}\n      onOpenDeleteModal={() => this.props.onOpenDeleteLocationModal(location)}\n    />\n  ))\n\n  render() {\n    const { deleteLocationModalOpen, activeLocation, newLocationModalOpen, editLocationModalOpen, onOpenNewLocationModal, onCloseNewLocationModal, onCloseEditLocationModal, onCloseDeleteLocationModal } = this.props;\n    return (\n      <React.Fragment>\n        <Modal\n          open={deleteLocationModalOpen}\n          onConfirm={this.onConfirmDeleteLocation}\n          onClose={onCloseDeleteLocationModal}\n          header=\"Are You Sure?\"\n          body=\"Deleting this location will be permanent\"\n        />\n        <NewLocationModal\n          fromInstructorPage\n          open={newLocationModalOpen}\n          onClose={onCloseNewLocationModal}\n          onSaveNewLocation={this.onSaveNewLocation}\n          onSaveLocationError={() => saveLocationError(this.state.locationValidation, validationFieldMap)}\n          onSetLocationValidation={this.onSetLocationValidation}\n        />\n        <LocationDetailsModal\n          location={activeLocation}\n          open={editLocationModalOpen}\n          onClose={onCloseEditLocationModal}\n          onSaveLocationError={() => saveLocationError(this.state.locationValidation, validationFieldMap)}\n          onSetLocationValidation={this.onSetLocationValidation}\n          onSaveLocationChanges={this.onSaveLocationChanges}\n        />\n        <div className=\"card-block\">\n          <h3>Location(s)</h3>\n          {this.mapUserLocations()}\n          <div className=\"add-box\">\n            <div className=\"add-box-holder\">\n              <a\n                href=\"#\"\n                onClick={onOpenNewLocationModal}\n                className=\"btn-floating waves-effect waves-light green lighten-1\"\n              >\n                <i className=\"material-icons\">add</i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nLocations.propTypes = {\n  activeLocation: PropTypes.object,\n  dropdownIndex: PropTypes.number,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  newLocationModalOpen: PropTypes.bool.isRequired,\n  editLocationModalOpen: PropTypes.bool.isRequired,\n  pendingLocationDelete: PropTypes.object.isRequired,\n  deleteLocationModalOpen: PropTypes.bool.isRequired,\n  onOpenNewLocationModal: PropTypes.func.isRequired,\n  onCloseNewLocationModal: PropTypes.func.isRequired,\n  onOpenEditLocationModal: PropTypes.func.isRequired,\n  onCloseEditLocationModal: PropTypes.func.isRequired,\n  onOpenDeleteLocationModal: PropTypes.func.isRequired,\n  onCloseDeleteLocationModal: PropTypes.func.isRequired,\n};\n\nexport default Locations;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassCard from \"./components/ClassCard\";\nimport FilterSection from \"./components/FilterSection\";\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\nimport ClassModal from \"../ClassModal\";\n\n\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classesAreFiltered: false,\n      filterName: \"\",\n      filterLocation: '',\n      sort: '',\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      classModalOpen: false,\n    };\n  }\n\n  onSetFilteredLocationState = filterLocation => this.setState({ classesAreFiltered: true, filterLocation });\n\n  onUnsetFilteredLocationState = () => this.setState({ filterLocation: \"\" }, this.checkForFilteredState);\n\n  onSetDropdown = dropdownIndex => this.setState({ dropdownIsOpen: true, dropdownIndex });\n\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false, dropdownIndex: null });\n\n  onCloneClass = index => {\n    const { onCloneClass } = this.props;\n    this.onCloseDropdown();\n    onCloneClass(index);\n  };\n\n  onDeleteClass = index => {\n    const { onDeleteClass } = this.props;\n    this.onCloseDropdown();\n    onDeleteClass(index);\n  };\n\n  checkForFilteredState = () => {\n    const { filterName, filterLocation } = this.state;\n    if (!filterName.length && !filterLocation.length) {\n      this.setState({ classesAreFiltered: false });\n    }\n  };\n\n  onOpenClassModal = event => {\n    event.preventDefault();\n    this.setState({ classModalOpen: true });\n  };\n\n  onSetSort = (sort) => this.setState({ sort })\n\n  onSetFilteredState = (filterName) => this.setState({ classesAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ classesAreFiltered: false, filterName: '' })\n\n  onFilterByName = () => {\n    const { classes } = this.props;\n    const { filterName } = this.state;\n    return classes.reduce((finalArr, currentClass) => {\n      const { accountInfo: { lastName, firstName } } = currentClass;\n      const classString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (classString.indexOf(filterName) !== -1 && finalArr.indexOf(currentClass) === -1) {\n        finalArr.push(currentClass);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByLocation = (preFilteredClasses = []) => {\n    const { classes: allClasses } = this.props;\n    const { filterLocation } = this.state;\n    let classes;\n    if (preFilteredClasses.length) {\n      classes = preFilteredClasses;\n    } else {\n      classes = allClasses;\n    }\n    return classes.reduce((finalArr, currentInstructor) => {\n      const { contactInfo: { city } } = currentInstructor;\n      if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n        finalArr.push(currentInstructor);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortClasses = (classes) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'firstNameAscending':\n        return classes.sort(firstNameAscending);\n      case 'firstNameDescending':\n        return classes.sort(firstNameDescending);\n      case 'lastNameAscending':\n        return classes.sort(lastNameAscending);\n      case 'lastNameDescending':\n        return classes.sort(lastNameDescending);\n      default:\n        break;\n    }\n  }\n\n  getMappableClasses = () => {\n    const { filterName, filterLocation, sort } = this.state;\n    const { classes: allClasses } = this.props;\n    let classes;\n    if (filterName.length && !filterLocation.length) {\n      classes = this.onFilterByName();\n    } else if (!filterName.length && filterLocation.length) {\n      classes = this.onFilterByLocation();\n    } else if (filterName.length && filterLocation.length) {\n      const filteredByName = this.onFilterByName();\n      classes = this.onFilterByLocation(filteredByName);\n    } else {\n      classes = allClasses;\n    }\n    if (sort) {\n      return this.onSortClasses(classes);\n    }\n    return classes;\n  }\n\n  onCloseClassModal = () => this.setState({ classModalOpen: false });\n\n  mapClassCards = () => {\n    const classes = this.getMappableClasses();\n    return classes.map((item, index) => (\n      <ClassCard\n        key={index}\n        index={index}\n        classroom={item}\n        onSetDropdown={this.onSetDropdown}\n        onCloseDropdown={this.onCloseDropdown}\n        onCloneClass={() => this.onCloneClass(index)}\n        onDeleteClass={() => this.onDeleteClass(index)}\n        dropdownIsOpen={this.state.dropdownIsOpen}\n        dropdownIndex={this.state.dropdownIndex}\n        onHandleClassCard={() => this.props.onHandleClassCard(index)}\n        onSaveClassChanges = {this.props.onSaveClassChanges}\n      />\n    ));\n  };\n\n  render() {\n    const { classModalOpen} = this.state;\n    const { onSaveNewClass } = this.props;\n    return (\n      <div>\n        <div className=\"title-row card-panel\">\n          <div className=\"mobile-header\">\n            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\n              <i className=\"material-icons\">menu</i>\n            </a>\n          </div>\n          <nav className=\"breadcrumb-holder\">\n            <div className=\"nav-wrapper \">\n              <a href=\"#!\" className=\"breadcrumb\">\n                &lt; Classes\n              </a>\n            </div>\n          </nav>\n          <h2 className=\"h1 white-text\">\n            <span className=\"heading-holder\">\n              <i className=\"icon-members\" />\n              <span className=\"heading-block\">Classes</span>\n            </span>\n          </h2>\n        </div>\n        <FilterSection\n          onSetSort={this.onSetSort}\n          onSetFilteredState={this.onSetFilteredState}\n          onUnsetFilteredState={this.onUnsetFilteredState}\n          onSetFilteredLocationState={this.onSetFilteredLocationState}\n          onUnsetFilteredLocationState={this.onUnsetFilteredLocationState}\n        />\n        <div className=\"content-section\">\n          <div className=\"container-md\">\n            <div className=\"result-row center-align\">\n              <b className=\"result\">- 23 matches -</b>\n            </div>\n          </div>\n          <div className=\"row d-flex-content card-width-366\">\n            {this.mapClassCards()}\n          </div>\n        </div>\n        <div className=\"add-btn-block\">\n          <a\n            href=\"#modal_add_new_class\"\n            className=\"modal-trigger waves-effect waves-teal btn add-btn\"\n            onClick={() => this.onOpenClassModal(event)}\n          >\n            <i className=\"material-icons\">add</i> New Class\n          </a>\n        </div>\n        <ClassModal\n          open={classModalOpen}\n          onClose={this.onCloseClassModal}\n          onSave = {onSaveNewClass}\n        />\n\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  classes: PropTypes.array.isRequired,\n  onHandleClassCard: PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass: PropTypes.func.isRequired,\n  onSaveNewClass: PropTypes.func.isRequired,\n  onSaveClassChanges:PropTypes.func.isRequired,\n};\n\nexport default ListPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      state: { start_date, end_date, active, isExclude },handleDetailsChange,\n    } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h3>Account Settings</h3>\n        <div className=\"card-main card\">\n          <div className=\"card-content\">\n            <div className=\"row\">\n              <div className=\"col s6\">\n                <div className=\"datepicker-field input-field\">\n                  <i className=\"icon-calendar\" />\n                    <DatePicker\n                      id=\"course_start_date\"\n                      selected={start_date}\n                      onChange={(date) => handleDetailsChange(date, 'start_date', 'accountInfo')}\n                      placeholderText=\"Course Start Date\"\n                    />\n                </div>\n              </div>\n              <div className=\"col s6\">\n                <div className=\"datepicker-field input-field\">\n                  <i className=\"icon-calendar\" />\n                    <DatePicker\n                      id=\"course_end_date\"\n                      selected={end_date}\n                      onChange={(date) => handleDetailsChange(date, 'end_date', 'accountInfo')}\n                      placeholderText=\"Course End Date\"\n                    />\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col s12\">\n                <div className=\"check-holder\">\n                  <p>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        className=\"filled-in\"\n                        checked={active}\n                        onChange={(event) => handleDetailsChange(event, 'active', 'accountInfo','checkBox')}\n                      />\n                      <span>Inactive</span>\n                    </label>\n                  </p>\n                  <span className=\"card-note\">\n                    Select this option when you no longer want this student to\n                    appear on your list of current students. All student data is\n                    retained and, by default, included in instructor and global\n                    statistics.\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col s12\">\n                <div className=\"input-field\">\n                  <select id=\"default_session_duration\">\n                    <option>Use organization default</option>\n                    <option>Use organization default</option>\n                    <option>Use organization default</option>\n                  </select>\n                  <label className=\"label\" htmlFor=\"default_session_duration\">\n                    Default Session Duration\n                  </label>\n                </div>\n              </div>\n            </div>\n            <p>\n              <label className=\"label-wrap\">\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={isExclude}\n                  onChange={(event) => handleDetailsChange(event, 'isExclude', 'accountInfo','checkBox')}\n                />\n                <span>Exclude Class from Performance Statistics</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAccountSettings.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange:PropTypes.func.isRequired,\n};\n\nexport default AccountSettings;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nclass ClassInformation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {handleDetailsChange,state:{className}} = this.props;\n    return (\n      <div className=\"card-block\">\n        <h3>Class Information</h3>\n        <div className=\"card-main card\">\n          <div className=\"card-content\">\n            <div className=\"row mb-0\">\n              <div className=\"input-field col s12\">\n                <input\n                  type=\"text\"\n                  id=\"class_name\"\n                  value = {className}\n                  onChange={(event) => handleDetailsChange(event, 'className', 'classInfo')}\n                />\n                <label className={className.length ? 'label active' : 'label'} htmlFor=\"class_name\">\n                  Class Name\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nClassInformation.propTypes = {\n  handleDetailsChange:PropTypes.func.isRequired,\n  state:PropTypes.object.isRequired,\n}\n\nexport default ClassInformation;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nclass InstructorCard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n      const {instructor:{firstName,lastName,email},onRemoveInstructor} = this.props;\n    return (\n      <div\n        className=\"owner-box card-panel card-panel-panel card-panel-large\"\n        style={{\n          backgroundColor: \"#31837a\",\n          color: \"#fff\",\n        }}\n      >\n        <a href=\"#\" className=\"close-link icon-close-thin\" onClick = {onRemoveInstructor}/>\n        <div className=\"card-panel-row row\">\n          <div className=\"col s10\">\n            <div className=\"user-block\">\n              <div\n                className=\"user-circle\"\n                style={{\n                  backgroundColor: \"#0085ce\",\n                  color: \"#fff\",\n                }}\n              >\n                <img\n                  src=\"./static/images/img-owner01.jpg\"\n                  alt=\"image description\"\n                />\n              </div>\n              <div className=\"user-text\" style={{ color: \"#fff\" }}>\n                <h4 className=\"h3\">{firstName}, {lastName}</h4>\n                <a href=\"mailto:jen.ownerly@gmail.com\">{email}</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s2 right-align\">\n            <span className=\"block-icon\">\n              <i className=\"icon-user\" />\n              <span className=\"text-icon\">Instructor</span>\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nInstructorCard.propTypes = {\n  instructor:PropTypes.object.isRequired,\n  onRemoveInstructor:PropTypes.func.isRequired,\n}\n\nexport default InstructorCard;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport InstructorCard from './components/InstructorCard';\n\n\nclass Instructors extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mapInstructors = () => {\n    const { instructors,onRemoveInstructor } = this.props;\n    return instructors.map((instructor,index)=>(\n      <InstructorCard\n        key = {index}\n        index = {index}\n        instructor = {instructor}\n        onRemoveInstructor = {() => onRemoveInstructor(index)}\n      />\n    ))\n  }\n\n  render() {\n    const { onOpenInstructorModal } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h3>Instructor(s)</h3>\n        {/* card */}\n        <div className=\"card-main card card-instructor\">\n          <div className=\"card-content\">\n            <div className=\"text-block\">\n              <p>\n                Add one or more instructors to the list below. Each instructor\n                can manage the coursework.\n              </p>\n            </div>\n            <div className=\"box-scrollable\">\n              <div className=\"height-360 jcf-scrollable\">\n                <div className=\"card-location-holder\" style = {{height:\"320px\",overflowY:\"scroll\"}}>\n                  {this.mapInstructors()}\n                </div>\n              </div>\n            </div>\n            <div className=\"card-footer right-align\">\n              <a href=\"#modal_Instructor1\" className=\"modal-trigger link-block\" onClick = {onOpenInstructorModal}>\n                Add Instructor\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nInstructors.propTypes = {\n  onOpenInstructorModal:PropTypes.func.isRequired,\n  instructors:PropTypes.array.isRequired,\n  onRemoveInstructor:PropTypes.func.isRequired,\n}\n\nexport default Instructors;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../Location/components/LocationCard';\n\n\nclass Locations extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mapLocations = () =>{\n    const { locations,onRemoveLocation } = this.props;\n    return locations.map((location,index) => (\n      <LocationCard\n        key = {index}\n        index = {index}\n        location = {location}\n        onRemoveLocation={() => onRemoveLocation(index)}\n      />\n    ))\n  }\n\n  render() {\n    const { onOpenLocationModal } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h3>Class Location</h3>\n        {/* card */}\n        <div className=\"card-main card card-instructor\">\n          <div className=\"card-content\">\n            <div className=\"text-block\">\n              <p>\n                Select the location/branch where this class will be located.\n              </p>\n            </div>\n            <div className=\"box-scrollable\">\n              <div className=\"height-360 jcf-scrollable\">\n                <div className=\"card-location-holder\" style = {{height:\"320px\",overflowY:\"scroll\"}}>\n                  {this.mapLocations()}\n                </div>\n              </div>\n            </div>\n            <div className=\"card-footer right-align\">\n              <a href=\"#modal_Location1\" className=\"modal-trigger link-block\" onClick = { onOpenLocationModal}>\n                Add Location\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocations.propTypes = {\n  locations:PropTypes.array.isRequired,\n  onOpenLocationModal:PropTypes.func.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n}\n\nexport default Locations;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { StickyContainer, Sticky } from \"react-sticky\";\nimport ClassNavBar from \"../components/ClassNavBar\";\nimport TestSectionsPage from \"../TestSectionsPage\";\nimport DetailSummaryPage from \"../DetailSummaryPage\";\nimport DetailWorksheetPage from \"../DetailWorksheetPage\";\nimport SessionCalendar from \"../Calendar\";\nimport sampleClass from \"../utils/sampleSummaryClass\";\n\nimport { makeSelectAssignLessonsModalOpen,makeSelectAssignWorkSheetsModalOpen } from \"../index/selectors\";\n\nclass StatusPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: \"summary\",\n    };\n  }\n\n  onSetActivePage = active => this.setState({ active });\n\n  renderCurrentPage = () => {\n    const { active } = this.state;\n    if (active === \"summary\") {\n      return <DetailSummaryPage currentClass={sampleClass} />;\n    }\n    if (active === \"testSections\") {\n      return <TestSectionsPage />;\n    }\n    if (active === \"worksheets\") {\n      return <DetailWorksheetPage />;\n    }\n    if (active == \"calendar\") {\n      return <SessionCalendar />;\n    }\n    return null;\n  };\n\n  render() {\n    const { active } = this.state;\n    const { assignLessonsModalOpen,assignWorkSheetsModalOpen } = this.props;\n    return (\n      <StickyContainer>\n        <Choose>\n          <When condition={!assignLessonsModalOpen && !assignWorkSheetsModalOpen}>\n            <Sticky>\n              {({ style }) => (\n                <div\n                  className=\"title-row card-panel\"\n                  style={{ ...style, zIndex: 1999 }}\n                >\n                  <div className=\"mobile-header\">\n                    <a\n                      href=\"#\"\n                      data-target=\"slide-out\"\n                      className=\"sidenav-trigger\"\n                    >\n                      <i className=\"material-icons\">menu</i>\n                    </a>\n                  </div>\n                  <nav className=\"breadcrumb-holder\">\n                    <div className=\"nav-wrapper \">\n                      <a href=\"#!\" className=\"breadcrumb\">\n                        &lt; Classes\n                      </a>\n                    </div>\n                  </nav>\n                  <h2 className=\"h1 white-text\">\n                    <span className=\"heading-holder\">\n                      <i className=\"icon-members\"></i>\n                      <span className=\"heading-block\">Some Class in June</span>\n                    </span>\n                  </h2>\n                  <ClassNavBar\n                    onSetActivePage={this.onSetActivePage}\n                    active={active}\n                  />\n                </div>\n              )}\n            </Sticky>\n          </When>\n        </Choose>\n        {this.renderCurrentPage()}\n      </StickyContainer>\n    );\n  }\n}\n\nStatusPage.propTypes = {\n  assignLessonsModalOpen: PropTypes.bool,\n  assignWorkSheetsModalOpen:PropTypes.bool,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen:makeSelectAssignWorkSheetsModalOpen(),\n});\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect)(StatusPage);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sortByOptions from '../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      testVersionFilter: '',\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onClearFilters = () => this.setState({ testVersionFilter: '' }, this.props.onClearFilters)\n\n  handleSearchChange = ({ target }) => this.setState({ testVersionFilter: target.value })\n\n  submitSearchFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { testVersionFilter } =  this.state;\n    if (testVersionFilter === '') {\n      onUnsetFilteredState();\n    }\n    const transformedTitle = testVersionFilter.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedTitle);\n  }\n\n  render() {\n    const { open, testVersionFilter } = this.state;\n    const { handleFilterClick, sort, onSetSort, subjectFilters, flagFilter, availableDateFilters, dueDateFilters } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\" style={{ minHeight: '0' }}>\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      name=\"reading\"\n                      checked={subjectFilters.indexOf('reading') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      name=\"writing\"\n                      checked={subjectFilters.indexOf('writing') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      name=\"math\"\n                      checked={subjectFilters.indexOf('math') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"future\"\n                      name=\"future\"\n                      checked={availableDateFilters.indexOf('future') !== -1}\n                      onChange={({ target }) => handleFilterClick('availableDate', target.name)}\n                    />\n                    <label htmlFor=\"future\">Future</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"available\"\n                      name=\"available\"\n                      checked={availableDateFilters.indexOf('available') !== -1}\n                      onChange={({ target }) => handleFilterClick('availableDate', target.name)}\n                    />\n                    <label htmlFor=\"available\">Available</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      name=\"complete\"\n                      checked={availableDateFilters.indexOf('complete') !== -1}\n                      onChange={({ target }) => handleFilterClick('availableDate', target.name)}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      name=\"hasReviewFlags\"\n                      checked={flagFilter}\n                      onChange={({ target }) => handleFilterClick('hasFlags', target.name)}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      name=\"dueToday\"\n                      checked={dueDateFilters.indexOf('dueToday') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      name=\"dueNextSession\"\n                      checked={dueDateFilters.indexOf('dueNextSession') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      name=\"dueThisWeek\"\n                      checked={dueDateFilters.indexOf('dueThisWeek') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      name=\"overdue\"\n                      checked={dueDateFilters.indexOf('overdue') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m4\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"test_version_search\"\n                      className=\"input-control validate\"\n                      value={testVersionFilter}\n                      onChange={this.handleSearchChange}\n                    />\n                    <button type=\"submit\" onClick={this.submitSearchFilter} className=\"search-button\"><i className=\"icon-search\"></i></button>\n                    <label className=\"label\" htmlFor=\"test_version_search\">Test Version</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\" style={{ marginBottom: '10px', marginTop: '0' }}>\n                      <Dropdown\n                        value={getValueFromState(sort, sortByOptions)}\n                        onChange={onSetSort}\n                        options={sortByOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 hide-on-med-and-down show-on-large\">&nbsp;</div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                    <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  sort: PropTypes.string.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  flagFilter: PropTypes.bool.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  dueDateFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  availableDateFilters: PropTypes.array.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport { data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nclass TestSectionCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    }\n  }\n\n  viewTestSectionDetails = () => console.warn('Pending implementation of view test section details functionality')\n  dismissFlags = () => console.warn('Pending implementation of dismiss flags functionality')\n  resetTestSection = () => console.warn('Pending implementation of reset test section functionality')\n  deleteTestSection = () => console.warn('Pending implementation of delete test section functionality')\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  renderFlags = () => {\n    const { testSection: { flags } } = this.props;\n    if (flags.length) {\n      return (\n        <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n      )\n    }\n    return null;\n  }\n\n  render() {\n    const { testSection, dropdownIsOpen, dropdownIndex, index } = this.props;\n    const { subject, timeEstimate, version, availableDate, dueDate, problems, disabled, status, percentageComplete } = testSection;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className={disabled ? 'card-main test-card card-disabled card' : 'card-main test-card card'}>\n          <div className=\"card-panel panel-border\">\n            <div className=\"card-panel-row row\">\n              <div className=\"icon-col col s2\">\n                <span className=\"block-icon\">\n                  <i className=\"icon-assign-section\"></i>\n                  <span className=\"text-icon\">Assigned <br />Test Section</span>\n                </span>\n              </div>\n              <div className=\"col s8\">\n                <div className=\"card-panel-text\">\n                  <div className=\"text-large truncate\">{subjectMap[subject]} Section</div>\n                  <div className=\"text-small truncate\">Version: {version}</div>\n                </div>\n              </div>\n              <div className=\"position-top right-align\">\n                <div className=\"icons-row\">\n                  {this.renderFlags()}\n                  <div className=\"dropdown-block col\">\n                    <a\n                      href='#'\n                      data-target='dropdown01'\n                      className='dropdown-trigger btn'\n                      onClick={this.handleDropdownClick}\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen && dropdownIndex === index}>\n                      <ul\n                        id='dropdown01'\n                        className='dropdown-content dropdown-wide'\n                        style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                      >\n                        <li><a href=\"#\" onClick={this.viewTestSectionDetails} className=\"modal-trigger link-block\">View Details</a></li>\n                        <li><a href=\"#\" onClick={this.dismissFlags}>Dismiss Flags</a></li>\n                        <li><a href=\"#\" onClick={this.resetTestSection}>Reset</a></li>\n                        <li><a href=\"#\" onClick={this.deleteTestSection} className=\"link-delete\">Delete</a></li>\n                      </ul>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"d-flex sameheight-all row mb-0\">\n              <div className=\"col s6\">\n                <div className=\"chart-container\">\n                  <div className=\"chart-holder\">\n                    <Doughnut\n                      data={() => data(percentageComplete, status)}\n                      options={{\n                        circumference: 1 * Math.PI,\n                        rotation: 1 * Math.PI,\n                        cutoutPercentage: 60,\n                        tooltips: false,\n                      }}\n                    />\n                    <span className=\"chart-value\" style={{ backgroundColor: graphColorMap[status] }}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span><span className=\"percentage\">{percentageComplete}%</span></span>\n                  </div>\n                  <div className=\"chart-row\">\n                    <div className=\"chart-col chart-start\">&nbsp;</div>\n                    <div className=\"chart-col chart-end\">\n                      <span className=\"amount\" style={{ color: graphColorMap[status] }}>{problems}</span>\n                    </div>\n                  </div>\n                  <div className=\"chart-description\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Time Est:</dt>\n                      <dd>{timeEstimate} min</dd>\n                    </dl>\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problems:</dt>\n                      <dd>{problems}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s6 right-align justify-end\">\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Available:</dt>\n                    <dd><time dateTime=\"2018-12-15\">{availableDate}</time></dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Due:</dt>\n                    <dd><time dateTime=\"2018-12-15\">{dueDate}</time></dd>\n                  </dl>\n                </div>\n                <div className=\"align-self-end\">\n                  <span className={testSectionCardColorMap[status]}>{status}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTestSectionCard.propTypes = {\n  dropdownIndex: PropTypes.number,\n  index: PropTypes.number.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  testSection: PropTypes.object.isRequired,\n}\n\nexport default TestSectionCard;\n","import React from 'react';\nimport update from 'immutability-helper';\nimport moment from 'moment';\n\nimport FilterSection from './components/FilterSection';\nimport TestSectionCard from './components/TestSectionCard';\n\nimport { availableDateSort, dueDateSort, statusSort, flagsSort, problemSort, timeEstimateSort, subjectSort, percentageCompleteSort } from '../utils/sortOptions';\nimport { testSectionSubjectMap } from '../utils/testSectionCardUtils';\nimport sampleTestSections from '../utils/sampleTestSections';\n\nclass TestSectionsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      testVersionFilter: '',\n      subjectFilters: [],\n      flagFilter: false,\n      availableDateFilters: [],\n      dueDateFilters: [],\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      testSections: sampleTestSections,\n    };\n  }\n\n  onSetSort = (sort) => this.setState({ sort })\n\n  onClearFilters = () => this.setState({ sort: '', testVersionFilter: '', subjectFilters: [], flagFilter: false, availableDateFilters: [], dueDateFilters: [] })\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  onSetFilteredState = (value) => this.setState({ testVersionFilter: value })\n  onUnsetFilteredState = () => this.setState({ testVersionFilter: '' })\n\n  // eslint-disable-next-line consistent-return\n  onSortTestSections = (testSections) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'flags':\n        return testSections.sort(flagsSort);\n      case 'dueDate':\n        return testSections.sort(dueDateSort);\n      case 'availableDate':\n        return testSections.sort(availableDateSort);\n      case 'status':\n        return testSections.sort(statusSort);\n      case 'problems':\n        return testSections.sort(problemSort);\n      case 'timeEstimate':\n        return testSections.sort(timeEstimateSort);\n      case 'subject':\n        return testSections.sort(subjectSort);\n      case 'percentageComplete':\n        return testSections.sort(percentageCompleteSort);\n      default:\n        break;\n    }\n  }\n\n  onFilterByTestVersion = () => {\n    const { testSections, testVersionFilter } = this.state;\n    return testSections.reduce((finalArr, currentTestSection) => {\n      const { version } = currentTestSection;\n      const testSectionString = version.replace(/\\s/g, \"\").toLowerCase();\n      if (testSectionString.indexOf(testVersionFilter) !== -1 && finalArr.indexOf(currentTestSection) === -1) {\n        finalArr.push(currentTestSection);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByDate = (incomingSections, dateType) => {\n    const { dueDateFilters, availableDateFilters } = this.state;\n    let dateFilters;\n    let testSections = incomingSections;\n\n    const currentDate = moment().format('MM/DD/YY');\n    const currentDateIndex = new Date().getDay();\n    const endOfWeekIndex = 6 - currentDateIndex;\n    const endOfWeekDate = moment().add(endOfWeekIndex, 'days').format('MM/DD/YY')\n    if (dateType === 'dueDate') {\n      dateFilters = dueDateFilters;\n      if (dateFilters.indexOf('dueToday') !== -1) {\n        testSections = testSections.filter(testSection => testSection.dueDate === currentDate);\n      }\n      if (dateFilters.indexOf('dueNextSession') !== -1) {\n        console.warn('Pending decision on how next session date is calculated');\n      }\n      if (dateFilters.indexOf('overdue') !== -1) {\n        testSections = testSections.filter(testSection => testSection.dueDate < currentDate);\n      }\n      if (dateFilters.indexOf('dueThisWeek') !== -1) {\n        testSections = testSections.filter(testSection => testSection.dueDate >= currentDate && testSection.dueDate <= endOfWeekDate);\n      }\n    } else {\n      dateFilters = availableDateFilters;\n      if (dateFilters.indexOf('future') !== -1) {\n        testSections = testSections.filter(testSection => testSection.availableDate > currentDate);\n      }\n      if (dateFilters.indexOf('available') !== -1) {\n        testSections = testSections.filter(testSection => testSection.availableDate <= currentDate);\n      }\n      if (dateFilters.indexOf('complete') !== -1) {\n        testSections = testSections.filter(testSection => testSection.percentageComplete === '100');\n      }\n    }\n    return testSections;\n  }\n\n  onFilterTestSections = () => {\n    const { subjectFilters, dueDateFilters, availableDateFilters, flagFilter, testSections: allTestSections } = this.state;\n    let testSections = allTestSections;\n    if (subjectFilters.length) {\n      testSections = testSections.filter(testSection => subjectFilters.indexOf(testSectionSubjectMap[testSection.subject]) !== -1);\n    }\n    if (dueDateFilters.length) {\n      testSections = this.onFilterByDate(testSections, 'dueDate');\n    }\n    if (availableDateFilters.length) {\n      testSections = this.onFilterByDate(testSections, 'availableDate');\n    }\n    if (flagFilter) {\n      testSections = testSections.filter(testSection => testSection.flags.length);\n    }\n    return testSections;\n  }\n\n  getMappableTestSections = () => {\n    const { subjectFilters, dueDateFilters, availableDateFilters, flagFilter, sort, testVersionFilter, testSections } = this.state;\n    let mappableTestSections = testSections;\n    if (testVersionFilter.length) {\n      mappableTestSections = this.onFilterByTestVersion();\n    }\n    if (subjectFilters.length || dueDateFilters.length || availableDateFilters.length || flagFilter) {\n      mappableTestSections = this.onFilterTestSections();\n    }\n    if (sort) {\n      return this.onSortTestSections(mappableTestSections);\n    }\n    return mappableTestSections;\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterClick = (filterType, filter) => {\n    const { availableDateFilters: currentAvailableDateFilters, dueDateFilters: currentDueDateFilters,\n      subjectFilters: currentSubjectFilters, flagFilter } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'dueDate':\n        modifiedFilterCurrentState = currentDueDateFilters;\n        modifiedFilterName = 'dueDateFilters';\n        break;\n      case 'availableDate':\n        modifiedFilterCurrentState = currentAvailableDateFilters;\n        modifiedFilterName = 'availableDateFilters';\n        break;\n      case 'hasFlags':\n        return this.setState({ flagFilter: !flagFilter });\n      default:\n        break;\n    }\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  mapTestSections = () => this.getMappableTestSections().map((testSection, index) => (\n    <TestSectionCard\n      index={index}\n      key={testSection.id}\n      testSection={testSection}\n      onSetDropdown={this.onSetDropdown}\n      onCloseDropdown={this.onCloseDropdown}\n      dropdownIndex={this.state.dropdownIndex}\n      dropdownIsOpen={this.state.dropdownIsOpen}\n    />\n  ))\n\n  render() {\n    const { testSections } = this.state;\n    return (\n      <React.Fragment>\n        <FilterSection\n          sort={this.state.sort}\n          onSetSort={this.onSetSort}\n          flagFilter={this.state.flagFilter}\n          onClearFilters={this.onClearFilters}\n          handleFilterClick={this.handleFilterClick}\n          subjectFilters={this.state.subjectFilters}\n          dueDateFilters={this.state.dueDateFilters}\n          availableDateFilters={this.state.availableDateFilters}\n          onSetFilteredState={this.onSetFilteredState}\n          onUnsetFilteredState={this.onUnsetFilteredState}\n        />\n        <div className=\"content-section\">\n          <div className=\"result-row center-align\">\n            <b className=\"result\"> - {testSections.length} results -</b>\n          </div>\n          <div className=\"row d-flex-content card-width-272\">\n            {this.mapTestSections()}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TestSectionsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ClassNavBar = ({ active, onSetActivePage }) => (\n  <nav className=\"nav-additional\">\n    <ul className=\"menu-additional js-flex-nav\" data-more-text=\"More\">\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('summary')}\n          className={active === 'summary' ? 'active' : ''}\n        >\n          Summary\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('calendar')}\n          className={active === 'calendar' ? 'active' : ''}\n        >\n          Calendar\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('lessons')}\n          className={active === 'lessons' ? 'active' : ''}\n        >\n          Lessons\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('worksheets')}\n          className={active === 'worksheets' ? 'active' : ''}\n        >\n          Worksheets\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('testSections')}\n          className={active === 'testSections' ? 'active' : ''}\n        >\n          Test Sections\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('account')}\n          className={active === 'account' ? 'active' : ''}\n        >\n          Account\n        </a>\n      </li>\n    </ul>\n  </nav>\n);\n\nClassNavBar.propTypes = {\n  active: PropTypes.string.isRequired,\n  onSetActivePage: PropTypes.func.isRequired,\n}\n\nexport default ClassNavBar;","import {\n    SET_ASSIGN_LESSONS_MODAL_OPEN,\n    SET_ASSIGN_WORKSHEETS_MODAL_OPEN,\n    SET_CALENDAR_ROWS,\n} from './constants';\n\n\nexport function setAssignLessonsModalOpen(value){\n    return {\n        type:SET_ASSIGN_LESSONS_MODAL_OPEN,\n        value,\n    }\n}\n\nexport function setAssignWorksheetModalOpen(value){\n    return {\n        type:SET_ASSIGN_WORKSHEETS_MODAL_OPEN,\n        value,\n    }\n}\n\nexport function setCalendarRows(rows){\n    return {\n        type:SET_CALENDAR_ROWS,\n        rows,\n    }\n}","const API_URL = process.env.API_URL;\n\nexport const createNewClassRoomApi = (classroom) =>\nfetch(`${API_URL}/api/commands/create-classroom`,{\n  method:\"POST\",\n  headers:{\n    Accept:\"application/json\",\n    \"Content-Type\":\"application/json\",\n  },\n  body:JSON.stringify(classroom),\n})\n.then(res => res.json())\n.catch(err => err);\n\nexport default createNewClassRoomApi;","export const SET_ASSIGN_LESSONS_MODAL_OPEN = 'SET_ASSIGN_LESSONS_MODAL_OPEN';\nexport const SET_ASSIGN_WORKSHEETS_MODAL_OPEN = 'SET_ASSIGN_WORKSHEETS_MODAL_OPEN';\nexport const SET_CALENDAR_ROWS = 'SET_CALENDAR_ROWS';","import { createSelector } from 'reselect';\n\nconst selectClassesDomain = (state) => state.classesReducer;\n\nconst makeSelectClassesPageState = () => createSelector(\n    selectClassesDomain,\n    (substate) => substate?substate.toJS():{}\n);\n\nconst makeSelectAssignLessonsModalOpen = () => createSelector(\n    makeSelectClassesPageState(),\n    (substate) =>substate.assignLessonsModalOpen\n);\n\nconst makeSelectAssignWorkSheetsModalOpen = () => createSelector(\n    makeSelectClassesPageState(),\n    (substate) => substate.assignWorkSheetsModalOpen\n);\n\nconst makeSelectCalendarRows = () => createSelector(\n    makeSelectClassesPageState(),\n    (substate) => substate.calendarRows\n)\n\nexport default selectClassesDomain;\nexport {\n    makeSelectClassesPageState,\n    makeSelectAssignLessonsModalOpen,\n    makeSelectAssignWorkSheetsModalOpen,\n    makeSelectCalendarRows,\n}","const sampleClass = [\n  {\n    id: \"1\",\n    summary:{\n      amount_students:10,\n      start_date:\"6/1/19\",\n      end_date:\"8/5/19\",\n      improvement:123,\n      coursework_assigned:60,\n      coursework_completed:90,\n      problems_flagged_review:40,\n      average_score:1256,\n      achieved_target_score:85,\n      average_practice_tests_completed:1.8,\n      instruction:14,\n    },\n    accountInfo: {\n      lastName: 'manager',\n      firstName: 'Company',\n      email: 'test2@example.com',\n      gender: 'M',\n    },\n    contactInfo: {\n      phone: '1234567890',\n      streetAddress: '1234 Test Road',\n      city: 'Austin',\n      state: 'TX',\n      zip: '78751',\n    },\n  },\n  {\n    id: \"2\",\n    summary:{\n      amount_students:10,\n      start_date:\"6/1/19\",\n      end_date:\"8/5/19\",\n      improvement:223,\n      coursework_assigned:60,\n      coursework_completed:90,\n      problems_flagged_review:40,\n      average_score:1256,\n      achieved_target_score:85,\n      average_practice_tests_completed:1.8,\n      instruction:20,\n    },\n    accountInfo: {\n      lastName: 'Admin',\n      firstName: 'Company',\n      email: 'test2@example.com',\n      gender: 'M',\n    },\n    contactInfo: {\n      phone: '1234567890',\n      streetAddress: '1234 Test Road',\n      city: 'Austin',\n      state: 'TX',\n      zip: '78751',\n    },\n  },\n];\n\nexport default sampleClass;\n","const sampleClass = {\n  id: '1232',\n  active: true,\n  classAverages: {\n    questionsAnswered: '721',\n    flaggedProblems: '52.9',\n    timeLoggedIn: '273',\n    videoWatched: '443',\n    notesTaken: '57',\n    onTimePercentage: '75',\n  },\n  scoreImprovement: {\n    points: '201',\n    readingAndWriting: '82',\n    math: '119',\n    noGain: '32',\n    from0To50: '19',\n    from50To99: '60',\n    from100To149: '77',\n    from150To199: '62',\n    from200Plus: '91',\n  },\n  studentsWhoHave: {\n    overdueCoursework: [\n      {\n        name: 'Bob Smith',\n        overdueAssignments: '13',\n      },\n      {\n        name: 'John Joe',\n        overdueAssignments: '5',\n      },\n      {\n        name: 'Tim Bob',\n        overdueAssignments: '11',\n      },\n      {\n        name: 'Chris Smith',\n        overdueAssignments: '33',\n      },\n      {\n        name: 'Arnold Jackson',\n        overdueAssignments: '7',\n      },\n      {\n        name: 'Alfred Fredson',\n        overdueAssignments: '2',\n      },\n      {\n        name: 'Fred Hampton',\n        overdueAssignments: '8',\n      },\n      {\n        name: 'Jeff Smith',\n        overdueAssignments: '3',\n      },\n    ],\n    flaggedProblems: [\n      {\n        name: 'Tim Bob',\n        flaggedProblems: '11',\n      },\n      {\n        name: 'Chris Smith',\n        flaggedProblems: '33',\n      },\n      {\n        name: 'Arnold Jackson',\n        flaggedProblems: '7',\n      },\n      {\n        name: 'Alfred Fredson',\n        flaggedProblems: '2',\n      },\n    ],\n    fewerThan2PracticeTests: [\n      {\n        name: 'Alfred Fredson',\n        fewerThan2PracticeTests: '2',\n      },\n      {\n        name: 'Fred Hampton',\n        fewerThan2PracticeTests: '8',\n      },\n      {\n        name: 'Jeff Smith',\n        fewerThan2PracticeTests: '3',\n      },\n    ],\n  },\n  strengthsAndWeaknesses: {\n    reading: {\n      correctAnswers: '32',\n      totalAnswers: '52',\n    },\n    writing: {\n      correctAnswers: '35',\n      totalAnswers: '52',\n    },\n    math: {\n      correctAnswers: '37',\n      totalAnswers: '52',\n    },\n  },\n};\n\nexport default sampleClass;\n","export default [\n  {\n    id: 1,\n    subject: 'Math',\n    version: 'SAT Practice #2',\n    availableDate: '12/15/19',\n    dueDate: '12/17/19',\n    status: 'Exemplary',\n    problems: 15,\n    timeEstimate: '23',\n    percentageComplete: '100',\n    flags: [{}, {}, {}],\n    disabled: false,\n  },\n  {\n    id: 2,\n    subject: 'Writing',\n    version: 'SAT Practice #4',\n    availableDate: '03/21/19',\n    dueDate: '05/31/19',\n    status: 'Developing',\n    problems: 21,\n    timeEstimate: '41',\n    percentageComplete: '86',\n    flags: [],\n    disabled: false,\n  },\n  {\n    id: 3,\n    subject: 'Reading',\n    version: 'SAT Practice #1',\n    availableDate: '04/01/19',\n    dueDate: '06/12/19',\n    status: 'Assigned',\n    problems: 42,\n    timeEstimate: '57',\n    percentageComplete: '0',\n    flags: [],\n    disabled: true,\n  },\n  {\n    id: 4,\n    subject: 'Writing',\n    version: 'SAT Practice #6',\n    availableDate: '07/11/19',\n    dueDate: '07/13/19',\n    status: 'Developing',\n    problems: 17,\n    timeEstimate: '21',\n    percentageComplete: '72',\n    flags: [{}],\n    disabled: false,\n  },\n  {\n    id: 5,\n    subject: 'Math',\n    version: 'SAT Practice #5',\n    availableDate: '04/02/19',\n    dueDate: '04/16/19',\n    status: 'Exemplary',\n    problems: 16,\n    timeEstimate: '41',\n    percentageComplete: '47',\n    flags: [],\n    disabled: false,\n  },\n];\n","const sortByOptions = [\n  {\n    label: 'Available On Date',\n    value: 'availableDate',\n  },\n  {\n    label: 'Due Date',\n    value: 'dueDate',\n  },\n  {\n    label: 'Problems',\n    value: 'problems',\n  },\n  {\n    label: 'Time Estimate',\n    value: 'timeEstimate',\n  },\n  {\n    label: 'Status',\n    value: 'status',\n  },\n  {\n    label: 'Subject',\n    value: 'subject',\n  },\n  {\n    label: 'Flags',\n    value: 'flags',\n  },\n  {\n    label: 'Percentage Complete',\n    value: 'percentageComplete',\n  },\n];\n\nexport const availableDateSort = ({ availableDate: availableDateA }, { availableDate: availableDateB }) => {\n  if (availableDateA > availableDateB) { return -1; }\n  return 0;\n}\n\nexport const dueDateSort = ({ dueDate: dueDateA }, { dueDate: dueDateB }) => {\n  if (dueDateA > dueDateB) { return -1; }\n  return 0;\n}\n\nexport const statusSort = ({ status: statusA }, { status: statusB }) => {\n  if (statusA > statusB) { return -1; }\n  return 0;\n}\n\nexport const flagsSort = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA > flagsB) { return -1; }\n  return 0;\n}\n\nexport const problemSort = ({ problems: problemCountA }, { problems: problemCountB }) => {\n  if (problemCountA > problemCountB) { return -1; }\n  return 0;\n}\n\nexport const timeEstimateSort = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA > timeEstimateB) { return -1; }\n  return 0;\n}\n\nexport const subjectSort = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA > subjectB) { return -1; }\n  return 0;\n}\n\nexport const percentageCompleteSort = ({ percentageComplete: percentageCompleteA }, { percentageComplete: percentageCompleteB }) => {\n  if (percentageCompleteA > percentageCompleteB) { return -1; }\n  return 0;\n}\n\nexport default sortByOptions;\n","export const data = (percentage, status) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      graphColorMap[status],\n      '#eaeaea',\n    ],\n  }],\n});\n\nexport const subjectMap = {\n  'Math': 'Math (calculator)',\n  'Writing': 'Writing',\n  'Reading': 'Reading',\n};\n\nexport const testSectionCardColorMap = {\n  'Developing': 'badge badge-rounded-md purple white-text',\n  'Assigned': 'badge badge-rounded-md purple white-text',\n  'Exemplary': 'badge badge-rounded-md blue accent-4 white-text',\n}\n\nexport const graphColorMap = {\n  'Developing': '#c10078',\n  'Assigned': '#c10078',\n  'Exemplary': '#0064f4',\n}\n\nexport const testSectionSubjectMap = {\n  'Reading': 'reading',\n  'Writing': 'writing',\n  'Math': 'math',\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ClickOffComponentWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      if (this.props.nestedModals) {\n        return;\n      }\n      this.props.onOuterClick();\n    }\n  }\n\n  render() {\n    return <div className={this.props.className} ref={this.setWrapperRef}>{this.props.children}</div>;\n  }\n}\n\nClickOffComponentWrapper.propTypes = {\n  children: PropTypes.any,\n  onOuterClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  nestedModals: PropTypes.bool,\n};\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport { getCalendarCellClassName, getCalendarDayClassName } from '../../utils/dateAndCalendarUtils';\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'inherit',\n});\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass CalendarDate extends React.Component {\n  render() {\n    const { date, dayDate, calDate, inMonth, hasEvents, isActiveDate, inActiveColumn, addDropdownOpen,\n      onSetActiveDate, shouldMapLessons, shouldMapSessions, deleteDropdownOpen, onToggleAddDropdown,\n      shouldMapWorksheets, shouldMapTestSections, onToggleDeleteDropdown, shouldMapSimulatedSats,\n      activeDateKey, mapDateSessions, mapDateLessons, mapDateWorksheets, mapTestSections, mapSimulatedSats,\n      toggleAssignSessionModal, toggleAssignLessonsModal, toggleAssignWorksheetsModal,\n      toggleAssignTestSectionModal, toggleAssignSimulatedSatModal,\n      sessions, lessons, worksheets, testSections, simulatedSat,\n     } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When condition={!inMonth}>\n            <td className=\"cal-cell1 cal-cell cal-day-outmonth\" key={dayDate}>\n              <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n                <span className=\"day-date\">{dayDate}</span>\n                <span className=\"cal-date\">{calDate}</span>\n              </div>\n            </td>\n          </When>\n          <Otherwise>\n            <td key={activeDateKey} className={getCalendarCellClassName(hasEvents, inActiveColumn)} onClick={() => onSetActiveDate(activeDateKey)}>\n              <Droppable droppableId={`droppable-${date}`}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n                      <span className=\"day-date\">{dayDate}</span>\n                      <span className=\"cal-date\">{calDate}</span>\n                      <ul className=\"day-collapsible collapsible\">\n                        <li className={isActiveDate ? 'collapsible-holder active' : 'collapsible-holder'} style={{ transform: 'none' }}>\n                          <div className=\"collapsible-header\" style={{ display: inActiveColumn && isActiveDate ? 'none' : 'block'}}>\n                            <span className=\"fake-close\"><span className=\"icon-close-thin\"></span></span>\n                            <If condition={hasEvents}>\n                              <ul className=\"events-list events-list-short\">\n                                <If condition={shouldMapSessions}>\n                                  <li className=\"event-frame event-title\">\n                                    <span className=\"event-title-box\">Session {sessions.length}</span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapLessons}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-lesson-box\"> {lessons.length} <span className=\"event-text\">Lesson{lessons.length > 1 && 's'}</span></span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapWorksheets}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-worksheet-box\">{worksheets.length} <span className=\"event-text\">Worksheet{worksheets.length > 1 && 's'}</span></span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapTestSections}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-test-box\">{testSections.length} <span className=\"event-text\">Test Section{testSections.length > 1 && 's'}</span></span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapSimulatedSats}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-sat-box\">{simulatedSat.length} <span className=\"event-text\">Simulated SAT</span></span>\n                                  </li>\n                                </If>\n                              </ul>\n                            </If>\n                          </div>\n                          <div className=\"collapsible-body\" style={{ opacity: inActiveColumn && isActiveDate ? '1' : '0', visibility: inActiveColumn ? 'visible' : 'hidden' }}>\n                            <If condition={hasEvents}>\n                              <ul className=\"events-list\">\n                                {mapDateSessions(shouldMapSessions, sessions)}\n                                {mapDateLessons(shouldMapLessons, lessons)}\n                                {mapDateWorksheets(shouldMapWorksheets, worksheets)}\n                                {mapTestSections(shouldMapTestSections, testSections)}\n                                {mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)}\n                              </ul>\n                            </If>\n                            <div className=\"day-footer\">\n                              <ul className=\"links-list\">\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    data-target='dropdown_day_240119_add'\n                                    onClick={onToggleAddDropdown}\n                                    className=\"link-add dropdown-trigger waves-effect waves-teal\"\n                                  >\n                                    Add\n                                  </a>\n                                  <ul\n                                    id='dropdown_day_240119_add'\n                                    className='dropdown-content'\n                                    style={{ display: addDropdownOpen ? 'block' : 'none', opacity: addDropdownOpen ? '100' : '0' }}\n                                  >\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignSessionModal(event, date)} className=\"modal-trigger\">Session</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignLessonsModal(event, date)} className=\"modal-trigger\">Lesson</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignWorksheetsModal(event, date)} className=\"modal-trigger\">Worksheet</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignTestSectionModal(event, date)} className=\"modal-trigger\">Test Section</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignSimulatedSatModal(event, date)} className=\"modal-trigger\">Simulated SAT</a></li>\n                                  </ul>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    data-target='dropdown_day_240119_delete'\n                                    onClick={onToggleDeleteDropdown}\n                                    className=\"link-delete dropdown-trigger waves-effect waves-teal\"\n                                  >\n                                    Delete\n                                  </a>\n                                  <ul\n                                    id='dropdown_day_240119_delete'\n                                    className='dropdown-content'\n                                    style={{ display: deleteDropdownOpen ? 'block' : 'none', opacity: deleteDropdownOpen ? '100' : '0' }}\n                                  >\n                                    <li><a href=\"#modal_edit_delete_section\" className=\"modal-trigger\">Session</a></li>\n                                    <li><a href=\"#modal_edit_delete_lesson\" className=\"modal-trigger\">Lesson</a></li>\n                                    <li><a href=\"#modal_edit_delete_worksheet\" className=\"modal-trigger\">Worksheet</a></li>\n                                    <li><a href=\"#modal_edit_delete_test_section\" className=\"modal-trigger\">Test Section</a></li>\n                                    <li><a href=\"#!\" className=\"disabled\">Simulated SAT</a></li>\n                                    <li><a href=\"#!\" className=\"disabled\">Target Test</a></li>\n                                    <li><a href=\"#!\">All</a></li>\n                                  </ul>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                          </li>\n                        </ul>\n                    </div>\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </td>\n          </Otherwise>\n        </Choose>\n      </React.Fragment>\n    )\n  }\n};\n\nCalendarDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  inMonth: PropTypes.bool.isRequired,\n  dayDate: PropTypes.string.isRequired,\n  calDate: PropTypes.number.isRequired,\n  hasEvents: PropTypes.bool.isRequired,\n  lessons: PropTypes.array.isRequired,\n  sessions: PropTypes.array.isRequired,\n  worksheets: PropTypes.array.isRequired,\n  testSections: PropTypes.array.isRequired,\n  simulatedSat: PropTypes.array.isRequired,\n  isActiveDate: PropTypes.bool.isRequired,\n  inActiveColumn: PropTypes.bool.isRequired,\n  activeDateKey: PropTypes.string.isRequired,\n  addDropdownOpen: PropTypes.bool.isRequired,\n  onSetActiveDate: PropTypes.func.isRequired,\n  mapDateLessons: PropTypes.func.isRequired,\n  mapDateSessions: PropTypes.func.isRequired,\n  mapTestSections: PropTypes.func.isRequired,\n  mapSimulatedSats: PropTypes.func.isRequired,\n  mapDateWorksheets: PropTypes.func.isRequired,\n  deleteDropdownOpen: PropTypes.bool.isRequired,\n  onToggleAddDropdown: PropTypes.func.isRequired,\n  onToggleDeleteDropdown: PropTypes.func.isRequired,\n  toggleAssignSessionModal: PropTypes.func.isRequired,\n  toggleAssignLessonsModal: PropTypes.func.isRequired,\n  toggleAssignWorksheetsModal: PropTypes.func.isRequired,\n  toggleAssignTestSectionModal: PropTypes.func.isRequired,\n  toggleAssignSimulatedSatModal: PropTypes.func.isRequired,\n  shouldMapLessons: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapSessions: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapWorksheets: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapTestSections: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapSimulatedSats: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n}\n\nexport default CalendarDate;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CalendarArrow = ({ calendarMap, activeMonth, onClick, direction }) => (\n  <div onClick={onClick} className={direction === \"next\" ? \"slick-arrow slick-next\" : \"slick-arrow slick-prev\"}>\n    {direction === \"next\" ? calendarMap[activeMonth + 2] : calendarMap[activeMonth]}\n  </div>\n)\n\nCalendarArrow.propTypes = {\n  onClick: PropTypes.func,\n  direction: PropTypes.string.isRequired,\n  activeMonth: PropTypes.number.isRequired,\n  calendarMap: PropTypes.object.isRequired,\n};\n\nexport default CalendarArrow;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\n\nimport CalendarArrow from './components/CalendarArrow';\n\nimport { calendarMap, currentMonthIndex } from '../../utils/dateAndCalendarUtils';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass CalendarHeader extends React.Component {\n  render() {\n    const { activeMonth, onSetActiveMonth } = this.props;\n    return (\n      <div className=\"calendar-header\" style={{ zIndex: '9' }}>\n        <div className=\"calendar-view-switcher\">\n          <ul className=\"switcher\">\n            <li className=\"active col\" data-view=\"view-month\"><a href=\"#\">Month View</a></li>\n            <li className=\"col\" data-view=\"view-day\"><a href=\"#\">Day View</a></li>\n          </ul>\n        </div>\n        <div className=\"nav-slick-calendar\" style={{ opacity: '1' }}>\n          <Slider\n          {\n            ...{\n              dots: false,\n              infinite: true,\n              speed: 500,\n              slidesToShow: 1,\n              slidesToScroll: 1,\n              initialSlide: currentMonthIndex,\n              onInit: () => onSetActiveMonth(currentMonthIndex),\n              afterChange: onSetActiveMonth,\n              nextArrow: <CalendarArrow direction=\"next\" calendarMap={calendarMap} activeMonth={activeMonth} />,\n              prevArrow: <CalendarArrow direction=\"previous\" calendarMap={calendarMap} activeMonth={activeMonth} />,\n            }\n          }>\n            <div className=\"slide\">January</div>\n            <div className=\"slide\">February</div>\n            <div className=\"slide\">March</div>\n            <div className=\"slide\">April</div>\n            <div className=\"slide\">May</div>\n            <div className=\"slide\">June</div>\n            <div className=\"slide\">July</div>\n            <div className=\"slide\">August</div>\n            <div className=\"slide\">September</div>\n            <div className=\"slide\">October</div>\n            <div className=\"slide\">November</div>\n            <div className=\"slide\">December</div>\n          </Slider>\n        </div>\n      </div>\n    );\n  }\n}\n\nCalendarHeader.propTypes = {\n  activeMonth: PropTypes.number.isRequired,\n  onSetActiveMonth: PropTypes.func.isRequired,\n}\n\nexport default CalendarHeader;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport CalendarDate from '../CalendarDate';\n\nclass CalendarRow extends React.Component {\n  toggleAssignSessionModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignSessionModal, onToggleAddDropdown } = this.props;\n    onToggleAssignSessionModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignLessonsModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignLessonsModal, onToggleAddDropdown } = this.props;\n    onToggleAssignLessonsModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignWorksheetsModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignWorksheetsModal, onToggleAddDropdown } = this.props;\n    onToggleAssignWorksheetsModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignTestSectionModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignTestSectionModal, onToggleAddDropdown } = this.props;\n    onToggleAssignTestSectionModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignSimulatedSatModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignSimulatedSatModal, onToggleAddDropdown } = this.props;\n    onToggleAssignSimulatedSatModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  mapDateSessions = (shouldMapSessions, sessions) => {\n    if (shouldMapSessions) {\n      return sessions.map((session, index) => (\n        <li className=\"event-frame\" key={index}>\n          <Draggable\n            key={index}\n            index={index}\n            draggableId={`sessions-${session.date}-${index}`}\n            style={{ userSelect: 'none' }}\n          >\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                <span className=\"event-title-box\">{session.title}</span>\n              </div>\n            )}\n          </Draggable>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapDateLessons = (shouldMapLessons, lessons) => {\n    if (shouldMapLessons) {\n      return lessons.map((lesson, index) => (\n        <li className=\"event-frame\" key={index}>\n          <Draggable\n            key={index}\n            index={index}\n            draggableId={`lessons-${lesson.date}-${index}`}\n            style={{ userSelect: 'none' }}\n          >\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                <React.Fragment>\n                  {lesson.completed && <span className=\"event-check lesson-check\"><i className=\"icon-check02\"></i></span>}\n                  <span className=\"event event-lesson-box\">{lesson.title}</span>\n                </React.Fragment>\n              </div>\n            )}\n          </Draggable>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapDateWorksheets = (shouldMapWorksheets, worksheets) => {\n    if (shouldMapWorksheets) {\n      return worksheets.map((worksheet, index) => (\n        <li className=\"event-frame\" key={index}>\n          <Draggable\n            key={index}\n            index={index}\n            draggableId={`worksheets-${worksheet.date}-${index}`}\n            style={{ userSelect: 'none' }}\n          >\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                <React.Fragment>\n                  {worksheet.completed && <span className=\"event-check worksheet-check\"><i className=\"icon-check02\"></i></span>}\n                  <span className=\"event event-worksheet-box\">{worksheet.title}</span>\n                </React.Fragment>\n              </div>\n            )}\n          </Draggable>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapTestSections = (shouldMapTestSections, testSections) => {\n    if (shouldMapTestSections) {\n      return testSections.map((testSection, index) => (\n        <li className=\"event-frame\" key={index}>\n          <Draggable\n            key={index}\n            index={index}\n            draggableId={`testSections-${testSection.date}-${index}`}\n            style={{ userSelect: 'none' }}\n          >\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n              >\n                <span className=\"event event-test-box\">Test Section: {testSection.version}</span>\n              </div>\n            )}\n          </Draggable>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapSimulatedSats = (shouldMapSimulatedSats, simulatedSat) => {\n    if (shouldMapSimulatedSats) {\n      return simulatedSat.map((sat, index) => (\n        <li className=\"event-frame\" key={index}>\n          <Draggable\n            key={index}\n            index={index}\n            draggableId={`simulatedSat-${sat.date}-${index}`}\n          >\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.dragHandleProps}\n                {...provided.dragHandleProps}\n              >\n                <span className=\"event event-sat-box\">{sat.version}</span>\n              </div>\n            )}\n          </Draggable>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapRowDates = () => this.props.rows && this.props.rows.map(rowDate => {\n    const { eventFilters, activeDate, addDropdownOpen, deleteDropdownOpen, onSetActiveDate, onToggleAddDropdown, onToggleDeleteDropdown, activeColumn } = this.props;\n    const { date, dayDate, calDate, activeDateKey, inMonth, sessions = [], lessons = [], worksheets = [], testSections = [], simulatedSat = [] } = rowDate;\n    const hasEvents = sessions.length > 0 || lessons.length > 0 || worksheets.length > 0 || testSections.length > 0 || simulatedSat.length > 0;\n    const inActiveColumn = activeDateKey && activeDateKey[13] === activeColumn;\n    const isActiveDate = activeDate === activeDateKey;\n    const hasEventFilters = eventFilters.length > 0;\n\n    const shouldMapSessions = (!hasEventFilters && sessions.length) || (sessions.length > 0 && hasEventFilters && eventFilters.indexOf('sessions') !== -1);\n    const shouldMapLessons = (!hasEventFilters && lessons.length) || (lessons.length > 0 && hasEventFilters && eventFilters.indexOf('lessons') !== -1);\n    const shouldMapWorksheets = (!hasEventFilters && worksheets.length) || (worksheets.length > 0 && hasEventFilters && eventFilters.indexOf('worksheets') !== -1);\n    const shouldMapTestSections = (!hasEventFilters && testSections.length) || (testSections.length > 0 && hasEventFilters && eventFilters.indexOf('testSections') !== -1);\n    const shouldMapSimulatedSats = (!hasEventFilters && simulatedSat.length) || (simulatedSat.length > 0 && hasEventFilters && eventFilters.indexOf('simulatedSats') !== -1);\n    return (\n      <CalendarDate\n        sessions={sessions}\n        lessons={lessons}\n        worksheets={worksheets}\n        testSections={testSections}\n        simulatedSat={simulatedSat}\n        key={date}\n        date={date}\n        dayDate={dayDate}\n        calDate={calDate}\n        inMonth={inMonth}\n        hasEvents={hasEvents}\n        isActiveDate={isActiveDate}\n        activeDateKey={activeDateKey}\n        inActiveColumn={inActiveColumn}\n        addDropdownOpen={addDropdownOpen}\n        onSetActiveDate={onSetActiveDate}\n        shouldMapLessons={shouldMapLessons}\n        shouldMapSessions={shouldMapSessions}\n        deleteDropdownOpen={deleteDropdownOpen}\n        onToggleAddDropdown={onToggleAddDropdown}\n        shouldMapWorksheets={shouldMapWorksheets}\n        shouldMapTestSections={shouldMapTestSections}\n        onToggleDeleteDropdown={onToggleDeleteDropdown}\n        shouldMapSimulatedSats={shouldMapSimulatedSats}\n        mapDateSessions={this.mapDateSessions}\n        mapDateLessons={this.mapDateLessons}\n        mapDateWorksheets={this.mapDateWorksheets}\n        mapTestSections={this.mapTestSections}\n        mapSimulatedSats={this.mapSimulatedSats}\n        toggleAssignSessionModal={this.toggleAssignSessionModal}\n        toggleAssignLessonsModal={this.toggleAssignLessonsModal}\n        toggleAssignWorksheetsModal={this.toggleAssignWorksheetsModal}\n        toggleAssignTestSectionModal={this.toggleAssignTestSectionModal}\n        toggleAssignSimulatedSatModal={this.toggleAssignSimulatedSatModal}\n      />\n    );\n  }\n)\n\n  render() {\n    return (\n      <tr className=\"cal-row-fluid\">\n        {this.mapRowDates()}\n      </tr>\n    )\n  }\n}\n\nCalendarRow.propTypes = {\n  activeDate: PropTypes.string,\n  activeColumn: PropTypes.string,\n  rows: PropTypes.array.isRequired,\n  eventFilters: PropTypes.array.isRequired,\n  onSetActiveDate: PropTypes.func.isRequired,\n  addDropdownOpen: PropTypes.bool.isRequired,\n  deleteDropdownOpen: PropTypes.bool.isRequired,\n  onToggleAddDropdown: PropTypes.func.isRequired,\n  onToggleDeleteDropdown: PropTypes.func.isRequired,\n  onToggleAssignSessionModal: PropTypes.func.isRequired,\n  onToggleAssignLessonsModal: PropTypes.func.isRequired,\n  onToggleAssignWorksheetsModal: PropTypes.func.isRequired,\n  onToggleAssignTestSectionModal: PropTypes.func.isRequired,\n  onToggleAssignSimulatedSatModal: PropTypes.func.isRequired,\n}\n\nexport default CalendarRow;","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  render() {\n    const { open } = this.state;\n    const { filters, eventFilters, onClearFilters, handleFilterClick } = this.props;\n    return (\n      <div className=\"calendar-filter filter-form-holder\">\n        <ul className=\"collapsible expandable\" style={{ minHeight: '0' }}>\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"className\"\n                      name=\"className\"\n                      checked={filters.indexOf('className') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"className\">Some Class Name</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"tutoring\"\n                      name=\"tutoring\"\n                      checked={filters.indexOf('tutoring') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"tutoring\">Tutoring</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"sessions\"\n                      name=\"sessions\"\n                      checked={eventFilters.indexOf('sessions') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name, true)}\n                    />\n                    <label htmlFor=\"sessions\">Sessions</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"lessons\"\n                      name=\"lessons\"\n                      checked={eventFilters.indexOf('lessons') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name, true)}\n                    />\n                    <label htmlFor=\"lessons\">Lessons</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"worksheets\"\n                      name=\"worksheets\"\n                      checked={eventFilters.indexOf('worksheets') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name, true)}\n                    />\n                    <label htmlFor=\"worksheets\">Worksheets</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"testSections\"\n                      name=\"testSections\"\n                      checked={eventFilters.indexOf('testSections') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name, true)}\n                    />\n                    <label htmlFor=\"testSections\">Test Sections</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"simulatedSats\"\n                      name=\"simulatedSats\"\n                      checked={eventFilters.indexOf('simulatedSats') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name, true)}\n                    />\n                    <label htmlFor=\"simulatedSats\">Simulated SATs</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"targetTests\"\n                      name=\"targetTests\"\n                      checked={eventFilters.indexOf('targetTests') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name, true)}\n                    />\n                    <label htmlFor=\"targetTests\">Target Tests</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      name=\"dueToday\"\n                      checked={filters.indexOf('dueToday') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      name=\"dueNextSession\"\n                      checked={filters.indexOf('dueNextSession') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      name=\"dueThisWeek\"\n                      checked={filters.indexOf('dueThisWeek') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      name=\"overdue\"\n                      checked={filters.indexOf('overdue') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      name=\"complete\"\n                      checked={filters.indexOf('complete') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"incomplete\"\n                      name=\"incomplete\"\n                      checked={filters.indexOf('incomplete') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"incomplete\">Incomplete</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"future\"\n                      name=\"future\"\n                      checked={filters.indexOf('future') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"future\">Future</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      name=\"reading\"\n                      checked={filters.indexOf('reading') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      name=\"writing\"\n                      checked={filters.indexOf('writing') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      name=\"math\"\n                      checked={filters.indexOf('math') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"beginning\"\n                      name=\"beginning\"\n                      checked={filters.indexOf('beginning') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"beginning\">Beginning</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"developing\"\n                      name=\"developing\"\n                      checked={filters.indexOf('developing') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"developing\">Developing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"accomplished\"\n                      name=\"accomplished\"\n                      checked={filters.indexOf('accomplished') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"accomplished\">Accomplished</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"exemplary\"\n                      name=\"exemplary\"\n                      checked={filters.indexOf('exemplary') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"exemplary\">Exemplary</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      name=\"hasReviewFlags\"\n                      checked={filters.indexOf('hasReviewFlags') !== -1}\n                      onChange={({ target }) => handleFilterClick(target.name)}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-flex-end\">\n              <div className=\"col s12 l8\"></div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span className=\"collapsible-header\" onClick={this.onToggleShowFilters}>\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  filters: PropTypes.array.isRequired,\n  eventFilters: PropTypes.array.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n};\n\nexport default FilterSection;","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../../utils/getValueFromState';\n\nconst sortByOptions = [\n  {\n    label: 'Page Number',\n    value: 'pageNumber',\n  },\n  {\n    label: 'Problems',\n    value: 'problems',\n  },\n  {\n    label: 'Time Estimate',\n    value: 'timeEstimate',\n  },\n  {\n    label: 'Subject',\n    value: 'subject',\n  },\n];\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      titleFilter: '',\n      unitFilter: '',\n    }\n  };\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onClearFilters = () => this.setState({ titleFilter: '', unitFilter: '' }, this.props.onClearFilters)\n\n  handleSearchChange = ({ target }) => this.setState({ [target.name]: target.value })\n\n  submitSearchFilter = (searchType) => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    if (this.state[searchType] === '') {\n      onUnsetFilteredState(searchType);\n    }\n    const transformedTitle = this.state[searchType].replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(searchType, transformedTitle);\n  }\n\n  render() {\n    const { handleFilterClick, subjectFilters, typeFilters, sort, onSetSort } = this.props;\n    const { open, titleFilter, unitFilter } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\" style={{ minHeight: '0' }}>\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Reading\"\n                      name=\"Reading\"\n                      checked={subjectFilters.indexOf('Reading') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"Reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Writing\"\n                      name=\"Writing\"\n                      checked={subjectFilters.indexOf('Writing') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"Writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"Math\"\n                      name=\"Math\"\n                      checked={subjectFilters.indexOf('Math') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"Math\">Math</label>\n                  </li>\n                </ul>\n\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"challenge\"\n                      name=\"challenge\"\n                      checked={typeFilters.indexOf('challenge') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"challenge\">Challenge + Practice</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"homework\"\n                      name=\"homework\"\n                      checked={typeFilters.indexOf('homework') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"homework\">Homework Drill</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"readingFromWorkbook\"\n                      name=\"readingFromWorkbook\"\n                      checked={typeFilters.indexOf('readingFromWorkbook') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"readingFromWorkbook\">Reading from Workbook</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"titleFilter\"\n                      name=\"titleFilter\"\n                      className=\"input-control validate\"\n                      value={titleFilter}\n                      onChange={this.handleSearchChange}\n                    />\n                    <button type=\"submit\" onClick={() => this.submitSearchFilter('titleFilter')} className=\"search-button\"><i className=\"icon-search\"></i></button>\n                    <label className={titleFilter.length ? 'label active' : 'label'} htmlFor=\"titleFilter\">Search By Title</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"unitFilter\"\n                      name=\"unitFilter\"\n                      className=\"input-control validate\"\n                      value={unitFilter}\n                      onChange={this.handleSearchChange}\n                    />\n                    <button type=\"submit\" onClick={() => this.submitSearchFilter('unitFilter')} className=\"search-button\"><i className=\"icon-search\"></i></button>\n                    <label className={unitFilter.length ? 'label active' : 'label'} htmlFor=\"unitFilter\">Search By Unit</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 m6\">\n                    <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                      <Dropdown\n                        value={getValueFromState(sort, sortByOptions)}\n                        onChange={onSetSort}\n                        options={sortByOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li className=\"active\" data-view=\"view-full\"><a href=\"#\">Month View</a></li>\n                    <li data-view=\"view-list\"><a href=\"#\">Day View</a></li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  sort: PropTypes.string.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  typeFilters: PropTypes.array.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LessonCard extends React.Component {\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  editLesson = () => console.warn('Pending implementation of edit modal/functionality')\n  cloneLesson = () => console.warn('Pending implementation of clone lesson functionality')\n  showOwner = () => console.warn('Pending implementation of show owner functionality')\n  deleteLesson = () => console.warn('Pending implementation of delete lesson functionality')\n\n  render() {\n    const { lesson, selectedLessons, handleLessonClick, index, dropdownIndex, dropdownIsOpen } = this.props;\n    const { unit, title, subject, timeEstimate, problems, pageNumber, type } = lesson;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={selectedLessons.indexOf(lesson) !== -1}\n            onChange={() => handleLessonClick(lesson)}\n          />\n          <div className=\"checkbox-card card-main card-lesson-detail card-assigned card\">\n            <div className=\"card-panel\" style={{ backgroundColor: '#666', color: '#fff' }}>\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-books-l\"></i>\n                    <span className=\"text-icon\">Lesson</span>\n                  </span>\n                </div>\n                <div className=\"col s9\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small\">{unit}</div>\n                    <div className=\"text-large\">{title}</div>\n                    <div className=\"text-small\">Subject: {subject}</div>\n                  </div>\n                </div>\n                <div className=\"align-top col s1 right-align\">\n                  <div className=\"row icons-row\">\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        className='dropdown-trigger btn'\n                        data-target='dropdown_lesson_01'\n                        onClick={this.handleDropdownClick}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id='dropdown_lesson_01'\n                          className='dropdown-content dropdown-wide'\n                          style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li><a href=\"#\" onClick={this.editLesson} className=\"modal-trigger link-block\">Edit</a></li>\n                          <li><a href=\"#\" onClick={this.cloneLesson}>Clone</a></li>\n                          <li><a href=\"#\" onClick={this.showOwner}>Show Owner</a></li>\n                          <li><a href=\"#\" onClick={this.deleteLesson}>Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"chart-container\">\n                <div className=\"chart-holder\">\n                  <span className=\"svg-curved-bar\" data-values='{\"from\": 0, \"to\": 100, \"current\": 0}' data-duration=\"1\">\n                    {/* <!-- do not change path attribute \"d\" !!! --> */}\n                    <svg  width=\"110px\" height=\"110px\" viewBox=\" 0 0 110 110\">\n                      <path fill=\"none\" style={{ strokeWidth: '22', stroke: '#d6d6d6' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 1 1 95.8481890527072 71.35314804905443\"></path>\n                      <path data-dinamic fill=\"none\" style={{ strokeWidth: '22', stroke: '#62b771' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 0 1 14.151810947292809 71.35314804905443\"></path>\n                    </svg>\n                  </span>\n                  <span className=\"chart-value\" style={{ backgroundColor: '#4d4d4d' }}></span>\n                </div>\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Time Est:</dt>\n                    <dd>{timeEstimate} min</dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Problems:</dt>\n                    <dd>{problems}</dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"card-footer-row center-align\">\n                <div className=\"card-footer-holder\">\n                  <p>p.{pageNumber}  ({type})</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nLessonCard.propTypes = {\n  index: PropTypes.number,\n  dropdownIndex: PropTypes.number,\n  lesson: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  selectedLessons: PropTypes.array.isRequired,\n  handleLessonClick: PropTypes.func.isRequired,\n}\n\nexport default LessonCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport moment from 'moment';\n\nimport FilterSection from './components/FilterSection';\nimport LessonCard from './components/LessonCard';\nimport sampleLessons from '../../../utils/sampleLessons';\nimport { pageNumberSort, problemSort, timeEstimateSort, subjectSort } from '../../../utils/sortOptions';\n\nconst lessonTypeMap = {\n  'Challenge + Practice': 'challenge',\n  'Homework Drill': 'homework',\n  'Reading from Workbook': 'readingFromWorkbook',\n};\n\nclass AssignLessonModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      unitFilter: '',\n      titleFilter: '',\n      typeFilters: [],\n      subjectFilters: [],\n      selectedLessons: [],\n      lessons: sampleLessons,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      assignSelectedDropdownOpen: false,\n    };\n  }\n\n  onToggleAssignSelectedDropdown = () => this.setState(({ assignSelectedDropdownOpen }) => ({ assignSelectedDropdownOpen: !assignSelectedDropdownOpen }))\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  onResetModal = () => this.setState({ subjectFilters: [], typeFilters: [], sort: '' })\n  onSetSort = (sort) => this.setState({ sort })\n\n  onSetFilteredState = (titleFilter, value) => this.setState({ [titleFilter]: value })\n  onUnsetFilteredState = (titleFilter) => this.setState({ [titleFilter]: '' })\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n    this.onResetModal();\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortLessons = (lessons) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'pageNumber':\n        return lessons.sort(pageNumberSort);\n      case 'problems':\n        return lessons.sort(problemSort);\n      case 'timeEstimate':\n        return lessons.sort(timeEstimateSort);\n      case 'subject':\n        return lessons.sort(subjectSort);\n      default:\n        break;\n    }\n  }\n\n  onFilterByTitle = () => {\n    const { lessons, titleFilter } = this.state;\n    return lessons.reduce((finalArr, currentLesson) => {\n      const { title } = currentLesson;\n      const lessonString = title.replace(/\\s/g, \"\").toLowerCase();\n      if (lessonString.indexOf(titleFilter) !== -1 && finalArr.indexOf(currentLesson) === -1) {\n        finalArr.push(currentLesson);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByUnit = () => {\n    const { lessons, unitFilter } = this.state;\n    return lessons.reduce((finalArr, currentLesson) => {\n      const { unit } = currentLesson;\n      const lessonString = unit.replace(/\\s/g, \"\").toLowerCase();\n      if (lessonString.indexOf(unitFilter) !== -1 && finalArr.indexOf(currentLesson) === -1) {\n        finalArr.push(currentLesson);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterLessons = () => {\n    const { subjectFilters, typeFilters, lessons: allLessons } = this.state;\n    let lessons = allLessons;\n    if (subjectFilters.length) {\n      lessons = lessons.filter(lesson => subjectFilters.indexOf(lesson.subject) !== -1);\n    }\n    if (typeFilters.length) {\n      lessons = lessons.filter(lesson => typeFilters.indexOf(lessonTypeMap[lesson.type]) !== -1);\n    }\n    return lessons;\n  }\n\n  getMappableLessons = () => {\n    const { subjectFilters, typeFilters, sort, unitFilter, titleFilter, lessons } = this.state;\n    let mappableLessons = lessons;\n    if (titleFilter.length) {\n      mappableLessons = this.onFilterByTitle();\n    }\n    if (unitFilter.length) {\n      mappableLessons = this.onFilterByUnit();\n    }\n    if (subjectFilters.length || typeFilters.length) {\n      mappableLessons = this.onFilterLessons();\n    }\n    if (sort) {\n      return this.onSortLessons(mappableLessons);\n    }\n    return mappableLessons;\n  }\n\n  handleFilterClick = (filterType, filter) => {\n    const { subjectFilters: currentSubjectFilters, typeFilters: currentTypeFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'type':\n        modifiedFilterCurrentState = currentTypeFilters;\n        modifiedFilterName = 'typeFilters';\n        break;\n      default:\n        break;\n    }\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  handleLessonClick = (lesson) => {\n    const { selectedLessons } = this.state;\n    let modifiedLessons;\n    if (selectedLessons.indexOf(lesson) === -1) {\n      modifiedLessons = update(selectedLessons, {\n        $push: [lesson],\n      });\n    } else {\n      const lessonIndex = selectedLessons.indexOf(lesson);\n      modifiedLessons = update(selectedLessons, {\n        $splice: [[ lessonIndex, 1 ]],\n      });\n    }\n    this.setState({ selectedLessons: modifiedLessons });\n  }\n\n  assignLessons = (date) => {\n    const { onAssignLessons } = this.props;\n    const { selectedLessons } = this.state;\n    let assignDate;\n    switch (date) {\n      case 'today':\n        assignDate = moment().format('MM/DD/YY');\n        break;\n      case 'tomorrow':\n        assignDate = moment().add(1, 'days').format('MM/DD/YY');\n        break;\n      case 'nextSession':\n        break;\n      case 'customDate':\n        assignDate = '01/05/19';\n        break;\n      default:\n        break;\n    }\n    this.onToggleAssignSelectedDropdown();\n    this.onResetModal();\n    onAssignLessons(selectedLessons, assignDate);\n  }\n\n  mapLessons = () => this.getMappableLessons().map((lesson, index) => (\n    <LessonCard\n      lesson={lesson}\n      index={index}\n      key={lesson.id}\n      onSetDropdown={this.onSetDropdown}\n      onCloseDropdown={this.onCloseDropdown}\n      dropdownIndex={this.state.dropdownIndex}\n      dropdownIsOpen={this.state.dropdownIsOpen}\n      handleLessonClick={this.handleLessonClick}\n      selectedLessons={this.state.selectedLessons}\n    />\n  ))\n\n  render() {\n    const { open } = this.props;\n    const { assignSelectedDropdownOpen, subjectFilters, typeFilters, sort } = this.state;\n    return (\n      <div>\n        {open && (\n          <div className=\"wrapper\">\n              <div className=\"card-modal card-main card switcher-section grey lighten-3\" style = {{minWidth:\"100%\"}}>\n                <div className=\"header-row card-panel light-blue lighten-1 white-text\">\n                  <div className=\"card-panel-row row\">\n                    <div className=\"col s11\">\n                      <div className=\"d-flex\">\n                        <div className=\"icon-col\">\n                          <i className=\"icon-books-l\"></i>\n                        </div>\n                        <div className=\"card-panel-text\">\n                          <div className=\"text-large\">Assign Lessons</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col s1 right-align\">\n                      <div className=\"row icons-row\"><a href=\"#\" onClick={this.onCloseModal} className=\"modal-close close\"><i className=\"icon-close-thin\"></i></a></div>\n                    </div>\n                  </div>\n                </div>\n                <FilterSection\n                  sort={sort}\n                  typeFilters={typeFilters}\n                  subjectFilters={subjectFilters}\n                  onSetSort={this.onSetSort}\n                  onClearFilters={this.onResetModal}\n                  handleFilterClick={this.handleFilterClick}\n                  onSetFilteredState={this.onSetFilteredState}\n                  onUnsetFilteredState={this.onUnsetFilteredState}\n                />\n                <div className=\"card-content\">\n                  <div className=\"card-body\">\n                    <div className=\"result-row center-align\">\n                      <b className=\"result\"> - {this.getMappableLessons().length} results -</b>\n                    </div>\n                    <div className=\"checkboxes-section row d-flex-content card-width-322\">\n                      {this.mapLessons()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"add-btn-block\">\n                <a\n                  href=\"#\"\n                  onClick={this.onToggleAssignSelectedDropdown}\n                  data-target='dropdown_assign_selected_lessons'\n                  className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n                >\n                  <i className=\"material-icons\">add</i> Assign Selected\n                </a>\n                <ul\n                  className='dropdown-content'\n                  id='dropdown_assign_selected_lessons'\n                  style={{ display: assignSelectedDropdownOpen ? 'block' : '0', opacity: assignSelectedDropdownOpen ? '1' : '0' }}\n                >\n                  <li><a href=\"#\" onClick={() => this.assignLessons('today')}>For Today</a></li>\n                  <li><a href=\"#\" onClick={() => this.assignLessons('tomorrow')}>For Tomorrow</a></li>\n                  <li><a href=\"#\" onClick={() => this.assignLessons('nextSession')}>For Next Session</a></li>\n                  <li><a href=\"#\" onClick={() => this.assignLessons('customDate')}>For Date...</a></li>\n                </ul>\n              </div>\n          </div>\n        )}\n        <style jsx>\n          {`\n            .card-modal {\n              margin: 0;\n              border-radius: 6px;\n            }\n            .modal-custom {\n              opacity: 1;\n              visibility: visible;\n            }\n            .modal-footer {\n              background-color: white;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n\nAssignLessonModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAssignLessons: PropTypes.func.isRequired,\n};\n\nexport default AssignLessonModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nclass AssignSessionModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      startTime: '',\n      endTime: '',\n      notes: '',\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { modalDate } = this.props;\n    if (prevState.date === '' && modalDate) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ date: new Date(modalDate) });\n    }\n  }\n\n  onResetModal = () => this.setState({ date: '', startTime: '', endTime: '', notes: '' })\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n    this.onResetModal();\n  }\n\n  assignSession = () => {\n    const { onAssignSession } = this.props;\n    const { date: unformattedDate, startTime: unformattedStartTime, endTime: unformattedEndTime, notes } = this.state;\n    const date = moment(unformattedDate).format('MM/DD/YY');\n    const startTime = moment(unformattedStartTime).format('hh:mm');\n    const endTime = moment(unformattedEndTime).format('hh:mm');\n    onAssignSession({ date, startTime, endTime, notes, title: 'Session' });\n    this.onResetModal();\n  }\n\n  handleDetailsChange = ({ target }) => this.setState({ [target.name]: target.value })\n\n  handleDatePickerChange = (field, value) => this.setState({ [field]: value })\n\n  render() {\n    const { open } = this.props;\n    const { date, startTime, endTime, notes } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n              <div id=\"modal_assign_session\" className=\"modal modal-custom modal-calendar\">\n                <div className=\"card-modal card\">\n                  <div className=\"card-panel card-panel-title\" style={{ backgroundColor: '#14b04b', color: '#fff' }}>\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col\">\n                        <h2>\n                          <span className=\"heading-holder\">\n                            <i className=\"icon-clock2\"></i>\n                            <span className=\"heading-block\"> New Session</span>\n                          </span>\n                        </h2>\n                      </div>\n                      <div className=\"col right-align\">\n                        <a href=\"#!\" className=\"panel-link close modal-close\"><i className=\"icon-close-thin\"></i></a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-calendar\"></i>\n                            <DatePicker\n                              selected={date}\n                              className=\"full-width\"\n                              dateFormat=\"MM/dd/yy\"\n                              id=\"date\"\n                              name=\"date\"\n                              onChange={(event) => this.handleDatePickerChange('date', event)}\n                            />\n                            <label className={date ? 'label active' : 'label'} htmlFor=\"date\">Date</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-clock2\"></i>\n                            <DatePicker\n                              selected={startTime}\n                              showTimeSelect\n                              showTimeSelectOnly\n                              timeIntervals={15}\n                              dateFormat=\"h:mm aa\"\n                              timeCaption=\"Time\"\n                              id=\"startTime\"\n                              name=\"startTime\"\n                              onChange={(event) => this.handleDatePickerChange('startTime', event)}\n                            />\n                            <label className={startTime ? 'label active' : 'label'} htmlFor=\"startTime\">Start Time</label>\n                          </div>\n                        </div>\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-clock2\"></i>\n                            <DatePicker\n                              selected={endTime}\n                              showTimeSelect\n                              showTimeSelectOnly\n                              timeIntervals={15}\n                              dateFormat=\"h:mm aa\"\n                              timeCaption=\"Time\"\n                              id=\"endTime\"\n                              name=\"endTime\"\n                              onChange={(event) => this.handleDatePickerChange('endTime', event)}\n                            />\n                            <label className={endTime ? 'label active' : 'label'} htmlFor=\"endTime\">End Time</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"input-field input-field-textarea\">\n                            <textarea\n                              id=\"notes\"\n                              name=\"notes\"\n                              className=\"textarea-scroll\"\n                              cols=\"40\" rows=\"7\"\n                              value={notes}\n                              onChange={this.handleDetailsChange}\n                            />\n                            <label className={notes ? 'label active' : 'label'} htmlFor=\"notes\">Session Notes:</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer modal-footer-width\">\n                      <a href=\"#\" onClick={this.onCloseModal} className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\">Cancel</a>\n                      <a href=\"#\" onClick={this.assignSession} className=\"link-btn waves-effect waves-teal btn-flat\">Add Session</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n          {`\n            .overlay {\n              position: fixed;\n              background-color: rgba(0, 0, 0, 0.7);\n              top: 0;\n              right: 0;\n              bottom: 0;\n              left: 0;\n              z-index: 1999;\n            }\n            .card-modal {\n              margin: 0;\n              border-radius: 6px;\n            }\n            .modal {\n              display: block;\n              background-color: white;\n              position: absolute;\n              top: 10%;\n              right: 10%;\n              left: 10%;\n              box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n            }\n            .modal-custom {\n              opacity: 1;\n              visibility: visible;\n            }\n          `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nAssignSessionModal.propTypes = {\n  modalDate: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAssignSession: PropTypes.func.isRequired,\n};\n\nexport default AssignSessionModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\n\nconst sampleVersions = [\n  {\n    label: 'SAT Practice Test #1',\n    value: 'SAT Practice Test #1',\n  },\n  {\n    label: 'SAT Practice Test #2',\n    value: 'SAT Practice Test #2',\n  },\n  {\n    label: 'SAT Practice Test #3',\n    value: 'SAT Practice Test #3',\n  },\n];\n\nclass AssignSimulatedSatModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      version: '',\n      assignDate: '',\n      assignTime: '',\n      dueDate: '',\n      dueTime: '',\n      sections: [],\n      allowStudentToEnterAnswers: false,\n      includeScoreInImprovementMetrics: false,\n      timed: false,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { modalDate } = this.props;\n    if (prevState.assignDate === '' && modalDate) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ assignDate: new Date(modalDate) });\n    }\n  }\n\n  onResetModal = () => this.setState({ version: '', assignDate: '', assignTime: '', dueDate: '', dueTime: '', sections: [], allowStudentToEnterAnswers: false, includeScoreInImprovementMetrics: false, timed: false })\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n    this.onResetModal();\n  }\n\n  assignSimulatedSat = () => {\n    const { onAssignSimulatedSat } = this.props;\n    const { version, assignDate: unformattedAssignDate, assignTime: unformattedAssignTime, dueDate: unformattedDueDate, dueTime: unformattedDueTime, sections, allowStudentToEnterAnswers, includeScoreInImprovementMetrics, timed } = this.state;\n    const assignDate = moment(unformattedAssignDate).format('MM/DD/YY');\n    const assignTime = moment(unformattedAssignTime).format('hh:mm');\n    const dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n    const dueTime = moment(unformattedDueTime).format('hh:mm');\n    onAssignSimulatedSat({ version, assignDate, assignTime, dueDate, dueTime, sections, allowStudentToEnterAnswers, includeScoreInImprovementMetrics, timed });\n    this.onResetModal();\n  }\n\n  handleDetailsChange = (event, name = null) => {\n    if (event.target) {\n      const checkboxName = event.target.name;\n      const prevState = this.state[checkboxName]\n      this.setState({ [checkboxName]: !prevState });\n    } else {\n      this.setState({ [name]: event });\n    }\n  }\n\n  handleSectionsChange = (event) => {\n    const { sections } = this.state;\n    if (sections.indexOf(event.target.name) === -1) {\n      const updatedSections = update(sections, {\n        $push: [ event.target.name ],\n      });\n      this.setState({ sections: updatedSections });\n    } else {\n      const sectionIndex = sections.indexOf(event.target.name);\n      const updatedSections = update(sections, {\n        $splice: [[ sectionIndex, 1 ]],\n      });\n      this.setState({ sections: updatedSections });\n    }\n  }\n\n  handleDatePickerChange = (field, value) => this.setState({ [field]: value })\n\n  render() {\n    const { open } = this.props;\n    const { version, assignDate, assignTime, dueDate, dueTime, sections, allowStudentToEnterAnswers, includeScoreInImprovementMetrics, timed } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n              <div id=\"modal_assign_simulated_sat\" className=\"modal modal-custom modal-calendar\">\n                <div className=\"card-modal card\">\n                  <div className=\"card-panel card-panel-title\" style={{ backgroundColor: '#ec3330', color: '#fff' }}>\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col\">\n                        <h2>\n                          <span className=\"heading-holder\">\n                            <i className=\"icon-circles\"></i>\n                            <span className=\"heading-block\"> New Scored SAT Test</span>\n                          </span>\n                        </h2>\n                      </div>\n                      <div className=\"col right-align\">\n                        <a href=\"#\" onClick={this.onCloseModal} className=\"panel-link close modal-close\"><i className=\"icon-close-thin\"></i></a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                            <Dropdown\n                              value={getValueFromState(version, sampleVersions)}\n                              onChange={(event) => this.handleDetailsChange(event, 'version')}\n                              options={sampleVersions}\n                              name=\"version\"\n                              label=\"Version\"\n                              stateKey=\"version\"\n                              dropdownKey=\"version\"\n                            />\n\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-calendar\"></i>\n                            <DatePicker\n                              selected={assignDate}\n                              dateFormat=\"MM/dd/yy\"\n                              id=\"assignDate\"\n                              name=\"assignDate\"\n                              onChange={(event) => this.handleDatePickerChange('assignDate', event)}\n                            />\n                            <label className={assignDate ? 'label active' : 'label'} htmlFor=\"new_test_section_assign_date\">Assign For</label>\n                          </div>\n                        </div>\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-clock2\"></i>\n                            <DatePicker\n                              selected={assignTime}\n                              showTimeSelect\n                              showTimeSelectOnly\n                              timeIntervals={15}\n                              dateFormat=\"h:mm aa\"\n                              timeCaption=\"Time\"\n                              id=\"assignTime\"\n                              name=\"assignTime\"\n                              onChange={(event) => this.handleDatePickerChange('assignTime', event)}\n                            />\n                            <label className={assignTime ? 'label active' : 'label'} htmlFor=\"assignTime\">Time</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-calendar\"></i>\n                            <DatePicker\n                              selected={dueDate}\n                              dateFormat=\"MM/dd/yy\"\n                              id=\"dueDate\"\n                              name=\"dueDate\"\n                              onChange={(event) => this.handleDatePickerChange('dueDate', event)}\n                            />\n                            <label className={dueDate ? 'label active' : 'label'} htmlFor=\"dueDate\">Due (optional)</label>\n                          </div>\n                        </div>\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-clock2\"></i>\n                            <DatePicker\n                              selected={dueTime}\n                              showTimeSelect\n                              showTimeSelectOnly\n                              timeIntervals={15}\n                              dateFormat=\"h:mm aa\"\n                              timeCaption=\"Time\"\n                              id=\"dueTime\"\n                              name=\"dueTime\"\n                              onChange={(event) => this.handleDatePickerChange('dueTime', event)}\n                            />\n                            <label className={dueTime ? 'label active' : 'label'} htmlFor=\"dueTime\">Time</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <span className=\"card-subtitle\">Sections:</span>\n                          <div className=\"check-holder\">\n                            <div className=\"row mb-0\">\n                              <div className=\"col s6\">\n                                <p>\n                                  <label>\n                                    <input\n                                      type=\"checkbox\"\n                                      className=\"filled-in\"\n                                      name=\"Reading\"\n                                      id=\"reading\"\n                                      checked={sections.indexOf('Reading') !== -1}\n                                      onChange={this.handleSectionsChange}\n                                    />\n                                    <span>Reading</span>\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <input\n                                      type=\"checkbox\"\n                                      className=\"filled-in\"\n                                      name=\"Math (no calc)\"\n                                      id=\"mathNoCalc\"\n                                      checked={sections.indexOf('Math (no calc)') !== -1}\n                                      onChange={this.handleSectionsChange}\n                                    />\n                                    <span>Math (no calc)</span>\n                                  </label>\n                                </p>\n                              </div>\n                              <div className=\"col s6\">\n                                <p>\n                                  <label>\n                                    <input\n                                      type=\"checkbox\"\n                                      className=\"filled-in\"\n                                      name=\"Writing\"\n                                      id=\"writing\"\n                                      checked={sections.indexOf('Writing') !== -1}\n                                      onChange={this.handleSectionsChange}\n                                    />\n                                    <span>Writing</span>\n                                  </label>\n                                </p>\n                                <p>\n                                  <label>\n                                    <input\n                                      type=\"checkbox\"\n                                      className=\"filled-in\"\n                                      name=\"Math (calculator)\"\n                                      id=\"Math (calculator)\"\n                                      checked={sections.indexOf('Math (calculator)') !== -1}\n                                      onChange={this.handleSectionsChange}\n                                    />\n                                    <span>Math (calculator)</span>\n                                  </label>\n                                </p>\n                              </div>\n                            </div>\n                            <span className=\"card-note\">Note: scaled test scores may require combinations of sections</span>\n                          </div>\n                          <p>\n                            <label>\n                              <input\n                                type=\"checkbox\"\n                                className=\"filled-in\"\n                                name=\"allowStudentToEnterAnswers\"\n                                id=\"allowStudentToEnterAnswers\"\n                                checked={allowStudentToEnterAnswers}\n                                onChange={this.handleDetailsChange}\n                              />\n                              <span>Allow Student to Enter Answers</span>\n                            </label>\n                          </p>\n                          <p>\n                            <label>\n                              <input\n                                type=\"checkbox\"\n                                className=\"filled-in\"\n                                name=\"includeScoreInImprovementMetrics\"\n                                id=\"includeScoreInImprovementMetrics\"\n                                checked={includeScoreInImprovementMetrics}\n                                onChange={this.handleDetailsChange}\n                              />\n                              <span>Include Score in Improvement Metrics</span>\n                            </label>\n                          </p>\n                          <p>\n                            <label>\n                              <input\n                                type=\"checkbox\"\n                                className=\"filled-in\"\n                                name=\"timed\"\n                                id=\"timed\"\n                                checked={timed}\n                                onChange={this.handleDetailsChange}\n                              />\n                              <span>Timed</span>\n                            </label>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer modal-footer-width\">\n                      <a href=\"#\" onClick={this.onCloseModal} className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\">Cancel</a>\n                      <a href=\"#\" onClick={this.assignSimulatedSat} className=\"link-btn waves-effect waves-teal btn-flat\">Save</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n        {`\n          .overlay {\n            position: fixed;\n            background-color: rgba(0, 0, 0, 0.7);\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: 1999;\n          }\n          .card-modal {\n            margin: 0;\n            border-radius: 6px;\n          }\n          .modal {\n            display: block;\n            background-color: white;\n            position: absolute;\n            top: 10%;\n            right: 10%;\n            left: 10%;\n            box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n          }\n          .modal-custom {\n            opacity: 1;\n            visibility: visible;\n          }\n        `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nAssignSimulatedSatModal.propTypes = {\n  modalDate: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAssignSimulatedSat: PropTypes.func.isRequired,\n};\n\nexport default AssignSimulatedSatModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\n\nconst testDateOptions = [\n  {\n    label: 'January SAT (01/15/2019)',\n    value: '01/15/19',\n  },\n  {\n    label: 'January SAT (01/02/2019)',\n    value: '01/02/19',\n  },\n  {\n    label: 'January SAT (01/21/2019)',\n    value: '01/21/19',\n  },\n]\n\nclass AssignTargetTestModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testDate: '',\n    };\n  }\n\n  onSetTestDate = (testDate) => this.setState({ testDate })\n\n  onCloseModal = () => this.setState({ testDate: '' }, this.props.onClose)\n\n  assignTargetTest = () => {\n    const { onAssignTargetTest } = this.props;\n    const { testDate } = this.state;\n    onAssignTargetTest(testDate);\n    this.onCloseModal();\n  }\n\n  render() {\n    const { open } = this.props;\n    const { testDate } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n              <div id=\"modal_assign_target_test\" className=\"modal modal-custom modal-calendar\" style={{ zIndex: '1003', top: '10%' }}>\n                <div className=\"card-modal card\">\n                  <div className=\"card-panel card-panel-title\" style={{ backgroundColor: '#ec3330', color: '#fff' }}>\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col\">\n                        <h2>\n                          <span className=\"heading-holder\">\n                            <i className=\"icon-cup\"></i>\n                            <span className=\"heading-block\"> Set Target Test Date</span>\n                          </span>\n                        </h2>\n                      </div>\n                      <div className=\"col right-align\">\n                        <a href=\"#\" className=\"panel-link close modal-close\"><i className=\"icon-close-thin\"></i></a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                            <Dropdown\n                              value={getValueFromState(testDate, testDateOptions)}\n                              onChange={this.onSetTestDate}\n                              options={testDateOptions}\n                              label=\"Test Date\"\n                              stateKey=\"testDate\"\n                              dropdownKey=\"testDate\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <span className=\"note\">Note:</span>\n                          <p>If the student plans to take the SAT multiple times, you may schedule multiple “Target Test Dates.” Test score and improvement metrics will be based on the student’s score on the ﬁnal target test date.</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer modal-footer-width\">\n                      <a href=\"#\" onClick={this.onCloseModal} className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\">Cancel</a>\n                      <a href=\"#\" onClick={this.assignTargetTest} className=\"link-btn waves-effect waves-teal btn-flat\">Set Target Test Date</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n          {`\n            .overlay {\n              position: fixed;\n              background-color: rgba(0, 0, 0, 0.7);\n              top: 0;\n              right: 0;\n              bottom: 0;\n              left: 0;\n              z-index: 1999;\n            }\n            .card-modal {\n              margin: 0;\n              border-radius: 6px;\n            }\n            .modal-custom {\n              opacity: 1;\n              visibility: visible;\n            }\n            .modal-footer {\n              background-color: white;\n            }\n          `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nAssignTargetTestModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAssignTargetTest: PropTypes.func.isRequired,\n};\n\nexport default AssignTargetTestModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\n\nconst sampleVersions = [\n  {\n    label: 'SAT Practice Test #1',\n    value: 'SAT Practice Test #1',\n  },\n  {\n    label: 'SAT Practice Test #2',\n    value: 'SAT Practice Test #2',\n  },\n  {\n    label: 'SAT Practice Test #3',\n    value: 'SAT Practice Test #3',\n  },\n];\n\nconst sampleSections = [\n  {\n    label: 'Math (no calc)',\n    value: 'Math (no calc)',\n  },\n  {\n    label: 'Reading',\n    value: 'Reading',\n  },\n  {\n    label: 'Writing',\n    value: 'Writing',\n  },\n  {\n    label: 'Math (calculator)',\n    value: 'Math (calculator)',\n  },\n];\n\nclass AssignTestSectionModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      version: '',\n      section: '',\n      assignDate: '',\n      assignTime: '',\n      dueDate: '',\n      dueTime: '',\n      timed: false,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { modalDate } = this.props;\n    if (prevState.assignDate === '' && modalDate) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ assignDate: new Date(modalDate) });\n    }\n  }\n\n  onResetModal = () => this.setState({ version: '', section: '', assignDate: '', assignTime: '', dueDate: '', dueTime: '', timed: false })\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n    this.onResetModal();\n  }\n\n  assignTestSection = () => {\n    const { onAssignTestSection } = this.props;\n    const { version, section, assignDate: unformattedAssignDate, assignTime: unformattedAssignTime, dueDate: unformattedDueDate, dueTime: unformattedDueTime, timed } = this.state;\n    const assignDate = moment(unformattedAssignDate).format('MM/DD/YY');\n    const assignTime = moment(unformattedAssignTime).format('hh:mm');\n    const dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n    const dueTime = moment(unformattedDueTime).format('hh:mm');\n    onAssignTestSection({ version, section, assignDate, assignTime, dueDate, dueTime, timed });\n    this.onResetModal();\n  }\n\n  handleDetailsChange = (event, name = null) => {\n    if (event.target) {\n      this.setState(({ timed }) => ({ timed: !timed }));\n    } else {\n      this.setState({ [name]: event });\n    }\n  }\n\n  handleDatePickerChange = (field, value) => this.setState({ [field]: value })\n\n  render() {\n    const { open } = this.props;\n    const { version, section, assignDate, assignTime, dueDate, dueTime, timed } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n              <div id=\"modal_assign_test_section\" className=\"modal modal-custom modal-calendar\">\n                <div className=\"card-modal card\">\n                  <div className=\"card-panel card-panel-title\" style={{ backgroundColor: '#00638e', color: '#fff' }}>\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col\">\n                        <h2 className=\"h3\">\n                          <span className=\"heading-holder\">\n                            <i className=\"icon-assign-section\"></i>\n                            <span className=\"heading-block\"> Assign Test Section (as coursework)</span>\n                          </span>\n                        </h2>\n                      </div>\n                      <div className=\"col right-align\">\n                        <a href=\"#!\" onClick={this.onCloseModal} className=\"panel-link close modal-close\"><i className=\"icon-close-thin\"></i></a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                            <Dropdown\n                              value={getValueFromState(version, sampleVersions)}\n                              onChange={(event) => this.handleDetailsChange(event, 'version')}\n                              options={sampleVersions}\n                              name=\"version\"\n                              label=\"Version\"\n                              stateKey=\"version\"\n                              dropdownKey=\"version\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col s12\">\n                          <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                            <Dropdown\n                              value={getValueFromState(section, sampleSections)}\n                              onChange={(event) => this.handleDetailsChange(event, 'section')}\n                              options={sampleSections}\n                              name=\"section\"\n                              label=\"Section\"\n                              stateKey=\"section\"\n                              dropdownKey=\"section\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-calendar\"></i>\n                            <DatePicker\n                              selected={assignDate}\n                              dateFormat=\"MM/dd/yy\"\n                              id=\"assignDate\"\n                              name=\"assignDate\"\n                              onChange={(event) => this.handleDatePickerChange('assignDate', event)}\n                            />\n                            <label className={assignDate ? 'label active' : 'label'} htmlFor=\"new_test_section_assign_date\">Assign For</label>\n                          </div>\n                        </div>\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-clock2\"></i>\n                            <DatePicker\n                              selected={assignTime}\n                              showTimeSelect\n                              showTimeSelectOnly\n                              timeIntervals={15}\n                              dateFormat=\"h:mm aa\"\n                              timeCaption=\"Time\"\n                              id=\"assignTime\"\n                              name=\"assignTime\"\n                              onChange={(event) => this.handleDatePickerChange('assignTime', event)}\n                            />\n                            <label className={assignTime ? 'label active' : 'label'} htmlFor=\"assignTime\">Time</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-calendar\"></i>\n                            <DatePicker\n                              selected={dueDate}\n                              dateFormat=\"MM/dd/yy\"\n                              id=\"dueDate\"\n                              name=\"dueDate\"\n                              onChange={(event) => this.handleDatePickerChange('dueDate', event)}\n                            />\n                            <label className={dueDate ? 'label active' : 'label'} htmlFor=\"dueDate\">Due (optional)</label>\n                          </div>\n                        </div>\n                        <div className=\"col s6\">\n                          <div className=\"datepicker-field input-field\">\n                            <i className=\"icon-clock2\"></i>\n                            <DatePicker\n                              selected={dueTime}\n                              showTimeSelect\n                              showTimeSelectOnly\n                              timeIntervals={15}\n                              dateFormat=\"h:mm aa\"\n                              timeCaption=\"Time\"\n                              id=\"dueTime\"\n                              name=\"dueTime\"\n                              onChange={(event) => this.handleDatePickerChange('dueTime', event)}\n                            />\n                            <label className={dueTime ? 'label active' : 'label'} htmlFor=\"dueTime\">Time</label>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"modal-row row\">\n                        <div className=\"col s12\">\n                          <p>\n                            <label>\n                              <input\n                                type=\"checkbox\"\n                                className=\"filled-in\"\n                                name=\"timed\"\n                                id=\"timed\"\n                                checked={timed}\n                                onChange={this.handleDetailsChange}\n                              />\n                              <span>Timed</span>\n                            </label>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer modal-footer-width\">\n                      <a href=\"#\" onClick={this.onCloseModal} className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\">Cancel</a>\n                      <a href=\"#\" onClick={this.assignTestSection} className=\"link-btn waves-effect waves-teal btn-flat\">Save</a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n        {`\n          .overlay {\n            position: fixed;\n            background-color: rgba(0, 0, 0, 0.7);\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            z-index: 1999;\n          }\n          .card-modal {\n            margin: 0;\n            border-radius: 6px;\n          }\n          .modal {\n            display: block;\n            background-color: white;\n            position: absolute;\n            top: 10%;\n            right: 10%;\n            left: 10%;\n            box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n          }\n          .modal-custom {\n            opacity: 1;\n            visibility: visible;\n          }\n        `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nAssignTestSectionModal.propTypes = {\n  modalDate: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAssignTestSection: PropTypes.func.isRequired,\n};\n\nexport default AssignTestSectionModal;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../../utils/getValueFromState';\n\nconst sortByOptions = [\n  {\n    label: 'Difficulty',\n    value: 'difficulty',\n  },\n  {\n    label: 'Problems',\n    value: 'problems',\n  },\n  {\n    label: 'Time Estimate',\n    value: 'timeEstimate',\n  },\n  {\n    label: 'Subject',\n    value: 'subject',\n  },\n];\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      titleFilter: '',\n      unitFilter: '',\n    }\n  };\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onClearFilters = () => this.setState({ titleFilter: '', unitFilter: '' }, this.props.onClearFilters)\n\n  handleSearchChange = ({ target }) => this.setState({ [target.name]: target.value })\n\n  submitSearchFilter = (searchType) => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    if (this.state[searchType] === '') {\n      onUnsetFilteredState(searchType);\n    }\n    const transformedTitle = this.state[searchType].replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(searchType, transformedTitle);\n  }\n\n  render() {\n    const { handleFilterClick, subjectFilters, typeFilters, sourceFilters, difficultyFilters, sort, onSetSort } = this.props;\n    const { open, titleFilter, unitFilter } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\" style={{ minHeight: '0' }}>\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"readingSubject\"\n                      name=\"readingSubject\"\n                      checked={subjectFilters.indexOf('readingSubject') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"readingSubject\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writingSubject\"\n                      name=\"writingSubject\"\n                      checked={subjectFilters.indexOf('writingSubject') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"writingSubject\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mathSubject\"\n                      name=\"mathSubject\"\n                      checked={subjectFilters.indexOf('mathSubject') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"mathSubject\">Math</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mixedDifficulty\"\n                      name=\"mixedDifficulty\"\n                      checked={subjectFilters.indexOf('mixedDifficulty') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"mixedDifficulty\">Mixed</label>\n                  </li>\n                </ul>\n\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"satPractice\"\n                      name=\"satPractice\"\n                      checked={typeFilters.indexOf('satPractice') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"satPractice\">SAT Practice</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"skillBuilders\"\n                      name=\"skillBuilders\"\n                      checked={typeFilters.indexOf('skillBuilders') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"skillBuilders\">Skill Builders</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mixedType\"\n                      name=\"mixedType\"\n                      checked={typeFilters.indexOf('mixedType') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"mixedType\">Mixed</label>\n                  </li>\n                </ul>\n\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"builtIn\"\n                      name=\"builtIn\"\n                      checked={sourceFilters.indexOf('builtIn') !== -1}\n                      onChange={({ target }) => handleFilterClick('source', target.name)}\n                    />\n                    <label htmlFor=\"builtIn\">Built-In</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"userCreated\"\n                      name=\"userCreated\"\n                      checked={sourceFilters.indexOf('userCreated') !== -1}\n                      onChange={({ target }) => handleFilterClick('source', target.name)}\n                    />\n                    <label htmlFor=\"userCreated\">User Created</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"easy\"\n                      name=\"easy\"\n                      checked={difficultyFilters.indexOf('easy') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"easy\">Easy</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"medium\"\n                      name=\"medium\"\n                      checked={difficultyFilters.indexOf('medium') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"medium\">Medium</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"difficult\"\n                      name=\"difficult\"\n                      checked={difficultyFilters.indexOf('difficult') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"difficult\">Diﬃcult</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mixedDifficulty\"\n                      name=\"mixedDifficulty\"\n                      checked={difficultyFilters.indexOf('mixedDifficulty') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"mixedDifficulty\">Mixed</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"titleFilter\"\n                      name=\"titleFilter\"\n                      className=\"input-control validate\"\n                      value={titleFilter}\n                      onChange={this.handleSearchChange}\n                    />\n                    <button type=\"submit\" onClick={() => this.submitSearchFilter('titleFilter')} className=\"search-button\"><i className=\"icon-search\"></i></button>\n                    <label className={titleFilter.length ? 'label active' : 'label'} htmlFor=\"titleFilter\">Search By Title</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"unitFilter\"\n                      name=\"unitFilter\"\n                      className=\"input-control validate\"\n                      value={unitFilter}\n                      onChange={this.handleSearchChange}\n                    />\n                    <button type=\"submit\" onClick={() => this.submitSearchFilter('unitFilter')} className=\"search-button\"><i className=\"icon-search\"></i></button>\n                    <label className={unitFilter.length ? 'label active' : 'label'} htmlFor=\"unitFilter\">Search By Unit</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 m6\">\n                    <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                      <Dropdown\n                        value={getValueFromState(sort, sortByOptions)}\n                        onChange={onSetSort}\n                        options={sortByOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li className=\"active\" data-view=\"view-full\"><a href=\"#\">Month View</a></li>\n                    <li data-view=\"view-list\"><a href=\"#\">Day View</a></li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  sort: PropTypes.string.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  typeFilters: PropTypes.array.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  sourceFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  difficultyFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass WorksheetCard extends React.Component {\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  editWorksheet = () => console.warn('Pending implementation of edit modal/functionality')\n  cloneWorksheet = () => console.warn('Pending implementation of clone worksheet functionality')\n  showOwner = () => console.warn('Pending implementation of show owner functionality')\n  deleteWorksheet = () => console.warn('Pending implementation of delete worksheet functionality')\n\n  render() {\n    const { worksheet, selectedWorksheets, handleWorksheetClick, index, dropdownIndex, dropdownIsOpen } = this.props;\n    const { title, subject, problems, type, difficulty, timeEstimate, source, classifications } = worksheet;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={selectedWorksheets.indexOf(worksheet) !== -1}\n            onChange={() => handleWorksheetClick(worksheet)}\n          />\n          <div className=\"checkbox-card card-main card-lesson-detail card-assigned card\">\n            <div className=\"card-panel\" style={{ backgroundColor: '#666', color: '#fff' }}>\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-sheets-w\"></i>\n                  </span>\n                </div>\n                <div className=\"col s9\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small\">Worksheet ({subject})</div>\n                    <div className=\"text-large\">{title}</div>\n                  </div>\n                </div>\n                <div className=\"align-top col s1 right-align\">\n                  <div className=\"row icons-row\">\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        className='dropdown-trigger btn'\n                        data-target='dropdown_worksheet_01'\n                        onClick={this.handleDropdownClick}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id='dropdown_worksheet_01'\n                          className='dropdown-content dropdown-wide'\n                          style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li><a href=\"#\" onClick={this.editWorksheet} className=\"modal-trigger link-block\">Edit</a></li>\n                          <li><a href=\"#\" onClick={this.cloneWorksheet}>Clone</a></li>\n                          <li><a href=\"#\" onClick={this.showOwner}>Show Owner</a></li>\n                          <li><a href=\"#\" onClick={this.deleteWorksheet}>Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-top-block\">\n                <div className=\"d-flex row mb-0\">\n                  <div className=\"left-col col s6\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problem Type:</dt>\n                      <dd>{type}</dd>\n                    </dl>\n                  </div>\n                  <div className=\"right-col col s6 right-align\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Diﬃculty:</dt>\n                      <dd>{difficulty}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"chart-container\">\n                <div className=\"chart-holder\">\n                  <span className=\"svg-curved-bar\" data-values='{\"from\": 0, \"to\": 100, \"current\": 0}' data-duration=\"1\">\n                    {/* <!-- do not change path attribute \"d\" !!! --> */}\n                    <svg  width=\"110px\" height=\"110px\" viewBox=\" 0 0 110 110\">\n                      <path fill=\"none\" style={{ strokeWidth: '22', stroke: '#eaeaea' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 1 1 95.8481890527072 71.35314804905443\"></path>\n                      <path data-dinamic fill=\"none\" style={{ strokeWidth: '22', stroke: '#31837a' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 0 1 14.151810947292809 71.35314804905443\"></path>\n                    </svg>\n                  </span>\n                  <span className=\"chart-value\" style={{ backgroundColor: '#4d4d4d' }}></span>\n                </div>\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Time Est:</dt>\n                    <dd>{timeEstimate} min</dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Problems:</dt>\n                    <dd>{problems}</dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"card-text\">\n                <dl className=\"dl-horizontal\">\n                  <dt>Worksheet Source:</dt>\n                  <dd>{source}</dd>\n                </dl>\n              </div>\n              <div className=\"card-inner-row\">\n                <div className=\"row-holder\">\n                  <ul className=\"classification-list\">\n                    <Choose>\n                      <When condition={classifications.length}>\n                        {classifications.map(classification => (\n                          <li key={classification} className=\"class-box\">{classification}</li>\n                        ))}\n                      </When>\n                      <Otherwise>\n                        <li className=\"empty-box\">no classiﬁcation</li>\n                      </Otherwise>\n                    </Choose>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nWorksheetCard.propTypes = {\n  index: PropTypes.number,\n  dropdownIndex: PropTypes.number,\n  worksheet: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  selectedWorksheets: PropTypes.array.isRequired,\n  handleWorksheetClick: PropTypes.func.isRequired,\n}\n\nexport default WorksheetCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport moment from 'moment';\n\nimport Portal from '../../../../Portal';\n\nimport FilterSection from './components/FilterSection';\nimport WorksheetCard from './components/WorksheetCard';\nimport { difficultySort, problemSort, timeEstimateSort, subjectSort } from '../../../utils/sortOptions';\nimport sampleWorksheets from '../../../utils/sampleWorksheets';\nimport { worksheetTypeMap, worksheetSourceMap, worksheetDifficultyMap, worksheetSubjectMap } from '../../../utils/worksheetModalMaps';\n\nclass AssignWorksheetModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      unitFilter: '',\n      titleFilter: '',\n      typeFilters: [],\n      sourceFilters: [],\n      subjectFilters: [],\n      selectedWorksheets: [],\n      difficultyFilters: [],\n      worksheets: sampleWorksheets,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      assignSelectedDropdownOpen: false,\n    };\n  }\n\n  onToggleAssignSelectedDropdown = () => this.setState(({ assignSelectedDropdownOpen }) => ({ assignSelectedDropdownOpen: !assignSelectedDropdownOpen }))\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  onResetModal = () => this.setState({ sourceFilters: [], difficultyFilters: [], subjectFilters: [], typeFilters: [], sort: '' })\n  onSetSort = (sort) => this.setState({ sort })\n\n  onSetFilteredState = (titleFilter, value) => this.setState({ [titleFilter]: value })\n  onUnsetFilteredState = (titleFilter) => this.setState({ [titleFilter]: '' })\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n    this.onResetModal();\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'difficulty':\n        return worksheets.sort(difficultySort);\n      case 'problems':\n        return worksheets.sort(problemSort);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimateSort);\n      case 'subject':\n        return worksheets.sort(subjectSort);\n      default:\n        break;\n    }\n  }\n\n  onFilterByTitle = () => {\n    const { worksheets, titleFilter } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { title } = currentWorksheet;\n      const worksheetString = title.replace(/\\s/g, \"\").toLowerCase();\n      if (worksheetString.indexOf(titleFilter) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByUnit = () => {\n    const { worksheets, unitFilter } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { unit } = currentWorksheet;\n      const worksheetString = unit.replace(/\\s/g, \"\").toLowerCase();\n      if (worksheetString.indexOf(unitFilter) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterWorksheets = () => {\n    const { subjectFilters, typeFilters, sourceFilters, difficultyFilters, worksheets: allWorksheets } = this.state;\n    let worksheets = allWorksheets;\n    if (subjectFilters.length) {\n      worksheets = worksheets.filter(worksheet => subjectFilters.indexOf(worksheetSubjectMap[worksheet.subject]) !== -1);\n    }\n    if (typeFilters.length) {\n      worksheets = worksheets.filter(worksheet => typeFilters.indexOf(worksheetTypeMap[worksheet.type]) !== -1);\n    }\n    if (sourceFilters.length) {\n      worksheets = worksheets.filter(worksheet => sourceFilters.indexOf(worksheetSourceMap[worksheet.source]) !== -1);\n    }\n    if (difficultyFilters.length) {\n      worksheets = worksheets.filter(worksheet => difficultyFilters.indexOf(worksheetDifficultyMap[worksheet.difficulty]) !== -1);\n    }\n    return worksheets;\n  }\n\n  getMappableWorksheets = () => {\n    const { subjectFilters, typeFilters, difficultyFilters, sourceFilters, sort, unitFilter, titleFilter, worksheets } = this.state;\n    let mappableWorksheets = worksheets;\n    if (titleFilter.length) {\n      mappableWorksheets = this.onFilterByTitle();\n    }\n    if (unitFilter.length) {\n      mappableWorksheets = this.onFilterByUnit();\n    }\n    if (subjectFilters.length || typeFilters.length || difficultyFilters.length || sourceFilters.length) {\n      mappableWorksheets = this.onFilterWorksheets();\n    }\n    if (sort) {\n      return this.onSortWorksheets(mappableWorksheets);\n    }\n    return mappableWorksheets;\n  }\n\n  handleFilterClick = (filterType, filter) => {\n    const { sourceFilters: currentSourceFilters, difficultyFilters: currentDifficultyFilters,\n      subjectFilters: currentSubjectFilters, typeFilters: currentTypeFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'type':\n        modifiedFilterCurrentState = currentTypeFilters;\n        modifiedFilterName = 'typeFilters';\n        break;\n      case 'source':\n        modifiedFilterCurrentState = currentSourceFilters;\n        modifiedFilterName = 'sourceFilters';\n        break;\n      case 'difficulty':\n        modifiedFilterCurrentState = currentDifficultyFilters;\n        modifiedFilterName = 'difficultyFilters';\n        break;\n      default:\n        break;\n    }\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  handleWorksheetClick = (worksheet) => {\n    const { selectedWorksheets } = this.state;\n    let modifiedWorksheets;\n    if (selectedWorksheets.indexOf(worksheet) === -1) {\n      modifiedWorksheets = update(selectedWorksheets, {\n        $push: [worksheet],\n      });\n    } else {\n      const worksheetIndex = selectedWorksheets.indexOf(worksheet);\n      modifiedWorksheets = update(selectedWorksheets, {\n        $splice: [[ worksheetIndex, 1 ]],\n      });\n    }\n    this.setState({ selectedWorksheets: modifiedWorksheets });\n  }\n\n  assignWorksheets = (date) => {\n    const { onAssignWorksheets } = this.props;\n    const { selectedWorksheets } = this.state;\n    let assignDate;\n    switch (date) {\n      case 'today':\n        assignDate = moment().format('MM/DD/YY');\n        break;\n      case 'tomorrow':\n        assignDate = moment().add(1, 'days').format('MM/DD/YY');\n        break;\n      case 'nextSession':\n        break;\n      case 'customDate':\n        assignDate = '01/05/19';\n        break;\n      default:\n        break;\n    }\n    this.onToggleAssignSelectedDropdown();\n    onAssignWorksheets(selectedWorksheets, assignDate);\n  }\n\n  mapWorksheets = () => this.getMappableWorksheets().map((worksheet, index) => (\n    <WorksheetCard\n      worksheet={worksheet}\n      index={index}\n      key={worksheet.id}\n      onSetDropdown={this.onSetDropdown}\n      onCloseDropdown={this.onCloseDropdown}\n      dropdownIndex={this.state.dropdownIndex}\n      dropdownIsOpen={this.state.dropdownIsOpen}\n      handleWorksheetClick={this.handleWorksheetClick}\n      selectedWorksheets={this.state.selectedWorksheets}\n    />\n  ))\n\n  render() {\n    const { open } = this.props;\n    const { assignSelectedDropdownOpen, typeFilters, sourceFilters, subjectFilters, difficultyFilters, sort } = this.state;\n    return (\n      <div>\n        {open && (\n          <div className=\"wrapper\">\n              <div className=\"card-modal card-main card switcher-section grey lighten-3\" style = {{minWidth:\"100%\"}}>\n                <div className=\"header-row card-panel light-blue lighten-1 white-text\">\n                  <div className=\"card-panel-row row\">\n                    <div className=\"col s11\">\n                      <div className=\"d-flex\">\n                        <div className=\"icon-col\">\n                          <i className=\"icon-sheets-w\"></i>\n                        </div>\n                        <div className=\"card-panel-text\">\n                          <div className=\"text-large\">Assign Worksheets</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col s1 right-align\">\n                      <div className=\"row icons-row\"><a href=\"#\" onClick={this.onCloseModal} className=\"modal-close close\"><i className=\"icon-close-thin\"></i></a></div>\n                    </div>\n                  </div>\n                </div>\n                <FilterSection\n                  sort={sort}\n                  typeFilters={typeFilters}\n                  sourceFilters={sourceFilters}\n                  subjectFilters={subjectFilters}\n                  difficultyFilters={difficultyFilters}\n                  onSetSort={this.onSetSort}\n                  onClearFilters={this.onResetModal}\n                  handleFilterClick={this.handleFilterClick}\n                  onSetFilteredState={this.onSetFilteredState}\n                  onUnsetFilteredState={this.onUnsetFilteredState}\n                />\n                <div className=\"card-content\">\n                  <div className=\"card-body\">\n                    <div className=\"result-row center-align\">\n                      <b className=\"result\"> - {this.getMappableWorksheets().length} results -</b>\n                    </div>\n                    <div className=\"checkboxes-section row d-flex-content card-width-322\">\n                      {this.mapWorksheets()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"add-btn-block\">\n                <a\n                  href=\"#\"\n                  data-target='dropdown_assign_selected'\n                  onClick={this.onToggleAssignSelectedDropdown}\n                  className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n                >\n                  <i className=\"material-icons\">add</i> Assign Selected\n                </a>\n                <ul\n                  className='dropdown-content'\n                  id='dropdown_assign_selected'\n                  style={{ display: assignSelectedDropdownOpen ? 'block' : '0', opacity: assignSelectedDropdownOpen ? '1' : '0' }}\n                >\n                  <li><a href=\"#\" onClick={() => this.assignWorksheets('today')}>For Today</a></li>\n                  <li><a href=\"#\" onClick={() => this.assignWorksheets('tomorrow')}>For Tomorrow</a></li>\n                  <li><a href=\"#\" onClick={() => this.assignWorksheets('nextSession')}>For Next Session</a></li>\n                  <li><a href=\"#\" onClick={() => this.assignWorksheets('customDate')}>For Date...</a></li>\n                </ul>\n              </div>\n          </div>\n        )}\n        <style jsx>\n          {`\n            .card-modal {\n              margin: 0;\n              border-radius: 6px;\n            }\n            .wrapper {\n              min-height: 0px;\n            }\n            .modal-custom {\n              opacity: 1;\n              visibility: visible;\n            }\n            .modal-footer {\n              background-color: white;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n\nAssignWorksheetModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAssignWorksheets: PropTypes.func.isRequired,\n};\n\nexport default AssignWorksheetModal;\n","import moment from 'moment';\n\nexport const getCalendarCellClassName = (hasEvents, inActiveColumn) => {\n  let classNames = 'cal-cell1 cal-cell ';\n  if (!hasEvents) {\n    classNames += 'day-no-events ';\n  } else {\n    classNames += 'day-has-events ';\n  }\n  if (inActiveColumn) {\n    classNames += 'active-cell';\n  }\n  return classNames;\n}\n\nexport const getCalendarDayClassName = (date, inMonth, activeDateKey) => {\n  let className = 'cal-month-day ';\n  if (activeDateKey.includes('column-7') || activeDateKey.includes('column-1')) {\n    className += 'cal-day-weekend ';\n  }\n  if (date === moment().format('MM/DD/YY')) {\n    className += 'cal-day-today ';\n  }\n  if (inMonth === true) {\n    className += 'cal-day-inmonth ';\n  } else if (inMonth === false) {\n    className += 'cal-day-outmonth ';\n  }\n  return className;\n}\n\nexport const calendarMap = {\n  '0': 'December',\n  '1': 'January',\n  '2': 'February',\n  '3': 'March',\n  '4': 'April',\n  '5': 'May',\n  '6': 'June',\n  '7': 'July',\n  '8': 'August',\n  '9': 'September',\n  '10': 'October',\n  '11': 'November',\n  '12': 'December',\n  '13': 'January',\n};\n\nexport const currentMonthIndex = Number(moment().format('M')) - 1;\nexport const currentYear = new Date().getFullYear().toString().substr(-2);\n\nexport const getDayDate = (date) => moment(new Date(date)).format('ddd, MMM Do');\nexport const getFirstDay = (activeMonthIndex) => new Date(2019, activeMonthIndex).getDay();\nexport const getDaysInActiveMonth = (activeMonthIndex) => 32 - new Date(2019, activeMonthIndex, 32).getDate();\nexport const getDaysInPreviousMonth = (activeMonthIndex) => 32 - new Date(2019, activeMonthIndex - 1, 32).getDate();\nexport const getNextMonthAsCurrentMonth = (activeMonthIndex) => activeMonthIndex > 9 ? activeMonthIndex + 1 : `0${activeMonthIndex + 1}`;","export default [\n  {\n    id: 1,\n    subject: 'Reading',\n    timeEstimate: '14',\n    unit: 'Reading Unit #2',\n    title: 'Reading Something 1',\n    type: 'Challenge + Practice',\n    problems: '20',\n    pageNumber: '128',\n  },\n  {\n    id: 2,\n    subject: 'Math',\n    timeEstimate: '30',\n    unit: 'Math Unit #4',\n    title: 'Pythagorean Theorem',\n    type: 'Challenge + Practice',\n    problems: '16',\n    pageNumber: '132',\n  },\n  {\n    id: 3,\n    subject: 'Reading',\n    timeEstimate: '23',\n    unit: 'Reading Unit #3',\n    title: 'More Reading Stuff',\n    type: 'Reading from Workbook',\n    problems: '20',\n    pageNumber: '141',\n  },\n  {\n    id: 4,\n    subject: 'Reading',\n    timeEstimate: '31',\n    unit: 'Reading Unit #6',\n    title: 'Reading Someing 7',\n    type: 'Challenge + Practice',\n    problems: '17',\n    pageNumber: '127',\n  },\n  {\n    id: 5,\n    subject: 'Reading',\n    timeEstimate: '65',\n    unit: 'Reading Unit #4',\n    title: 'Reading Someing 4',\n    type: 'Homework Drill',\n    problems: '19',\n    pageNumber: '120',\n  },\n  {\n    id: 6,\n    subject: 'Reading',\n    timeEstimate: '50',\n    unit: 'Reading Unit #9',\n    title: 'Reading Someing 9',\n    type: 'Challenge + Practice',\n    problems: '22',\n    pageNumber: '141',\n  },\n  {\n    id: 7,\n    subject: 'Reading',\n    timeEstimate: '31',\n    unit: 'Reading Unit #1',\n    title: 'Reading Someing 1',\n    type: 'Homework Drill',\n    problems: '29',\n    pageNumber: '136',\n  },\n  {\n    id: 8,\n    subject: 'Writing',\n    timeEstimate: '48',\n    unit: 'Writing Unit #5',\n    title: 'Writing Lesson 5',\n    type: 'Homework Drill',\n    problems: '14',\n    pageNumber: '117',\n  },\n  {\n    id: 9,\n    subject: 'Writing',\n    timeEstimate: '48',\n    unit: 'Writing Unit #5',\n    title: 'Writing Lesson 5',\n    type: 'Reading from Workbook',\n    problems: '14',\n    pageNumber: '117',\n  },\n];","export default [\n  {\n    id: 1,\n    title: 'Some SAT Problems about Triangles',\n    subject: 'Math',\n    problems: 15,\n    type: 'Skill Builders',\n    unit: 'Math Unit #2',\n    difficulty: 'Easy',\n    timeEstimate: '14',\n    source: 'Built-In',\n    classifications: ['Right Triangles', 'More Math', \"Lots Of Math\"],\n  },\n  {\n    id: 2,\n    title: 'Worksheet 2',\n    subject: 'Reading',\n    problems: 18,\n    type: 'Skill Builders',\n    unit: 'Reading Unit #3',\n    difficulty: 'Easy',\n    timeEstimate: '30',\n    source: 'User Created',\n    classifications: [],\n  },\n  {\n    id: 3,\n    title: 'Worksheet 3',\n    subject: 'Writing',\n    problems: 16,\n    type: 'SAT Practice',\n    unit: 'Writing Unit #1',\n    difficulty: 'Difficult',\n    timeEstimate: '62',\n    source: 'Built-In',\n    classifications: ['Right Triangles', 'Math', \"Lots Of Math\"],\n  },\n  {\n    id: 4,\n    title: 'Worksheet 4',\n    subject: 'Writing',\n    problems: 14,\n    type: 'SAT Practice',\n    unit: 'Mixed Unit #6',\n    difficulty: 'Mixed',\n    timeEstimate: '31',\n    source: 'User Created',\n    classifications: ['Trigonometry', 'More Math', \"Lots Of Math\"],\n  },\n  {\n    id: 5,\n    title: 'Worksheet 5',\n    subject: 'Reading',\n    problems: 21,\n    type: 'Mixed',\n    unit: 'Reading Unit #2',\n    difficulty: 'Medium',\n    timeEstimate: '23',\n    source: 'Built-In',\n    classifications: ['Trigonometry', 'Math', \"Lots Of Math\"],\n  },\n  {\n    id: 6,\n    title: 'Worksheet 6',\n    subject: 'Math',\n    problems: 30,\n    type: 'Mixed',\n    unit: 'Math Unit #4',\n    difficulty: 'Difficult',\n    timeEstimate: '58',\n    source: 'User Created',\n    classifications: ['Right Triangles', 'Trigonometry', 'More Math'],\n  },\n];\n","export const difficultySort = ({ difficulty: difficultyA }, { difficulty: difficultyB }) => {\n  if (difficultyA > difficultyB) { return -1; }\n  return 0;\n}\n\nexport const pageNumberSort = ({ pageNumber: pageNumberA }, { pageNumber: pageNumberB }) => {\n  if (pageNumberA > pageNumberB) { return -1; }\n  return 0;\n}\n\nexport const problemSort = ({ problems: problemCountA }, { problems: problemCountB }) => {\n  if (problemCountA > problemCountB) { return -1; }\n  return 0;\n}\n\nexport const timeEstimateSort = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA > timeEstimateB) { return -1; }\n  return 0;\n}\n\nexport const subjectSort = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA > subjectB) { return -1; }\n  return 0;\n}\n","export const worksheetTypeMap = {\n  'SAT Practice': 'satPractice',\n  'Skill Builders': 'skillBuilders',\n  'Mixed': 'mixedType',\n};\n\nexport const worksheetSourceMap = {\n  'Built-In': 'builtIn',\n  'User Created': 'userCreated',\n};\n\nexport const worksheetDifficultyMap = {\n  'Easy': 'easy',\n  'Medium': 'medium',\n  'Difficult': 'difficult',\n  'Mixed': 'mixedDifficulty',\n};\n\nexport const worksheetSubjectMap = {\n  'Reading': 'readingSubject',\n  'Writing': 'writingSubject',\n  'Math': 'mathSubject',\n  'Mixed': 'mixedSubject',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n\nimport ControlComponent from './styles/ControlComponent';\nimport { DropdownStyles } from './styles/dropdownStyles';\nimport DropdownWrapper from './styles';\n\nconst Dropdown = ({ value, label, dropdownKey, stateKey = null, onChange, options, valid = true, padRight, className }) => (\n  <DropdownWrapper className={className} valid={(valid) || (!valid && value === {})} padRight={padRight}>\n    <Select\n      options={options}\n      onChange={(event) => onChange(event.value, dropdownKey, stateKey)}\n      components={{ Control: ControlComponent }}\n      name=\"categoryOptions\"\n      classNamePrefix={dropdownKey === 'difficulty' ? 'expanded-select' : 'select'}\n      placeholder={label}\n      styles={DropdownStyles}\n      isClearable={false}\n      isSearchable={false}\n      value={value}\n      instanceId=\"dropdown-select\"\n    />\n  </DropdownWrapper>\n);\n\nDropdown.propTypes = {\n  value: PropTypes.any,\n  valid: PropTypes.bool,\n  padRight: PropTypes.bool,\n  stateKey: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  dropdownKey: PropTypes.string.isRequired,\n};\n\nexport default Dropdown;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { components } from 'react-select';\n\nimport { ControlWrapper } from './';\nimport { DropdownStyles } from '../styles/dropdownStyles';\n\nconst ControlComponent = (props) => {\n  const { selectProps: { placeholder, label, className } } = props;\n  const categoryCheck = label === 'Categories';\n  return (\n    <ControlWrapper invalid={className} categoryCheck={categoryCheck}>\n      <div style={DropdownStyles}>\n        {<p>{categoryCheck ? 'Categories' : placeholder}</p>}\n        <components.Control {...props} />\n      </div>\n    </ControlWrapper>\n  );\n};\n\nControlComponent.propTypes = {\n  selectProps: PropTypes.object.isRequired,\n};\n\nexport default ControlComponent;\n","// Keeping unused styling for now so I know what element they target\nexport default {\n  multiValueLabel: (styles) => ({\n    ...styles,\n    color: 'white',\n    borderRadius: 'inherit',\n    fontSize: 'inherit',\n    overflow: 'inherit',\n    padding: 'inherit',\n    paddingLeft: 'inherit',\n    textOverflow: 'inherit',\n    whiteSpace: 'inherit',\n    boxSizing: 'inherit',\n    // backgroundColor: 'red!important',\n  }),\n  menuList: (styles) => ({\n    ...styles,\n    // backgroundColor: 'red',\n  }),\n  dropdownIndicator: (styles) => ({\n    ...styles,\n    display: 'none',\n  }),\n  multiValue: (styles) => ({\n    ...styles,\n    background: 'none',\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    // padding: '20px',\n    // background: 'red',\n    // height: '200px',\n  }),\n  input: (styles) => ({\n    ...styles,\n    paddingTop: '9px',\n  }),\n  groupHeading: (styles) => ({\n    ...styles,\n    // backgroundColor: '#19493F',\n    // color: 'white',\n    // padding: '10px',\n  }),\n  control: (styles, { isFocused }) => ({\n    ...styles,\n    boxShadow: 'none',\n    borderColor: isFocused ? '#26a69a!important' : '#b6b6b6!important',\n  }),\n};\n\nexport const DropdownStyles = {\n  container: (base, state) => ({\n    ...base,\n    opacity: state.isDisabled ? \".5\" : \"1\",\n    backgroundColor: \"transparent\",\n    zIndex: \"999\",\n  }),\n  option: (styles, { isFocused }) => ({\n    ...styles,\n    backgroundColor: isFocused ? '#dad8d8' : 'white',\n    color: isFocused ? '#a80303' : '#333',\n    clear: 'both',\n    lineHeight: '22px',\n    width: '100%',\n    textAlign: 'left',\n    fontWeight: '500',\n    padding: '3px 10px 3px 19px',\n    fontSize: '15px',\n  }),\n  control: (styles, { isFocused }) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '1px solid',\n    borderColor: isFocused ? '#26a69a!important' : '#b6b6b6!important',\n    backgroundColor: 'transparent',\n    borderRadius: '0',\n    outline: 'none',\n    boxShadow: 'none',\n  }),\n};\n","import styled from 'styled-components';\n\nconst DropdownWrapper = styled.div`\n  padding: 5px 0;\n  padding-right: ${({ padRight }) => padRight ? '20px' : ''};\n  ${({ valid }) => !valid ?\n    `div.select__control, div.expanded-select__control, div.multi-select__control { \n        border-color: #F44336!important; \n        &:focus {\n          border-color: inherit;\n      }\n    }`\n    : ''};\n  &.flex-50 {\n    flex-basis: 50%!important;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  p {\n    padding-left: ${({ categoryCheck }) => categoryCheck ? '10px' : ''};\n    margin-bottom: 5px;\n    color: #959595;\n    margin-top: ${({ categoryCheck }) => categoryCheck ? '20px' : ''};\n  }\n  ${({ invalid }) => invalid ?\n    `div.multi-select__control {\n      border-color: #F44336!important;\n    }` : ''};\n`;\n\nexport default DropdownWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LocationCard = ({ location: { locationNickname, locationName }, onRemoveLocation }) => (\n  <div className=\"card-panel card-panel-panel card-panel-large\" style={{ backgroundColor: '#62b771', color: '#fff' }}>\n    <a\n      href=\"#\"\n      className=\"close-link icon-close-thin\"\n      onClick={onRemoveLocation}\n    ></a>\n    <div className=\"card-panel-row row\">\n      <div className=\"col s10\">\n        <h3 className=\"h4 truncate\">{locationNickname}</h3>\n        <h4 className=\"sub-title\">{locationName}</h4>\n      </div>\n      <div className=\"col s2 right-align\">\n        <span className=\"block-icon\">\n          <i className=\"icon-location\"></i>\n          <span className=\"text-icon\">Location</span>\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nLocationCard.propTypes = {\n  location: PropTypes.object,\n  onRemoveLocation: PropTypes.func.isRequired,\n};\n\nexport default LocationCard;\n","/* eslint-disable array-callback-return */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Portal from '../../../Portal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\n\nimport OwnerSection from '../SharedModalComponents/OwnerSection';\nimport LocationContactInfo from '../SharedModalComponents/LocationContactInfo';\nimport LocationEmailSettings from '../SharedModalComponents/LocationEmailSettings';\nimport LocationBranding from '../SharedModalComponents/LocationBranding';\n\nimport sampleOwners from '../NewLocationModal/utils/sampleOwners';\nimport { nestedEditFieldValidation } from '../../../utils/fieldValidation';\n\n// TODO: Render only one instance of this modal\nclass LocationDetailsModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner: null,\n      userListModalOpen: false,\n      changeModalOpen: false,\n      originalLocation: {\n        id: '',\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhoneNumber: '',\n          website: '',\n          locationStreetAddress: '',\n          locationCity: '',\n          locationState: '',\n          locationZip: '',\n        },\n        locationEmailSettings: {\n          automatedEmailOrigin: '',\n          automatedEmailSalutation: '',\n        },\n        locationBranding: {\n          locationUrl: '',\n          headerColor1: '',\n          headerColor2: '',\n          headerLogoBackgroundColor: '',\n          headerLogoBackgroundAlpha: '',\n          horizontalLogoVariation: '',\n          squareLogoVariation: '',\n          backgroundImage: '',\n          backgroundBlur: '',\n          backgroundOverlayAlpha: '',\n          studentWelcomeVideo: '',\n          instructorWelcomeVideo: '',\n        },\n      },\n      updatedLocation: {\n        id: '',\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhoneNumber: '',\n          website: '',\n          locationStreetAddress: '',\n          locationCity: '',\n          locationState: '',\n          locationZip: '',\n        },\n        locationEmailSettings: {\n          automatedEmailOrigin: '',\n          automatedEmailSalutation: '',\n        },\n        locationBranding: {\n          locationUrl: '',\n          headerColor1: '',\n          headerColor2: '',\n          headerLogoBackgroundColor: '',\n          headerLogoBackgroundAlpha: '',\n          horizontalLogoVariation: '',\n          squareLogoVariation: '',\n          backgroundImage: '',\n          backgroundBlur: '',\n          backgroundOverlayAlpha: '',\n          studentWelcomeVideo: '',\n          instructorWelcomeVideo: '',\n        },\n      },\n      validation: {\n        locationContactInfo: {\n          locationName: true,\n          locationNickname: true,\n          locationEmail: true,\n        },\n        locationEmailSettings: {\n          automatedEmailOrigin: true,\n          automatedEmailSalutation: true,\n        },\n        locationBranding: {\n          locationUrl: true,\n          headerColor1: true,\n          headerColor2: true,\n          headerLogoBackgroundColor: true,\n          headerLogoBackgroundAlpha: true,\n          horizontalLogoVariation: true,\n          squareLogoVariation: true,\n          backgroundImage: true,\n          backgroundBlur: true,\n          backgroundOverlayAlpha: true,\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { location: { owner, id, locationContactInfo, locationEmailSettings, locationBranding } = {} } = this.props;\n    const updatedLocation = { owner, id, locationContactInfo, locationEmailSettings, locationBranding };\n    const { originalLocation: originalLocationState } = this.state;\n    const originalLocation = update(originalLocationState, {\n      $merge: updatedLocation,\n    });\n    this.setState({ originalLocation, updatedLocation }); // eslint-disable-line\n  }\n\n  // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the user edit page\n  // This resets the component state to reflect the details of the next user the user clicks on\n  componentWillReceiveProps = (nextProps) => {\n    if ((!this.state.originalLocation || nextProps.location.id !== this.state.originalLocation.id)) {\n      const { location: { owner, id, locationContactInfo, locationEmailSettings, locationBranding } = {} } = nextProps;\n      const updatedLocation = { owner, id, locationContactInfo, locationEmailSettings, locationBranding };\n      const { originalLocation: originalLocationState } = this.state;\n      const originalLocation = update(originalLocationState, {\n        $merge: nextProps.location,\n      });\n      this.setState({ originalLocation, updatedLocation });\n    }\n  }\n\n  // UserListModal is used to assign and reassign users to a new location\n  onOpenUserListModal = () => this.setState({ userListModalOpen: true, changeModalOpen: false });\n  onCloseUserListModal = () => this.setState({ userListModalOpen: false });\n\n  // ChangeModal pops up when user clicks on set owner and asks for confirmation that they wish to assign a new owner to the new location\n  onOpenChangeModal = () => this.setState({ changeModalOpen: true });\n  onCloseChangeModal = () => this.setState({ changeModalOpen: false });\n\n  // This function is passed into nestedEditFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n  onSetValidation = (validation, cb) => this.setState({ validation }, cb);\n\n  // If all the fields are valid, we construct a post body and call onSaveLocationChanges passed down from the container level\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const { updatedLocation } = this.state;\n    const { onSaveLocationChanges, onSaveLocationError, onClose } = this.props;\n    // const valid = true;\n    const valid = await nestedEditFieldValidation(this.state, this.state.updatedLocation, this.onSetValidation, this.props.onSetLocationValidation);\n    if (!valid) {\n      return onSaveLocationError();\n    }\n    onSaveLocationChanges(updatedLocation);\n    return onClose();\n  }\n\n  initialLocationMount = () => this.state.originalLocation.id !== this.props.location.id;\n\n  // We pull the value based on the field type then merge that updated key/value pair with the last version of component state\n  handleDetailsChange = (event, name, stateKey) => {\n    const { updatedLocation: previousLocationState } = this.state;\n    let value;\n    if (event.hex) {\n      value = event.hex;\n    } else if (event.target) {\n      value = event.target.value;\n    } else {\n      value = event;\n    }\n    let updatedLocation;\n    if (name === 'owner') {\n      updatedLocation = update(previousLocationState, {\n        owner: {\n          $set: event,\n        },\n      });\n    } else {\n      updatedLocation = update(previousLocationState, {\n        [stateKey]: {\n          $merge: { [name]: value },\n        },\n      });\n    }\n    this.setState({ updatedLocation });\n  }\n\n  render() {\n    const { open, onClose, location } = this.props;\n    const { owner, locationContactInfo, locationEmailSettings, locationBranding } = location;\n    const {\n      updatedLocation: { owner: updatedOwner, locationContactInfo: updatedLocationContactInfo, locationEmailSettings: updatedLocationEmailSettings, locationBranding: updatedLocationBranding },\n      validation: { locationContactInfo: locationContactInfoValidation, locationEmailSettings: locationEmailSettingsValidation, locationBranding: locationBrandingValidation },\n      userListModalOpen, changeModalOpen } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <form>\n            <div className=\"overlay\">\n              <ClickOffComponentWrapper nestedModals={userListModalOpen || changeModalOpen} onOuterClick={onClose}>\n                <div id=\"modal_location_create\" className=\"modal modal-custom modal-custom-large modal-gray\">\n                  <div className=\"card-modal card-main card grey lighten-3\">\n                    <div className=\"card-panel card-panel-title green lighten-1 white-text\">\n                      <div className=\"card-panel-row row\">\n                        <div className=\"col\">\n                          <h3 className=\"h2\">\n                            <span className=\"heading-holder\">\n                              <span className=\"heading-block\">Edit Location</span>\n                            </span>\n                          </h3>\n                        </div>\n                        <div className=\"col\" style={{ textAlign: 'right' }}>\n                          <span className=\"block-icon\">\n                            <i className=\"icon-location\"></i>\n                            <span className=\"text-icon\">Location</span>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"card-content\">\n                      <div className=\"card-body\">\n                        <div className=\"row mb-0\">\n                          <div className=\"col s12 l6\">\n                            <OwnerSection\n                              owner={this.initialLocationMount() ? owner : updatedOwner}\n                              userList={sampleOwners}\n                              handleDetailsChange={this.handleDetailsChange}\n                              userListModalOpen={userListModalOpen}\n                              changeModalOpen={changeModalOpen}\n                              onOpenUserListModal={this.onOpenUserListModal}\n                              onCloseUserListModal={this.onCloseUserListModal}\n                              onOpenChangeModal={this.onOpenChangeModal}\n                              onCloseChangeModal={this.onCloseChangeModal}\n                            />\n                            <LocationContactInfo\n                              state={this.initialLocationMount() ? locationContactInfo : updatedLocationContactInfo}\n                              handleDetailsChange={this.handleDetailsChange}\n                              validation={locationContactInfoValidation}\n                              noColumn\n                            />\n                            <LocationEmailSettings\n                              state={this.initialLocationMount() ? locationEmailSettings : updatedLocationEmailSettings}\n                              handleDetailsChange={this.handleDetailsChange}\n                              validation={locationEmailSettingsValidation}\n                              noColumn\n                            />\n                          </div>\n                          <LocationBranding\n                            state={this.initialLocationMount() ? locationBranding : updatedLocationBranding}\n                            handleDetailsChange={this.handleDetailsChange}\n                            validation={locationBrandingValidation}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <a href=\"#!\" className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\" onClick={onClose}>Cancel</a>\n                        <a href=\"#\" className=\"btn\" style={{ color: 'white' }} onClick={this.onSubmit}>Save</a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ClickOffComponentWrapper>\n            </div>\n          </form>\n        )}\n\n        <style jsx>\n          {`\n              h4 {\n                font-size: 2.28rem;\n                line-height: 110%;\n                margin: 1.52rem 0 .912rem 0;\n                margin-top: 0;\n              }\n              p {\n                font-size: 16px;\n                color: #343434;\n              }\n              p.passage {\n                font-size: 14px;\n              }\n              a {\n                color: #343434;\n              }\n              .overlay {\n                position: fixed;\n                background-color: rgba(0, 0, 0, 0.7);\n                top: 0;\n                right: 0;\n                bottom: 0;\n                left: 0;\n                z-index: 1999;\n              }\n              .modal {\n                display: block;\n                background-color: transparent;\n                position: absolute;\n                top: 10%;\n                right: 10%;\n                left: 10%;\n                box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n              }\n              .modal-footer {\n                background-color: white;\n              }\n              .modal-custom {\n                opacity: 1;\n                visibility: visible;\n              }\n              .modal-full-size {\n                z-index: 999;\n                width: 100%;\n                left: 0;\n                top: 0;\n                right: 0;\n                bottom: 0;\n              }\n            `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nLocationDetailsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  location: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetLocationValidation: PropTypes.func.isRequired,\n};\n\nexport default LocationDetailsModal;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LocationToggleCard = ({ location, onToggleLocationSelect }) => (\n  <li onClick={() => onToggleLocationSelect(location)}>\n    <input\n      type=\"checkbox\"\n    />\n    <div className=\"card-location card card-large\">\n      <div className=\"card-panel card-panel-location\" style={{ backgroundColor: '#62b771', color: '#fff' }}>\n        <span className=\"check-link icon-check\"></span>\n        <div className=\"card-panel-row row\">\n          <div className=\"col s10\">\n            <h3 className=\"h4 truncate\">{location.locationNickname}</h3>\n            <h4 className=\"sub-title\">{location.locationName}</h4>\n          </div>\n          <div className=\"col s2 right-align\">\n            <span className=\"block-icon\">\n              <i className=\"icon-location\"></i>\n              <span className=\"text-icon\">Location</span>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </li>\n);\n\nLocationToggleCard.propTypes = {\n  location: PropTypes.object.isRequired,\n  onToggleLocationSelect: PropTypes.func.isRequired,\n};\n\nexport default LocationToggleCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Portal from '../../../Portal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\nimport LocationToggleCard from './components/LocationToggleCard';\n\nimport sampleLocations from '../../../utils/sampleLocations';\n\nclass LocationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      locations: sampleLocations,\n      selectedLocations: [],\n    };\n  }\n\n  onCloseModal = () => this.setState({ selectedLocations: [] }, this.props.onClose)\n\n  onToggleLocationSelect = (location) => {\n    const { selectedLocations } = this.state;\n    if (selectedLocations.indexOf(location) === -1) {\n      this.setState({ selectedLocations: [...selectedLocations, location] });\n    } else {\n      const updatedLocations = update(selectedLocations, {\n        $splice: [[selectedLocations.indexOf(location), 1]],\n      });\n      this.setState({ selectedLocations: updatedLocations });\n    }\n  }\n\n  onSaveLocationChanges = () => {\n    const { selectedLocations } = this.state;\n    const { handleLocationsChange } = this.props;\n    handleLocationsChange(selectedLocations);\n    this.onCloseModal();\n  }\n\n  render() {\n    const { open } = this.props;\n    const { locations } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n              <div id=\"modal_Location1\" className=\"modal modal-custom modal-location\">\n                <div className=\"card-modal card\">\n                  <div className=\"owner-box card-panel card-panel-title\" style={{ backgroundColor: '#00456b', color: '#fff' }}>\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col\">\n                        <h3>Select Locations(s)</h3>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <span className=\"hint\">Click to select or deselect.</span>\n                      <div className=\"box-scrollable\">\n                        <div className=\"height-40 jcf-scrollable\">\n                          <div className=\"card-location-holder\" style={{ height: '100%', overflowY: 'scroll' }}>\n                            <ul className=\"checkbox-list\">\n                              {locations.map(location => (\n                                <LocationToggleCard\n                                  key={location.locationName}\n                                  location={location}\n                                  onToggleLocationSelect={this.onToggleLocationSelect}\n                                />\n                              ))}\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <a\n                        href=\"#\"\n                        onClick={this.onCloseModal}\n                        className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n                      >\n                        Cancel\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"btn\"\n                        onClick={this.onSaveLocationChanges}\n                      >\n                        Add\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n          {`\n              h4 {\n                font-size: 2.28rem;\n                line-height: 110%;\n                margin: 1.52rem 0 .912rem 0;\n                margin-top: 0;\n              }\n              .overlay {\n                position: fixed;\n                background-color: rgba(0, 0, 0, 0.7);\n                top: 0;\n                right: 0;\n                bottom: 0;\n                left: 0;\n                z-index: 1999;\n              }\n              .card-modal {\n                margin: 0;\n                border-radius: 6px;\n              }\n              #modal_Location1 {\n                border-radius: 6px;\n              }\n              .modal {\n                display: block;\n                background-color: white;\n                position: absolute;\n                top: 10%;\n                right: 10%;\n                left: 10%;\n                box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n              }\n              .modal-custom {\n                opacity: 1;\n                visibility: visible;\n              }\n              .modal-footer {\n                background-color: white;\n              }\n            `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nLocationModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  handleLocationsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../utils/getValueFromState';\nimport stateOptions from '../../../../../utils/stateOptions';\nimport genderOptions from '../../../../../utils/genderOptions';\n\nconst OwnerContactInfo = ({ state: { firstName, lastName, email, gender, phone, streetAddress, city, state, zip }, handleDetailsChange }) => (\n  <div className=\"col s12 l6\">\n    <div className=\"card-block\">\n      <h3>Owner Contact Info</h3>\n      <div className=\"card-main card\">\n        <div className=\"card-content\">\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"first-name\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={(event) => handleDetailsChange(event, 'firstName', 'ownerContactInfo')}\n              />\n              <label className=\"label\" htmlFor=\"first-name\">First Name*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"last-name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={(event) => handleDetailsChange(event, 'lastName', 'ownerContactInfo')}\n              />\n              <label className=\"label\" htmlFor=\"last-name\">Last Name*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(event) => handleDetailsChange(event, 'email', 'ownerContactInfo')}\n              />\n              <label className=\"label\" htmlFor=\"email\">Email Address*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12 l7\">\n              <Dropdown\n                value={getValueFromState(gender, genderOptions)}\n                onChange={(event) => handleDetailsChange(event, 'gender', 'ownerContactInfo')}\n                options={genderOptions}\n                label=\"Gender*\"\n                stateKey=\"gender\"\n                dropdownKey=\"gender\"\n              />\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={(event) => handleDetailsChange(event, 'phone', 'ownerContactInfo')}\n              />\n              <label className=\"label\" htmlFor=\"phone\">Phone (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"street-address\"\n                name=\"streetAddress\"\n                value={streetAddress}\n                onChange={(event) => handleDetailsChange(event, 'streetAddress', 'ownerContactInfo')}\n              />\n              <label className=\"label\" htmlFor=\"street-address\">Street Address (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"city\"\n                name=\"city\"\n                value={city}\n                onChange={(event) => handleDetailsChange(event, 'city', 'ownerContactInfo')}\n              />\n              <label className=\"label\" htmlFor=\"city\">City (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"col s12 m6 l5\">\n              <div className=\"input-field\">\n                <Dropdown\n                  value={getValueFromState(state, stateOptions)}\n                  onChange={(event) => handleDetailsChange(event, 'state', 'ownerContactInfo')}\n                  options={stateOptions}\n                  label=\"State (optional)\"\n                  stateKey=\"state\"\n                  dropdownKey=\"state\"\n                />\n              </div>\n            </div>\n            <div className=\"col s12 m6 l7\">\n              <div className=\"input-field\">\n                <input\n                  type=\"tel\"\n                  id=\"zip\"\n                  name=\"zip\"\n                  value={zip}\n                  onChange={(event) => handleDetailsChange(event, 'zip', 'ownerContactInfo')}\n                />\n                <label className=\"label\" htmlFor=\"zip\">Zip (optional)</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nOwnerContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default OwnerContactInfo;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Portal from '../../../Portal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\n\nimport OwnerContactInfo from './components/OwnerContactInfo';\nimport LocationContactInfo from '../SharedModalComponents/LocationContactInfo';\nimport LocationEmailSettings from '../SharedModalComponents/LocationEmailSettings';\nimport LocationBranding from '../SharedModalComponents/LocationBranding';\n\nimport { nestedCreateFieldValidation } from '../../../utils/fieldValidation';\nimport initialState from '../../utils/initialState';\n\nclass NewLocationModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ownerContactInfo: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        gender: '',\n        phone: '',\n        streetAddress: '',\n        city: '',\n        state: '',\n        zip: '',\n      },\n      locationEmailSettings: {\n        automatedEmailOriginAddress: '',\n        automatedEmailSalutation: '',\n      },\n      locationContactInfo: {\n        locationName: '',\n        locationNickname: '',\n        locationEmail: '',\n        locationPhoneNumber: '',\n        website: '',\n        locationStreetAddress: '',\n        locationCity: '',\n        locationState: '',\n        locationZip: '',\n      },\n      locationBranding: {\n        locationUrl: '',\n        headerColor1: '',\n        headerColor2: '',\n        headerLogoBackgroundColor: '',\n        headerLogoBackgroundAlpha: '',\n        horizontalLogoVariation: '',\n        squareLogoVariation: '',\n        backgroundImage: '',\n        backgroundBlur: '',\n        backgroundOverlayAlpha: '',\n        studentWelcomeVideo: '',\n        instructorWelcomeVideo: '',\n      },\n      validation: {\n        ownerContactInfo: {\n          firstName: true,\n          lastName: true,\n          email: true,\n          gender: true,\n        },\n        locationEmailSettings: {\n          automatedEmailOriginAddress: true,\n          automatedEmailSalutation: true,\n        },\n        locationContactInfo: {\n          locationName: true,\n          locationNickname: true,\n          locationEmail: true,\n        },\n        locationBranding: {\n          locationUrl: true,\n          headerColor1: true,\n          headerColor2: true,\n          headerLogoBackgroundColor: true,\n          headerLogoBackgroundAlpha: true,\n          horizontalLogoVariation: true,\n          squareLogoVariation: true,\n          backgroundImage: true,\n          backgroundBlur: true,\n          backgroundOverlayAlpha: true,\n        },\n      },\n    };\n  }\n\n  // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n  onSetValidation = (validation, cb) => this.setState({ validation }, cb);\n\n  // If all the fields are valid, we construct a post body and call onSaveNewLocation passed down from the container level\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const { owner, locationContactInfo, locationEmailSettings, locationBranding } = this.state;\n    const { onSaveNewLocation, onSaveLocationError, onAddNewLocation, fromInstructorPage = false } = this.props;\n    // NOTE: Swap out what instance of valid is active if you want to test saving a new location without worrying about validation\n    // const valid = true;\n    const valid = await nestedCreateFieldValidation(this.state, this.onSetValidation, (validation) => console.warn('validation', validation));\n    if (!valid) {\n      // return onSaveLocationError();\n      console.warn('not valid');\n    }\n    const postBody = { locationContactInfo, locationEmailSettings, locationBranding, owner };\n    if (fromInstructorPage) {\n      onSaveNewLocation(postBody);\n    } else {\n      onAddNewLocation(postBody);\n    }\n    console.warn('stubbed out save function');\n    this.onCloseModal();\n  }\n\n  onResetLocation = () => this.setState(initialState);\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    onClose();\n    this.onResetLocation();\n  }\n\n  // We pull the value based on the field type then merge that updated key/value pair with the last version of component state\n  handleDetailsChange = (event, name, section) => {\n    let value;\n    if (event.hex) {\n      value = event.hex;\n    } else {\n      value = event.target ? event.target.value : event;\n    }\n    const updatedState = update(this.state, {\n      [section]: { $merge: { [name]: value } },\n    });\n    this.setState(updatedState);\n  }\n\n  render() {\n    const { open } = this.props;\n    const { ownerContactInfo, locationEmailSettings, locationContactInfo, locationBranding } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        {open && (\n          <div className=\"overlay\">\n            <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n              <div id=\"modal_user_create\" className=\"modal modal-custom modal-custom-large modal-gray\">\n                <div className=\"card-modal card-main card grey lighten-3\">\n                  <div className=\"card-panel card-panel-title\" style={{ backgroundColor: '#31837a', color: '#fff' }}>\n                    <div className=\"card-panel-row row\">\n                      <div className=\"col\" style={{ display: 'block' }}>\n                        <h3 className=\"h2\">\n                          <span className=\"heading-holder\">\n                            <span className=\"heading-block\">Create New Owner</span>\n                          </span>\n                        </h3>\n                      </div>\n                      <div className=\"col\">\n                        <span className=\"block-icon\">\n                          <i className=\"icon-owner\"></i>\n                          <span className=\"text-icon\">Owner</span>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"card-body\">\n                      <div className=\"row mb-0\">\n                        <OwnerContactInfo\n                          state={ownerContactInfo}\n                          handleDetailsChange={this.handleDetailsChange}\n                        />\n                        <LocationContactInfo\n                          state={locationContactInfo}\n                          handleDetailsChange={this.handleDetailsChange}\n                        />\n                      </div>\n                      <div className=\"row mb-0\">\n                        <LocationEmailSettings\n                          state={locationEmailSettings}\n                          handleDetailsChange={this.handleDetailsChange}\n                        />\n                        <LocationBranding\n                          state={locationBranding}\n                          handleDetailsChange={this.handleDetailsChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"modal-footer\">\n                      <a\n                        href=\"#!\"\n                        onClick={this.onCloseModal}\n                        className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n                      >\n                        Cancel\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"btn\"\n                        onClick={this.onSubmit}\n                      >\n                        Save\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ClickOffComponentWrapper>\n          </div>\n        )}\n        <style jsx>\n          {`\n              .overlay {\n                position: fixed;\n                background-color: rgba(0, 0, 0, 0.7);\n                top: 0;\n                right: 0;\n                bottom: 0;\n                left: 0;\n                z-index: 1999;\n              }\n              .card-modal {\n                margin: 0;\n                border-radius: 6px;\n              }\n              .modal {\n                display: block;\n                background-color: white;\n                position: absolute;\n                top: 10%;\n                right: 10%;\n                left: 10%;\n                box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n              }\n              .modal-custom {\n                opacity: 1;\n                visibility: visible;\n              }\n              .modal-footer {\n                background-color: white;\n              }\n            `}\n        </style>\n      </Portal>\n    );\n  }\n}\n\nNewLocationModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default NewLocationModal;\n","const sampleOwners = [\n  {\n    id: 1,\n    firstName: 'Ben',\n    lastName: 'Smith',\n    email: 'ben-smith@gmail.com',\n  },\n  {\n    id: 2,\n    firstName: 'Christian',\n    lastName: 'Chavarro',\n    email: 'chavarro-christian@gmail.com',\n  },\n  {\n    id: 3,\n    firstName: 'John',\n    lastName: 'Cena',\n    email: 'john-cena@gmail.com',\n  },\n  {\n    id: 4,\n    firstName: 'Will',\n    lastName: 'Smith',\n    email: 'will.smith@gmail.com',\n  },\n  {\n    id: 5,\n    firstName: 'Arnold',\n    lastName: 'Lumberjack',\n    email: 'arnold-lumberjack@gmail.com',\n  },\n  {\n    id: 6,\n    firstName: 'Goofy',\n    lastName: 'Dog',\n    email: 'goofy.dog@gmail.com',\n  },\n];\n\nexport default sampleOwners;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTutorInitials as getOwnerInitials } from '../../../utils/getUserInitials';\n\nimport SelectedUserRowWrapper from './styles';\n\nconst SelectedUserRow = ({ user, onOpenChangeModal }) => (\n  <SelectedUserRowWrapper\n    onClick={onOpenChangeModal}\n    className=\"owner-box card-panel\"\n  >\n    <div className=\"card-panel-row row\">\n      <div className=\"col s10\">\n        <div className=\"user-block\">\n          <div className=\"user-circle\">\n            <span className=\"initials\">{getOwnerInitials(user)}</span>\n            {/* <img src=\"images/img-owner01.jpg\" alt=\"description\" /> */}\n          </div>\n          <div className=\"user-text\" style={{ color: '#fff' }}>\n            <h4 className=\"h3\">{user.lastName}, {user.firstName}</h4>\n            <a href={`mailto:${user.email}`}>{user.email}</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s2 right-align\">\n        <span className=\"block-icon\">\n          <i className=\"icon-owner\"></i>\n          <span className=\"text-icon\">Owner</span>\n        </span>\n      </div>\n    </div>\n  </SelectedUserRowWrapper>\n);\n\nSelectedUserRow.propTypes = {\n  user: PropTypes.object.isRequired,\n  onOpenChangeModal: PropTypes.func.isRequired,\n};\n\nexport default SelectedUserRow;\n","import styled from 'styled-components';\n\nconst SelectedUserRowWrapper = styled.div`\n  background-color: #31837a;\n  color: #fff;\n  .user-circle {\n    background-color: #31837a;\n    color: #fff;\n  }\n  :hover {\n    cursor: pointer;\n    background-color: #24645c!important;\n    .user-circle {\n      background-color: #24645c!important;\n    }\n  }\n`;\n\nexport default SelectedUserRowWrapper;\n","/* eslint-disable react/jsx-indent */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChromePicker } from 'react-color';\n\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nclass LocationBranding extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colorPickerOpen: false,\n      colorPickerField: '',\n    };\n  }\n\n  onSetColorPicker = (colorPickerField) => this.setState({ colorPickerOpen: true, colorPickerField });\n  onCloseColorPicker = () => this.setState({ colorPickerOpen: false, colorPickerField: '' });\n\n  render() {\n    const { state: { locationUrl, headerColor1, headerColor2, headerLogoBackgroundColor, headerLogoBackgroundAlpha,\n      horizontalLogoVariation, squareLogoVariation, backgroundImage, backgroundBlur, backgroundOverlayAlpha, studentWelcomeVideo,\n      instructorWelcomeVideo }, handleDetailsChange } = this.props;\n    const { colorPickerField, colorPickerOpen } = this.state;\n    return (\n      <div className=\"col s12 l6\">\n        <div className=\"card-block\">\n          <h3>Location Branding</h3>\n          <div className=\"card-main card\">\n            <div className=\"card-content\">\n              <div className=\"row mb-0\">\n                <div className=\"input-field col s12\">\n                  <input\n                    type=\"text\"\n                    id=\"location-url\"\n                    name=\"locationUrl\"\n                    value={locationUrl}\n                    onChange={(event) => handleDetailsChange(event, 'locationUrl', 'locationBranding')}\n                  />\n                  <label className={locationUrl.length ? 'label active' : 'label'} htmlFor=\"location-url\">Location Url*</label>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"input-field js-spectrum custom-colorpicker col s12 m6\">\n                  <input\n                    type=\"text\"\n                    className=\"js-spectrum-input\"\n                    id=\"header-color-1\"\n                    name=\"headerColor1\"\n                    value={headerColor1}\n                    onClick={() => this.onSetColorPicker('headerColor1')}\n                    onChange={(event) => handleDetailsChange(event, 'headerColor1', 'locationBranding')}\n                  />\n                  <label className={headerColor1.length ? 'label active' : 'label'} htmlFor=\"header-color-1\">Header Color 1*</label>\n                  <If condition={colorPickerOpen && colorPickerField === 'headerColor1'}>\n                    <ClickOffComponentWrapper onOuterClick={this.onCloseColorPicker}>\n                      <ChromePicker\n                        color={headerColor1}\n                        onChange={(color) => handleDetailsChange(color, 'headerColor1', 'locationBranding')}\n                      />\n                    </ClickOffComponentWrapper>\n                  </If>\n                </div>\n                <div className=\"input-field js-spectrum custom-colorpicker col s12 m6\">\n                  <input\n                    type=\"text\"\n                    className=\"js-spectrum-input\"\n                    id=\"header-color-2\"\n                    name=\"headerColor2\"\n                    value={headerColor2}\n                    onClick={() => this.onSetColorPicker('headerColor2')}\n                    onChange={(event) => handleDetailsChange(event, 'headerColor2', 'locationBranding')}\n                  />\n                  <label className={headerColor2.length ? 'label active' : 'label'} htmlFor=\"header-color-2\">Header Color 2*</label>\n                  <If condition={colorPickerOpen && colorPickerField === 'headerColor2'}>\n                    <ClickOffComponentWrapper onOuterClick={this.onCloseColorPicker}>\n                      <ChromePicker\n                        color={headerColor2}\n                        onChange={(color) => handleDetailsChange(color, 'headerColor2', 'locationBranding')}\n                      />\n                    </ClickOffComponentWrapper>\n                  </If>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"input-field js-spectrum custom-colorpicker col s12 m6\">\n                  <input\n                    type=\"text\"\n                    className=\"js-spectrum-input\"\n                    id=\"header-logo-background-color\"\n                    name=\"headerLogoBackgroundColor\"\n                    value={headerLogoBackgroundColor}\n                    onClick={() => this.onSetColorPicker('headerLogoBackgroundColor')}\n                    onChange={(event) => handleDetailsChange(event, 'headerLogoBackgroundColor', 'locationBranding')}\n                  />\n                  <label className={headerLogoBackgroundColor.length ? 'label active' : 'label'} htmlFor=\"header-logo-background-color\">Header Logo Background Color*</label>\n                  <If condition={colorPickerOpen && colorPickerField === 'headerLogoBackgroundColor'}>\n                    <ClickOffComponentWrapper onOuterClick={this.onCloseColorPicker}>\n                      <ChromePicker\n                        color={headerLogoBackgroundColor}\n                        onChange={(color) => handleDetailsChange(color, 'headerLogoBackgroundColor', 'locationBranding')}\n                      />\n                    </ClickOffComponentWrapper>\n                  </If>\n                </div>\n                <div className=\"input-field col s12 m6\">\n                  <input\n                    type=\"text\"\n                    id=\"header-logo-background-alpha\"\n                    name=\"headerLogoBackgroundAlpha\"\n                    value={headerLogoBackgroundAlpha}\n                    onChange={(event) => handleDetailsChange(event, 'headerLogoBackgroundAlpha', 'locationBranding')}\n                  />\n                  <label className={headerLogoBackgroundAlpha.length ? 'label active' : 'label'} htmlFor=\"header-logo-background-alpha\">Header Logo Background Alpha*</label>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"horizontal-logo-variation\"\n                      name=\"horizontalLogoVariation\"\n                      value={horizontalLogoVariation}\n                      onChange={(event) => handleDetailsChange(event, 'horizontalLogoVariation', 'locationBranding')}\n                    />\n                    <label className={horizontalLogoVariation.length ? 'label active' : 'label'} htmlFor=\"horizontal-logo-variation\">Horizontal Logo Variation*</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"square-logo-variation\"\n                      name=\"squareLogoVariation\"\n                      value={squareLogoVariation}\n                      onChange={(event) => handleDetailsChange(event, 'squareLogoVariation', 'locationBranding')}\n                    />\n                    <label className={squareLogoVariation.length ? 'label active' : 'label'} htmlFor=\"square-logo-variation\">Square Logo Variation*</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"background-image\"\n                      name=\"backgroundImage\"\n                      value={backgroundImage}\n                      onChange={(event) => handleDetailsChange(event, 'backgroundImage', 'locationBranding')}\n                    />\n                    <label className={backgroundImage.length ? 'label active' : 'label'} htmlFor=\"background-image\">Background Image*</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"col s12 m6\">\n                  <div className=\"input-field\">\n                    <input\n                      type=\"text\"\n                      id=\"background-blur\"\n                      name=\"backgroundBlur\"\n                      value={backgroundBlur}\n                      onChange={(event) => handleDetailsChange(event, 'backgroundBlur', 'locationBranding')}\n                    />\n                    <label className={backgroundBlur.length ? 'label active' : 'label'} htmlFor=\"background-blur\">Background Blur*</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m6\">\n                  <div className=\"input-field\">\n                    <input\n                      type=\"text\"\n                      id=\"background-overlay-alpha\"\n                      name=\"backgroundOverlayAlpha\"\n                      value={backgroundOverlayAlpha}\n                      onChange={(event) => handleDetailsChange(event, 'backgroundOverlayAlpha', 'locationBranding')}\n                    />\n                    <label className={backgroundOverlayAlpha.length ? 'label active' : 'label'} htmlFor=\"background-overlay-alpha\">Background Overlay Alpha*</label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"student-welcome-video\"\n                      name=\"studentWelcomeVideo\"\n                      value={studentWelcomeVideo}\n                      onChange={(event) => handleDetailsChange(event, 'studentWelcomeVideo', 'locationBranding')}\n                    />\n                    <label className={studentWelcomeVideo.length ? 'label active' : 'label'} htmlFor=\"student-welcome-video\">Student Welcome Video (optional)</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"instructor-welcome-video\"\n                      name=\"instructorWelcomeVideo\"\n                      value={instructorWelcomeVideo}\n                      onChange={(event) => handleDetailsChange(event, 'instructorWelcomeVideo', 'locationBranding')}\n                    />\n                    <label className={instructorWelcomeVideo.length ? 'label active' : 'label'} htmlFor=\"instructor-welcome-video\">Instructor Welcome Video (optional)</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationBranding.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationBranding;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nconst LocationContactInfo = ({ state: { locationName, locationNickname, locationEmail, locationPhoneNumber, website, locationStreetAddress, locationCity, locationState, locationZip }, handleDetailsChange }) => (\n  <div className=\"col s12 l6\">\n    <div className=\"card-block\">\n      <h3>Location Contact Info</h3>\n      <div className=\"card-main card\">\n        <div className=\"card-content\">\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-name\"\n                name=\"locationName\"\n                value={locationName}\n                onChange={(event) => handleDetailsChange(event, 'locationName', 'locationContactInfo')}\n              />\n              <label className={locationName.length ? 'label active' : 'label'} htmlFor=\"location-name\">Location Name*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-nickname\"\n                name=\"locationNickname\"\n                value={locationNickname}\n                onChange={(event) => handleDetailsChange(event, 'locationNickname', 'locationContactInfo')}\n              />\n              <label className={locationNickname.length ? 'label active' : 'label'} htmlFor=\"location-nickname\">Location Nickname*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-email\"\n                name=\"locationEmail\"\n                value={locationEmail}\n                onChange={(event) => handleDetailsChange(event, 'locationEmail', 'locationContactInfo')}\n              />\n              <label className={locationEmail.length ? 'label active' : 'label'} htmlFor=\"location-email\">Location Email*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"tel\"\n                id=\"location-phone-number\"\n                name=\"locationPhoneNumber\"\n                value={locationPhoneNumber}\n                onChange={(event) => handleDetailsChange(event, 'locationPhoneNumber', 'locationContactInfo')}\n              />\n              <label className={locationPhoneNumber.length ? 'label active' : 'label'} htmlFor=\"location-phone-number\">Location Phone Number (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"url\"\n                id=\"website\"\n                name=\"website\"\n                value={website}\n                onChange={(event) => handleDetailsChange(event, 'website', 'locationContactInfo')}\n              />\n              <label className={website.length ? 'label active' : 'label'} htmlFor=\"website\">Website (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-street-address\"\n                name=\"locationStreetAddress\"\n                value={locationStreetAddress}\n                onChange={(event) => handleDetailsChange(event, 'locationStreetAddress', 'locationContactInfo')}\n              />\n              <label className={locationStreetAddress.length ? 'label active' : 'label'} htmlFor=\"location-street-address\">Street Address (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-city\"\n                name=\"locationCity\"\n                value={locationCity}\n                onChange={(event) => handleDetailsChange(event, 'locationCity', 'locationContactInfo')}\n              />\n              <label className={locationCity.length ? 'label active' : 'label'} htmlFor=\"city\">City (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"col s12 m6 l5\">\n              <div className=\"input-field\">\n                <Dropdown\n                  value={getValueFromState(locationState, stateOptions)}\n                  onChange={(event) => handleDetailsChange(event, 'locationState', 'locationContactInfo')}\n                  options={stateOptions}\n                  label=\"State (optional)\"\n                  stateKey=\"locationState\"\n                  dropdownKey=\"locationState\"\n                />\n              </div>\n            </div>\n            <div className=\"col s12 m6 l7\">\n              <div className=\"input-field\">\n                <input\n                  type=\"tel\"\n                  id=\"location-zip\"\n                  name=\"locationZip\"\n                  value={locationZip}\n                  onChange={(event) => handleDetailsChange(event, 'locationZip', 'locationContactInfo')}\n                />\n                <label className={locationZip.length ? 'label active' : 'label'} htmlFor=\"location-zip\">Zip (optional)</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocationContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationContactInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LocationEmailSettings = ({ state: { automatedEmailOriginAddress, automatedEmailSalutation }, handleDetailsChange }) => (\n  <div className=\"col s12 l6\">\n    <div className=\"card-block\">\n      <h3>Location Email Settings</h3>\n      <div className=\"card-main card\">\n        <div className=\"card-content\">\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"automated-email-origin-address\"\n                name=\"automatedEmailOriginAddress\"\n                value={automatedEmailOriginAddress}\n                onChange={(event) => handleDetailsChange(event, 'automatedEmailOriginAddress', 'locationEmailSettings')}\n              />\n              <label className=\"label\" htmlFor=\"automated-email-origin-address\">Automated Emails Come From (email)*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <textarea\n                className=\"materialize-textarea\"\n                id=\"automated-email-salutation\"\n                name=\"automatedEmailSalutation\"\n                value={automatedEmailSalutation}\n                onChange={(event) => handleDetailsChange(event, 'automatedEmailSalutation', 'locationEmailSettings')}\n              />\n              <label className=\"label\" htmlFor=\"automated-email-salutation\">Automated Email Salutation*</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocationEmailSettings.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationEmailSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../../Modal';\nimport UserListModal from '../../UserListModal';\nimport SelectedUserRow from '../../SelectedUserRow';\n\nconst OwnerSection = ({ owner, userList, handleDetailsChange, userListModalOpen, changeModalOpen, onOpenChangeModal, onCloseChangeModal, onOpenUserListModal, onCloseUserListModal }) => (\n  <React.Fragment>\n    <Modal\n      open={changeModalOpen}\n      onClose={onCloseChangeModal}\n      onConfirm={onOpenUserListModal}\n      header=\"Are You Sure?\"\n      body=\"Do you want to change the owner for this location?\"\n    />\n    <UserListModal\n      open={userListModalOpen}\n      onClose={onCloseUserListModal}\n      userList={userList}\n      onSubmit={handleDetailsChange}\n    />\n    <div className=\"card-block\">\n      <h3>Owner</h3>\n      <Choose>\n        <When condition={owner}>\n          <SelectedUserRow\n            user={owner}\n            onOpenChangeModal={onOpenChangeModal}\n          />\n        </When>\n        <Otherwise>\n          <div className=\"add-box\">\n            <div className=\"add-box-holder\">\n              <a\n                href=\"#\"\n                onClick={onOpenUserListModal}\n                className=\"btn-floating waves-effect waves-light green lighten-1\"\n              >\n                <i className=\"material-icons\">add</i>\n              </a>\n            </div>\n          </div>\n        </Otherwise>\n      </Choose>\n    </div>\n  </React.Fragment>\n);\n\nOwnerSection.propTypes = {\n  owner: PropTypes.object,\n  userList: PropTypes.array.isRequired,\n  changeModalOpen: PropTypes.bool.isRequired,\n  userListModalOpen: PropTypes.bool.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n  onOpenChangeModal: PropTypes.func.isRequired,\n  onCloseChangeModal: PropTypes.func.isRequired,\n  onOpenUserListModal: PropTypes.func.isRequired,\n  onCloseUserListModal: PropTypes.func.isRequired,\n};\n\nexport default OwnerSection;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Portal from '../../../Portal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\n\nimport UserRow from '../UserRow';\n\nclass UserListModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedUser: null,\n    };\n  }\n\n  onSelectUser = (selectedUser) => this.setState({ selectedUser });\n\n  onSetUser = () => {\n    const { selectedUser } = this.state;\n    const { onSubmit, onClose } = this.props;\n    onSubmit(selectedUser, 'owner', null);\n    this.setState({ selectedUser: null }, onClose);\n  }\n\n  onCloseModal = () => {\n    const { onClose } = this.props;\n    this.setState({ selectedUser: null }, onClose);\n  }\n\n  mapUsers = () => this.props.userList.map((user, index) => (\n    <UserRow\n      user={user}\n      key={index}\n      index={index}\n      onSelectUser={() => this.onSelectUser(user)}\n      selectedUser={this.state.selectedUser}\n    />\n  ))\n\n  render() {\n    const { open } = this.props;\n    return (\n      <React.Fragment>\n        <Portal selector=\"#modal\">\n          {open && (\n            <div className=\"overlay\">\n              <ClickOffComponentWrapper onOuterClick={this.onCloseModal}>\n                <div id=\"modal_Practice1\" className=\"modal modal-custom modal-practice\">\n                  <div className=\"card-modal card-course card-main card\">\n                    <div className=\"card-panel green lighten-1 white-text\">\n                      <div className=\"card-panel-row row\">\n                        <div className=\"col\" style={{ flex: '1 0 83.333333%' }}>\n                          <h1 className=\"h1\">Assign Owner</h1>\n                        </div>\n                        <div className=\"col\" style={{ textAlign: 'right' }}>\n                          <a href=\"#!\" className=\"panel-link close modal-close\"><i className=\"icon-close\"></i></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"card-content\">\n                      <div className=\"card-body\">\n                        {this.mapUsers()}\n                      </div>\n                      <div className=\"modal-footer\">\n                        <div className=\"row\">\n                          <div className=\"col s6\">\n                            <div className=\"meta-info\">\n                            </div>\n                          </div>\n                          <div className=\"col s6 right-align\">\n                            <a\n                              href=\"#\"\n                              onClick={this.onCloseModal}\n                              className=\"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n                            >\n                              Cancel\n                            </a>\n                            <a\n                              href=\"#\"\n                              onClick={this.onSetUser}\n                              className=\"btn\"\n                              style={{ color: 'white' }}\n                            >\n                              Save\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ClickOffComponentWrapper>\n            </div>\n          )}\n          <style jsx>\n            {`\n        h4 {\n          font-size: 2.28rem;\n          line-height: 110%;\n          margin: 1.52rem 0 .912rem 0;\n          margin-top: 0;\n        }\n        p {\n          font-size: 16px;\n          color: #343434;\n        }\n        p.passage {\n          font-size: 14px;\n        }\n        a {\n          color: #343434;\n        }\n        .overlay {\n          position: fixed;\n          background-color: rgba(0, 0, 0, 0.7);\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n          z-index: 1999;\n        }\n        .modal {\n          display: block;\n          background-color: transparent;\n          position: absolute;\n          top: 10%;\n          right: 10%;\n          left: 10%;\n        }\n        .modal-custom {\n          opacity: 1;\n          visibility: visible;\n        }\n        .modal-footer {\n          background-color: white;\n        }\n        .modal-full-size {\n          z-index: 1999;\n          width: 100%;\n          left: 0;\n          top: 0;\n          right: 0;\n          bottom: 0;\n        }\n      `}\n          </style>\n        </Portal>\n      </React.Fragment>\n    );\n  }\n}\n\nUserListModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  userList: PropTypes.array.isRequired,\n};\n\nexport default UserListModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTutorInitials as getOwnerInitials } from '../../../utils/getUserInitials';\n\nimport UserRowWrapper from './styles';\n\nconst UserRow = ({ user, onSelectUser, selectedUser }) => (\n  <UserRowWrapper\n    onClick={onSelectUser}\n    className=\"owner-box card-panel\"\n    selected={selectedUser && selectedUser.id === user.id}\n  >\n    <div className=\"card-panel-row row\">\n      <div className=\"col s10\">\n        <div className=\"user-block\">\n          <div className=\"user-circle\">\n            <span className=\"initials\">{getOwnerInitials(user)}</span>\n            {/* <img src=\"images/img-owner01.jpg\" alt=\"description\" /> */}\n          </div>\n          <div className=\"user-text\" style={{ color: '#fff' }}>\n            <h4 className=\"h3\">{user.lastName}, {user.firstName}</h4>\n            <a href={`mailto:${user.email}`}>{user.email}</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s2 right-align\">\n        <span className=\"block-icon\">\n          <i className=\"icon-owner\"></i>\n          <span className=\"text-icon\">Owner</span>\n        </span>\n      </div>\n    </div>\n  </UserRowWrapper>\n);\n\nUserRow.propTypes = {\n  user: PropTypes.object.isRequired,\n  selectedUser: PropTypes.object,\n  onSelectUser: PropTypes.func.isRequired,\n};\n\nexport default UserRow;\n","import styled from 'styled-components';\n\nconst UserRowWrapper = styled.div`\n  background-color: ${({ selected }) => selected ? '#24645c' : '#31837a'};\n  color: #fff;\n  .user-circle {\n    background-color: ${({ selected }) => selected ? '#24645c' : '#31837a'};\n    color: #fff;\n  }\n  :hover {\n    cursor: pointer;\n    background-color: ${({ selected }) => selected ? '#004a40!important' : '#24645c!important'};\n    .user-circle {\n      background-color: ${({ selected }) => selected ? '#004a40!important' : '#24645c!important'};\n    }\n  }\n`;\n\nexport default UserRowWrapper;\n","const initialState = {\n  owner: null,\n  locationContactInfo: {\n    locationName: '',\n    locationNickname: '',\n    locationEmail: '',\n    locationPhoneNumber: '',\n    website: '',\n    locationStreetAddress: '',\n    locationCity: '',\n    locationState: '',\n    locationZip: '',\n  },\n  locationEmailSettings: {\n    automatedEmailOrigin: '',\n    automatedEmailSalutation: '',\n  },\n  locationBranding: {\n    locationUrl: '',\n    headerColor1: '',\n    headerColor2: '',\n    headerLogoBackgroundColor: '',\n    headerLogoBackgroundAlpha: '',\n    horizontalLogoVariation: '',\n    squareLogoVariation: '',\n    backgroundImage: '',\n    backgroundBlur: '',\n    backgroundOverlayAlpha: '',\n    studentWelcomeVideo: '',\n    instructorWelcomeVideo: '',\n  },\n};\n\nexport default initialState;\n","export default [\n  {\n    id: 1,\n    owner: {\n      lastName: 'Bezos',\n      firstName: 'Jeff',\n      email: 'jeff-bezos@gmail.com',\n    },\n    locationContactInfo: {\n      locationName: 'Amazon',\n      locationNickname: 'Amazon - Online Marketplace',\n      locationEmail: 'amazon@gmail.com',\n      locationPhoneNumber: '123-456-7889',\n      website: '',\n      locationStreetAddress: '',\n      locationCity: 'Austin',\n      locationState: 'TX',\n      locationZip: '',\n    },\n    locationEmailSettings: {\n      automatedEmailOrigin: '',\n      automatedEmailSalutation: '',\n    },\n    locationBranding: {\n      locationUrl: '',\n      headerColor1: '',\n      headerColor2: '',\n      headerLogoBackgroundColor: '',\n      headerLogoBackgroundAlpha: '',\n      horizontalLogoVariation: '',\n      squareLogoVariation: '',\n      backgroundImage: '',\n      backgroundBlur: '',\n      backgroundOverlayAlpha: '',\n      studentWelcomeVideo: '',\n      instructorWelcomeVideo: '',\n    },\n    locationBasicInfo: {\n      activeStudents: 15,\n      pastStudents: 24,\n      unactivatedStudents: 29,\n      averageImprovement: 185,\n      averageInitialScore: 1037,\n      averageFinalScore: 1218,\n      studentsAchievingTargetScore: 12,\n    },\n    averageImprovement: {\n      totalPoints: '290',\n      readingAndWriting: '47',\n      math: '146',\n    },\n    pipeline: {\n      unactivated: '31',\n      current: '9',\n      complete: '12',\n      waitingForFinalScore: '27',\n    },\n    targetScores: {\n      percentageHitTargetScore: '81',\n    },\n    studentImprovement: {\n      noGain: '32',\n      from0To50: '19',\n      from50To99: '60',\n      from100To149: '77',\n      from150To199: '62',\n      from200Plus: '91',\n    },\n    averagePerCourse: {\n      hoursOfInstruction: '31.9',\n      lessons: '74.2',\n      worksheets: '6.5',\n      practiceTests: '1.7',\n    },\n  },\n  {\n    id: 2,\n    owner: {\n      lastName: 'Chavarro',\n      firstName: 'Christian',\n      email: 'christian-chavarro@gmail.com',\n    },\n    locationContactInfo: {\n      locationName: 'ChavarroLand',\n      locationNickname: 'ChavarroLand - Austin, TX',\n      locationEmail: 'chavarro@gmail.com',\n      locationPhoneNumber: '535-432-2564',\n      website: '',\n      locationStreetAddress: '',\n      locationCity: 'Austin',\n      locationState: 'TX',\n      locationZip: '',\n    },\n    locationEmailSettings: {\n      automatedEmailOrigin: '',\n      automatedEmailSalutation: '',\n    },\n    locationBranding: {\n      locationUrl: '',\n      headerColor1: '',\n      headerColor2: '',\n      headerLogoBackgroundColor: '',\n      headerLogoBackgroundAlpha: '',\n      horizontalLogoVariation: '',\n      squareLogoVariation: '',\n      backgroundImage: '',\n      backgroundBlur: '',\n      backgroundOverlayAlpha: '',\n      studentWelcomeVideo: '',\n      instructorWelcomeVideo: '',\n    },\n    locationBasicInfo: {\n      activeStudents: 12,\n      pastStudents: 73,\n      unactivatedStudents: 12,\n      averageImprovement: 200,\n      averageInitialScore: 1000,\n      averageFinalScore: 1213,\n      studentsAchievingTargetScore: 11,\n    },\n    averageImprovement: {\n      totalPoints: '290',\n      readingAndWriting: '47',\n      math: '146',\n    },\n    pipeline: {\n      unactivated: '31',\n      current: '9',\n      complete: '12',\n      waitingForFinalScore: '27',\n    },\n    targetScores: {\n      percentageHitTargetScore: '81',\n    },\n    studentImprovement: {\n      noGain: '32',\n      from0To50: '19',\n      from50To99: '60',\n      from100To149: '77',\n      from150To199: '62',\n      from200Plus: '91',\n    },\n    averagePerCourse: {\n      hoursOfInstruction: '31.9',\n      lessons: '74.2',\n      worksheets: '6.5',\n      practiceTests: '1.7',\n    },\n  },\n  {\n    id: 3,\n    owner: {\n      lastName: 'Chavis',\n      firstName: 'Cellena',\n      email: 'cellena-chavis@gmail.com',\n    },\n    locationContactInfo: {\n      locationName: 'Tutor Zone',\n      locationNickname: 'Tutor Zone - Orlando, FL',\n      locationEmail: 'tutor-zone@gmail.com',\n      locationPhoneNumber: '331-145-7351',\n      website: '',\n      locationStreetAddress: '',\n      locationCity: 'Austin',\n      locationState: 'TX',\n      locationZip: '',\n    },\n    locationEmailSettings: {\n      automatedEmailOrigin: '',\n      automatedEmailSalutation: '',\n    },\n    locationBranding: {\n      locationUrl: '',\n      headerColor1: '',\n      headerColor2: '',\n      headerLogoBackgroundColor: '',\n      headerLogoBackgroundAlpha: '',\n      horizontalLogoVariation: '',\n      squareLogoVariation: '',\n      backgroundImage: '',\n      backgroundBlur: '',\n      backgroundOverlayAlpha: '',\n      studentWelcomeVideo: '',\n      instructorWelcomeVideo: '',\n    },\n    locationBasicInfo: {\n      activeStudents: 44,\n      pastStudents: 32,\n      unactivatedStudents: 5,\n      averageImprovement: 221,\n      averageInitialScore: 1200,\n      averageFinalScore: 1400,\n      studentsAchievingTargetScore: 23,\n    },\n    averageImprovement: {\n      totalPoints: '290',\n      readingAndWriting: '47',\n      math: '146',\n    },\n    pipeline: {\n      unactivated: '31',\n      current: '9',\n      complete: '12',\n      waitingForFinalScore: '27',\n    },\n    targetScores: {\n      percentageHitTargetScore: '81',\n    },\n    studentImprovement: {\n      noGain: '32',\n      from0To50: '19',\n      from50To99: '60',\n      from100To149: '77',\n      from150To199: '62',\n      from200Plus: '91',\n    },\n    averagePerCourse: {\n      hoursOfInstruction: '31.9',\n      lessons: '74.2',\n      worksheets: '6.5',\n      practiceTests: '1.7',\n    },\n  },\n  {\n    id: 4,\n    owner: {\n      lastName: 'Smith',\n      firstName: 'Will',\n      email: 'will-smithgmail.com',\n    },\n    locationContactInfo: {\n      locationName: 'Fresh Prince',\n      locationNickname: 'Fresh Prince - Philladelphia',\n      locationEmail: 'fresh-prince@gmail.com',\n      locationPhoneNumber: '331-145-7351',\n      website: '',\n      locationStreetAddress: '',\n      locationCity: 'Austin',\n      locationState: 'TX',\n      locationZip: '',\n    },\n    locationEmailSettings: {\n      automatedEmailOrigin: '',\n      automatedEmailSalutation: '',\n    },\n    locationBranding: {\n      locationUrl: '',\n      headerColor1: '',\n      headerColor2: '',\n      headerLogoBackgroundColor: '',\n      headerLogoBackgroundAlpha: '',\n      horizontalLogoVariation: '',\n      squareLogoVariation: '',\n      backgroundImage: '',\n      backgroundBlur: '',\n      backgroundOverlayAlpha: '',\n      studentWelcomeVideo: '',\n      instructorWelcomeVideo: '',\n    },\n    locationBasicInfo: {\n      activeStudents: 22,\n      pastStudents: 13,\n      unactivatedStudents: 12,\n      averageImprovement: 261,\n      averageInitialScore: 1100,\n      averageFinalScore: 1233,\n      studentsAchievingTargetScore: 10,\n    },\n    averageImprovement: {\n      totalPoints: '290',\n      readingAndWriting: '47',\n      math: '146',\n    },\n    pipeline: {\n      unactivated: '31',\n      current: '9',\n      complete: '12',\n      waitingForFinalScore: '27',\n    },\n    targetScores: {\n      percentageHitTargetScore: '81',\n    },\n    studentImprovement: {\n      noGain: '32',\n      from0To50: '19',\n      from50To99: '60',\n      from100To149: '77',\n      from150To199: '62',\n      from200Plus: '91',\n    },\n    averagePerCourse: {\n      hoursOfInstruction: '31.9',\n      lessons: '74.2',\n      worksheets: '6.5',\n      practiceTests: '1.7',\n    },\n  },\n  {\n    id: 5,\n    owner: {\n      lastName: 'Lumberjack',\n      firstName: 'Arnold',\n      email: 'arnold-lumberjack@gmail.com',\n    },\n    locationContactInfo: {\n      locationName: 'Lumberjack Tutoring',\n      locationNickname: 'Lumberjack Tutoring - Canada',\n      locationEmail: 'lumberjack-tutoring@gmail.com',\n      locationPhoneNumber: '331-145-7351',\n      website: '',\n      locationStreetAddress: '',\n      locationCity: 'Miami',\n      locationState: 'FL',\n      locationZip: '',\n    },\n    locationEmailSettings: {\n      automatedEmailOrigin: '',\n      automatedEmailSalutation: '',\n    },\n    locationBranding: {\n      locationUrl: '',\n      headerColor1: '',\n      headerColor2: '',\n      headerLogoBackgroundColor: '',\n      headerLogoBackgroundAlpha: '',\n      horizontalLogoVariation: '',\n      squareLogoVariation: '',\n      backgroundImage: '',\n      backgroundBlur: '',\n      backgroundOverlayAlpha: '',\n      studentWelcomeVideo: '',\n      instructorWelcomeVideo: '',\n    },\n    locationBasicInfo: {\n      activeStudents: 11,\n      pastStudents: 24,\n      unactivatedStudents: 62,\n      averageImprovement: 123,\n      averageInitialScore: 1269,\n      averageFinalScore: 1459,\n      studentsAchievingTargetScore: 9,\n    },\n    averageImprovement: {\n      totalPoints: '290',\n      readingAndWriting: '47',\n      math: '146',\n    },\n    pipeline: {\n      unactivated: '31',\n      current: '9',\n      complete: '12',\n      waitingForFinalScore: '27',\n    },\n    targetScores: {\n      percentageHitTargetScore: '81',\n    },\n    studentImprovement: {\n      noGain: '32',\n      from0To50: '19',\n      from50To99: '60',\n      from100To149: '77',\n      from150To199: '62',\n      from200Plus: '91',\n    },\n    averagePerCourse: {\n      hoursOfInstruction: '31.9',\n      lessons: '74.2',\n      worksheets: '6.5',\n      practiceTests: '1.7',\n    },\n  },\n  {\n    id: 6,\n    owner: {\n      lastName: 'Duck',\n      firstName: 'Donald',\n      email: 'donald-duck@gmail.com',\n    },\n    locationContactInfo: {\n      locationName: 'Disney Learning',\n      locationNickname: 'Disney Learning - San Francisco, CA',\n      locationEmail: 'disney-learning@gmail.com',\n      locationPhoneNumber: '331-145-7351',\n      website: '',\n      locationStreetAddress: '',\n      locationCity: 'Miami',\n      locationState: 'FL',\n      locationZip: '',\n    },\n    locationEmailSettings: {\n      automatedEmailOrigin: '',\n      automatedEmailSalutation: '',\n    },\n    locationBranding: {\n      locationUrl: '',\n      headerColor1: '',\n      headerColor2: '',\n      headerLogoBackgroundColor: '',\n      headerLogoBackgroundAlpha: '',\n      horizontalLogoVariation: '',\n      squareLogoVariation: '',\n      backgroundImage: '',\n      backgroundBlur: '',\n      backgroundOverlayAlpha: '',\n      studentWelcomeVideo: '',\n      instructorWelcomeVideo: '',\n    },\n    locationBasicInfo: {\n      activeStudents: 45,\n      pastStudents: 54,\n      unactivatedStudents: 31,\n      averageImprovement: 205,\n      averageInitialScore: 1129,\n      averageFinalScore: 1367,\n      studentsAchievingTargetScore: 44,\n    },\n    averageImprovement: {\n      totalPoints: '290',\n      readingAndWriting: '47',\n      math: '146',\n    },\n    pipeline: {\n      unactivated: '31',\n      current: '9',\n      complete: '12',\n      waitingForFinalScore: '27',\n    },\n    targetScores: {\n      percentageHitTargetScore: '81',\n    },\n    studentImprovement: {\n      noGain: '32',\n      from0To50: '19',\n      from50To99: '60',\n      from100To149: '77',\n      from150To199: '62',\n      from200Plus: '91',\n    },\n    averagePerCourse: {\n      hoursOfInstruction: '31.9',\n      lessons: '74.2',\n      worksheets: '6.5',\n      practiceTests: '1.7',\n    },\n  },\n];\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Portal from '../Portal';\nimport ClickOffComponentWrapper from '../ClickOffComponentWrapper';\n\nexport class Modal extends React.Component { // eslint-disable-line\n  render() {\n    const { open, onClose, onConfirm, header, body, fullScreen, problem, passage } = this.props;\n    return (\n      <div>\n        <Portal selector=\"#modal\">\n          <Choose>\n            <When condition={fullScreen}>\n              {open && (\n                <div className=\"modal-full-size modal modal-custom open\">\n                  <div className=\"card-modal card-main card\">\n                    <div className=\"card-content\">\n                      <p className=\"passage\">{problem ? problem.problemText : passage.passageText}</p>\n                      <p className=\"passage\">{body}</p>\n                    </div>\n                    <a\n                      href=\"#!\"\n                      onClick={onClose}\n                      className=\"modal-close close\"\n                    >\n                      <i className=\"icon-close\" />\n                    </a>\n                    <div className=\"file-field-block\">\n                      <div className=\"info-block\">\n                        <dl>\n                          <dt>Problem:</dt>\n                          <dd>{problem ? problem.id : passage.id}</dd>\n                        </dl>\n                        <dl>\n                          <dt>Passage:</dt>\n                          <dd>{problem ? problem.pass : passage.id}</dd>\n                        </dl>\n                      </div>\n                      <div className=\"file-field input-field\">\n                        <div className=\"file-path-wrapper\">\n                          <input className=\"file-path\" type=\"text\" value=\"Video:  some_video.mpg\" readOnly=\"\" />\n                        </div>\n                        <div className=\"buttons-row\">\n                          <a className=\"waves-effect waves-teal btn-flat blue-text text-darken-3\">Watch</a>\n                          <span className=\"waves-effect waves-teal btn-flat blue-text text-darken-3\">\n                            <span>Upload</span>\n                            <input type=\"file\" />\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </When>\n            <Otherwise>\n              {open && (\n                <div className=\"overlay\">\n                  <ClickOffComponentWrapper onOuterClick={onClose}>\n                    <div className=\"modal\">\n                      <div className=\"modal-content\">\n                        <h4>{header}</h4>\n                        <p>{body}</p>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <a\n                          href=\"#!\"\n                          onClick={onClose}\n                          className=\"modal-close waves-effect waves-green btn-flat\"\n                        >\n                          Cancel\n                        </a>\n                        <a\n                          href=\"#!\"\n                          onClick={onConfirm}\n                          className=\"modal-close waves-effect waves-green btn-flat\"\n                        >\n                          Confirm\n                        </a>\n                      </div>\n                    </div>\n                  </ClickOffComponentWrapper>\n                </div>\n              )}\n            </Otherwise>\n          </Choose>\n          { /* Inline styling is required for the Modal component due to the Portal */ }\n          <style jsx>\n            {`\n              h4 {\n                font-size: 2.28rem;\n                line-height: 110%;\n                margin: 1.52rem 0 .912rem 0;\n                margin-top: 0;\n              }\n              p {\n                font-size: 16px;\n                color: #343434;\n              }\n              p.passage {\n                font-size: 14px;\n              }\n              a {\n                color: #343434;\n              }\n              .overlay {\n                position: fixed!important;\n                background-color: rgba(0, 0, 0, 0.7)!important;\n                top: 0!important;\n                right: 0!important;\n                bottom: 0!important;\n                left: 0!important;\n                z-index: 9999!important;\n              }\n              .modal {\n                display: block;\n                background-color: white;\n                position: absolute;\n                top: 10%;\n                right: 10%;\n                left: 10%;\n                box-shadow: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.2);\n              }\n              .modal-footer {\n                background-color: white;\n              }\n              .modal-full-size {\n                z-index: 1999;\n                width: 100%;\n                left: 0;\n                top: 0;\n                right: 0;\n                bottom: 0;\n              }\n            `}\n          </style>\n        </Portal>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  open: PropTypes.bool,\n  fullScreen: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func,\n  body: PropTypes.string,\n  header: PropTypes.string,\n  problem: PropTypes.object,\n  passage: PropTypes.object,\n};\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport class Portal extends React.Component {\n  componentDidMount() {\n    this.element = document.querySelector(this.props.selector);\n    this.forceUpdate();\n  }\n\n  render() {\n    if (this.element === undefined) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(this.props.children, this.element);\n  }\n}\n\nPortal.propTypes = {\n  selector: PropTypes.any,\n  children: PropTypes.any,\n};\n\nexport default Portal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getRadius, getDashArray, getDashoffset } from \"../../utils/RadialBar\";\n\nclass RadailBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const {\n      svgWidth,\n      svgHeight,\n      strokeWidth,\n      maxValue,\n      currentValue,\n      strokeColor,\n    } = this.props;\n    return (\n      <svg width={svgWidth} height={svgHeight} viewBox={`0 0 ${svgWidth}${svgHeight}`}>\n        <circle\n          cx={svgWidth/2}\n          cy={svgHeight/2}\n          r={getRadius(svgWidth, strokeWidth)}\n          fill=\"transparent\"\n          stroke=\"#e6e6e6\"\n          strokeWidth={strokeWidth}\n        />\n        <circle\n         cx={svgWidth/2}\n         cy={svgHeight/2}\n          r={getRadius(svgWidth, strokeWidth)}\n          fill=\"transparent\"\n          stroke={strokeColor}\n          strokeWidth ={strokeWidth}\n          strokeDasharray={getDashArray(svgWidth, strokeWidth)}\n          strokeDashoffset={getDashoffset( svgWidth,strokeWidth,maxValue,currentValue)}\n        />\n      </svg>\n    );\n  }\n}\n\nRadailBar.propTypes = {\n  svgWidth: PropTypes.number,\n  svgHeight: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  maxValue: PropTypes.number,\n  currentValue: PropTypes.number,\n  strokeColor:PropTypes.string,\n};\n\nexport default RadailBar;\n","export const  getRadius = (svgWidth,strokeWidth) => {\n   const radius = (svgWidth/2) - (strokeWidth/2);\n   return radius;\n}\n\nexport const getDashArray = (svgWidth,strokeWidth) => {\n    const r = getRadius(svgWidth,strokeWidth)\n    const dasharray = Math.PI*(r*2);\n    return dasharray;\n}\n\nexport const getDashoffset = (svgWidth,strokeWidth,maxValue,currentValue) => {\n    const dasharray = getDashArray(svgWidth,strokeWidth);\n    const dashoffset = dasharray * (1 - currentValue/maxValue);\n    return dashoffset;\n}","import { toast } from 'react-toastify';\n/* eslint-disable array-callback-return */\n\n// HOW THESE FUNCTIONS WORK\n// Each nested validation function takes these three props - component state, a validation state setter, and a set validation function\n// Component state is self-explanatory - it's a copy of the entire component state\n// The validation state setter refers to a function in the component that sets updated validation state and dispatches the set validation function as a callback\n// nestedEditFieldValidation takes updatedInstance as an additional prop - this is the state instance the user has been updating in edit mode\n\n// We set an initial validation boolean that will be switched to false if an invalid field is found\n// We also create a shallow copy of the component's validation map\n// With the nested functions, we map through the validation state and each object contained within for that component's nested state: for example, ownerContactInfo, locationContactInfo, and locationBranding\n// Both functions check if the component state has valid input, referred to by field, and whether that key/field is required - the edit variation checks the user-updated state\n// If an invalid input is found, that boolean in the validation map is set to false, along with validForm\n// The validation state setter is dispatched with the updated validation map\n// The set validation function is passed down from the container level and provides the component with the toast displaying all invalid fields\n\nexport const nestedEditFieldValidation = (componentState, updatedInstance, validationStateSetter, setValidationFunc) => {\n  let validForm = true;\n  const { validation } = componentState;\n  const initialValidation = { ...validation };\n\n  Object.keys(validation).map(fieldSection => {\n    if (!updatedInstance[fieldSection] && initialValidation[fieldSection]) { initialValidation[fieldSection] = false; }\n    Object.keys(validation[fieldSection]).map(field => {\n      if (!updatedInstance[fieldSection][field] && initialValidation[fieldSection][field]) {\n        initialValidation[fieldSection][field] = false;\n        validForm = false;\n      }\n    });\n  });\n  validationStateSetter(initialValidation, setValidationFunc(initialValidation));\n  return validForm;\n};\n\nexport const shallowEditFieldValidation = (componentState, updatedInstance, validationStateSetter, setValidationFunc) => {\n  let validForm = true;\n  const { validation } = componentState;\n  const initialValidation = { ...validation };\n\n  Object.keys(validation).map(field => {\n    if (!updatedInstance[field] && initialValidation[field]) {\n      initialValidation[field] = false;\n      validForm = false;\n    }\n  });\n  validationStateSetter(initialValidation, setValidationFunc(initialValidation));\n  return validForm;\n};\n\n\nexport const nestedCreateFieldValidation = (componentState, validationStateSetter, setValidationFunc) => {\n  let validForm = true;\n  const { validation } = componentState;\n  const initialValidation = { ...validation };\n\n  Object.keys(validation).map(fieldSection => {\n    if (!componentState[fieldSection] && initialValidation[fieldSection]) { initialValidation[fieldSection] = false; }\n    Object.keys(validation[fieldSection]).map(field => {\n      if (!componentState[fieldSection][field] && initialValidation[fieldSection][field]) {\n        initialValidation[fieldSection][field] = false;\n        validForm = false;\n      }\n    });\n  });\n  validationStateSetter(initialValidation, setValidationFunc(initialValidation));\n  return validForm;\n};\n\nexport const shallowCreateFieldValidation = (componentState, validationStateSetter, setValidationFunc) => {\n  let validForm = true;\n  const { validation } = componentState;\n  const initialValidation = { ...validation };\n\n  Object.keys(validation).map(field => {\n    if (!componentState[field] && initialValidation[field]) {\n      initialValidation[field] = false;\n      validForm = false;\n    }\n  });\n  validationStateSetter(initialValidation, setValidationFunc(initialValidation));\n  return validForm;\n};\n\n// validationState is set in state from the root create or edit when an invalid section is found\n// This function maps through the validation object, checks for invalid fields, and converts them to regular english based on validationFieldMap\nexport const parseInvalidFieldsToString = (validationState, validationFieldMap) => {\n  const invalidFields = [];\n  Object.keys(validationState).map(fieldSection => {\n    if (validationState[fieldSection] === false) { invalidFields.push(validationFieldMap[fieldSection]); }\n    Object.keys(validationState[fieldSection]).map(field => {\n      if (validationState[fieldSection][field] === false) {\n        invalidFields.push(validationFieldMap[field]);\n      }\n    });\n  });\n  return invalidFields.join(', ');\n};\n\nexport const shallowParseInvalidFieldsToString = (validationState, validationFieldMap) => {\n  const invalidFields = [];\n  Object.keys(validationState).map(field => {\n    if (validationState[field] === false) {\n      invalidFields.push(validationFieldMap[field]);\n    }\n  });\n  return invalidFields.join(', ');\n};\n\n\nexport const saveNewSuccess = (name) => toast.success(`Your ${name} has been successfully saved!`, {\n  className: 'update-success',\n  progressClassName: 'progress-bar-success',\n});\nexport const saveChangesSuccess = () => toast.success(\"Your changes have been successfully saved!\", {\n  className: 'update-success',\n  progressClassName: 'progress-bar-success',\n});\nexport const saveNewError = (validationState, validationFieldMap, shallowValidation = false) =>\n  toast.error(\n    `Please fill out the following required fields: ${shallowValidation ? shallowParseInvalidFieldsToString(validationState, validationFieldMap) : parseInvalidFieldsToString(validationState, validationFieldMap)}`, {\n      className: 'update-error',\n      progressClassName: 'progress-bar-error',\n    });\n","const genderOptions = [\n  {\n    label: 'Male',\n    value: 'Male',\n  },\n  {\n    label: 'Female',\n    value: 'Female',\n  },\n];\n\nexport default genderOptions;\n","export const getUserInitials = (user) => `${user.accountInfo.firstName[0]}${user.accountInfo.lastName[0]}`;\nexport const getTutorInitials = (user) => `${user.firstName[0]}${user.lastName[0]}`;\n","/* eslint-disable array-callback-return */\n// This function pulls the matching value objects from state for each Dropdown component if an existing value exists - otherwise, returns empty object\nconst getValueFromState = (valueKey, state, nested = false) => {\n  let obj = {};\n  // This is encountered when the options are nested as arrays within objects\n  if (nested) {\n    state.map(substate => {\n      substate.options.map(substateField => {\n        if (substateField.value === valueKey) {\n          obj = substateField;\n        }\n      });\n    });\n  } else {\n    state.map(option => {\n      if (option.value === valueKey) {\n        obj = option;\n      }\n    });\n  }\n  return obj;\n};\n\nexport default getValueFromState;\n","export default [\n  {\n    value: '',\n    label: 'Any',\n  },\n  {\n    value: 'Miami',\n    label: 'Miami',\n  },\n  {\n    value: 'Austin',\n    label: 'Austin',\n  },\n  {\n    value: 'option1',\n    label: 'Option 1',\n  },\n  {\n    value: 'option2',\n    label: 'Option 2',\n  },\n];\n","export default [\n  {\n    firstName: 'Bob',\n    lastName: 'Smith',\n    email: 'bob@smith.com',\n    addressLine1: '4455 Main St',\n    city: \"Portland\",\n    state: \"OR\",\n    zipCode: \"98758\",\n    timeZone: \"Pacific\",\n    avatarURL: \"https://ichef.bbci.co.uk/news/320/media/images/82399000/jpg/_82399978_75952740.jpg\",\n  },\n  {\n    firstName: 'Jeff',\n    lastName: 'Bezos',\n    email: 'jeff-bezos@email.com',\n    addressLine1: '1234 Test Lane',\n    city: 'Austin',\n    state: 'TX',\n    zipCode: '78757',\n    timeZone: \"Central\",\n    avatarURL: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTUGJC2sKaR6OTgnDzoPwpHdpmEMY2rM8CLT8DbStzvnwQPf51Z\",\n  },\n  {\n    firstName: 'Roger',\n    lastName: 'Rabbit',\n    email: 'roger-rabbit@email.com',\n    addressLine1: '123 Baker Street',\n    city: 'Paris',\n    state: 'ID',\n    zipCode: '88775',\n    timeZone: \"Mountain\",\n    avatarURL: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTM1yFuZbX_ObFSnyaESvq_1a_CTqCLTMURXViN5RyrQvHUm814\",\n\n  },\n  {\n    firstName: 'Jack',\n    lastName: 'InTheBox',\n    email: 'jackinbox@email.com',\n    addressLine1: '123 Baker Street',\n    city: 'Paris',\n    state: 'ID',\n    zipCode: '88775',\n    timeZone: \"Mountain\",\n    avatarURL: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT1vXjnr5RTywwY_6k8nOR7-Oz6B8ci4aNac-CGL9J3y3QRNLfo\",\n  },\n  {\n    firstName: 'John',\n    lastName: 'Jackson',\n    email: 'john-jackson@email.com',\n    addressLine1: \"7643 Some Lane\",\n    city: \"Topeka\",\n    state: \"KS\",\n    zipCode: \"56788\",\n    timeZone: \"Central\",\n    avatarURL: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6Mh-9HGP3BCegpacxN9MtJFDCtextZ6c9cVC4xdnsuA0WsJgp5A\",\n  },\n  {\n    firstName: 'Jennifer',\n    lastName: 'Ownerson',\n    email: 'jennifern@ownerson.com',\n    addressLine1: \"7643 Some Lane\",\n    city: \"Kansas City\",\n    state: \"KS\",\n    zipCode: \"56788\",\n    timeZone: \"Central\",\n    avatarURL: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7O1-5ygT98zoHdS26QzqvClNlzTGqeP9fRIj-KTJKwI15QgSF\",\n\n  },\n];\n","export default [\n  {\n    locationNickname: 'Disneyworld  Tutoring',\n    locationName: 'House Of Mouse',\n  },\n  {\n    locationNickname: 'TutorZone Austin',\n    locationName: 'We Teach Real Good',\n  },\n  {\n    locationNickname: 'TutorZone Miami',\n    locationName: 'We Teach Even Better',\n  },\n  {\n    locationNickname: 'Disneyworld  Tutoring2',\n    locationName: 'House Of Goofy',\n  },\n  {\n    locationNickname: 'TutorZone Austin2',\n    locationName: 'We Teach Good',\n  },\n  {\n    locationNickname: 'TutorZone Miami2',\n    locationName: 'We Teach The Best',\n  },\n];\n","export default [\n  {\n    label: 'Right Triangles',\n    value: 'rightTriangles',\n  },\n  {\n    label: 'Trigonometry',\n    value: 'trigonometry',\n  },\n  {\n    label: 'Topic 3',\n    value: 'topic3',\n  },\n  {\n    label: 'Topic 4',\n    value: 'topic4',\n  },\n  {\n    label: 'Topic 5',\n    value: 'topic5',\n  },\n];\n","export const firstNameAscending = ({ accountInfo: { firstName: firstNameA } }, { accountInfo: { firstName: firstNameB } }) => {\n  if (firstNameA < firstNameB) { return -1; }\n  return 0;\n};\n\nexport const firstNameDescending = ({ accountInfo: { firstName: firstNameA } }, { accountInfo: { firstName: firstNameB } }) => {\n  if (firstNameA > firstNameB) { return -1; }\n  return 0;\n};\n\nexport const lastNameAscending = ({ accountInfo: { lastName: lastNameA } }, { accountInfo: { lastName: lastNameB } }) => {\n  if (lastNameA < lastNameB) { return -1; }\n  return 0;\n};\n\nexport const lastNameDescending = ({ accountInfo: { lastName: lastNameA } }, { accountInfo: { lastName: lastNameB } }) => {\n  if (lastNameA > lastNameB) { return -1; }\n  return 0;\n};\n\nexport const dueDate = ({ dueDate: dueDateA }, { dueDate: dueDateB }) => {\n  if (dueDateA > dueDateB) { return -1; }\n  return 0;\n}\n\nexport const assignDate = ({ assignDate: assignDateA }, { assignDate: assignDateB }) => {\n  if (assignDateA > assignDateB) { return -1; }\n  return 0;\n}\n\nexport const problems = ({ problems: problemsA }, { problems: problemsB }) => {\n  if (problemsA > problemsB) { return -1; }\n  return 0;\n}\n\nexport const completed = ({ completed: completedA, problems: problemsA }, { completed: completedB, problems: problemsB }) => {\n  if (completedA / problemsA > completedB / problemsB) { return -1; }\n  return 0;\n}\n\nexport const flags = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA > flagsB) { return -1; }\n  return 0;\n}\n\nexport const score = ({ score: scoreA }, { score: scoreB }) => {\n  if (scoreA > scoreB) { return -1; }\n  return 0;\n}\n\nexport const timeEstimate = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA > timeEstimateB) { return -1; }\n  return 0;\n}\n\nexport const timeEstimateAscending= ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA < timeEstimateB) { return -1; }\n  return 0;\n}\n\nexport const subjectAscending = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA < subjectB) { return -1; }\n  return 0;\n}\n\nexport const subjectDescending = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA > subjectB) { return -1; }\n  return 0;\n}\n\nexport const passageAscending = ({passage: passageA }, {passage: passageB}) => {\n  if (passageA < passageB) {return -1; }\n  return 0;\n}\nexport const passageDescending = ({passage: passageA }, {passage: passageB}) => {\n  if (passageA > passageB) {return -1; }\n  return 0;\n}\n\nexport const statusDescending = ({status: statusA}, {status: statusB}) => {\n  if (statusA > statusB) {return -1; }\n  return 0;\n}\n\nexport const statusAscending = ({status: statusA}, {status: statusB}) => {\n  if (statusA < statusB) {return -1; }\n  return 0;\n}\n\nexport const flagsDescending = ({flags: flagsA}, {flags: flagsB}) => {\n  if (flagsA.length > flagsB.length) {return -1; }\n  return 0;\n}\n\nexport const flagsAscending = ({flags: flagsA}, {flags: flagsB}) => {\n  if (flagsA.length < flagsB.length) {return -1; }\n  return 0;\n}\n\nexport const availableDateDescending = ({ availableDate: availableDateA }, { availableDate: availableDateB }) => {\n  if (availableDateA > availableDateB) { return -1; }\n  return 0;\n}\n\nexport const availableDateAscending = ({ availableDate: availableDateA }, { availableDate: availableDateB }) => {\n  if (availableDateA < availableDateB) { return -1; }\n  return 0;\n}\n\nexport const lessonNameAscending = ({lessonName: lessonNameA}, {lessonName: lessonNameB}) => {\n  if (lessonNameA < lessonNameB) { return -1; }\n  return 0;\n}\n\nexport const lessonNameDescending = ({lessonName: lessonNameA}, {lessonName: lessonNameB}) => {\n  if (lessonNameA > lessonNameB) { return -1; }\n  return 0;\n}\n\nexport const dueDateAscending = ({ dueDate: dueDateA }, { dueDate: dueDateB }) => {\n  if (dueDateA < dueDateB) { return -1; }\n  return 0;\n}\n\nexport const completionDateAscending = ({completionDate: completionDateA}, {completionDate: completionDateB}) => {\n  if (completionDateA < completionDateB) { return -1; }\n  return 0;\n}\n\nexport const completionDateDescending = ({completionDate: completionDateA}, {completionDate: completionDateB}) => {\n  if (completionDateA > completionDateB) { return -1; }\n  return 0;\n}\n\nexport const lessonTypeAscending = ({type: typeA}, {type: typeB}) => {\n  if (typeA < typeB) {return -1; }\n  return 0;\n}\n\nexport const lessonTypeDescending = ({type: typeA}, {type: typeB}) => {\n  if (typeA > typeB) {return -1; }\n  return 0;\n}\n\nexport const totalProblemsAscending = ({totalProblems: totalProblemsA}, {totalProblems: totalProblemsB}) => {\n  if (totalProblemsA < totalProblemsB) {return -1; }\n  return 0;\n}\n\nexport const totalProblemsDescending = ({totalProblems: totalProblemsA}, {totalProblems: totalProblemsB}) => {\n  if (totalProblemsA > totalProblemsB) {return -1; }\n  return 0;\n}\n","export default [\n  {\n    value: 'lastNameDescending',\n    label: 'Last Name (Descending)',\n  },\n  {\n    value: 'lastNameAscending',\n    label: 'Last Name (Ascending)',\n  },\n  {\n    value: 'firstNameDescending',\n    label: 'First Name (Descending)',\n  },\n  {\n    value: 'firstNameAscending',\n    label: 'First Name (Ascending)',\n  },\n];\n","const stateOptions = [\n  {\n    label: \"Alabama\",\n    value: \"AL\",\n  },\n  {\n    label: \"Alaska\",\n    value: \"AK\",\n  },\n  {\n    label: \"American Samoa\",\n    value: \"AS\",\n  },\n  {\n    label: \"Arizona\",\n    value: \"AZ\",\n  },\n  {\n    label: \"Arkansas\",\n    value: \"AR\",\n  },\n  {\n    label: \"California\",\n    value: \"CA\",\n  },\n  {\n    label: \"Colorado\",\n    value: \"CO\",\n  },\n  {\n    label: \"Connecticut\",\n    value: \"CT\",\n  },\n  {\n    label: \"Delaware\",\n    value: \"DE\",\n  },\n  {\n    label: \"District Of Columbia\",\n    value: \"DC\",\n  },\n  {\n    label: \"Federated States Of Micronesia\",\n    value: \"FM\",\n  },\n  {\n    label: \"Florida\",\n    value: \"FL\",\n  },\n  {\n    label: \"Georgia\",\n    value: \"GA\",\n  },\n  {\n    label: \"Guam\",\n    value: \"GU\",\n  },\n  {\n    label: \"Hawaii\",\n    value: \"HI\",\n  },\n  {\n    label: \"Idaho\",\n    value: \"ID\",\n  },\n  {\n    label: \"Illinois\",\n    value: \"IL\",\n  },\n  {\n    label: \"Indiana\",\n    value: \"IN\",\n  },\n  {\n    label: \"Iowa\",\n    value: \"IA\",\n  },\n  {\n    label: \"Kansas\",\n    value: \"KS\",\n  },\n  {\n    label: \"Kentucky\",\n    value: \"KY\",\n  },\n  {\n    label: \"Louisiana\",\n    value: \"LA\",\n  },\n  {\n    label: \"Maine\",\n    value: \"ME\",\n  },\n  {\n    label: \"Marshall Islands\",\n    value: \"MH\",\n  },\n  {\n    label: \"Maryland\",\n    value: \"MD\",\n  },\n  {\n    label: \"Massachusetts\",\n    value: \"MA\",\n  },\n  {\n    label: \"Michigan\",\n    value: \"MI\",\n  },\n  {\n    label: \"Minnesota\",\n    value: \"MN\",\n  },\n  {\n    label: \"Mississippi\",\n    value: \"MS\",\n  },\n  {\n    label: \"Missouri\",\n    value: \"MO\",\n  },\n  {\n    label: \"Montana\",\n    value: \"MT\",\n  },\n  {\n    label: \"Nebraska\",\n    value: \"NE\",\n  },\n  {\n    label: \"Nevada\",\n    value: \"NV\",\n  },\n  {\n    label: \"New Hampshire\",\n    value: \"NH\",\n  },\n  {\n    label: \"New Jersey\",\n    value: \"NJ\",\n  },\n  {\n    label: \"New Mexico\",\n    value: \"NM\",\n  },\n  {\n    label: \"New York\",\n    value: \"NY\",\n  },\n  {\n    label: \"North Carolina\",\n    value: \"NC\",\n  },\n  {\n    label: \"North Dakota\",\n    value: \"ND\",\n  },\n  {\n    label: \"Northern Mariana Islands\",\n    value: \"MP\",\n  },\n  {\n    label: \"Ohio\",\n    value: \"OH\",\n  },\n  {\n    label: \"Oklahoma\",\n    value: \"OK\",\n  },\n  {\n    label: \"Oregon\",\n    value: \"OR\",\n  },\n  {\n    label: \"Palau\",\n    value: \"PW\",\n  },\n  {\n    label: \"Pennsylvania\",\n    value: \"PA\",\n  },\n  {\n    label: \"Puerto Rico\",\n    value: \"PR\",\n  },\n  {\n    label: \"Rhode Island\",\n    value: \"RI\",\n  },\n  {\n    label: \"South Carolina\",\n    value: \"SC\",\n  },\n  {\n    label: \"South Dakota\",\n    value: \"SD\",\n  },\n  {\n    label: \"Tennessee\",\n    value: \"TN\",\n  },\n  {\n    label: \"Texas\",\n    value: \"TX\",\n  },\n  {\n    label: \"Utah\",\n    value: \"UT\",\n  },\n  {\n    label: \"Vermont\",\n    value: \"VT\",\n  },\n  {\n    label: \"Virgin Islands\",\n    value: \"VI\",\n  },\n  {\n    label: \"Virginia\",\n    value: \"VA\",\n  },\n  {\n    label: \"Washington\",\n    value: \"WA\",\n  },\n  {\n    label: \"West Virginia\",\n    value: \"WV\",\n  },\n  {\n    label: \"Wisconsin\",\n    value: \"WI\",\n  },\n  {\n    label: \"Wyoming\",\n    value: \"WY\",\n  },\n];\n\nexport default stateOptions;\n","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import React from \"react\";\nimport update from 'immutability-helper';\nimport StatusPage from \"../components/Classes/StatusPage\";\nimport ListPage from \"../components/Classes/ListPage\";\nimport Moment from 'moment';\nimport sampleClass from \"../components/Classes/utils/sampleClass\";\nimport createNewClassRoomApi from '../components/Classes/index/api';\n\n\nclass Classes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedClass: null,\n      classes: sampleClass,\n    };\n  }\n\n  onHandleClassCard = (index) => {\n    const { classes } = this.state;\n    this.setState({ selectedClass: classes[index] });\n  };\n\n  onAddNewClass = (newClass) => {\n    const {classes:prevClassState} = this.state;\n    const formattedNewClass = {\n      summary:{\n        amount_students:10,\n        start_date:\"6/1/19\",\n        end_date:\"8/5/19\",\n        improvement:123,\n        coursework_assigned:60,\n        coursework_completed:90,\n        problems_flagged_review:40,\n        average_score:1256,\n        achieved_target_score:85,\n        average_practice_tests_completed:1.8,\n        instruction:14,\n      },\n      accountInfo:{\n        lastName: 'Admin',\n        firstName: 'Company',\n        email: 'test2@example.com',\n        gender: 'M',\n      },\n      contactInfo: {\n        phone: '1234567890',\n        streetAddress: '1234 Test Road',\n        city: 'Austin',\n        state: 'TX',\n        zip: '78751',\n      },\n      classInfo:newClass.classInfo,\n      location: newClass.location,\n      instructor: newClass.instructor,\n    };\n    const updatedClasses = update(prevClassState,{$push:[formattedNewClass]});\n    this.setState({ classes:updatedClasses})\n    this.onCreateNewClassApi(newClass);\n  }\n\n  onCloneClass = (index) => {\n    const { classes } = this.state;\n    this.setState(prevState => {\n      prevState.classes.push(classes[index]);\n      return { classes: prevState.classes}\n    })\n  }\n\n  arrayItemRemover = (array, value) => array.filter((classroom) => classroom !== value)\n\n  onDeleteClass = (index) => {\n    const { classes } = this.state;\n    const newClassesArray = this.arrayItemRemover(classes, classes[index])\n    this.setState({classes: newClassesArray})\n  }\n\n  onCreateNewClassApi = async(classroom) => {\n    const newId = this.state.classes.length + 1;\n    const {classInfo:{className},accountInfo:{start_date,end_date,isExclude},location:{locations},instructor:{instructors}} = classroom;\n    const formattedClassRoom = {\n      id:newId,\n      name: className,\n      start_date: Moment(start_date).format('YYYY-MM-DD'),\n      end_date: Moment(end_date).format('YYYY-MM-DD'),\n      duration: \"string\",\n      exclude_from_statistics: isExclude,\n      locations,\n      instructors,\n      students: \"\",\n    };\n    await createNewClassRoomApi(formattedClassRoom);\n  }\n\n  onSaveClassChanges = (updatedClasRoom) => {\n    const { classes: originalClasses } = this.state;\n    const classToUpdate = originalClasses.filter(classroom => classroom.id === updatedClasRoom.id)[0];\n    const updatedClassIndex = originalClasses.indexOf(classToUpdate);\n    const classes = update(originalClasses, {\n      $splice: [[updatedClassIndex, 1, updatedClasRoom]],\n    });\n    // saveChangesSuccess();\n    this.setState({ classes });\n  }\n\n  render() {\n    const { selectedClass } = this.state;\n    return (\n      <React.Fragment>\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-5 switcher-section\">\n            {!selectedClass &&\n              <ListPage\n                classes={this.state.classes}\n                onHandleClassCard={this.onHandleClassCard}\n                onCloneClass = {this.onCloneClass}\n                onDeleteClass = {this.onDeleteClass}\n                onSaveNewClass = {this.onAddNewClass}\n                onSaveClassChanges = {this.onSaveClassChanges}\n              />\n            }\n            {selectedClass && <StatusPage />}\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Classes;\n","const formatTimeEstimate = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  const hourString = hours !== 0 ? `${hours} hrs` : '';\n  const minuteString = minutes !== 0 ? `${minutes} mins` : '';\n  return `${hourString} ${minuteString}`\n}\n\nexport default formatTimeEstimate;\n","export default [\n  {\n    label: 'Due Date',\n    value: 'dueDate',\n  },\n  {\n    label: 'Assign Date',\n    value: 'assignDate',\n  },\n  {\n    label: 'Problems',\n    value: 'problems',\n  },\n  {\n    label: 'Completed',\n    value: 'completed',\n  },\n  {\n    label: 'Flags',\n    value: 'flags',\n  },\n  {\n    label: 'Score',\n    value: 'score',\n  },\n  {\n    label: 'Time Estimate',\n    value: 'timeEstimate',\n  },\n];\n","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"immutability-helper\");","module.exports = require(\"moment\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-beautiful-dnd\");","module.exports = require(\"react-chartjs-2\");","module.exports = require(\"react-color\");","module.exports = require(\"react-datepicker\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-select\");","module.exports = require(\"react-slick\");","module.exports = require(\"react-sticky\");","module.exports = require(\"react-toastify\");","module.exports = require(\"redux\");","module.exports = require(\"reselect\");","module.exports = require(\"styled-components\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AAMA;AACA;AAKA;AACA;AACA;AACA;AAFA;AA8BA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAzBA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA7HA;AA+HA;AAAA;AAAA;AAAA;AACA;AACA;AAjIA;AAmIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA9IA;AAiJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA5JA;AA8JA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArKA;AAuKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAlLA;AAoLA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAjMA;AAmMA;AAEA;AACA;AAtMA;AAwMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAjNA;AAmNA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA5NA;AA8NA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAvOA;AAyOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAjPA;AAmPA;AAAA;AACA;AACA;AAFA;AACA;AApPA;AAwPA;AAAA;AACA;AACA;AAFA;AACA;AAzPA;AA8PA;AAAA;AACA;AADA;AACA;AA/PA;AAkQA;AAAA;AACA;AADA;AACA;AAnQA;AAsQA;AAAA;AAAA;AACA;AAvQA;AAyQA;AAAA;AACA;AA1QA;AA4QA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAnTA;AAqTA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9UA;AAkVA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAzVA;AA2VA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAtWA;AA0WA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAmBA;AACA;AAAA;AACA;AACA;AAhZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AAKA;AACA;AACA;AAqXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAWA;AAAA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;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;;;;ACpIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAlBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAqBA;AAAA;AACA;AAtBA;AAsBA;AAAA;AACA;AAvBA;AAwBA;AAAA;AAAA;AACA;AAzBA;AAyBA;AAAA;AAAA;AACA;AA1BA;AA2BA;AAAA;AAAA;AACA;AA5BA;AA4BA;AAAA;AACA;AA7BA;AA+BA;AACA;AACA;AAjCA;AAmCA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7CA;AA+CA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA9DA;AAiEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAhBA;AAkBA;AACA;AArFA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAxGA;AA0GA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/GA;AAkHA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAQA;AACA;AA1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAgHA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AAnKA;AACA;AAoKA;;;;;;;;;;;;AC9KA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;;;;;;;;;;;AC5JA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AACA;AApCA;AACA;AAsCA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AASA;AAAA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAtBA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAxCA;AACA;AACA;AAFA;AAIA;AACA;AAmCA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AADA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AAJA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAIA;AAFA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAFA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAEA;AADA;AAAA;AAMA;AAAA;AAAA;AAAA;AA3EA;AAAA;AAqIA;AACA;AApLA;AACA;AAqLA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AASA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAbA;AAcA;AAAA;AACA;AAfA;AACA;AADA;AAkBA;AAAA;AACA;AAnBA;AAmBA;AAAA;AACA;AApBA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlCA;AACA;AACA;AAFA;AAIA;AACA;AA8BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAavNA;AACA;AAwNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAyFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAnGA;AAsGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AA5GA;AACA;AADA;AAgHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AArIA;AAwIA;AAAA;AACA;AAzIA;AA4IA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA1JA;AA4JA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AA3BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AA3BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAlEA;AA2EA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA0EA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAFA;AAKA;AADA;AAAA;AAIA;AAAA;AAGA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAFA;AAFA;AAAA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AAKA;AANA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAsBA;AAAA;AAEA;AACA;AAFA;AAAA;AAQA;AACA;AAFA;AAAA;AAOA;AAAA;AAAA;AAAA;AAhGA;AAAA;AA6IA;AACA;AAtTA;AACA;AAuTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;AChVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1BA;AA+BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAiDA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAzDA;AA0DA;AAAA;AACA;AA3DA;AA6DA;AAAA;AAAA;AAAA;AACA;AA5DA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAqDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAYA;AACA;AAvPA;AACA;AAwPA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;;;;;;;;;;;;;;ACzQA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAeA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAUA;AADA;AAQA;AACA;AAFA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAmBA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAUA;AAAA;AACA;AAXA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AANA;AAgBA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAtCA;AA0CA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAWA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAlEA;AAoEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAxEA;AA0EA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAhFA;AAkFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAzFA;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AA1FA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AA8FA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AACA;AArJA;AACA;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAaA;AAAA;AAAA;AACA;AAdA;AAeA;AAAA;AACA;AAhBA;AAiBA;AAAA;AAAA;AACA;AAlBA;AAmBA;AAAA;AAAA;AACA;AApBA;AAsBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA1BA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAkCA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAvCA;AAyCA;AACA;AAAA;AAAA;AACA;AACA;AA5CA;AA6CA;AAAA;AACA;AA9CA;AA+CA;AAAA;AAAA;AACA;AAhDA;AAgDA;AAAA;AAAA;AACA;AAjDA;AAmDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA9DA;AAgEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAhFA;AAmFA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AAjGA;AAmGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AArHA;AAsHA;AAAA;AACA;AAvHA;AAyHA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AAxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AA+HA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AACA;AACA;AAHA;AAQA;AACA;AAxMA;AACA;AAyMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;;;;;;;;;;;;;;;;;;;;AC5NA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AA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OA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApBA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AA5BA;AACA;AADA;AAGA;AACA;AAyxIA;AACA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAeA;AAAA;AACA;AAhBA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlBA;AAmBA;AAAA;AAAA;AACA;AApBA;AAoBA;AAAA;AACA;AArBA;AAsBA;AAAA;AACA;AAvBA;AAuBA;AAAA;AACA;AAxBA;AA2BA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAlBA;AAoBA;AACA;AAjDA;AAmDA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7DA;AA+DA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAnGA;AAqGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AArHA;AAuHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApIA;AAuIA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAhBA;AACA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1KA;AA6KA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AA3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAyKA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AACA;AAnNA;AACA;AAoNA;;;;;;;;;;;;;;;;;;AChOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;AACA;AACA;AAHA;AACA;AAWA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAWA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAIA;AACA;AAIA;;;;;;;;;;;;;ACxBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AArBA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AArBA;AA+BA;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AA9DA;AAoEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AA1FA;AA0GA;;;;;;;;;;;;AC1GA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AADA;AAKA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AAjJA;AAmJA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AADA;AAKA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AA1KA;AA4KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAqCA;AA9NA;AACA;AAgOA;AACA;AACA;AAAA;AAIA;AACA;AAxOA;AACA;AAyOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;;;;;;;;;;;;;;;;;;;;;AClQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AADA;AAGA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAOA;AAAA;AA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AA;AAAA;AAAA;AACA;AAtBA;AAsBA;AAAA;AACA;AAvBA;AAwBA;AAAA;AACA;AAzBA;AAyBA;AAAA;AACA;AA1BA;AA4BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAhCA;AAmCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AAjDA;AAmDA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7DA;AA+DA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAzEA;AA2EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AArFA;AAuFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAvGA;AAyGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAVA;AACA;AAWA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArIA;AAuIA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArJA;AAuJA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAbA;AACA;AAcA;AACA;AACA;AACA;AACA;AA7KA;AAgiFA;AACA;AAnRA;AACA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AACA;AAxBA;AAwBA;AAAA;AACA;AAzBA;AA0BA;AAAA;AACA;AA3BA;AA2BA;AAAA;AACA;AA5BA;AA8BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAlCA;AAqCA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAVA;AAYA;AACA;AAnDA;AAqDA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA/DA;AAiEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA3EA;AA6EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AA7FA;AA+FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AA/GA;AAiHA;AAAA;AAAA;AACA;AAAA;AADA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAlBA;AACA;AAmBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAtJA;AAwJA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAtKA;AAwKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAbA;AACA;AAcA;AACA;AACA;AACA;AA7LA;AAgMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AA9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AA2LA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7DA;AAAA;AAsFA;AACA;AAxSA;AACA;AAySA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;AC7TA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvDA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;ACjFA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAIA;AAEA;AAFA;AAIA;AAEA;AAFA;AAIA;AAMA;AAEA;AAFA;AAIA;AAMA;AAAA;AAAA;AAEA;AACA;AAHA;AA1CA;AAiDA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAnBA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;;;;;AAAA;AAaA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;;AAAA;AAMA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AA6GA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAvHA;AAyHA;AAAA;AAAA;AACA;AA1HA;AA0HA;AAAA;AACA;AA3HA;AA6HA;AAAA;AACA;AA9HA;AA8HA;AAAA;AACA;AA/HA;AAkIA;AAAA;AACA;AAnIA;AAsIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAjJA;AACA;AADA;AAsJA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAjBA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAjBA;AAgCA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAVA;AApEA;AA4FA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAmEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAIA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AAHA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7DA;AAAA;AA8HA;AACA;AAxTA;AACA;AAyTA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;AClVA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAQA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AASA;AAAA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAtBA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA3BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAsBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAWA;AAAA;AAEA;AACA;AAFA;AAAA;AAQA;AAEA;AAHA;AAAA;AAxCA;AAAA;AAkGA;AACA;AAtIA;AACA;AAuIA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;;;;;;;;;;;ACxJA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AASA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AA6EA;AAAA;AACA;AA9EA;AAiFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AApGA;AACA;AADA;AAwGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA5GA;AA+GA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAhBA;AAzCA;AAuEA;AAGA;AACA;AACA;AA6CA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAAA;AAEA;A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AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AASA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAKA;AACA;AAFA;AAMA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAOA;AAAA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAfA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AApBA;AAuBA;AACA;AACA;AACA;AACA;AALA;AACA;AArBA;AACA;AADA;AAGA;AACA;AAyBA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAFA;AAAA;AAQA;AACA;AAEA;AAAA;AAAA;AAJA;AAAA;AAlCA;AAAA;AA0GA;AACA;AA/IA;AACA;AAgJA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;;ACjKA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AAAA;AAEA;AAAA;AAKA;;;;;;;;;;;;AClBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAjBA;AAiCA;;;;;;;;;;;;ACjCA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAnEA;AA2EA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAnEA;AA2EA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAnEA;AA2EA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAnEA;AA2EA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAnEA;AA2EA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAnEA;;;;;;;;;;;;;;;;;;;;;;;;ACnXA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAFA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAFA;AAAA;AAQA;AACA;AAFA;AAAA;AA9DA;AAAA;AAiIA;AACA;AAvIA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AApCA;AACA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfxHA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;ACjBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;;;ACzDA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;ACrBA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;ACjxJA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;ACbA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;;;;;;;;;;;AC/OA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAZA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AA7BA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAlDA;AAoDA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA1DA;AACA;AADA;AA8DA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAlEA;AAoEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAnFA;AAqFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AA5FA;AACA;AACA;AAFA;AAIA;AACA;AAwFA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAcA;AACA;AAtHA;AACA;AAuHA;;;;;;;;;;;;ACjIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}