{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionModal from '../QuestionModal';\nimport BubbleGroup from '../Bubble';\n\nclass AnswerRow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenQuestionModal\", () => this.setState({\n      open: true\n    }));\n\n    _defineProperty(this, \"onCloseQuestionModal\", () => this.setState({\n      open: false\n    }));\n\n    _defineProperty(this, \"mapNumberBubbles\", () => {\n      const {\n        question: {\n          answer,\n          studentChoice\n        }\n      } = this.props;\n\n      if (answer === studentChoice) {\n        return __jsx(\"li\", {\n          key: answer\n        }, __jsx(\"span\", {\n          className: \"badge badge-rounded badge-rounded-bordered\",\n          style: {\n            color: '#fff',\n            borderColor: '#32955c',\n            backgroundColor: '#3eb777'\n          }\n        }, answer));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"li\", {\n        key: studentChoice\n      }, __jsx(\"span\", {\n        className: \"badge badge-rounded badge-rounded-bordered\",\n        style: {\n          color: '#fff',\n          borderColor: '#ad1e3e',\n          backgroundColor: '#db1d41'\n        }\n      }, studentChoice)), __jsx(\"li\", {\n        key: answer\n      }, __jsx(\"span\", {\n        className: \"badge badge-rounded badge-rounded-bordered\",\n        style: {\n          color: '#32955c',\n          borderColor: '#32955c',\n          backgroundColor: '#fff'\n        }\n      }, answer)));\n    });\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    const {\n      open\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(QuestionModal, {\n      open: open,\n      onOpenQuestionModal: this.onOpenQuestionModal,\n      onCloseQuestionModal: this.onCloseQuestionModal,\n      question: question\n    }), __jsx(\"li\", {\n      className: \"answers-list-holder\",\n      key: question.problem,\n      style: {\n        marginRight: \"15px\"\n      }\n    }, __jsx(\"div\", {\n      className: \"answer-row row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col col-120\"\n    }, __jsx(\"ul\", {\n      className: \"answer-list\"\n    }, !question.numeric ? __jsx(BubbleGroup, {\n      id: question.id,\n      question: question\n    }) : this.mapNumberBubbles())), __jsx(\"div\", {\n      className: \"col col-30\"\n    }, __jsx(\"span\", {\n      className: \"status-info\"\n    }, question.status)), __jsx(\"div\", {\n      className: \"col col-43\"\n    }, __jsx(\"span\", {\n      className: \"play-progress\",\n      \"data-video-id\": \"video001\"\n    }, __jsx(\"span\", {\n      className: \"play\"\n    }), __jsx(\"svg\", {\n      viewBox: \"0 0 50 50\",\n      width: \"50\",\n      height: \"50\",\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, __jsx(\"circle\", {\n      className: \"circle-static\",\n      cx: 25.8,\n      cy: 24.3,\n      r: 22.8,\n      fill: \"transparent\",\n      strokeWidth: 3\n    }), __jsx(\"circle\", {\n      className: \"circle-progress\",\n      cx: 25.8,\n      cy: 24.3,\n      r: 22.8,\n      fill: \"transparent\",\n      strokeWidth: 3\n    })))), __jsx(\"div\", {\n      className: \"col col-auto\"\n    }, question.flagged ? __jsx(\"span\", {\n      className: \"status-answer\",\n      style: {\n        color: '#c0272d'\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-flag\"\n    }), __jsx(\"b\", {\n      className: \"status-text\"\n    }, \"Review\")) : null), __jsx(\"div\", {\n      className: \"dropdown-block col col-35\"\n    }, __jsx(\"a\", {\n      className: \"modal-trigger\",\n      href: \"#\",\n      onClick: this.onOpenQuestionModal\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")))), question.studentNotes ? __jsx(\"div\", {\n      className: \"comment-block\"\n    }, __jsx(\"p\", null, question.studentNotes)) : null));\n  }\n\n}\n\nAnswerRow.propTypes = {\n  question: PropTypes.object.isRequired\n};\nexport default AnswerRow;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/AnswerRow/index.js"],"names":["React","PropTypes","QuestionModal","BubbleGroup","AnswerRow","Component","constructor","props","setState","open","question","answer","studentChoice","color","borderColor","backgroundColor","state","render","onOpenQuestionModal","onCloseQuestionModal","problem","marginRight","numeric","id","mapNumberBubbles","status","flagged","studentNotes","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionModal from '../QuestionModal';\nimport BubbleGroup from '../Bubble';\n\nclass AnswerRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    }\n  };\n\n  onOpenQuestionModal = () => this.setState({ open: true })\n  onCloseQuestionModal = () => this.setState({ open: false });\n\n  mapNumberBubbles = () => {\n    const { question: {answer, studentChoice} } = this.props;\n    if (answer === studentChoice) {\n      return (\n        <li key={answer}>\n          <span className=\"badge badge-rounded badge-rounded-bordered\" style={{ color: '#fff', borderColor: '#32955c', backgroundColor: '#3eb777' }}>{answer}</span>\n        </li>\n      )\n    }\n    return (\n      <React.Fragment>\n        <li key={studentChoice}>\n          <span className=\"badge badge-rounded badge-rounded-bordered\" style={{ color: '#fff', borderColor: '#ad1e3e', backgroundColor: '#db1d41' }}>{studentChoice}</span>\n        </li>\n        <li key={answer} >\n          <span className=\"badge badge-rounded badge-rounded-bordered\" style={{ color: '#32955c', borderColor: '#32955c', backgroundColor: '#fff' }}>{answer}</span>\n        </li>\n      </React.Fragment>\n    )\n  };\n\n render() {\n    const { question } = this.props;\n    const { open } = this.state;\n    return (\n      <React.Fragment>\n        <QuestionModal open={open} onOpenQuestionModal={this.onOpenQuestionModal} onCloseQuestionModal={this.onCloseQuestionModal} question={question} />\n        <li className=\"answers-list-holder\" key={question.problem} style={{marginRight:\"15px\"}}>\n          <div className=\"answer-row row mb-0\" >\n            <div className=\"col col-120\">\n              <ul className=\"answer-list\">\n                <Choose>\n                  <When condition={!question.numeric}>\n                    <BubbleGroup id={question.id} question={question}/>\n                  </When>\n                  <Otherwise>\n                    {this.mapNumberBubbles()}\n                  </Otherwise>\n                </Choose>\n              </ul>\n            </div>\n            <div className=\"col col-30\">\n              <span className=\"status-info\">{question.status}</span>\n            </div>\n            <div className=\"col col-43\">\n              <span className=\"play-progress\" data-video-id=\"video001\">\n                <span className=\"play\"></span>\n                <svg viewBox=\"0 0 50 50\" width=\"50\" height=\"50\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle className=\"circle-static\" cx={25.8} cy={24.3} r={22.8} fill='transparent' strokeWidth={3} />\n                  <circle className=\"circle-progress\" cx={25.8} cy={24.3} r={22.8} fill='transparent' strokeWidth={3} />\n                </svg>\n              </span>\n            </div>\n            <div className=\"col col-auto\">\n              <If condition={question.flagged}>\n                <span className=\"status-answer\" style={{ color: '#c0272d' }}>\n                  <i className=\"icon-flag\"></i><b className=\"status-text\">Review</b>\n                </span>\n              </If>\n            </div>\n            <div className=\"dropdown-block col col-35\">\n\n              <a className='modal-trigger' href=\"#\" onClick={this.onOpenQuestionModal}><i className=\"material-icons dots-icon\">more_vert</i></a>\n            </div>\n          </div>\n          <If condition={question.studentNotes}>\n            <div className=\"comment-block\">\n              <p>{question.studentNotes}</p>\n            </div>\n          </If>\n        </li>\n      </React.Fragment>\n    )\n  }\n}\n\nAnswerRow.propTypes = {\n  question: PropTypes.object.isRequired,\n}\n\nexport default AnswerRow;\n\n\n"]},"metadata":{},"sourceType":"module"}