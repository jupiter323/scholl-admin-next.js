{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\nimport modalSortOptions from '../../utils/modalSortOptions';\n\nvar ModalFilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalFilterSection, _React$Component);\n\n  function ModalFilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, ModalFilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalFilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSortChange\", function (event) {\n      var onSetSort = _this.props.onSetSort;\n\n      _this.setState({\n        sort: event\n      });\n\n      onSetSort(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var nameFilter = _this.state.nameFilter;\n\n      if (nameFilter === '') {\n        onUnsetFilteredState(nameFilter);\n      }\n\n      var transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUnitChange\", function (event) {\n      var onSetUnitFilter = _this.props.onSetUnitFilter;\n\n      _this.setState({\n        unitFilter: event\n      });\n\n      onSetUnitFilter(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAllFilters\", function () {\n      var onClearFilters = _this.props.onClearFilters;\n\n      _this.setState({\n        sort: {},\n        nameFilter: \"\",\n        unitFilter: \"\"\n      });\n\n      onClearFilters();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props2 = _this.props,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onSetUnitFilter = _this$props2.onSetUnitFilter;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'nameFilter') {\n        if (event === '') {\n          return onUnsetFilteredState();\n        }\n\n        return onSetFilteredState(event);\n      }\n\n      if (name === 'unitFilter') {\n        if (event === \"\") {\n          return onUnsetFilteredState();\n        }\n\n        return onSetUnitFilter(event);\n      }\n    });\n\n    _this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ModalFilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          sort = _this$state.sort,\n          nameFilter = _this$state.nameFilter,\n          unitFilter = _this$state.unitFilter;\n      var _this$props3 = this.props,\n          subjectFilters = _this$props3.subjectFilters,\n          statusFilters = _this$props3.statusFilters,\n          lessonTypeFilters = _this$props3.lessonTypeFilters,\n          handleFilterClick = _this$props3.handleFilterClick;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"assignedModal\",\n        checked: statusFilters.indexOf('Assigned') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Assigned');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"assignedModal\"\n      }, \"Assigned\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unassigned\",\n        checked: statusFilters.indexOf('Unassigned') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Unassigned');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unassigned\"\n      }, \"Unassigned\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"readingModal\",\n        checked: subjectFilters.indexOf('Reading') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'Reading');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"readingModal\"\n      }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"writingModal\",\n        checked: subjectFilters.indexOf('Writing') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'Writing');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"writingModal\"\n      }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"mathModal\",\n        checked: subjectFilters.indexOf('Math') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'Math');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"mathModal\"\n      }, \"Math\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"challengePractice\",\n        checked: lessonTypeFilters.indexOf('Challenge + Practice') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('lessonType', 'Challenge + Practice');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"challengePractice\"\n      }, \"Challenge + Practice\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"homeworkDrill\",\n        checked: lessonTypeFilters.indexOf('Homework Drill') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('lessonType', 'Homework Drill');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"homeworkDrill\"\n      }, \"Homework Drill\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"readingFromWorkbook\",\n        checked: lessonTypeFilters.indexOf('Read from the Book') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('lessonType', 'Read from the Book');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"readingFromWorkbook\"\n      }, \"Reading from Workbook\")))), React.createElement(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\",\n        style: {\n          marginTop: '30px'\n        }\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control  validate\",\n        name: \"nameFilter\",\n        value: nameFilter,\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'nameFilter');\n        }\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: nameFilter.length ? \"label active\" : \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        style: {\n          marginTop: '-7px'\n        }\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(unitFilter, unitOptions),\n        onChange: function onChange(event) {\n          return _this2.handleUnitChange(event);\n        },\n        options: unitOptions,\n        label: \"Unit Number\",\n        stateKey: \"unit\",\n        dropdownKey: \"unit\"\n      }))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 14\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(sort, modalSortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleSortChange(event);\n        },\n        options: modalSortOptions,\n        label: \"Sort by\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), React.createElement(\"div\", {\n        className: \"col s12 l4 offset-s12\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.clearAllFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return ModalFilterSection;\n}(React.Component);\n\nexport default ModalFilterSection;","map":null,"metadata":{},"sourceType":"module"}