{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable consistent-return */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Portal from '../../../../Portal';\nimport FilterSection from './components/FilterSection';\nimport TableHeader from './components/TableHeader';\nimport { topicMap, workbookMap, subjectMap, difficultyMap, typeMap } from '../../../utils/worksheetFilterMap';\nimport { subjectAscending, subjectDescending } from '../../../../utils/sortFunctions';\n\nvar ProblemBank =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProblemBank, _React$Component);\n\n  function ProblemBank(props) {\n    var _this;\n\n    _classCallCheck(this, ProblemBank);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProblemBank).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (!_this.props.worksheetId || nextProps.worksheetId !== _this.state.worksheetId) {\n        var problems = nextProps.problems,\n            passages = nextProps.passages,\n            worksheetId = nextProps.worksheetId;\n\n        _this.setState({\n          problems: problems,\n          passages: passages,\n          worksheetId: worksheetId\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAddProblemDropdown\", function () {\n      return _this.setState(function (_ref) {\n        var addProblemsDropdownOpen = _ref.addProblemsDropdownOpen;\n        return {\n          addProblemsDropdownOpen: !addProblemsDropdownOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeOpenSection\", function (openSection) {\n      return _this.setState({\n        openSection: openSection\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (topicFilter) {\n      return _this.setState({\n        topicFilter: topicFilter\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        subjectFilters: [],\n        difficultyFilters: [],\n        typeFilters: [],\n        workbookFilters: [],\n        topicFilter: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetAscendingSort\", function () {\n      return _this.setState({\n        sort: 'ascending'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDescendingSort\", function () {\n      return _this.setState({\n        sort: 'descending'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortBySubject\", function (problemsOrPassages) {\n      var sort = _this.state.sort;\n\n      if (sort === 'ascending') {\n        return problemsOrPassages.sort(subjectAscending);\n      }\n\n      return problemsOrPassages.sort(subjectDescending);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterPassages\", function (passages, filterType, filter) {\n      switch (filterType) {\n        case 'difficulty':\n        case 'type':\n          return passages.reduce(function (finalArr, passage) {\n            passage.problems.map(function (problem) {\n              if (filter.indexOf(problem[filterType]) !== -1 && finalArr.indexOf(passage) === -1) {\n                finalArr.push(passage);\n              }\n            });\n            return finalArr;\n          }, []);\n\n        case 'topic':\n          return passages.reduce(function (finalArr, passage) {\n            passage.problems.map(function (problem) {\n              if (problem.topics.indexOf(filter) !== -1 && finalArr.indexOf(passage) === -1) {\n                finalArr.push(passage);\n              }\n            });\n            return finalArr;\n          }, []);\n\n        case 'workbook':\n          return passages.reduce(function (finalArr, passage) {\n            passage.problems.map(function (problem) {\n              if (filter.indexOf(workbookMap[problem.inWorkbook]) !== -1 && finalArr.indexOf(passage) === -1) {\n                finalArr.push(passage);\n              }\n            });\n            return finalArr;\n          }, []);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterProblemsOrPassages\", function (type) {\n      var _this$state = _this.state,\n          subjectFilters = _this$state.subjectFilters,\n          difficultyFilters = _this$state.difficultyFilters,\n          typeFilters = _this$state.typeFilters,\n          workbookFilters = _this$state.workbookFilters,\n          topicFilter = _this$state.topicFilter,\n          allProblems = _this$state.problems,\n          allPassages = _this$state.passages;\n      var problemsOrPassages;\n\n      if (type === 'problems') {\n        problemsOrPassages = allProblems;\n      } else {\n        problemsOrPassages = allPassages;\n      }\n\n      if (subjectFilters.length) {\n        problemsOrPassages = problemsOrPassages.filter(function (problemOrPassage) {\n          return subjectFilters.indexOf(problemOrPassage.subject) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(function (problem) {\n            return difficultyFilters.indexOf(problem.difficulty) !== -1;\n          });\n        } else {\n          problemsOrPassages = _this.onFilterPassages(problemsOrPassages, 'difficulty', difficultyFilters);\n        }\n      }\n\n      if (typeFilters.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(function (problem) {\n            return typeFilters.indexOf(problem.type) !== -1;\n          });\n        } else {\n          problemsOrPassages = _this.onFilterPassages(problemsOrPassages, 'type', typeFilters);\n        }\n      }\n\n      if (workbookFilters.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(function (problem) {\n            return workbookFilters.indexOf(workbookMap[problem.inWorkbook]) !== -1;\n          });\n        } else {\n          problemsOrPassages = _this.onFilterPassages(problemsOrPassages, 'workbook', workbookFilters);\n        }\n      }\n\n      if (topicFilter.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(function (problem) {\n            return problem.topics.indexOf(topicFilter) !== -1;\n          });\n        } else {\n          problemsOrPassages = _this.onFilterPassages(problemsOrPassages, 'topic', topicFilter);\n        }\n      }\n\n      return problemsOrPassages;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddSelectedProblems\", function (addTime) {\n      var _this$state2 = _this.state,\n          selectedProblems = _this$state2.selectedProblems,\n          selectedPassages = _this$state2.selectedPassages;\n      var addSelectedProblems = _this.props.addSelectedProblems;\n      addSelectedProblems(selectedProblems, selectedPassages, addTime);\n\n      _this.setState({\n        selectedPassages: [],\n        selectedProblems: [],\n        addProblemsDropdownOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableProblemsOrPassages\", function (type) {\n      var _this$state3 = _this.state,\n          subjectFilters = _this$state3.subjectFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          typeFilters = _this$state3.typeFilters,\n          workbookFilters = _this$state3.workbookFilters,\n          topicFilter = _this$state3.topicFilter,\n          sort = _this$state3.sort,\n          allProblems = _this$state3.problems,\n          allPassages = _this$state3.passages;\n      var problemsOrPassages;\n\n      if (type === 'problems') {\n        problemsOrPassages = allProblems;\n      } else {\n        problemsOrPassages = allPassages;\n      }\n\n      if (topicFilter.length || subjectFilters.length || difficultyFilters.length || typeFilters.length || workbookFilters.length) {\n        problemsOrPassages = _this.onFilterProblemsOrPassages(type);\n      }\n\n      if (sort) {\n        return _this.onSortBySubject(problemsOrPassages);\n      }\n\n      return problemsOrPassages;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"determineSort\", function () {\n      var sort = _this.state.sort;\n\n      if (sort === '' || sort === 'descending') {\n        return _this.onSetAscendingSort();\n      }\n\n      return _this.onSetDescendingSort();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state4 = _this.state,\n          currentSubjectFilters = _this$state4.subjectFilters,\n          currentDifficultyFilters = _this$state4.difficultyFilters,\n          currentTypeFilters = _this$state4.typeFilters,\n          currentWorkbookFilters = _this$state4.workbookFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'type':\n          modifiedFilterCurrentState = currentTypeFilters;\n          modifiedFilterName = 'typeFilters';\n          break;\n\n        case 'workbook':\n          modifiedFilterCurrentState = currentWorkbookFilters;\n          modifiedFilterName = 'workbookFilters';\n          break;\n\n        default:\n          break;\n      }\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleSelectAllProblemsOrPassages\", function () {\n      var _this$state5 = _this.state,\n          type = _this$state5.openSection,\n          problems = _this$state5.problems,\n          passages = _this$state5.passages,\n          currentSelectedProblems = _this$state5.selectedProblems,\n          currentSelectedPassages = _this$state5.selectedPassages;\n      var clickedTypeCurrentState;\n      var clickedTypeName;\n      var clickedAllOfType;\n\n      if (type === 'problems') {\n        clickedTypeCurrentState = currentSelectedProblems;\n        clickedTypeName = 'selectedProblems';\n        clickedAllOfType = problems;\n      } else {\n        clickedTypeCurrentState = currentSelectedPassages;\n        clickedTypeName = 'selectedPassages';\n        clickedAllOfType = passages;\n      }\n\n      if (clickedTypeCurrentState.length === 0) {\n        _this.setState(_defineProperty({}, clickedTypeName, clickedAllOfType));\n      } else {\n        _this.setState(_defineProperty({}, clickedTypeName, []));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleProblemOrPassageClick\", function (type, value) {\n      var _this$state6 = _this.state,\n          currentSelectedProblems = _this$state6.selectedProblems,\n          currentSelectedPassages = _this$state6.selectedPassages;\n      var clickedTypeCurrentState;\n      var clickedTypeName;\n\n      if (type === 'problem') {\n        clickedTypeCurrentState = currentSelectedProblems;\n        clickedTypeName = 'selectedProblems';\n      } else {\n        clickedTypeCurrentState = currentSelectedPassages;\n        clickedTypeName = 'selectedPassages';\n      }\n\n      var clickedTypeUpdatedState;\n\n      if (clickedTypeCurrentState.map(function (selectedElement) {\n        return selectedElement.id;\n      }).indexOf(value.id) === -1) {\n        clickedTypeUpdatedState = update(clickedTypeCurrentState, {\n          $push: [value]\n        });\n      } else {\n        var selectedIndex = clickedTypeCurrentState.map(function (selectedElement) {\n          return selectedElement.id;\n        }).indexOf(value.id);\n        clickedTypeUpdatedState = update(clickedTypeCurrentState, {\n          $splice: [[selectedIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, clickedTypeName, clickedTypeUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapProblems\", function () {\n      return _this.getMappableProblemsOrPassages('problems').map(function (problem) {\n        var selectedProblems = _this.state.selectedProblems;\n        var selected = selectedProblems.map(function (selectedProblem) {\n          return selectedProblem.id;\n        }).indexOf(problem.id) !== -1;\n        return __jsx(\"div\", {\n          className: selected ? \"card list-table-row list-row-added\" : \"card list-table-row\"\n        }, __jsx(\"div\", {\n          className: \"list-table-cell checkbox-cell\"\n        }, __jsx(\"label\", null, __jsx(\"input\", {\n          type: \"checkbox\",\n          className: \"filled-in\",\n          name: \"check_01\",\n          checked: selectedProblems.map(function (selectedProblem) {\n            return selectedProblem.id;\n          }).indexOf(problem.id) !== -1,\n          onChange: function onChange() {\n            return _this.handleProblemOrPassageClick('problem', problem);\n          }\n        }), __jsx(\"span\", null, \"\\xA0\"))), __jsx(\"div\", {\n          className: \"list-table-cell subject-cell\"\n        }, __jsx(\"span\", null, subjectMap[problem.subject])), __jsx(\"div\", {\n          className: \"list-table-cell info-cell\"\n        }, __jsx(\"span\", null, difficultyMap[problem.difficulty])), __jsx(\"div\", {\n          className: \"list-table-cell type-cell\"\n        }, __jsx(\"span\", null, typeMap[problem.type])), __jsx(\"div\", {\n          className: \"list-table-cell in-cell\"\n        }, problem.inWorkbook ? 'Yes' : 'No'), __jsx(\"div\", {\n          className: \"list-table-cell topic-cell\"\n        }, problem.topics.map(function (topic) {\n          return __jsx(\"span\", {\n            className: \"chip\",\n            id: topic\n          }, topicMap[topic]);\n        })), __jsx(\"div\", {\n          className: \"list-table-cell view-cell\"\n        }, __jsx(\"a\", {\n          href: \"#\"\n        }, __jsx(\"i\", {\n          className: \"icon-eye\"\n        }))), __jsx(\"div\", {\n          className: \"list-table-cell drop-cell\"\n        }, __jsx(\"a\", {\n          href: \"#\"\n        }, __jsx(\"i\", {\n          className: \"icon-plus-circle\"\n        }))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapPassages\", function () {\n      return _this.getMappableProblemsOrPassages('passages').map(function (passage) {\n        var selectedPassages = _this.state.selectedPassages;\n        var selected = selectedPassages.map(function (selectedPassage) {\n          return selectedPassage.id;\n        }).indexOf(passage.id) !== -1;\n        return __jsx(\"div\", {\n          className: \"list-view-section\"\n        }, __jsx(\"div\", {\n          className: selected ? \"list-table detail-table list-table-added\" : \"list-table detail-table\"\n        }, __jsx(TableHeader, {\n          sortBySubject: _this.determineSort\n        }), __jsx(\"div\", {\n          className: \"list-table-body\"\n        }, __jsx(\"div\", {\n          className: \"combined-holder\"\n        }, __jsx(\"div\", {\n          className: \"combined-header\"\n        }, __jsx(\"div\", {\n          className: \"list-table-row\"\n        }, __jsx(\"div\", {\n          className: \"list-table-cell checkbox-cell\"\n        }, __jsx(\"div\", {\n          className: \"checkbox-block\"\n        }, __jsx(\"label\", null, __jsx(\"input\", {\n          type: \"checkbox\",\n          className: \"filled-in\",\n          checked: selectedPassages.map(function (selectedPassage) {\n            return selectedPassage.id;\n          }).indexOf(passage.id) !== -1,\n          onChange: function onChange() {\n            return _this.handleProblemOrPassageClick('passage', passage);\n          }\n        }), __jsx(\"span\", null, \"\\xA0\")))), __jsx(\"div\", {\n          className: \"list-table-cell subject-cell\"\n        }, __jsx(\"div\", {\n          className: \"filter-name\"\n        }, subjectMap[passage.subject])), __jsx(\"div\", {\n          className: \"list-table-cell combined-title-cell\"\n        }, __jsx(\"div\", {\n          className: \"combined-title\"\n        }, passage.title)), __jsx(\"div\", {\n          className: \"list-table-cell view-cell\"\n        }, __jsx(\"a\", {\n          href: \"#\"\n        }, __jsx(\"i\", {\n          className: \"custom-icon-triangle-right\"\n        }))), __jsx(\"div\", {\n          className: \"list-table-cell drop-cell\"\n        }, __jsx(\"a\", {\n          href: \"#\"\n        }, __jsx(\"i\", {\n          className: \"icon-plus-circle\"\n        }))))), __jsx(\"div\", {\n          className: \"collection\"\n        }, passage.problems.map(function (problem) {\n          return __jsx(\"div\", {\n            className: \"collection-item list-table-row\",\n            id: problem.id\n          }, __jsx(\"div\", {\n            className: \"list-table-cell checkbox-cell\"\n          }, __jsx(\"span\", null, \"\\xA0\")), __jsx(\"div\", {\n            className: \"list-table-cell subject-cell\"\n          }, __jsx(\"span\", null, subjectMap[problem.subject])), __jsx(\"div\", {\n            className: \"list-table-cell info-cell\"\n          }, __jsx(\"span\", null, difficultyMap[problem.difficulty])), __jsx(\"div\", {\n            className: \"list-table-cell type-cell\"\n          }, __jsx(\"span\", null, typeMap[problem.type])), __jsx(\"div\", {\n            className: \"list-table-cell in-cell\"\n          }, problem.inWorkbook ? 'Yes' : 'No'), __jsx(\"div\", {\n            className: \"list-table-cell topic-cell\"\n          }, problem.topics.map(function (topic) {\n            return __jsx(\"span\", {\n              className: \"chip\",\n              id: topic\n            }, topicMap[topic]);\n          })), __jsx(\"div\", {\n            className: \"list-table-cell view-cell\"\n          }, __jsx(\"a\", {\n            href: \"#\"\n          }, __jsx(\"i\", {\n            className: \"icon-eye\"\n          }))), __jsx(\"div\", {\n            className: \"list-table-cell drop-cell\"\n          }, __jsx(\"span\", null, \"\\xA0\")));\n        }))))));\n      });\n    });\n\n    _this.state = {\n      addProblemsDropdownOpen: false,\n      openSection: 'problems',\n      topicFilter: '',\n      subjectFilters: [],\n      difficultyFilters: [],\n      typeFilters: [],\n      workbookFilters: [],\n      sort: '',\n      selectedProblems: [],\n      selectedPassages: [],\n      problems: [],\n      passages: [],\n      worksheetId: null\n    };\n    return _this;\n  }\n\n  _createClass(ProblemBank, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          problems = _this$props.problems,\n          passages = _this$props.passages,\n          worksheetId = _this$props.worksheetId; // eslint-disable-next-line react/no-did-mount-set-state\n\n      this.setState({\n        problems: problems,\n        passages: passages,\n        worksheetId: worksheetId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          onClose = _this$props2.onClose,\n          problems = _this$props2.problems;\n      var _this$state7 = this.state,\n          openSection = _this$state7.openSection,\n          subjectFilters = _this$state7.subjectFilters,\n          difficultyFilters = _this$state7.difficultyFilters,\n          typeFilters = _this$state7.typeFilters,\n          workbookFilters = _this$state7.workbookFilters,\n          addProblemsDropdownOpen = _this$state7.addProblemsDropdownOpen;\n      return __jsx(Portal, {\n        selector: \"#modal\"\n      }, open && __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"wrapper\"\n      }, __jsx(\"div\", {\n        id: \"modal_add_problem\",\n        style: {\n          zIndex: '1003'\n        },\n        className: \"jsx-837324748\" + \" \" + \"modal-page modal modal-custom\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"card-modal grey lighten-3\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"header-modal-box card-panel light-blue lighten-1 white-text\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"header-flex-row row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"col s12 m4 l5\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"header-holder\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"header-col\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"icon-col\"\n      }, __jsx(\"i\", {\n        className: \"jsx-837324748\" + \" \" + \"icon-search\"\n      }))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"header-col\"\n      }, __jsx(\"nav\", {\n        className: \"jsx-837324748\" + \" \" + \"breadcrumb-header\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"nav-wrapper \"\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        className: \"jsx-837324748\" + \" \" + \"breadcrumb modal-close\"\n      }, \"< Custom Worksheet\"))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"card-panel-text\"\n      }, __jsx(\"h1\", {\n        className: \"jsx-837324748\" + \" \" + \"text-large\"\n      }, \"Problem Bank\"))))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"card-panel-description col s8 m3 l2\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"card-panel-text\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"col-row\"\n      }, __jsx(\"span\", {\n        className: \"jsx-837324748\" + \" \" + \"value\"\n      }, problems.length), __jsx(\"span\", {\n        className: \"jsx-837324748\" + \" \" + \"value-text\"\n      }, \"worksheet \", __jsx(\"br\", {\n        className: \"jsx-837324748\"\n      }), \"problems\")))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"col s2 m1 right-align position-mobile-right\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"close-block\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: onClose,\n        className: \"jsx-837324748\" + \" \" + \"modal-close close\"\n      }, __jsx(\"i\", {\n        className: \"jsx-837324748\" + \" \" + \"icon-close-thin\"\n      }))))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"tabs-switcher-holder card-panel-row\"\n      }, __jsx(\"ul\", {\n        className: \"jsx-837324748\" + \" \" + \"tabs\"\n      }, __jsx(\"li\", {\n        style: {\n          borderBottom: openSection === 'problems' ? '2px solid white' : ''\n        },\n        className: \"jsx-837324748\" + \" \" + \"tab col s3\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this2.onChangeOpenSection('problems');\n        },\n        className: \"jsx-837324748\" + \" \" + ((openSection === 'problems' ? 'active' : '') || \"\")\n      }, __jsx(\"b\", {\n        className: \"jsx-837324748\"\n      }, \"Problems\"))), __jsx(\"li\", {\n        style: {\n          borderBottom: openSection === 'passages' ? '2px solid white' : ''\n        },\n        className: \"jsx-837324748\" + \" \" + \"tab col s3\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this2.onChangeOpenSection('passages');\n        },\n        className: \"jsx-837324748\" + \" \" + ((openSection === 'passages' ? 'active' : '') || \"\")\n      }, __jsx(\"b\", {\n        className: \"jsx-837324748\"\n      }, \"Passages\")))))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"tabs-content\"\n      }, __jsx(FilterSection, {\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        onClearFilters: this.onClearFilters,\n        sortBySubject: this.determineSort,\n        toggleSelectAllProblemsOrPassages: this.toggleSelectAllProblemsOrPassages,\n        handleFilterClick: this.handleFilterClick,\n        subjectFilters: subjectFilters,\n        difficultyFilters: difficultyFilters,\n        typeFilters: typeFilters,\n        workbookFilters: workbookFilters\n      }), openSection === 'problems' ? __jsx(\"div\", {\n        id: \"tab_problems\",\n        className: \"jsx-837324748\" + \" \" + \"tab-content active\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"content-section content-section-80\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"container-lg\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"result-row center-align\"\n      }, __jsx(\"b\", {\n        className: \"jsx-837324748\" + \" \" + \"result\"\n      }, \"- \", this.getMappableProblemsOrPassages('problems').length, \" matches -\")), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"list-view-section\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"list-table detail-table\"\n      }, __jsx(TableHeader, {\n        sortBySubject: this.determineSort\n      }), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"list-table-body\"\n      }, this.mapProblems())))))) : __jsx(\"div\", {\n        id: \"tab_passages\",\n        className: \"jsx-837324748\" + \" \" + \"tab-content active\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"content-section content-section-80\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"container-lg\"\n      }, __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"result-row center-align\"\n      }, __jsx(\"b\", {\n        className: \"jsx-837324748\" + \" \" + \"result\"\n      }, \"- \", this.getMappableProblemsOrPassages('passages').length, \" matches -\")), this.mapPassages()))), __jsx(\"div\", {\n        className: \"jsx-837324748\" + \" \" + \"add-btn-block\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown_assign_selected_passeges\",\n        onClick: this.onToggleAddProblemDropdown,\n        className: \"jsx-837324748\" + \" \" + \"dropdown-trigger waves-effect waves-teal btn add-btn\"\n      }, __jsx(\"i\", {\n        className: \"jsx-837324748\" + \" \" + \"material-icons\"\n      }, \"add\"), \"Add Selected Problems\"), __jsx(\"ul\", {\n        id: \"dropdown_assign_selected_passeges\",\n        style: {\n          display: addProblemsDropdownOpen ? 'block' : '0',\n          opacity: addProblemsDropdownOpen ? '1' : '0'\n        },\n        className: \"jsx-837324748\" + \" \" + 'dropdown-content'\n      }, __jsx(\"li\", {\n        className: \"jsx-837324748\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this2.onAddSelectedProblems('today');\n        },\n        className: \"jsx-837324748\"\n      }, \"For Today\")), __jsx(\"li\", {\n        className: \"jsx-837324748\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this2.onAddSelectedProblems('tomorrow');\n        },\n        className: \"jsx-837324748\"\n      }, \"For Tomorrow\")), __jsx(\"li\", {\n        className: \"jsx-837324748\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this2.onAddSelectedProblems('nextSession');\n        },\n        className: \"jsx-837324748\"\n      }, \"For Next Session\")), __jsx(\"li\", {\n        className: \"jsx-837324748\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this2.onAddSelectedProblems('date');\n        },\n        className: \"jsx-837324748\"\n      }, \"For Date...\")))))))), __jsx(_JSXStyle, {\n        id: \"837324748\"\n      }, [\".card-modal.jsx-837324748{margin:0;border-radius:6px;}\", \".wrapper.jsx-837324748{min-height:0px;}\", \".modal-custom.jsx-837324748{opacity:1;visibility:visible;}\", \".modal-footer.jsx-837324748{background-color:white;}\"]));\n    }\n  }]);\n\n  return ProblemBank;\n}(React.Component);\n\nexport default ProblemBank;","map":null,"metadata":{},"sourceType":"module"}