{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport sampleAnswers from '../../utils/sampleWritingTestResults';\nimport AnswerRow from './components/AnswerRow';\n\nvar WritingPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WritingPage, _React$Component);\n\n  function WritingPage(props) {\n    var _this;\n\n    _classCallCheck(this, WritingPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WritingPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapSampleAnswers\", function () {\n      return sampleAnswers.map(function (question, index) {\n        return React.createElement(AnswerRow, {\n          question: question,\n          index: index\n        });\n      });\n    });\n\n    _this.state = {\n      sampleAnswers: sampleAnswers,\n      writingPageModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(WritingPage, [{\n    key: \"render\",\n    // need to map through sample Answers array with an answer row for each\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"slide\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"ol\", {\n        className: \"answers-list\"\n      }, this.mapSampleAnswers()))));\n    }\n  }]);\n\n  return WritingPage;\n}(React.Component);\n\nexport default WritingPage;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\index.js"],"names":["React","sampleAnswers","AnswerRow","WritingPage","props","map","question","index","state","writingPageModalOpen","mapSampleAnswers","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,uEAQA;AAAA,aAAMH,aAAa,CAACI,GAAd,CAAkB,UAACC,QAAD,EAAWC,KAAX;AAAA,eAAqB,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAED,QAArB;AAA+B,UAAA,KAAK,EAAEC;AAAtC,UAArB;AAAA,OAAlB,CAAN;AAAA,KARA;;AAEjB,UAAKC,KAAL,GAAa;AACXP,MAAAA,aAAa,EAAbA,aADW;AAEXQ,MAAAA,oBAAoB,EAAE;AAFX,KAAb;AAFiB;AAMlB;;;;AAGH;6BACW;AACP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACA;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACK,KAAKC,gBAAL,EADL,CADF,CADF,CADA,CADF;AAWD;;;;EAvBuBV,KAAK,CAACW,S;;AA0BhC,eAAeR,WAAf","sourcesContent":["import React from 'react';\r\nimport sampleAnswers from '../../utils/sampleWritingTestResults';\r\nimport AnswerRow from './components/AnswerRow';\r\n\r\nclass WritingPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      sampleAnswers,\r\n      writingPageModalOpen: false,\r\n    }\r\n  };\r\n\r\n  mapSampleAnswers = () => sampleAnswers.map((question, index) => <AnswerRow question={question} index={index} /> )\r\n// need to map through sample Answers array with an answer row for each\r\n  render() {\r\n    return(\r\n      <div className=\"slide\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 l4\">\r\n          <ol className=\"answers-list\">\r\n              {this.mapSampleAnswers()}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WritingPage;"]},"metadata":{},"sourceType":"module"}