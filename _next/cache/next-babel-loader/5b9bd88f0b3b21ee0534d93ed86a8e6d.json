{"ast":null,"code":"export const firstNameAscending = ({\n  accountInfo: {\n    firstName: firstNameA\n  }\n}, {\n  accountInfo: {\n    firstName: firstNameB\n  }\n}) => {\n  if (firstNameA < firstNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const firstNameDescending = ({\n  accountInfo: {\n    firstName: firstNameA\n  }\n}, {\n  accountInfo: {\n    firstName: firstNameB\n  }\n}) => {\n  if (firstNameA > firstNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const lastNameAscending = ({\n  accountInfo: {\n    lastName: lastNameA\n  }\n}, {\n  accountInfo: {\n    lastName: lastNameB\n  }\n}) => {\n  if (lastNameA < lastNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const lastNameDescending = ({\n  accountInfo: {\n    lastName: lastNameA\n  }\n}, {\n  accountInfo: {\n    lastName: lastNameB\n  }\n}) => {\n  if (lastNameA > lastNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const studentFirstNameAscending = ({\n  studentInformation: {\n    firstName: firstNameA\n  }\n}, {\n  studentInformation: {\n    firstName: firstNameB\n  }\n}) => {\n  if (firstNameA < firstNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const studentFirstNameDescending = ({\n  studentInformation: {\n    firstName: firstNameA\n  }\n}, {\n  studentInformation: {\n    firstName: firstNameB\n  }\n}) => {\n  if (firstNameA > firstNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const studentLastNameAscending = ({\n  studentInformation: {\n    lastName: lastNameA\n  }\n}, {\n  studentInformation: {\n    lastName: lastNameB\n  }\n}) => {\n  if (lastNameA < lastNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const studentLastNameDescending = ({\n  studentInformation: {\n    lastName: lastNameA\n  }\n}, {\n  studentInformation: {\n    lastName: lastNameB\n  }\n}) => {\n  if (lastNameA > lastNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const dueDate = ({\n  dueDate: dueDateA\n}, {\n  dueDate: dueDateB\n}) => {\n  if (dueDateA < dueDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const assignDate = ({\n  assignDate: assignDateA\n}, {\n  assignDate: assignDateB\n}) => {\n  if (assignDateA > assignDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const problems = ({\n  problems: problemsA\n}, {\n  problems: problemsB\n}) => {\n  if (problemsA > problemsB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const completed = ({\n  completed: completedA,\n  problems: problemsA\n}, {\n  completed: completedB,\n  problems: problemsB\n}) => {\n  if (completedA / problemsA > completedB / problemsB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const flags = ({\n  flags: flagsA\n}, {\n  flags: flagsB\n}) => {\n  if (flagsA > flagsB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const score = ({\n  score: scoreA\n}, {\n  score: scoreB\n}) => {\n  if (scoreA > scoreB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const timeEstimate = ({\n  timeEstimate: timeEstimateA\n}, {\n  timeEstimate: timeEstimateB\n}) => {\n  if (timeEstimateA > timeEstimateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const timeEstimateAscending = ({\n  timeEstimate: timeEstimateA\n}, {\n  timeEstimate: timeEstimateB\n}) => {\n  if (timeEstimateA < timeEstimateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const subjectAscending = ({\n  subject: subjectA\n}, {\n  subject: subjectB\n}) => {\n  if (subjectA < subjectB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const subjectDescending = ({\n  subject: subjectA\n}, {\n  subject: subjectB\n}) => {\n  if (subjectA > subjectB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const passageAscending = ({\n  starting_page: passageA\n}, {\n  starting_page: passageB\n}) => {\n  if (passageA < passageB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const passageDescending = ({\n  passage: passageA\n}, {\n  passage: passageB\n}) => {\n  if (passageA > passageB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const statusDescending = ({\n  status: statusA\n}, {\n  status: statusB\n}) => {\n  if (statusA > statusB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const statusAscending = ({\n  status: statusA\n}, {\n  status: statusB\n}) => {\n  if (statusA < statusB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const scoreDescending = ({\n  score: scoreA\n}, {\n  score: scoreB\n}) => {\n  if (scoreA > scoreB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const scoreAscending = ({\n  score: scoreA\n}, {\n  score: scoreB\n}) => {\n  if (scoreA < scoreB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const flagsDescending = ({\n  flags: flagsA\n}, {\n  flags: flagsB\n}) => {\n  if (flagsA.length > flagsB.length) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const flagsAscending = ({\n  flags: flagsA\n}, {\n  flags: flagsB\n}) => {\n  if (flagsA.length < flagsB.length) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const availableDateDescending = ({\n  availableDate: availableDateA\n}, {\n  availableDate: availableDateB\n}) => {\n  if (availableDateA > availableDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const availableDateAscending = ({\n  assignment_date: availableDateA\n}, {\n  assignment_date: availableDateB\n}) => {\n  if (availableDateA < availableDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const lessonNameAscending = ({\n  lessonName: lessonNameA\n}, {\n  lessonName: lessonNameB\n}) => {\n  if (lessonNameA < lessonNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const lessonNameDescending = ({\n  lessonName: lessonNameA\n}, {\n  lessonName: lessonNameB\n}) => {\n  if (lessonNameA > lessonNameB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const dueDateAscending = ({\n  due_date: dueDateA\n}, {\n  due_date: dueDateB\n}) => {\n  if (dueDateA < dueDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const completionDateAscending = ({\n  completionDate: completionDateA\n}, {\n  completionDate: completionDateB\n}) => {\n  if (completionDateA < completionDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const completionDateDescending = ({\n  completionDate: completionDateA\n}, {\n  completionDate: completionDateB\n}) => {\n  if (completionDateA > completionDateB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const lessonTypeAscending = ({\n  type: typeA\n}, {\n  type: typeB\n}) => {\n  if (typeA < typeB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const lessonTypeDescending = ({\n  type: typeA\n}, {\n  type: typeB\n}) => {\n  if (typeA > typeB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const totalProblemsAscending = ({\n  totalProblems: totalProblemsA\n}, {\n  totalProblems: totalProblemsB\n}) => {\n  if (totalProblemsA < totalProblemsB) {\n    return -1;\n  }\n\n  return 0;\n};\nexport const totalProblemsDescending = ({\n  totalProblems: totalProblemsA\n}, {\n  totalProblems: totalProblemsB\n}) => {\n  if (totalProblemsA > totalProblemsB) {\n    return -1;\n  }\n\n  return 0;\n};","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/utils/sortFunctions.js"],"names":["firstNameAscending","accountInfo","firstName","firstNameA","firstNameB","firstNameDescending","lastNameAscending","lastName","lastNameA","lastNameB","lastNameDescending","studentFirstNameAscending","studentInformation","studentFirstNameDescending","studentLastNameAscending","studentLastNameDescending","dueDate","dueDateA","dueDateB","assignDate","assignDateA","assignDateB","problems","problemsA","problemsB","completed","completedA","completedB","flags","flagsA","flagsB","score","scoreA","scoreB","timeEstimate","timeEstimateA","timeEstimateB","timeEstimateAscending","subjectAscending","subject","subjectA","subjectB","subjectDescending","passageAscending","starting_page","passageA","passageB","passageDescending","passage","statusDescending","status","statusA","statusB","statusAscending","scoreDescending","scoreAscending","flagsDescending","length","flagsAscending","availableDateDescending","availableDate","availableDateA","availableDateB","availableDateAscending","assignment_date","lessonNameAscending","lessonName","lessonNameA","lessonNameB","lessonNameDescending","dueDateAscending","due_date","completionDateAscending","completionDate","completionDateA","completionDateB","completionDateDescending","lessonTypeAscending","type","typeA","typeB","lessonTypeDescending","totalProblemsAscending","totalProblems","totalProblemsA","totalProblemsB","totalProblemsDescending"],"mappings":"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","sourcesContent":["export const firstNameAscending = ({ accountInfo: { firstName: firstNameA } }, { accountInfo: { firstName: firstNameB } }) => {\n  if (firstNameA < firstNameB) { return -1; }\n  return 0;\n};\n\nexport const firstNameDescending = ({ accountInfo: { firstName: firstNameA } }, { accountInfo: { firstName: firstNameB } }) => {\n  if (firstNameA > firstNameB) { return -1; }\n  return 0;\n};\n\nexport const lastNameAscending = ({ accountInfo: { lastName: lastNameA } }, { accountInfo: { lastName: lastNameB } }) => {\n  if (lastNameA < lastNameB) { return -1; }\n  return 0;\n};\n\nexport const lastNameDescending = ({ accountInfo: { lastName: lastNameA } }, { accountInfo: { lastName: lastNameB } }) => {\n  if (lastNameA > lastNameB) { return -1; }\n  return 0;\n};\n\nexport const studentFirstNameAscending = ({ studentInformation: { firstName: firstNameA } }, { studentInformation: { firstName: firstNameB } }) => {\n  if (firstNameA < firstNameB) { return -1; }\n  return 0;\n};\n\nexport const studentFirstNameDescending = ({ studentInformation: { firstName: firstNameA } }, { studentInformation: { firstName: firstNameB } }) => {\n  if (firstNameA > firstNameB) { return -1; }\n  return 0;\n};\n\nexport const studentLastNameAscending = ({ studentInformation: { lastName: lastNameA } }, { studentInformation: { lastName: lastNameB } }) => {\n  if (lastNameA < lastNameB) { return -1; }\n  return 0;\n};\n\nexport const studentLastNameDescending = ({ studentInformation: { lastName: lastNameA } }, { studentInformation: { lastName: lastNameB } }) => {\n  if (lastNameA > lastNameB) { return -1; }\n  return 0;\n};\n\nexport const dueDate = ({ dueDate: dueDateA }, { dueDate: dueDateB }) => {\n  if (dueDateA < dueDateB) { return -1; }\n  return 0;\n};\n\nexport const assignDate = ({ assignDate: assignDateA }, { assignDate: assignDateB }) => {\n  if (assignDateA > assignDateB) { return -1; }\n  return 0;\n};\n\nexport const problems = ({ problems: problemsA }, { problems: problemsB }) => {\n  if (problemsA > problemsB) { return -1; }\n  return 0;\n};\n\nexport const completed = ({ completed: completedA, problems: problemsA }, { completed: completedB, problems: problemsB }) => {\n  if (completedA / problemsA > completedB / problemsB) { return -1; }\n  return 0;\n};\n\nexport const flags = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA > flagsB) { return -1; }\n  return 0;\n};\n\nexport const score = ({ score: scoreA }, { score: scoreB }) => {\n  if (scoreA > scoreB) { return -1; }\n  return 0;\n};\n\nexport const timeEstimate = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA > timeEstimateB) { return -1; }\n  return 0;\n};\n\nexport const timeEstimateAscending = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA < timeEstimateB) { return -1; }\n  return 0;\n};\n\nexport const subjectAscending = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA < subjectB) { return -1; }\n  return 0;\n};\n\nexport const subjectDescending = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA > subjectB) { return -1; }\n  return 0;\n};\n\nexport const passageAscending = ({ starting_page: passageA }, { starting_page: passageB }) => {\n  if (passageA < passageB) { return -1; }\n  return 0;\n};\nexport const passageDescending = ({ passage: passageA }, { passage: passageB }) => {\n  if (passageA > passageB) { return -1; }\n  return 0;\n};\n\nexport const statusDescending = ({ status: statusA }, { status: statusB }) => {\n  if (statusA > statusB) { return -1; }\n  return 0;\n};\n\nexport const statusAscending = ({ status: statusA }, { status: statusB }) => {\n  if (statusA < statusB) { return -1; }\n  return 0;\n};\nexport const scoreDescending = ({ score: scoreA }, { score: scoreB }) => {\n  if (scoreA > scoreB) { return -1; }\n  return 0;\n};\n\nexport const scoreAscending = ({ score: scoreA }, { score: scoreB }) => {\n  if (scoreA < scoreB) { return -1; }\n  return 0;\n};\n\nexport const flagsDescending = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA.length > flagsB.length) { return -1; }\n  return 0;\n};\n\nexport const flagsAscending = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA.length < flagsB.length) { return -1; }\n  return 0;\n};\n\nexport const availableDateDescending = ({ availableDate: availableDateA }, { availableDate: availableDateB }) => {\n  if (availableDateA > availableDateB) { return -1; }\n  return 0;\n};\n\nexport const availableDateAscending = ({ assignment_date: availableDateA }, { assignment_date: availableDateB }) => {\n  if (availableDateA < availableDateB) { return -1; }\n  return 0;\n};\n\nexport const lessonNameAscending = ({ lessonName: lessonNameA }, { lessonName: lessonNameB }) => {\n  if (lessonNameA < lessonNameB) { return -1; }\n  return 0;\n};\n\nexport const lessonNameDescending = ({ lessonName: lessonNameA }, { lessonName: lessonNameB }) => {\n  if (lessonNameA > lessonNameB) { return -1; }\n  return 0;\n};\n\nexport const dueDateAscending = ({ due_date: dueDateA }, { due_date: dueDateB }) => {\n  if (dueDateA < dueDateB) { return -1; }\n  return 0;\n};\n\nexport const completionDateAscending = ({ completionDate: completionDateA }, { completionDate: completionDateB }) => {\n  if (completionDateA < completionDateB) { return -1; }\n  return 0;\n};\n\nexport const completionDateDescending = ({ completionDate: completionDateA }, { completionDate: completionDateB }) => {\n  if (completionDateA > completionDateB) { return -1; }\n  return 0;\n};\n\nexport const lessonTypeAscending = ({ type: typeA }, { type: typeB }) => {\n  if (typeA < typeB) { return -1; }\n  return 0;\n};\n\nexport const lessonTypeDescending = ({ type: typeA }, { type: typeB }) => {\n  if (typeA > typeB) { return -1; }\n  return 0;\n};\n\nexport const totalProblemsAscending = ({ totalProblems: totalProblemsA }, { totalProblems: totalProblemsB }) => {\n  if (totalProblemsA < totalProblemsB) { return -1; }\n  return 0;\n};\n\nexport const totalProblemsDescending = ({ totalProblems: totalProblemsA }, { totalProblems: totalProblemsB }) => {\n  if (totalProblemsA > totalProblemsB) { return -1; }\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}