{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    const {\n      filters,\n      eventFilters,\n      onClearFilters,\n      handleFilterClick\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"calendar-filter filter-form-holder\"\n    }, React.createElement(\"ul\", {\n      className: \"collapsible expandable\",\n      style: {\n        minHeight: '0'\n      }\n    }, React.createElement(\"li\", null, React.createElement(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, React.createElement(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"className\",\n      name: \"className\",\n      checked: filters.indexOf('className') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"className\"\n    }, \"Some Class Name\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"tutoring\",\n      name: \"tutoring\",\n      checked: filters.indexOf('tutoring') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"tutoring\"\n    }, \"Tutoring\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"sessions\",\n      name: \"sessions\",\n      checked: eventFilters.indexOf('sessions') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name, true)\n    }), React.createElement(\"label\", {\n      htmlFor: \"sessions\"\n    }, \"Sessions\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"lessons\",\n      name: \"lessons\",\n      checked: eventFilters.indexOf('lessons') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name, true)\n    }), React.createElement(\"label\", {\n      htmlFor: \"lessons\"\n    }, \"Lessons\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"worksheets\",\n      name: \"worksheets\",\n      checked: eventFilters.indexOf('worksheets') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name, true)\n    }), React.createElement(\"label\", {\n      htmlFor: \"worksheets\"\n    }, \"Worksheets\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"testSections\",\n      name: \"testSections\",\n      checked: eventFilters.indexOf('testSections') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name, true)\n    }), React.createElement(\"label\", {\n      htmlFor: \"testSections\"\n    }, \"Test Sections\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"simulatedSats\",\n      name: \"simulatedSats\",\n      checked: eventFilters.indexOf('simulatedSats') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name, true)\n    }), React.createElement(\"label\", {\n      htmlFor: \"simulatedSats\"\n    }, \"Simulated SATs\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"targetTests\",\n      name: \"targetTests\",\n      checked: eventFilters.indexOf('targetTests') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name, true)\n    }), React.createElement(\"label\", {\n      htmlFor: \"targetTests\"\n    }, \"Target Tests\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"dueToday\",\n      name: \"dueToday\",\n      checked: filters.indexOf('dueToday') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"dueToday\"\n    }, \"Due Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"dueNextSession\",\n      name: \"dueNextSession\",\n      checked: filters.indexOf('dueNextSession') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"dueNextSession\"\n    }, \"Due By Next Session\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"dueThisWeek\",\n      name: \"dueThisWeek\",\n      checked: filters.indexOf('dueThisWeek') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"dueThisWeek\"\n    }, \"Due this Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"overdue\",\n      name: \"overdue\",\n      checked: filters.indexOf('overdue') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"overdue\"\n    }, \"Overdue\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"complete\",\n      name: \"complete\",\n      checked: filters.indexOf('complete') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"complete\"\n    }, \"Complete\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"incomplete\",\n      name: \"incomplete\",\n      checked: filters.indexOf('incomplete') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"incomplete\"\n    }, \"Incomplete\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"future\",\n      name: \"future\",\n      checked: filters.indexOf('future') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"future\"\n    }, \"Future\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"reading\",\n      name: \"reading\",\n      checked: filters.indexOf('reading') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"reading\"\n    }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"writing\",\n      name: \"writing\",\n      checked: filters.indexOf('writing') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"writing\"\n    }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"math\",\n      name: \"math\",\n      checked: filters.indexOf('math') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"math\"\n    }, \"Math\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"beginning\",\n      name: \"beginning\",\n      checked: filters.indexOf('beginning') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"beginning\"\n    }, \"Beginning\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"developing\",\n      name: \"developing\",\n      checked: filters.indexOf('developing') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"developing\"\n    }, \"Developing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"accomplished\",\n      name: \"accomplished\",\n      checked: filters.indexOf('accomplished') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"accomplished\"\n    }, \"Accomplished\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"exemplary\",\n      name: \"exemplary\",\n      checked: filters.indexOf('exemplary') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"exemplary\"\n    }, \"Exemplary\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hasReviewFlags\",\n      name: \"hasReviewFlags\",\n      checked: filters.indexOf('hasReviewFlags') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick(target.name)\n    }), React.createElement(\"label\", {\n      htmlFor: \"hasReviewFlags\"\n    }, \"Has Review Flags\"))))), React.createElement(\"div\", {\n      className: \"row mb-0 d-flex align-items-flex-end\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 l8\"\n    }), React.createElement(\"div\", {\n      className: \"col s12 l4\"\n    }, React.createElement(\"div\", {\n      className: \"option-filters\"\n    }, React.createElement(\"div\", {\n      className: \"option-item clear\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: onClearFilters\n    }, \"Clear Filters\")), React.createElement(\"div\", {\n      className: \"option-item\"\n    }, React.createElement(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, React.createElement(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}