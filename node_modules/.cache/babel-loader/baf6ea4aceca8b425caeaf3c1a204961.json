{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types'; // TODO: Implement doughnut charts\n\nvar CourseProgress = function CourseProgress(_ref) {\n  var _ref$state = _ref.state,\n      startDate = _ref$state.startDate,\n      testDate = _ref$state.testDate,\n      progress = _ref$state.progress,\n      improvement = _ref$state.improvement,\n      lessons = _ref$state.lessons,\n      instruction = _ref$state.instruction,\n      practiceTests = _ref$state.practiceTests,\n      active = _ref.active;\n  return React.createElement(\"div\", {\n    className: \"col s12 l7 card-width-747\"\n  }, React.createElement(\"div\", {\n    className: \"card-main card card-chart\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"h2\", null, \"Course Progress\"), React.createElement(\"div\", {\n    className: \"progress-block\"\n  }, React.createElement(\"div\", {\n    className: \"progress-legend\"\n  }, active ? [React.createElement(\"div\", {\n    className: \"legend-block\",\n    key: \"0\"\n  }, React.createElement(\"span\", {\n    className: \"small-text\"\n  }, \"Start Date\"), React.createElement(\"time\", {\n    dateTime: \"2018-06-13\",\n    className: \"large-text\"\n  }, startDate)), React.createElement(\"div\", {\n    className: \"legend-block\",\n    key: \"1\"\n  }, React.createElement(\"span\", {\n    className: \"small-text\"\n  }, \"Test Date\"), React.createElement(\"time\", {\n    dateTime: \"2018-10-06\",\n    className: \"large-text\"\n  }, \"Oct SAT (\", testDate, \")\"))] : React.createElement(\"span\", {\n    className: \"text-frame\"\n  }, \"Once the course begins, check here to be sure the student is on track.\")), React.createElement(\"div\", {\n    className: \"progress\"\n  }, React.createElement(\"div\", {\n    className: \"determinate\",\n    style: active ? {\n      width: progress\n    } : {\n      width: '0%'\n    }\n  }, active && React.createElement(\"span\", {\n    className: \"progress-label\"\n  }, progress, \"%\")))), React.createElement(\"div\", {\n    className: \"charts-container\"\n  }, React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"col\"\n  }, React.createElement(\"div\", {\n    className: \"chart-block\"\n  }, React.createElement(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-improvement.json\"\n  }), React.createElement(\"div\", {\n    className: \"chart-text\"\n  }, React.createElement(\"span\", {\n    className: \"title\"\n  }, \"Improvement\"), active ? [React.createElement(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, improvement, \"%\"), React.createElement(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs target score\")] : React.createElement(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Yet\")))), React.createElement(\"div\", {\n    className: \"col\"\n  }, React.createElement(\"div\", {\n    className: \"chart-block\"\n  }, React.createElement(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-lessons.json\"\n  }), React.createElement(\"div\", {\n    className: \"chart-text\"\n  }, React.createElement(\"span\", {\n    className: \"title\"\n  }, \"Lessons\"), active ? [React.createElement(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, lessons, \"%\"), React.createElement(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs scheduled lessons\")] : React.createElement(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Scheduled\")))), React.createElement(\"div\", {\n    className: \"col\"\n  }, React.createElement(\"div\", {\n    className: \"chart-block\"\n  }, React.createElement(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-instruction.json\"\n  }), React.createElement(\"div\", {\n    className: \"chart-text\"\n  }, React.createElement(\"span\", {\n    className: \"title\"\n  }, \"Instruction\"), active ? [React.createElement(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, instruction, \"%\"), React.createElement(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs scheduled instruction\")] : React.createElement(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Scheduled\")))), React.createElement(\"div\", {\n    className: \"col\"\n  }, React.createElement(\"div\", {\n    className: \"chart-block\"\n  }, React.createElement(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-practice-tests.json\"\n  }), React.createElement(\"div\", {\n    className: \"chart-text\"\n  }, React.createElement(\"span\", {\n    className: \"title\"\n  }, \"Practice Tests\"), active ? [React.createElement(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, practiceTests, \"%\"), React.createElement(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs scheduled tests\")] : React.createElement(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Scheduled\"))))), active ? React.createElement(\"div\", {\n    className: \"chart-legend\"\n  }, React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"col legend-frame\"\n  }, React.createElement(\"span\", {\n    className: \"box complete\"\n  }), React.createElement(\"span\", {\n    className: \"text\"\n  }, \"Complete\")), React.createElement(\"div\", {\n    className: \"col legend-frame\"\n  }, React.createElement(\"span\", {\n    className: \"box behind\"\n  }), React.createElement(\"span\", {\n    className: \"text\"\n  }, \"Behind Schedule\")))) : null))));\n};\n\nCourseProgress.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired\n};\nexport default CourseProgress;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailSummaryPage\\components\\CourseProgress\\index.js"],"names":["React","PropTypes","CourseProgress","state","startDate","testDate","progress","improvement","lessons","instruction","practiceTests","active","width","propTypes","object","isRequired","bool"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,wBAAGC,KAAH;AAAA,MAAYC,SAAZ,cAAYA,SAAZ;AAAA,MAAuBC,QAAvB,cAAuBA,QAAvB;AAAA,MAAiCC,QAAjC,cAAiCA,QAAjC;AAAA,MAA2CC,WAA3C,cAA2CA,WAA3C;AAAA,MAAwDC,OAAxD,cAAwDA,OAAxD;AAAA,MAAiEC,WAAjE,cAAiEA,WAAjE;AAAA,MAA8EC,aAA9E,cAA8EA,aAA9E;AAAA,MAA+FC,MAA/F,QAA+FA,MAA/F;AAAA,SACrB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,kDADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAEqBA,MAFrB,IAGM;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,kBADF,EAEE;AAAM,IAAA,QAAQ,EAAC,YAAf;AAA4B,IAAA,SAAS,EAAC;AAAtC,KAAoDP,SAApD,CAFF,CAHN,EAOM;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,iBADF,EAEE;AAAM,IAAA,QAAQ,EAAC,YAAf;AAA4B,IAAA,SAAS,EAAC;AAAtC,kBAA6DC,QAA7D,MAFF,CAPN,IAaM;AAAM,IAAA,SAAS,EAAC;AAAhB,8EAbN,CADF,EAkBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAEM,MAAM,GAAG;AAACC,MAAAA,KAAK,EAAEN;AAAR,KAAH,GAAuB;AAACM,MAAAA,KAAK,EAAE;AAAR;AAAjE,KACGD,MAAM,IAAI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAkCL,QAAlC,MADb,CADF,CAlBF,CAFF,EA0BE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,yBAAkB,IAAlE;AAAuE,mBAAY;AAAnF,IADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,mBADF,EAGqBK,MAHrB,IAIM;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA,KAAyBJ,WAAzB,MAJN,EAKM;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA,uBALN,IAQM;AAAM,IAAA,SAAS,EAAC;AAAhB,gBARN,CAFF,CADF,CADF,EAmBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,yBAAkB,IAAlE;AAAuE,mBAAY;AAAnF,IADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,eADF,EAGqBI,MAHrB,IAIM;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA,KAAyBH,OAAzB,MAJN,EAKM;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA,4BALN,IAQM;AAAM,IAAA,SAAS,EAAC;AAAhB,sBARN,CAFF,CADF,CAnBF,EAoCE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,yBAAkB,IAAlE;AAAuE,mBAAY;AAAnF,IADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,mBADF,EAGqBG,MAHrB,IAIM;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA,KAAyBF,WAAzB,MAJN,EAKM;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA,gCALN,IAQM;AAAM,IAAA,SAAS,EAAC;AAAhB,sBARN,CAFF,CADF,CApCF,EAqDE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAgD,yBAAkB,IAAlE;AAAuE,mBAAY;AAAnF,IADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,sBADF,EAGqBE,MAHrB,IAIM;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA,KAAyBD,aAAzB,MAJN,EAKM;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA,0BALN,IAQM;AAAM,IAAA,SAAS,EAAC;AAAhB,sBARN,CAFF,CADF,CArDF,CADF,EAwEiBC,MAxEjB,GAyEI;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,IADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,gBAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,IADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,uBAFF,CALF,CADF,CAzEJ,QA1BF,CADF,CADF,CADqB;AAAA,CAAvB;;AAyHAT,cAAc,CAACW,SAAf,GAA2B;AACzBV,EAAAA,KAAK,EAAEF,SAAS,CAACa,MAAV,CAAiBC,UADC;AAEzBJ,EAAAA,MAAM,EAAEV,SAAS,CAACe,IAAV,CAAeD;AAFE,CAA3B;AAKA,eAAeb,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// TODO: Implement doughnut charts\nconst CourseProgress = ({ state: { startDate, testDate, progress, improvement, lessons, instruction, practiceTests }, active }) => (\n  <div className=\"col s12 l7 card-width-747\">\n    <div className=\"card-main card card-chart\">\n      <div className=\"card-content\">\n        <h2>Course Progress</h2>\n        <div className=\"progress-block\">\n          <div className=\"progress-legend\">\n            <Choose>\n              <When condition={active}>\n                <div className=\"legend-block\">\n                  <span className=\"small-text\">Start Date</span>\n                  <time dateTime=\"2018-06-13\" className=\"large-text\">{startDate}</time>\n                </div>\n                <div className=\"legend-block\">\n                  <span className=\"small-text\">Test Date</span>\n                  <time dateTime=\"2018-10-06\" className=\"large-text\">Oct SAT ({testDate})</time>\n                </div>\n              </When>\n              <Otherwise>\n                <span className=\"text-frame\">Once the course begins, check here to be sure the student is on track.</span>\n              </Otherwise>\n            </Choose>\n          </div>\n          <div className=\"progress\">\n            <div className=\"determinate\" style={active ? {width: progress} : {width: '0%'}}>\n              {active && <span className=\"progress-label\">{progress}%</span>}\n            </div>\n          </div>\n        </div>\n        <div className=\"charts-container\">\n          <div className=\"row mb-0\">\n            <div className=\"col\">\n              <div className=\"chart-block\">\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-improvement.json'></div>\n                <div className=\"chart-text\">\n                  <span className=\"title\">Improvement</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{improvement}%</span>\n                      <span className=\"description\">vs target score</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Yet</span>\n                    </Otherwise>\n                  </Choose>\n\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"chart-block\">\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-lessons.json'></div>\n                <div className=\"chart-text\">\n                  <span className=\"title\">Lessons</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{lessons}%</span>\n                      <span className=\"description\">vs scheduled lessons</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Scheduled</span>\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"chart-block\">\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-instruction.json'></div>\n                <div className=\"chart-text\">\n                  <span className=\"title\">Instruction</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{instruction}%</span>\n                      <span className=\"description\">vs scheduled instruction</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Scheduled</span>\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"chart-block\">\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-practice-tests.json'></div>\n                <div className=\"chart-text\">\n                  <span className=\"title\">Practice Tests</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{practiceTests}%</span>\n                      <span className=\"description\">vs scheduled tests</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Scheduled</span>\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n          </div>\n          <If condition={active}>\n            <div className=\"chart-legend\">\n              <div className=\"row mb-0\">\n                <div className=\"col legend-frame\">\n                  <span className=\"box complete\"></span>\n                  <span className=\"text\">Complete</span>\n                </div>\n                <div className=\"col legend-frame\">\n                  <span className=\"box behind\"></span>\n                  <span className=\"text\">Behind Schedule</span>\n                </div>\n              </div>\n            </div>\n          </If>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCourseProgress.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default CourseProgress;\n"]},"metadata":{},"sourceType":"module"}