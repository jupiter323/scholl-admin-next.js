{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nvar data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar getIndicatorStatus = function getIndicatorStatus(activeSection, active) {\n  return {\n    left: activeSection === 'subjectScores' ? '50%' : '0',\n    right: activeSection === 'subjectScores' ? '0' : '50%',\n    backgroundColor: active ? '#00bbf7' : '#b2b2b2'\n  };\n}; // TODO: Implement final line chart data implementation later\n\n\nvar TestScores =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestScores, _React$Component);\n\n  function TestScores(props) {\n    var _this;\n\n    _classCallCheck(this, TestScores);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestScores).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetOpenSection\", function (event, openSection) {\n      event.preventDefault();\n\n      _this.setState({\n        openSection: openSection\n      });\n    });\n\n    _this.state = {\n      openSection: 'compositeScore'\n    };\n    return _this;\n  }\n\n  _createClass(TestScores, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var openSection = this.state.openSection;\n      var _this$props = this.props,\n          _this$props$state = _this$props.state,\n          compositeScore = _this$props$state.compositeScore,\n          subjectScores = _this$props$state.subjectScores,\n          active = _this$props.active;\n      return __jsx(\"div\", {\n        className: \"col s12 l7 card-width-747\"\n      }, __jsx(\"div\", {\n        className: \"card-main card card-chart\"\n      }, __jsx(\"div\", {\n        className: \"card-content\"\n      }, __jsx(\"h2\", null, \"Test Scores\"), __jsx(\"div\", {\n        className: \"tabs-container tabs-charts-container\"\n      }, !active ? __jsx(\"div\", {\n        className: \"card-note-box\",\n        style: {\n          display: 'block'\n        }\n      }, __jsx(\"span\", {\n        className: \"title\"\n      }, \"Nothing to see here yet.\"), __jsx(\"span\", {\n        className: \"text-frame\"\n      }, \"Once this student has taken multiple tests, you can track the progress here. \")) : null, __jsx(\"ul\", {\n        className: \"tabs\",\n        style: {\n          filter: !active ? 'blur(3px)' : \"\"\n        }\n      }, __jsx(\"li\", {\n        className: \"tab col s6 l6\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetOpenSection(event, 'compositeScore');\n        },\n        className: openSection === 'compositeScore' ? 'active' : ''\n      }, \"Composite Score\")), __jsx(\"li\", {\n        className: \"tab col s6 l6\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetOpenSection(event, 'subjectScores');\n        },\n        className: openSection === 'subjectScores' ? 'active' : ''\n      }, \"Subject Scores\")), __jsx(\"li\", {\n        className: \"indicator\",\n        style: getIndicatorStatus(openSection, active)\n      })), __jsx(\"div\", {\n        id: \"scores_tab01\",\n        className: openSection === 'compositeScore' ? '' : 'tab-content',\n        style: active ? {} : {\n          filter: 'blur(3px)'\n        }\n      }, __jsx(\"div\", {\n        className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n      }, __jsx(\"ul\", {\n        className: \"panel-list\"\n      }, __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Reading\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.reading) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Writing\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.writing) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Math\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.math) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Composite\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.composite) : null))), __jsx(\"div\", {\n        className: \"chart-line-container js-scrollable-chart\"\n      }, __jsx(Line, {\n        data: data\n      }))), __jsx(\"div\", {\n        id: \"scores_tab02\",\n        className: openSection === 'subjectScores' ? '' : 'tab-content',\n        style: active ? {} : {\n          filter: 'blur(3px)'\n        }\n      }, __jsx(\"div\", {\n        className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n      }, __jsx(\"ul\", {\n        className: \"panel-list\"\n      }, __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Reading\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.reading) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Writing\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.writing) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Math\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.math) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Composite\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.composite) : null))), __jsx(\"div\", {\n        className: \"chart-line-container js-scrollable-chart\"\n      }, __jsx(Line, {\n        data: data\n      })))))));\n    }\n  }]);\n\n  return TestScores;\n}(React.Component);\n\n;\nTestScores.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired\n};\nexport default TestScores;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailSummaryPage/components/TestScores/index.js"],"names":["React","PropTypes","Line","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","getIndicatorStatus","activeSection","active","left","right","TestScores","props","event","openSection","preventDefault","setState","state","compositeScore","subjectScores","display","filter","onSetOpenSection","reading","writing","math","composite","Component","propTypes","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Line } from 'react-chartjs-2';\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nconst getIndicatorStatus = (activeSection, active) => ({\n  left: activeSection === 'subjectScores' ? '50%' : '0',\n  right: activeSection === 'subjectScores' ? '0' : '50%',\n  backgroundColor: active ? '#00bbf7' : '#b2b2b2',\n})\n\n// TODO: Implement final line chart data implementation later\nclass TestScores extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openSection: 'compositeScore',\n    }\n  }\n\n  onSetOpenSection = (event, openSection) => {\n    event.preventDefault();\n    this.setState({ openSection })\n  }\n\n  render() {\n    const { openSection } = this.state;\n    const { state: { compositeScore, subjectScores }, active } = this.props;\n    return (\n      <div className=\"col s12 l7 card-width-747\">\n        <div className=\"card-main card card-chart\">\n          <div className=\"card-content\">\n            <h2>Test Scores</h2>\n            <div className=\"tabs-container tabs-charts-container\">\n              <If condition={!active}>\n                <div className=\"card-note-box\" style={{ display: 'block' }}>\n                  <span className=\"title\">Nothing to see here yet.</span>\n                  <span className=\"text-frame\">Once this student has taken multiple tests, you can track the progress here. </span>\n                </div>\n              </If>\n              <ul className=\"tabs\" style={{ filter: !active ? 'blur(3px)': \"\"}}>\n                <li className=\"tab col s6 l6\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => this.onSetOpenSection(event, 'compositeScore')}\n                    className={openSection === 'compositeScore' ? 'active' : ''}\n                  >\n                    Composite Score\n                  </a>\n                </li>\n                <li className=\"tab col s6 l6\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => this.onSetOpenSection(event, 'subjectScores')}\n                    className={openSection === 'subjectScores' ? 'active' : ''}\n                  >\n                    Subject Scores\n                  </a>\n                </li>\n                <li className=\"indicator\" style={getIndicatorStatus(openSection, active)}></li>\n              </ul>\n              <div id=\"scores_tab01\" className={openSection === 'compositeScore' ? '' : 'tab-content'} style={active ? {} : { filter: 'blur(3px)'}}>\n                <div className={active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'}>\n                  <ul className=\"panel-list\">\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Reading</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.reading}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Writing</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.writing}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Math</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.math}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Composite</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.composite}</strong>\n                      </If>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"chart-line-container js-scrollable-chart\">\n                  <Line data={data} />\n                </div>\n              </div>\n              <div id=\"scores_tab02\" className={openSection === 'subjectScores' ? '' : 'tab-content'} style={active ? {} : { filter: 'blur(3px)'}}>\n                <div className={active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'}>\n                  <ul className=\"panel-list\">\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Reading</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.reading}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Writing</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.writing}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Math</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.math}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Composite</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.composite}</strong>\n                      </If>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"chart-line-container js-scrollable-chart\">\n                  <Line data={data} />\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nTestScores.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default TestScores;\n"]},"metadata":{},"sourceType":"module"}