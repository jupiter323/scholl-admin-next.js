{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport bubbleStyles from '../../../../utils/bubbleStyles';\nimport sampleAnswers from '../../../../utils/sampleWritingTestResults'; // need to import modal\n\nvar AnswerRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AnswerRow, _React$Component);\n\n  function AnswerRow(props) {\n    var _this;\n\n    _classCallCheck(this, AnswerRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnswerRow).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapLetterBubbles\", function () {\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      var _this$state$sampleAns = _this.state.sampleAnswers,\n          studentChoice = _this$state$sampleAns.studentChoice,\n          answer = _this$state$sampleAns.answer;\n      return letters.map(function (letter) {\n        if (letter === answer && letter === studentChoice) {\n          return React.createElement(\"li\", null, React.createElement(\"span\", {\n            className: \"badge-circle badge-circle-bordered\",\n            style: {\n              color: '#fff',\n              borderColor: '#32955c',\n              backgroundColor: '#3eb777'\n            }\n          }, letter));\n        }\n\n        if (letter === answer && letter !== studentChoice) {\n          return React.createElement(\"li\", null, React.createElement(\"span\", {\n            className: \"badge-circle badge-circle-bordered\",\n            style: {\n              color: '32955c',\n              borderColor: '#32955c',\n              backgrounColor: '#fff'\n            }\n          }, letter));\n        }\n\n        if (letter !== answer && letter === studentChoice) {\n          return React.createElement(\"li\", null, React.createElement(\"span\", {\n            className: \"badge-circle badge-circle-bordered\",\n            style: {\n              color: '#fff',\n              borderColor: '#ad1e3e',\n              backgroundColor: '#db1d41'\n            }\n          }, letter));\n        }\n\n        return React.createElement(\"li\", null, React.createElement(\"span\", {\n          className: \"badge-circle badge-circle-bordered\"\n        }, letter));\n      });\n    });\n\n    _this.state = {\n      modalOpen: false,\n      bubbleStyles: bubbleStyles,\n      reviewed: false,\n      sampleAnswers: sampleAnswers\n    };\n    return _this;\n  }\n\n  _createClass(AnswerRow, [{\n    key: \"render\",\n    value: function render() {\n      var status = this.state.sampleAnswers.status;\n      return React.createElement(\"li\", {\n        className: \"answers-list-holder\"\n      }, React.createElement(\"div\", {\n        className: \"answer-row row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col col-120\"\n      }, React.createElement(\"ul\", {\n        className: \"answer-list\"\n      }, this.mapLetterBubbles())), React.createElement(\"div\", {\n        className: \"col col-30\"\n      }, React.createElement(\"span\", {\n        className: \"status-info\"\n      }, status)), React.createElement(\"div\", {\n        className: \"col col-43\"\n      }, React.createElement(\"span\", {\n        className: \"play-progress\",\n        \"data-video-id\": \"video001\"\n      }, React.createElement(\"span\", {\n        className: \"play\"\n      }), React.createElement(\"svg\", {\n        viewBox: \"0 0 50 50\",\n        width: \"50\",\n        height: \"50\",\n        version: \"1.1\",\n        xmlns: \"http://www.w3.org/2000/svg\"\n      }, React.createElement(\"circle\", {\n        className: \"circle-static\",\n        cx: 25.8,\n        cy: 24.3,\n        r: 22.8,\n        fill: \"transparent\",\n        strokeWidth: 3\n      }), React.createElement(\"circle\", {\n        className: \"circle-progress\",\n        cx: 25.8,\n        cy: 24.3,\n        r: 22.8,\n        fill: \"transparent\",\n        strokeWidth: 3\n      })))), React.createElement(\"div\", {\n        className: \"col col-auto\"\n      }, React.createElement(\"span\", {\n        className: \"status-answer\",\n        style: {\n          color: '#c0272d'\n        }\n      }, React.createElement(\"i\", {\n        className: \"icon-flag\"\n      }), React.createElement(\"b\", {\n        className: \"status-text\"\n      }, \"Review\"))), React.createElement(\"div\", {\n        className: \"dropdown-block col col-35\"\n      }, React.createElement(\"a\", {\n        className: \"modal-trigger\",\n        href: \"#modal_video001\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")))));\n    }\n  }]);\n\n  return AnswerRow;\n}(React.Component); // AnswerRow.propTypes = {\n//   sampleAnswers: PropTypes.object.isRequired,\n// }\n\n\nexport default AnswerRow;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\components\\AnswerRow\\index.js"],"names":["React","bubbleStyles","sampleAnswers","AnswerRow","props","letters","state","studentChoice","answer","map","letter","color","borderColor","backgroundColor","backgrounColor","modalOpen","reviewed","status","mapLetterBubbles","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,4CAA1B,C,CACA;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,uEASA,YAAM;AACvB,UAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AADuB,kCAE2B,MAAKC,KAFhC,CAEfJ,aAFe;AAAA,UAECK,aAFD,yBAECA,aAFD;AAAA,UAEgBC,MAFhB,yBAEgBA,MAFhB;AAGvB,aAAOH,OAAO,CAACI,GAAR,CAAY,UAAAC,MAAM,EAAI;AAC3B,YAAIA,MAAM,KAAKF,MAAX,IAAqBE,MAAM,KAAKH,aAApC,EAAkD;AAChD,iBACE,gCACA;AAAM,YAAA,SAAS,EAAC,oCAAhB;AAAqD,YAAA,KAAK,EAAE;AAACI,cAAAA,KAAK,EAAE,MAAR;AAAgBC,cAAAA,WAAW,EAAE,SAA7B;AAAwCC,cAAAA,eAAe,EAAE;AAAzD;AAA5D,aAAkIH,MAAlI,CADA,CADF;AAKD;;AACD,YAAIA,MAAM,KAAKF,MAAX,IAAqBE,MAAM,KAAKH,aAApC,EAAkD;AAChD,iBACE,gCACE;AAAM,YAAA,SAAS,EAAC,oCAAhB;AAAqD,YAAA,KAAK,EAAE;AAACI,cAAAA,KAAK,EAAE,QAAR;AAAkBC,cAAAA,WAAW,EAAE,SAA/B;AAA0CE,cAAAA,cAAc,EAAE;AAA1D;AAA5D,aAAgIJ,MAAhI,CADF,CADF;AAKD;;AACD,YAAIA,MAAM,KAAKF,MAAX,IAAqBE,MAAM,KAAKH,aAApC,EAAkD;AAChD,iBACE,gCACE;AAAM,YAAA,SAAS,EAAC,oCAAhB;AAAqD,YAAA,KAAK,EAAE;AAACI,cAAAA,KAAK,EAAE,MAAR;AAAgBC,cAAAA,WAAW,EAAE,SAA7B;AAAwCC,cAAAA,eAAe,EAAE;AAAzD;AAA5D,aAAkIH,MAAlI,CADF,CADF;AAKD;;AACD,eACI,gCACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAAsDA,MAAtD,CADF,CADJ;AAKC,OA3BI,CAAP;AA6BD,KAzCkB;;AAEjB,UAAKJ,KAAL,GAAa;AACXS,MAAAA,SAAS,EAAE,KADA;AAEXd,MAAAA,YAAY,EAAZA,YAFW;AAGXe,MAAAA,QAAQ,EAAE,KAHC;AAIXd,MAAAA,aAAa,EAAbA;AAJW,KAAb;AAFiB;AAQlB;;;;6BAqCQ;AAAA,UACiBe,MADjB,GAC6B,KAAKX,KADlC,CACCJ,aADD,CACiBe,MADjB;AAEP,aACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACG,KAAKC,gBAAL,EADH,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA+BD,MAA/B,CADF,CANF,EASE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,yBAAc;AAA9C,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,QADF,EAEE;AAAK,QAAA,OAAO,EAAC,WAAb;AAAyB,QAAA,KAAK,EAAC,IAA/B;AAAoC,QAAA,MAAM,EAAC,IAA3C;AAAgD,QAAA,OAAO,EAAC,KAAxD;AAA8D,QAAA,KAAK,EAAC;AAApE,SACE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,EAAE,EAAE,IAAtC;AAA4C,QAAA,EAAE,EAAE,IAAhD;AAAsD,QAAA,CAAC,EAAE,IAAzD;AAA+D,QAAA,IAAI,EAAC,aAApE;AAAkF,QAAA,WAAW,EAAE;AAA/F,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,EAAE,EAAE,IAAxC;AAA8C,QAAA,EAAE,EAAE,IAAlD;AAAwD,QAAA,CAAC,EAAE,IAA3D;AAAiE,QAAA,IAAI,EAAC,aAAtE;AAAoF,QAAA,WAAW,EAAE;AAAjG,QAFF,CAFF,CADF,CATF,EAkBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,KAAK,EAAE;AAACN,UAAAA,KAAK,EAAE;AAAR;AAAvC,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,EAC+B;AAAG,QAAA,SAAS,EAAC;AAAb,kBAD/B,CADF,CAlBF,EAuBE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEE;AAAG,QAAA,SAAS,EAAC,eAAb;AAA6B,QAAA,IAAI,EAAC;AAAlC,SAAoD;AAAG,QAAA,SAAS,EAAC;AAAb,qBAApD,CAFF,CAvBF,CADJ,CADF;AAgCD;;;;EAhFqBX,KAAK,CAACmB,S,GAmF9B;AACA;AACA;;;AAEA,eAAehB,SAAf","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport bubbleStyles from '../../../../utils/bubbleStyles';\r\nimport sampleAnswers from '../../../../utils/sampleWritingTestResults';\r\n// need to import modal\r\n\r\nclass AnswerRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n      bubbleStyles,\r\n      reviewed: false,\r\n      sampleAnswers,\r\n     }\r\n  };\r\n  mapLetterBubbles = () => {\r\n    const letters = [\"A\", \"B\", \"C\", \"D\"]\r\n    const { sampleAnswers: {studentChoice, answer}} = this.state;\r\n    return letters.map(letter => {\r\n      if (letter === answer && letter === studentChoice){\r\n        return (\r\n          <li>\r\n          <span className=\"badge-circle badge-circle-bordered\" style={{color: '#fff', borderColor: '#32955c', backgroundColor: '#3eb777'}}>{letter}</span>\r\n        </li>\r\n        )\r\n      }\r\n      if (letter === answer && letter !== studentChoice){\r\n        return (\r\n          <li>\r\n            <span className=\"badge-circle badge-circle-bordered\" style={{color: '32955c', borderColor: '#32955c', backgrounColor: '#fff'}}>{letter}</span>\r\n          </li>\r\n        )\r\n      }\r\n      if (letter !== answer && letter === studentChoice){\r\n        return (\r\n          <li>\r\n            <span className=\"badge-circle badge-circle-bordered\" style={{color: '#fff', borderColor: '#ad1e3e', backgroundColor: '#db1d41'}}>{letter}</span>\r\n          </li>\r\n        )\r\n      }\r\n      return (\r\n          <li>\r\n            <span className=\"badge-circle badge-circle-bordered\">{letter}</span>\r\n          </li>\r\n        )\r\n      }\r\n    )\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { sampleAnswers: {status} } = this.state;\r\n    return (\r\n      <li className=\"answers-list-holder\">\r\n          <div className=\"answer-row row mb-0\">\r\n            <div className=\"col col-120\">\r\n              <ul className=\"answer-list\">\r\n                {this.mapLetterBubbles()}\r\n              </ul>\r\n            </div>\r\n            <div className=\"col col-30\">\r\n              <span className=\"status-info\">{status}</span>\r\n            </div>\r\n            <div className=\"col col-43\">\r\n              <span className=\"play-progress\" data-video-id=\"video001\">\r\n                <span className=\"play\"></span>\r\n                <svg viewBox=\"0 0 50 50\" width=\"50\" height=\"50\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <circle className=\"circle-static\" cx={25.8} cy={24.3} r={22.8} fill='transparent' strokeWidth={3}/>\r\n                  <circle className=\"circle-progress\" cx={25.8} cy={24.3} r={22.8} fill='transparent' strokeWidth={3}/>\r\n                </svg>\r\n              </span>\r\n            </div>\r\n            <div className=\"col col-auto\">\r\n              <span className=\"status-answer\" style={{color: '#c0272d'}}>\r\n                <i className=\"icon-flag\"></i><b className=\"status-text\">Review</b>\r\n              </span>\r\n            </div>\r\n            <div className=\"dropdown-block col col-35\">\r\n              {/* modal trigger */}\r\n              <a className='modal-trigger' href=\"#modal_video001\"><i className=\"material-icons dots-icon\">more_vert</i></a>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    )\r\n  }\r\n}\r\n\r\n// AnswerRow.propTypes = {\r\n//   sampleAnswers: PropTypes.object.isRequired,\r\n// }\r\n\r\nexport default AnswerRow;\r\n\r\n"]},"metadata":{},"sourceType":"module"}