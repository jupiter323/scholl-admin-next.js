{"ast":null,"code":"var _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Dashboard/components/CalendarDate/index.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { getCalendarCellClassName, getCalendarDayClassName } from '../../utils/dateAndCalendarUtils';\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'inherit'\n}); // eslint-disable-next-line react/prefer-stateless-function\n\n\nclass CalendarDate extends React.Component {\n  render() {\n    const {\n      date,\n      dayDate,\n      calDate,\n      inMonth,\n      hasEvents,\n      isActiveDate,\n      inActiveColumn,\n      addDropdownOpen,\n      onSetActiveDate,\n      shouldMapLessons,\n      shouldMapSessions,\n      deleteDropdownOpen,\n      onToggleAddDropdown,\n      shouldMapWorksheets,\n      shouldMapTestSections,\n      onToggleDeleteDropdown,\n      shouldMapSimulatedSats,\n      activeDateKey,\n      mapDateSessions,\n      mapDateLessons,\n      mapDateWorksheets,\n      mapTestSections,\n      mapSimulatedSats,\n      toggleAssignSessionModal,\n      toggleAssignLessonsModal,\n      toggleAssignWorksheetsModal,\n      toggleAssignTestSectionModal,\n      toggleAssignSimulatedSatModal,\n      sessions,\n      lessons,\n      worksheets,\n      testSections,\n      simulatedSat\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, !inMonth ? __jsx(\"td\", {\n      className: \"cal-cell1 cal-cell cal-day-outmonth\",\n      key: dayDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: getCalendarDayClassName(date, inMonth, activeDateKey),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"day-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, dayDate), __jsx(\"span\", {\n      className: \"cal-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, calDate))) : __jsx(\"td\", {\n      key: activeDateKey,\n      className: getCalendarCellClassName(hasEvents, inActiveColumn),\n      onClick: () => onSetActiveDate(activeDateKey),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Droppable, {\n      droppableId: `droppable-${date}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, (provided, snapshot) => __jsx(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: getCalendarDayClassName(date, inMonth, activeDateKey),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"day-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, dayDate), __jsx(\"span\", {\n      className: \"cal-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, calDate), __jsx(\"ul\", {\n      className: \"day-collapsible collapsible\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: isActiveDate ? 'collapsible-holder active' : 'collapsible-holder',\n      style: {\n        transform: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"collapsible-header\",\n      style: {\n        display: inActiveColumn && isActiveDate ? 'none' : 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"fake-close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"icon-close-thin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), hasEvents ? __jsx(\"ul\", {\n      className: \"events-list events-list-short\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, shouldMapSessions ? __jsx(\"li\", {\n      className: \"event-frame event-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"event-title-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Session \", sessions.length)) : null, shouldMapLessons ? __jsx(\"li\", {\n      className: \"event-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"event event-lesson-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", lessons.length, \" \", __jsx(\"span\", {\n      className: \"event-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Lesson\", lessons.length > 1 && 's'))) : null, shouldMapWorksheets ? __jsx(\"li\", {\n      className: \"event-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"event event-worksheet-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, worksheets.length, \" \", __jsx(\"span\", {\n      className: \"event-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Worksheet\", worksheets.length > 1 && 's'))) : null, shouldMapTestSections ? __jsx(\"li\", {\n      className: \"event-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"event event-test-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, testSections.length, \" \", __jsx(\"span\", {\n      className: \"event-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Test Section\", testSections.length > 1 && 's'))) : null, shouldMapSimulatedSats ? __jsx(\"li\", {\n      className: \"event-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"event event-sat-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, simulatedSat.length, \" \", __jsx(\"span\", {\n      className: \"event-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Simulated SAT\"))) : null) : null), __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: {\n        opacity: inActiveColumn && isActiveDate ? '1' : '0',\n        visibility: inActiveColumn ? 'visible' : 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, hasEvents ? __jsx(\"ul\", {\n      className: \"events-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, mapDateSessions(shouldMapSessions, sessions), mapDateLessons(shouldMapLessons, lessons), mapDateWorksheets(shouldMapWorksheets, worksheets), mapTestSections(shouldMapTestSections, testSections), mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)) : null, __jsx(\"div\", {\n      className: \"day-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"links-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown_day_240119_add\",\n      onClick: onToggleAddDropdown,\n      className: \"link-add dropdown-trigger waves-effect waves-teal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Add\"), __jsx(\"ul\", {\n      id: \"dropdown_day_240119_add\",\n      className: \"dropdown-content\",\n      style: {\n        display: addDropdownOpen ? 'block' : 'none',\n        opacity: addDropdownOpen ? '100' : '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: event => toggleAssignSessionModal(event, date),\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Session\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: event => toggleAssignLessonsModal(event, date),\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Lesson\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: event => toggleAssignWorksheetsModal(event, date),\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Worksheet\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: event => toggleAssignTestSectionModal(event, date),\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Test Section\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: event => toggleAssignSimulatedSatModal(event, date),\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Simulated SAT\")))), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown_day_240119_delete\",\n      onClick: onToggleDeleteDropdown,\n      className: \"link-delete dropdown-trigger waves-effect waves-teal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Delete\"), __jsx(\"ul\", {\n      id: \"dropdown_day_240119_delete\",\n      className: \"dropdown-content\",\n      style: {\n        display: deleteDropdownOpen ? 'block' : 'none',\n        opacity: deleteDropdownOpen ? '100' : '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#modal_edit_delete_section\",\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Session\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#modal_edit_delete_lesson\",\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Lesson\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#modal_edit_delete_worksheet\",\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Worksheet\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#modal_edit_delete_test_section\",\n      className: \"modal-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Test Section\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Simulated SAT\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Target Test\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"All\")))))))))), provided.placeholder))));\n  }\n\n}\n\n;\nCalendarDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  inMonth: PropTypes.bool.isRequired,\n  dayDate: PropTypes.string.isRequired,\n  calDate: PropTypes.number.isRequired,\n  hasEvents: PropTypes.bool.isRequired,\n  lessons: PropTypes.array.isRequired,\n  sessions: PropTypes.array.isRequired,\n  worksheets: PropTypes.array.isRequired,\n  testSections: PropTypes.array.isRequired,\n  simulatedSat: PropTypes.array.isRequired,\n  isActiveDate: PropTypes.bool.isRequired,\n  inActiveColumn: PropTypes.bool.isRequired,\n  activeDateKey: PropTypes.string.isRequired,\n  addDropdownOpen: PropTypes.bool.isRequired,\n  onSetActiveDate: PropTypes.func.isRequired,\n  mapDateLessons: PropTypes.func.isRequired,\n  mapDateSessions: PropTypes.func.isRequired,\n  mapTestSections: PropTypes.func.isRequired,\n  mapSimulatedSats: PropTypes.func.isRequired,\n  mapDateWorksheets: PropTypes.func.isRequired,\n  deleteDropdownOpen: PropTypes.bool.isRequired,\n  onToggleAddDropdown: PropTypes.func.isRequired,\n  onToggleDeleteDropdown: PropTypes.func.isRequired,\n  toggleAssignSessionModal: PropTypes.func.isRequired,\n  toggleAssignLessonsModal: PropTypes.func.isRequired,\n  toggleAssignWorksheetsModal: PropTypes.func.isRequired,\n  toggleAssignTestSectionModal: PropTypes.func.isRequired,\n  toggleAssignSimulatedSatModal: PropTypes.func.isRequired,\n  shouldMapLessons: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\n  shouldMapSessions: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\n  shouldMapWorksheets: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\n  shouldMapTestSections: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired,\n  shouldMapSimulatedSats: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]).isRequired\n};\nexport default CalendarDate;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Dashboard/components/CalendarDate/index.js"],"names":["React","PropTypes","Droppable","getCalendarCellClassName","getCalendarDayClassName","getListStyle","isDraggingOver","background","CalendarDate","Component","render","date","dayDate","calDate","inMonth","hasEvents","isActiveDate","inActiveColumn","addDropdownOpen","onSetActiveDate","shouldMapLessons","shouldMapSessions","deleteDropdownOpen","onToggleAddDropdown","shouldMapWorksheets","shouldMapTestSections","onToggleDeleteDropdown","shouldMapSimulatedSats","activeDateKey","mapDateSessions","mapDateLessons","mapDateWorksheets","mapTestSections","mapSimulatedSats","toggleAssignSessionModal","toggleAssignLessonsModal","toggleAssignWorksheetsModal","toggleAssignTestSectionModal","toggleAssignSimulatedSatModal","sessions","lessons","worksheets","testSections","simulatedSat","props","provided","snapshot","innerRef","transform","display","length","opacity","visibility","event","placeholder","propTypes","string","isRequired","bool","number","array","func","oneOfType"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport { getCalendarCellClassName, getCalendarDayClassName } from '../../utils/dateAndCalendarUtils';\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'inherit',\n});\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass CalendarDate extends React.Component {\n  render() {\n    const { date, dayDate, calDate, inMonth, hasEvents, isActiveDate, inActiveColumn, addDropdownOpen,\n      onSetActiveDate, shouldMapLessons, shouldMapSessions, deleteDropdownOpen, onToggleAddDropdown,\n      shouldMapWorksheets, shouldMapTestSections, onToggleDeleteDropdown, shouldMapSimulatedSats,\n      activeDateKey, mapDateSessions, mapDateLessons, mapDateWorksheets, mapTestSections, mapSimulatedSats,\n      toggleAssignSessionModal, toggleAssignLessonsModal, toggleAssignWorksheetsModal,\n      toggleAssignTestSectionModal, toggleAssignSimulatedSatModal,\n      sessions, lessons, worksheets, testSections, simulatedSat,\n     } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When condition={!inMonth}>\n            <td className=\"cal-cell1 cal-cell cal-day-outmonth\" key={dayDate}>\n              <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n                <span className=\"day-date\">{dayDate}</span>\n                <span className=\"cal-date\">{calDate}</span>\n              </div>\n            </td>\n          </When>\n          <Otherwise>\n            <td key={activeDateKey} className={getCalendarCellClassName(hasEvents, inActiveColumn)} onClick={() => onSetActiveDate(activeDateKey)}>\n              <Droppable droppableId={`droppable-${date}`}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                  >\n                    <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n                      <span className=\"day-date\">{dayDate}</span>\n                      <span className=\"cal-date\">{calDate}</span>\n                      <ul className=\"day-collapsible collapsible\">\n                        <li className={isActiveDate ? 'collapsible-holder active' : 'collapsible-holder'} style={{ transform: 'none' }}>\n                          <div className=\"collapsible-header\" style={{ display: inActiveColumn && isActiveDate ? 'none' : 'block'}}>\n                            <span className=\"fake-close\"><span className=\"icon-close-thin\"></span></span>\n                            <If condition={hasEvents}>\n                              <ul className=\"events-list events-list-short\">\n                                <If condition={shouldMapSessions}>\n                                  <li className=\"event-frame event-title\">\n                                    <span className=\"event-title-box\">Session {sessions.length}</span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapLessons}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-lesson-box\"> {lessons.length} <span className=\"event-text\">Lesson{lessons.length > 1 && 's'}</span></span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapWorksheets}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-worksheet-box\">{worksheets.length} <span className=\"event-text\">Worksheet{worksheets.length > 1 && 's'}</span></span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapTestSections}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-test-box\">{testSections.length} <span className=\"event-text\">Test Section{testSections.length > 1 && 's'}</span></span>\n                                  </li>\n                                </If>\n                                <If condition={shouldMapSimulatedSats}>\n                                  <li className=\"event-frame\">\n                                    <span className=\"event event-sat-box\">{simulatedSat.length} <span className=\"event-text\">Simulated SAT</span></span>\n                                  </li>\n                                </If>\n                              </ul>\n                            </If>\n                          </div>\n                          <div className=\"collapsible-body\" style={{ opacity: inActiveColumn && isActiveDate ? '1' : '0', visibility: inActiveColumn ? 'visible' : 'hidden' }}>\n                            <If condition={hasEvents}>\n                              <ul className=\"events-list\">\n                                {mapDateSessions(shouldMapSessions, sessions)}\n                                {mapDateLessons(shouldMapLessons, lessons)}\n                                {mapDateWorksheets(shouldMapWorksheets, worksheets)}\n                                {mapTestSections(shouldMapTestSections, testSections)}\n                                {mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)}\n                              </ul>\n                            </If>\n                            <div className=\"day-footer\">\n                              <ul className=\"links-list\">\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    data-target='dropdown_day_240119_add'\n                                    onClick={onToggleAddDropdown}\n                                    className=\"link-add dropdown-trigger waves-effect waves-teal\"\n                                  >\n                                    Add\n                                  </a>\n                                  <ul\n                                    id='dropdown_day_240119_add'\n                                    className='dropdown-content'\n                                    style={{ display: addDropdownOpen ? 'block' : 'none', opacity: addDropdownOpen ? '100' : '0' }}\n                                  >\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignSessionModal(event, date)} className=\"modal-trigger\">Session</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignLessonsModal(event, date)} className=\"modal-trigger\">Lesson</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignWorksheetsModal(event, date)} className=\"modal-trigger\">Worksheet</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignTestSectionModal(event, date)} className=\"modal-trigger\">Test Section</a></li>\n                                    <li><a href=\"#\" onClick={(event) => toggleAssignSimulatedSatModal(event, date)} className=\"modal-trigger\">Simulated SAT</a></li>\n                                  </ul>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    data-target='dropdown_day_240119_delete'\n                                    onClick={onToggleDeleteDropdown}\n                                    className=\"link-delete dropdown-trigger waves-effect waves-teal\"\n                                  >\n                                    Delete\n                                  </a>\n                                  <ul\n                                    id='dropdown_day_240119_delete'\n                                    className='dropdown-content'\n                                    style={{ display: deleteDropdownOpen ? 'block' : 'none', opacity: deleteDropdownOpen ? '100' : '0' }}\n                                  >\n                                    <li><a href=\"#modal_edit_delete_section\" className=\"modal-trigger\">Session</a></li>\n                                    <li><a href=\"#modal_edit_delete_lesson\" className=\"modal-trigger\">Lesson</a></li>\n                                    <li><a href=\"#modal_edit_delete_worksheet\" className=\"modal-trigger\">Worksheet</a></li>\n                                    <li><a href=\"#modal_edit_delete_test_section\" className=\"modal-trigger\">Test Section</a></li>\n                                    <li><a href=\"#!\" className=\"disabled\">Simulated SAT</a></li>\n                                    <li><a href=\"#!\" className=\"disabled\">Target Test</a></li>\n                                    <li><a href=\"#!\">All</a></li>\n                                  </ul>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                          </li>\n                        </ul>\n                    </div>\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </td>\n          </Otherwise>\n        </Choose>\n      </React.Fragment>\n    )\n  }\n};\n\nCalendarDate.propTypes = {\n  date: PropTypes.string.isRequired,\n  inMonth: PropTypes.bool.isRequired,\n  dayDate: PropTypes.string.isRequired,\n  calDate: PropTypes.number.isRequired,\n  hasEvents: PropTypes.bool.isRequired,\n  lessons: PropTypes.array.isRequired,\n  sessions: PropTypes.array.isRequired,\n  worksheets: PropTypes.array.isRequired,\n  testSections: PropTypes.array.isRequired,\n  simulatedSat: PropTypes.array.isRequired,\n  isActiveDate: PropTypes.bool.isRequired,\n  inActiveColumn: PropTypes.bool.isRequired,\n  activeDateKey: PropTypes.string.isRequired,\n  addDropdownOpen: PropTypes.bool.isRequired,\n  onSetActiveDate: PropTypes.func.isRequired,\n  mapDateLessons: PropTypes.func.isRequired,\n  mapDateSessions: PropTypes.func.isRequired,\n  mapTestSections: PropTypes.func.isRequired,\n  mapSimulatedSats: PropTypes.func.isRequired,\n  mapDateWorksheets: PropTypes.func.isRequired,\n  deleteDropdownOpen: PropTypes.bool.isRequired,\n  onToggleAddDropdown: PropTypes.func.isRequired,\n  onToggleDeleteDropdown: PropTypes.func.isRequired,\n  toggleAssignSessionModal: PropTypes.func.isRequired,\n  toggleAssignLessonsModal: PropTypes.func.isRequired,\n  toggleAssignWorksheetsModal: PropTypes.func.isRequired,\n  toggleAssignTestSectionModal: PropTypes.func.isRequired,\n  toggleAssignSimulatedSatModal: PropTypes.func.isRequired,\n  shouldMapLessons: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapSessions: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapWorksheets: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapTestSections: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n  shouldMapSimulatedSats: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.number,\n  ]).isRequired,\n}\n\nexport default CalendarDate;\n"]},"metadata":{},"sourceType":"module"}