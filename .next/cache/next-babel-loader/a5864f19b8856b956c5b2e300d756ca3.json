{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport update from 'immutability-helper';\nimport StatusPage from \"../components/Classes/StatusPage\";\nimport ListPage from \"../components/Classes/ListPage\";\nimport Moment from 'moment';\nimport sampleClass from \"../components/Classes/utils/sampleClass\";\nimport createNewClassRoomApi from '../components/Classes/index/api';\n\nvar Classes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Classes, _React$Component);\n\n  function Classes(props) {\n    var _this;\n\n    _classCallCheck(this, Classes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Classes).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleClassCard\", function (index) {\n      var classes = _this.state.classes;\n\n      _this.setState({\n        selectedClass: classes[index]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddNewClass\", function (newClass) {\n      var prevClassState = _this.state.classes;\n      var formattedNewClass = {\n        summary: {\n          amount_students: 10,\n          start_date: \"6/1/19\",\n          end_date: \"8/5/19\",\n          improvement: 123,\n          coursework_assigned: 60,\n          coursework_completed: 90,\n          problems_flagged_review: 40,\n          average_score: 1256,\n          achieved_target_score: 85,\n          average_practice_tests_completed: 1.8,\n          instruction: 14\n        },\n        accountInfo: {\n          lastName: 'Admin',\n          firstName: 'Company',\n          email: 'test2@example.com',\n          gender: 'M'\n        },\n        contactInfo: {\n          phone: '1234567890',\n          streetAddress: '1234 Test Road',\n          city: 'Austin',\n          state: 'TX',\n          zip: '78751'\n        },\n        classInfo: newClass.classInfo,\n        location: newClass.location,\n        instructor: newClass.instructor\n      };\n      var updatedClasses = update(prevClassState, {\n        $push: [formattedNewClass]\n      });\n\n      _this.setState({\n        classes: updatedClasses\n      });\n\n      _this.onCreateNewClassApi(newClass);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneClass\", function (index) {\n      var classes = _this.state.classes;\n\n      _this.setState(function (prevState) {\n        prevState.classes.push(classes[index]);\n        return {\n          classes: prevState.classes\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (classroom) {\n        return classroom !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteClass\", function (index) {\n      var classes = _this.state.classes;\n\n      var newClassesArray = _this.arrayItemRemover(classes, classes[index]);\n\n      _this.setState({\n        classes: newClassesArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCreateNewClassApi\", function _callee(classroom) {\n      var newId, className, _classroom$accountInf, start_date, end_date, isExclude, locations, instructors, formattedClassRoom;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newId = _this.state.classes.length + 1;\n              className = classroom.classInfo.className, _classroom$accountInf = classroom.accountInfo, start_date = _classroom$accountInf.start_date, end_date = _classroom$accountInf.end_date, isExclude = _classroom$accountInf.isExclude, locations = classroom.location.locations, instructors = classroom.instructor.instructors;\n              formattedClassRoom = {\n                id: newId,\n                name: className,\n                start_date: Moment(start_date).format('YYYY-MM-DD'),\n                end_date: Moment(end_date).format('YYYY-MM-DD'),\n                duration: \"string\",\n                exclude_from_statistics: isExclude,\n                locations: locations,\n                instructors: instructors,\n                students: \"\"\n              };\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(createNewClassRoomApi(formattedClassRoom));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveClassChanges\", function (updatedClasRoom) {\n      var originalClasses = _this.state.classes;\n      var classToUpdate = originalClasses.filter(function (classroom) {\n        return classroom.id === updatedClasRoom.id;\n      })[0];\n      var updatedClassIndex = originalClasses.indexOf(classToUpdate);\n      var classes = update(originalClasses, {\n        $splice: [[updatedClassIndex, 1, updatedClasRoom]]\n      }); // saveChangesSuccess();\n\n      _this.setState({\n        classes: classes\n      });\n    });\n\n    _this.state = {\n      selectedClass: null,\n      classes: sampleClass\n    };\n    return _this;\n  }\n\n  _createClass(Classes, [{\n    key: \"render\",\n    value: function render() {\n      var selectedClass = this.state.selectedClass;\n      return __jsx(React.Fragment, null, __jsx(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, __jsx(\"div\", {\n        className: \"main-holder grey lighten-5 switcher-section\"\n      }, !selectedClass && __jsx(ListPage, {\n        classes: this.state.classes,\n        onHandleClassCard: this.onHandleClassCard,\n        onCloneClass: this.onCloneClass,\n        onDeleteClass: this.onDeleteClass,\n        onSaveNewClass: this.onAddNewClass,\n        onSaveClassChanges: this.onSaveClassChanges\n      }), selectedClass && __jsx(StatusPage, null))));\n    }\n  }]);\n\n  return Classes;\n}(React.Component);\n\nexport default Classes;","map":null,"metadata":{},"sourceType":"module"}