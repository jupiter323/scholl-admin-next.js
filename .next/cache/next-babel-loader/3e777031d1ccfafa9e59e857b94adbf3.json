{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nconst sampleVersions = [{\n  label: 'SAT Practice Test #1',\n  value: 'SAT Practice Test #1'\n}, {\n  label: 'SAT Practice Test #2',\n  value: 'SAT Practice Test #2'\n}, {\n  label: 'SAT Practice Test #3',\n  value: 'SAT Practice Test #3'\n}];\n\nclass AssignSimulatedSatModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onResetModal\", () => this.setState({\n      version: '',\n      assignDate: '',\n      assignTime: '',\n      dueDate: '',\n      dueTime: '',\n      sections: [],\n      allowStudentToEnterAnswers: false,\n      includeScoreInImprovementMetrics: false,\n      timed: false\n    }));\n\n    _defineProperty(this, \"onCloseModal\", () => {\n      const {\n        onClose\n      } = this.props;\n      onClose();\n      this.onResetModal();\n    });\n\n    _defineProperty(this, \"assignSimulatedSat\", () => {\n      const {\n        onAssignSimulatedSat\n      } = this.props;\n      const {\n        version,\n        assignDate: unformattedAssignDate,\n        assignTime: unformattedAssignTime,\n        dueDate: unformattedDueDate,\n        dueTime: unformattedDueTime,\n        sections,\n        allowStudentToEnterAnswers,\n        includeScoreInImprovementMetrics,\n        timed\n      } = this.state;\n      const assignDate = moment(unformattedAssignDate).format('MM/DD/YY');\n      const assignTime = moment(unformattedAssignTime).format('hh:mm');\n      const dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n      const dueTime = moment(unformattedDueTime).format('hh:mm');\n      onAssignSimulatedSat({\n        version,\n        assignDate,\n        assignTime,\n        dueDate,\n        dueTime,\n        sections,\n        allowStudentToEnterAnswers,\n        includeScoreInImprovementMetrics,\n        timed\n      });\n      this.onResetModal();\n    });\n\n    _defineProperty(this, \"handleDetailsChange\", (event, name = null) => {\n      if (event.target) {\n        const checkboxName = event.target.name;\n        const prevState = this.state[checkboxName];\n        this.setState({\n          [checkboxName]: !prevState\n        });\n      } else {\n        this.setState({\n          [name]: event\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleSectionsChange\", event => {\n      const {\n        sections\n      } = this.state;\n\n      if (sections.indexOf(event.target.name) === -1) {\n        const updatedSections = update(sections, {\n          $push: [event.target.name]\n        });\n        this.setState({\n          sections: updatedSections\n        });\n      } else {\n        const sectionIndex = sections.indexOf(event.target.name);\n        const updatedSections = update(sections, {\n          $splice: [[sectionIndex, 1]]\n        });\n        this.setState({\n          sections: updatedSections\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleDatePickerChange\", (field, value) => this.setState({\n      [field]: value\n    }));\n\n    this.state = {\n      version: '',\n      assignDate: '',\n      assignTime: '',\n      dueDate: '',\n      dueTime: '',\n      sections: [],\n      allowStudentToEnterAnswers: false,\n      includeScoreInImprovementMetrics: false,\n      timed: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      modalDate\n    } = this.props;\n\n    if (prevState.assignDate === '' && modalDate) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        assignDate: new Date(modalDate)\n      });\n    }\n  }\n\n  render() {\n    const {\n      open\n    } = this.props;\n    const {\n      version,\n      assignDate,\n      assignTime,\n      dueDate,\n      dueTime,\n      sections,\n      allowStudentToEnterAnswers,\n      includeScoreInImprovementMetrics,\n      timed\n    } = this.state;\n    return __jsx(Portal, {\n      selector: \"#modal\"\n    }, open && __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"overlay\"\n    }, __jsx(ClickOffComponentWrapper, {\n      onOuterClick: this.onCloseModal\n    }, __jsx(\"div\", {\n      id: \"modal_assign_simulated_sat\",\n      className: \"jsx-482330571\" + \" \" + \"modal modal-custom modal-calendar\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"card-modal card\"\n    }, __jsx(\"div\", {\n      style: {\n        backgroundColor: '#ec3330',\n        color: '#fff'\n      },\n      className: \"jsx-482330571\" + \" \" + \"card-panel card-panel-title\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"card-panel-row row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"span\", {\n      className: \"jsx-482330571\" + \" \" + \"heading-holder\"\n    }, __jsx(\"i\", {\n      className: \"jsx-482330571\" + \" \" + \"icon-circles\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\" + \" \" + \"heading-block\"\n    }, \" New Scored SAT Test\")))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col right-align\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onCloseModal,\n      className: \"jsx-482330571\" + \" \" + \"panel-link close modal-close\"\n    }, __jsx(\"i\", {\n      className: \"jsx-482330571\" + \" \" + \"icon-close-thin\"\n    }))))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"card-content\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"modal-row row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s12\"\n    }, __jsx(\"div\", {\n      style: {\n        marginBottom: '0',\n        marginTop: '0'\n      },\n      className: \"jsx-482330571\" + \" \" + \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(version, sampleVersions),\n      onChange: event => this.handleDetailsChange(event, 'version'),\n      options: sampleVersions,\n      name: \"version\",\n      label: \"Version\",\n      stateKey: \"version\",\n      dropdownKey: \"version\"\n    })))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"modal-row row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s6\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"datepicker-field input-field\"\n    }, __jsx(\"i\", {\n      className: \"jsx-482330571\" + \" \" + \"icon-calendar\"\n    }), __jsx(DatePicker, {\n      selected: assignDate,\n      dateFormat: \"MM/dd/yy\",\n      id: \"assignDate\",\n      name: \"assignDate\",\n      onChange: event => this.handleDatePickerChange('assignDate', event)\n    }), __jsx(\"label\", {\n      htmlFor: \"new_test_section_assign_date\",\n      className: \"jsx-482330571\" + \" \" + ((assignDate ? 'label active' : 'label') || \"\")\n    }, \"Assign For\"))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s6\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"datepicker-field input-field\"\n    }, __jsx(\"i\", {\n      className: \"jsx-482330571\" + \" \" + \"icon-clock2\"\n    }), __jsx(DatePicker, {\n      selected: assignTime,\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      timeIntervals: 15,\n      dateFormat: \"h:mm aa\",\n      timeCaption: \"Time\",\n      id: \"assignTime\",\n      name: \"assignTime\",\n      onChange: event => this.handleDatePickerChange('assignTime', event)\n    }), __jsx(\"label\", {\n      htmlFor: \"assignTime\",\n      className: \"jsx-482330571\" + \" \" + ((assignTime ? 'label active' : 'label') || \"\")\n    }, \"Time\")))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"modal-row row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s6\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"datepicker-field input-field\"\n    }, __jsx(\"i\", {\n      className: \"jsx-482330571\" + \" \" + \"icon-calendar\"\n    }), __jsx(DatePicker, {\n      selected: dueDate,\n      dateFormat: \"MM/dd/yy\",\n      id: \"dueDate\",\n      name: \"dueDate\",\n      onChange: event => this.handleDatePickerChange('dueDate', event)\n    }), __jsx(\"label\", {\n      htmlFor: \"dueDate\",\n      className: \"jsx-482330571\" + \" \" + ((dueDate ? 'label active' : 'label') || \"\")\n    }, \"Due (optional)\"))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s6\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"datepicker-field input-field\"\n    }, __jsx(\"i\", {\n      className: \"jsx-482330571\" + \" \" + \"icon-clock2\"\n    }), __jsx(DatePicker, {\n      selected: dueTime,\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      timeIntervals: 15,\n      dateFormat: \"h:mm aa\",\n      timeCaption: \"Time\",\n      id: \"dueTime\",\n      name: \"dueTime\",\n      onChange: event => this.handleDatePickerChange('dueTime', event)\n    }), __jsx(\"label\", {\n      htmlFor: \"dueTime\",\n      className: \"jsx-482330571\" + \" \" + ((dueTime ? 'label active' : 'label') || \"\")\n    }, \"Time\")))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"modal-row row\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s12\"\n    }, __jsx(\"span\", {\n      className: \"jsx-482330571\" + \" \" + \"card-subtitle\"\n    }, \"Sections:\"), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"check-holder\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s6\"\n    }, __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"Reading\",\n      id: \"reading\",\n      checked: sections.indexOf('Reading') !== -1,\n      onChange: this.handleSectionsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Reading\"))), __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"Math (no calc)\",\n      id: \"mathNoCalc\",\n      checked: sections.indexOf('Math (no calc)') !== -1,\n      onChange: this.handleSectionsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Math (no calc)\")))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"col s6\"\n    }, __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"Writing\",\n      id: \"writing\",\n      checked: sections.indexOf('Writing') !== -1,\n      onChange: this.handleSectionsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Writing\"))), __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"Math (calculator)\",\n      id: \"Math (calculator)\",\n      checked: sections.indexOf('Math (calculator)') !== -1,\n      onChange: this.handleSectionsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Math (calculator)\"))))), __jsx(\"span\", {\n      className: \"jsx-482330571\" + \" \" + \"card-note\"\n    }, \"Note: scaled test scores may require combinations of sections\")), __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"allowStudentToEnterAnswers\",\n      id: \"allowStudentToEnterAnswers\",\n      checked: allowStudentToEnterAnswers,\n      onChange: this.handleDetailsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Allow Student to Enter Answers\"))), __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"includeScoreInImprovementMetrics\",\n      id: \"includeScoreInImprovementMetrics\",\n      checked: includeScoreInImprovementMetrics,\n      onChange: this.handleDetailsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Include Score in Improvement Metrics\"))), __jsx(\"p\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"label\", {\n      className: \"jsx-482330571\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"timed\",\n      id: \"timed\",\n      checked: timed,\n      onChange: this.handleDetailsChange,\n      className: \"jsx-482330571\" + \" \" + \"filled-in\"\n    }), __jsx(\"span\", {\n      className: \"jsx-482330571\"\n    }, \"Timed\")))))), __jsx(\"div\", {\n      className: \"jsx-482330571\" + \" \" + \"modal-footer modal-footer-width\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onCloseModal,\n      className: \"jsx-482330571\" + \" \" + \"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n    }, \"Cancel\"), __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.assignSimulatedSat,\n      className: \"jsx-482330571\" + \" \" + \"link-btn waves-effect waves-teal btn-flat\"\n    }, \"Save\"))))))), __jsx(_JSXStyle, {\n      id: \"482330571\"\n    }, [\".overlay.jsx-482330571{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:1999;}\", \".card-modal.jsx-482330571{margin:0;border-radius:6px;}\", \".modal.jsx-482330571{display:block;background-color:white;position:absolute;top:10%;right:10%;left:10%;box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);}\", \".modal-custom.jsx-482330571{opacity:1;visibility:visible;}\"]));\n  }\n\n}\n\nexport default AssignSimulatedSatModal;","map":null,"metadata":{},"sourceType":"module"}