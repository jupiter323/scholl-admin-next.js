{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport InstructorDetailsModal from '../InstructorDetailsModal';\nimport Modal from '../../../../Modal';\n\nconst data = (total, current) => ({\n  datasets: [{\n    data: [current, total - current],\n    backgroundColor: ['rgb(49, 131, 122)', '#eaeaea']\n  }]\n});\n\nclass InstructorCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenInstructorDetailsModal\", () => {\n      this.props.onCloseDropdown();\n      this.setState({\n        instructorDetailsModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"onCloseInstructorDetailsModal\", () => this.setState({\n      instructorDetailsModalOpen: false\n    }));\n\n    _defineProperty(this, \"onCloneInstructor\", () => this.props.onCloneInstructor(this.props.instructor));\n\n    _defineProperty(this, \"onOpenDeleteModal\", () => this.setState({\n      deleteModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDeleteModal\", () => this.setState({\n      deleteModalOpen: false\n    }));\n\n    _defineProperty(this, \"onConfirmDeleteInstructor\", () => {\n      const {\n        onDeleteInstructor,\n        instructor,\n        onCloseDropdown\n      } = this.props;\n      onDeleteInstructor(instructor);\n      onCloseDropdown();\n      this.onCloseDeleteModal();\n    });\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    this.state = {\n      instructorDetailsModalOpen: false,\n      deleteModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      deleteModalOpen,\n      instructorDetailsModalOpen\n    } = this.state;\n    const {\n      dropdownIsOpen,\n      dropdownIndex,\n      index,\n      instructor,\n      onSaveInstructorChanges\n    } = this.props;\n    const {\n      accountInfo: {\n        lastName,\n        firstName,\n        email\n      } = {},\n      basicInfo: {\n        activeStudents,\n        pastStudents,\n        unactivatedStudents,\n        averageImprovement,\n        averageInitialScore,\n        averageFinalScore,\n        studentsAchievingTargetScore\n      } = {}\n    } = instructor;\n    return React.createElement(React.Fragment, null, React.createElement(InstructorDetailsModal, {\n      instructor: instructor,\n      open: instructorDetailsModalOpen,\n      onClose: this.onCloseInstructorDetailsModal,\n      onSaveInstructorChanges: onSaveInstructorChanges,\n      onOpenDeleteModal: this.onOpenDeleteModal,\n      deleteModalOpen: deleteModalOpen\n    }), React.createElement(Modal, {\n      open: deleteModalOpen,\n      onConfirm: this.onConfirmDeleteInstructor,\n      onClose: this.onCloseDeleteModal,\n      header: \"Are You Sure?\",\n      body: \"Deleting this instructor will be permanent\"\n    }), React.createElement(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, React.createElement(\"div\", {\n      className: \"card-main card-location card card-large\"\n    }, React.createElement(\"div\", {\n      className: \"owner-box card-panel\",\n      style: {\n        backgroundColor: '#31837a',\n        color: '#fff'\n      }\n    }, React.createElement(\"div\", {\n      className: \"card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"col s9\"\n    }, React.createElement(\"div\", {\n      className: \"user-block\"\n    }, React.createElement(\"div\", {\n      className: \"user-circle\",\n      style: {\n        backgroundColor: '#18b5e9',\n        color: '#fff'\n      }\n    }, React.createElement(\"span\", {\n      className: \"initials\"\n    }, \"NT\")), React.createElement(\"div\", {\n      className: \"user-text\",\n      style: {\n        color: '#fff'\n      }\n    }, React.createElement(\"h4\", {\n      className: \"h3\"\n    }, lastName, \", \", firstName), React.createElement(\"a\", {\n      href: `mailto:${email}`\n    }, email)))), React.createElement(\"div\", {\n      className: \"col s3 right-align\"\n    }, React.createElement(\"div\", {\n      className: \"row icons-row\"\n    }, React.createElement(\"div\", {\n      className: \"col right-align\"\n    }, React.createElement(\"span\", {\n      className: \"block-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-user\"\n    }), React.createElement(\"span\", {\n      className: \"text-icon\"\n    }, \"Instructor\"))), React.createElement(\"div\", {\n      className: \"dropdown-block col\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.handleDropdownClick,\n      className: \"dropdown-trigger btn\",\n      \"data-target\": \"dropdown05\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n      id: \"dropdown05\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        width: '103.991px',\n        left: '116.974px',\n        top: '7.99716px',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenInstructorDetailsModal,\n      className: \"modal-trigger link-block\"\n    }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onCloneInstructor\n    }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#!\"\n    }, \"Impersonate\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenDeleteModal\n    }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"div\", {\n      className: \"row d-flex align-items-center mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m5\"\n    }, React.createElement(\"div\", {\n      className: \"chart-container\"\n    }, React.createElement(\"div\", {\n      className: \"chart-holder\"\n    }, React.createElement(Doughnut, {\n      data: () => data(activeStudents, studentsAchievingTargetScore),\n      height: 110,\n      width: 110,\n      options: {\n        circumference: 4,\n        rotation: -3.58,\n        cutoutPercentage: 50,\n        tooltips: false\n      }\n    }), React.createElement(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: '#31837a',\n        bottom: '-22px'\n      }\n    }, React.createElement(\"span\", {\n      \"data-count-up\": true,\n      \"data-start-val\": \"0\",\n      \"data-end-val\": \"71\",\n      \"data-duration\": \"1\"\n    }), Math.floor(studentsAchievingTargetScore / activeStudents * 100), \"%\")), React.createElement(\"div\", {\n      className: \"chart-description\",\n      style: {\n        color: '#31837a',\n        marginTop: '36px'\n      }\n    }, \"Students Who Achieved Target Score\"))), React.createElement(\"div\", {\n      className: \"col s12 m7\"\n    }, React.createElement(\"ul\", {\n      className: \"points-list\"\n    }, React.createElement(\"li\", {\n      className: \"style-red-darken\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, activeStudents), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"active students\")), React.createElement(\"li\", {\n      className: \"style-pink-darken\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, pastStudents), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"past students\")), React.createElement(\"li\", null, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, unactivatedStudents), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"unactivated students\")), React.createElement(\"li\", {\n      className: \"style-blue-light\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, \"+\", averageImprovement), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"average improvement\")), React.createElement(\"li\", {\n      className: \"style-blue\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, averageInitialScore), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"average initial score\")), React.createElement(\"li\", {\n      className: \"style-blue-dark\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, averageFinalScore), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"average final score\"))))), React.createElement(\"div\", {\n      className: \"card-footer\"\n    }, React.createElement(\"div\", {\n      className: \"meta-info\"\n    }, React.createElement(\"p\", {\n      className: \"truncate\"\n    }, \"First Location,  Second Location, Possible Additional Truncated More Locatioa...\")))))));\n  }\n\n}\n\nInstructorCard.propTypes = {\n  instructor: PropTypes.object.isRequired,\n  onSaveInstructorChanges: PropTypes.func.isRequired,\n  onDeleteInstructor: PropTypes.func.isRequired,\n  onCloneInstructor: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number\n};\nexport default InstructorCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/ListPage/components/InstructorCard/index.js"],"names":["React","PropTypes","Doughnut","InstructorDetailsModal","Modal","data","total","current","datasets","backgroundColor","InstructorCard","Component","constructor","props","onCloseDropdown","setState","instructorDetailsModalOpen","onCloneInstructor","instructor","deleteModalOpen","onDeleteInstructor","onCloseDeleteModal","event","onSetDropdown","dropdownIsOpen","index","preventDefault","state","render","dropdownIndex","onSaveInstructorChanges","accountInfo","lastName","firstName","email","basicInfo","activeStudents","pastStudents","unactivatedStudents","averageImprovement","averageInitialScore","averageFinalScore","studentsAchievingTargetScore","onCloseInstructorDetailsModal","onOpenDeleteModal","onConfirmDeleteInstructor","color","handleDropdownClick","display","width","left","top","transformOrigin","opacity","transform","onOpenInstructorDetailsModal","circumference","rotation","cutoutPercentage","tooltips","bottom","Math","floor","marginTop","propTypes","object","isRequired","func","bool","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport InstructorDetailsModal from '../InstructorDetailsModal';\n\nimport Modal from '../../../../Modal';\n\nconst data = (total, current) => ({\n  datasets: [{\n    data: [current, total-current],\n    backgroundColor: [\n      'rgb(49, 131, 122)',\n      '#eaeaea',\n    ],\n  }],\n})\n\nclass InstructorCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instructorDetailsModalOpen: false,\n      deleteModalOpen: false,\n    };\n  }\n\n  onOpenInstructorDetailsModal = () => {\n    this.props.onCloseDropdown();\n    this.setState({ instructorDetailsModalOpen: true });\n  };\n\n  onCloseInstructorDetailsModal = () => this.setState({ instructorDetailsModalOpen: false });\n\n  onCloneInstructor = () => this.props.onCloneInstructor(this.props.instructor)\n\n  onOpenDeleteModal = () => this.setState({ deleteModalOpen: true });\n  onCloseDeleteModal = () => this.setState({ deleteModalOpen: false });\n\n  onConfirmDeleteInstructor = () => {\n    const { onDeleteInstructor, instructor, onCloseDropdown } = this.props;\n    onDeleteInstructor(instructor);\n    onCloseDropdown();\n    this.onCloseDeleteModal();\n  }\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  render() {\n    const { deleteModalOpen, instructorDetailsModalOpen } = this.state;\n    const {\n      dropdownIsOpen, dropdownIndex, index, instructor, onSaveInstructorChanges } = this.props;\n    const {\n      accountInfo: { lastName, firstName, email } = {},\n      basicInfo: { activeStudents, pastStudents, unactivatedStudents, averageImprovement, averageInitialScore, averageFinalScore, studentsAchievingTargetScore } = {},\n    } = instructor;\n    return (\n      <React.Fragment>\n        <InstructorDetailsModal\n          instructor={instructor}\n          open={instructorDetailsModalOpen}\n          onClose={this.onCloseInstructorDetailsModal}\n          onSaveInstructorChanges={onSaveInstructorChanges}\n          onOpenDeleteModal={this.onOpenDeleteModal}\n          deleteModalOpen={deleteModalOpen}\n        />\n        <Modal\n          open={deleteModalOpen}\n          onConfirm={this.onConfirmDeleteInstructor}\n          onClose={this.onCloseDeleteModal}\n          header=\"Are You Sure?\"\n          body=\"Deleting this instructor will be permanent\"\n        />\n        <div className=\"card-main-col col s12 m8 l7 xl5\">\n          <div className=\"card-main card-location card card-large\">\n            <div className=\"owner-box card-panel\" style={{ backgroundColor: '#31837a', color: '#fff' }}>\n              <div className=\"card-panel-row row\">\n                <div className=\"col s9\">\n                  <div className=\"user-block\">\n                    <div className=\"user-circle\" style={{ backgroundColor: '#18b5e9', color: '#fff' }}>\n                      <span className=\"initials\">NT</span>\n                    </div>\n                    <div className=\"user-text\" style={{ color: '#fff' }}>\n                      <h4 className=\"h3\">{lastName}, {firstName}</h4>\n                      <a href={`mailto:${email}`}>{email}</a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s3 right-align\">\n                  <div className=\"row icons-row\">\n                    <div className=\"col right-align\">\n                      <span className=\"block-icon\">\n                        <i className=\"icon-user\"></i>\n                        <span className=\"text-icon\">Instructor</span>\n                      </span>\n                    </div>\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href=\"#\"\n                        onClick={this.handleDropdownClick}\n                        className=\"dropdown-trigger btn\"\n                        data-target=\"dropdown05\"\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id=\"dropdown05\"\n                          className=\"dropdown-content dropdown-wide\"\n                          style={{ display: 'block', width: '103.991px', left: '116.974px', top: '7.99716px', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li>\n                            <a\n                              href=\"#\"\n                              onClick={this.onOpenInstructorDetailsModal}\n                              className=\"modal-trigger link-block\"\n                            >\n                              Edit\n                            </a>\n                          </li>\n                          <li>\n                            <a\n                              href=\"#\"\n                              onClick={this.onCloneInstructor}\n                            >\n                              Clone\n                            </a>\n                          </li>\n                          <li><a href=\"#!\">Impersonate</a></li>\n                          <li>\n                            <a\n                              href=\"#\"\n                              onClick={this.onOpenDeleteModal}\n                            >\n                              Delete\n                            </a>\n                          </li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"row d-flex align-items-center mb-0\">\n                <div className=\"col s12 m5\">\n                  <div className=\"chart-container\">\n                    <div className=\"chart-holder\">\n                      <Doughnut\n                        data={() => data(activeStudents, studentsAchievingTargetScore)}\n                        height={110}\n                        width={110}\n                        options={{\n                          circumference: 4,\n                          rotation: -3.58,\n                          cutoutPercentage: 50,\n                          tooltips: false,\n                        }}\n                        />\n                      <span className=\"chart-value\" style={{ backgroundColor: '#31837a', bottom: '-22px' }}><span data-count-up data-start-val=\"0\" data-end-val=\"71\" data-duration=\"1\"></span>{Math.floor((studentsAchievingTargetScore / activeStudents) * 100)}%</span>\n                    </div>\n                    <div className=\"chart-description\" style={{ color: '#31837a', marginTop: '36px' }}>Students Who Achieved Target Score</div>\n                  </div>\n                </div>\n                <div className=\"col s12 m7\">\n                  <ul className=\"points-list\">\n                    <li className=\"style-red-darken\">\n                      <span className=\"badge-circle\">{activeStudents}</span>\n                      <span className=\"point-text\">active students</span>\n                    </li>\n                    <li className=\"style-pink-darken\">\n                      <span className=\"badge-circle\">{pastStudents}</span>\n                      <span className=\"point-text\">past students</span>\n                    </li>\n                    <li>\n                      <span className=\"badge-circle\">{unactivatedStudents}</span>\n                      <span className=\"point-text\">unactivated students</span>\n                    </li>\n                    <li className=\"style-blue-light\">\n                      <span className=\"badge-circle\">+{averageImprovement}</span>\n                      <span className=\"point-text\">average improvement</span>\n                    </li>\n                    <li className=\"style-blue\">\n                      <span className=\"badge-circle\">{averageInitialScore}</span>\n                      <span className=\"point-text\">average initial score</span>\n                    </li>\n                    <li className=\"style-blue-dark\">\n                      <span className=\"badge-circle\">{averageFinalScore}</span>\n                      <span className=\"point-text\">average final score</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"card-footer\">\n                <div className=\"meta-info\">\n                  <p className=\"truncate\">First Location,  Second Location, Possible Additional Truncated More Locatioa...</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nInstructorCard.propTypes = {\n  instructor: PropTypes.object.isRequired,\n  onSaveInstructorChanges: PropTypes.func.isRequired,\n  onDeleteInstructor: PropTypes.func.isRequired,\n  onCloneInstructor: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number,\n};\n\nexport default InstructorCard;\n"]},"metadata":{},"sourceType":"module"}