{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable consistent-return */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Portal from '../../../../Portal';\nimport FilterSection from './components/FilterSection';\nimport TableHeader from './components/TableHeader';\nimport { topicMap, workbookMap, subjectMap, difficultyMap, typeMap } from '../../../utils/worksheetFilterMap';\nimport { subjectAscending, subjectDescending } from '../../../../utils/sortFunctions';\n\nclass ProblemBank extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentWillReceiveProps\", nextProps => {\n      if (!this.props.worksheetId || nextProps.worksheetId !== this.state.worksheetId) {\n        const {\n          problems,\n          passages,\n          worksheetId\n        } = nextProps;\n        this.setState({\n          problems,\n          passages,\n          worksheetId\n        });\n      }\n    });\n\n    _defineProperty(this, \"onToggleAddProblemDropdown\", () => this.setState(({\n      addProblemsDropdownOpen\n    }) => ({\n      addProblemsDropdownOpen: !addProblemsDropdownOpen\n    })));\n\n    _defineProperty(this, \"onChangeOpenSection\", openSection => this.setState({\n      openSection\n    }));\n\n    _defineProperty(this, \"onSetFilteredTopicState\", topicFilter => this.setState({\n      topicFilter\n    }));\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      subjectFilters: [],\n      difficultyFilters: [],\n      typeFilters: [],\n      workbookFilters: [],\n      topicFilter: ''\n    }));\n\n    _defineProperty(this, \"onSetAscendingSort\", () => this.setState({\n      sort: 'ascending'\n    }));\n\n    _defineProperty(this, \"onSetDescendingSort\", () => this.setState({\n      sort: 'descending'\n    }));\n\n    _defineProperty(this, \"onSortBySubject\", problemsOrPassages => {\n      const {\n        sort\n      } = this.state;\n\n      if (sort === 'ascending') {\n        return problemsOrPassages.sort(subjectAscending);\n      }\n\n      return problemsOrPassages.sort(subjectDescending);\n    });\n\n    _defineProperty(this, \"onFilterPassages\", (passages, filterType, filter) => {\n      switch (filterType) {\n        case 'difficulty':\n        case 'type':\n          return passages.reduce((finalArr, passage) => {\n            passage.problems.map(problem => {\n              if (filter.indexOf(problem[filterType]) !== -1 && finalArr.indexOf(passage) === -1) {\n                finalArr.push(passage);\n              }\n            });\n            return finalArr;\n          }, []);\n\n        case 'topic':\n          return passages.reduce((finalArr, passage) => {\n            passage.problems.map(problem => {\n              if (problem.topics.indexOf(filter) !== -1 && finalArr.indexOf(passage) === -1) {\n                finalArr.push(passage);\n              }\n            });\n            return finalArr;\n          }, []);\n\n        case 'workbook':\n          return passages.reduce((finalArr, passage) => {\n            passage.problems.map(problem => {\n              if (filter.indexOf(workbookMap[problem.inWorkbook]) !== -1 && finalArr.indexOf(passage) === -1) {\n                finalArr.push(passage);\n              }\n            });\n            return finalArr;\n          }, []);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onFilterProblemsOrPassages\", type => {\n      const {\n        subjectFilters,\n        difficultyFilters,\n        typeFilters,\n        workbookFilters,\n        topicFilter,\n        problems: allProblems,\n        passages: allPassages\n      } = this.state;\n      let problemsOrPassages;\n\n      if (type === 'problems') {\n        problemsOrPassages = allProblems;\n      } else {\n        problemsOrPassages = allPassages;\n      }\n\n      if (subjectFilters.length) {\n        problemsOrPassages = problemsOrPassages.filter(problemOrPassage => subjectFilters.indexOf(problemOrPassage.subject) !== -1);\n      }\n\n      if (difficultyFilters.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(problem => difficultyFilters.indexOf(problem.difficulty) !== -1);\n        } else {\n          problemsOrPassages = this.onFilterPassages(problemsOrPassages, 'difficulty', difficultyFilters);\n        }\n      }\n\n      if (typeFilters.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(problem => typeFilters.indexOf(problem.type) !== -1);\n        } else {\n          problemsOrPassages = this.onFilterPassages(problemsOrPassages, 'type', typeFilters);\n        }\n      }\n\n      if (workbookFilters.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(problem => workbookFilters.indexOf(workbookMap[problem.inWorkbook]) !== -1);\n        } else {\n          problemsOrPassages = this.onFilterPassages(problemsOrPassages, 'workbook', workbookFilters);\n        }\n      }\n\n      if (topicFilter.length) {\n        if (type === 'problems') {\n          problemsOrPassages = problemsOrPassages.filter(problem => problem.topics.indexOf(topicFilter) !== -1);\n        } else {\n          problemsOrPassages = this.onFilterPassages(problemsOrPassages, 'topic', topicFilter);\n        }\n      }\n\n      return problemsOrPassages;\n    });\n\n    _defineProperty(this, \"onAddSelectedProblems\", addTime => {\n      const {\n        selectedProblems,\n        selectedPassages\n      } = this.state;\n      const {\n        addSelectedProblems\n      } = this.props;\n      addSelectedProblems(selectedProblems, selectedPassages, addTime);\n      this.setState({\n        selectedPassages: [],\n        selectedProblems: [],\n        addProblemsDropdownOpen: false\n      });\n    });\n\n    _defineProperty(this, \"getMappableProblemsOrPassages\", type => {\n      const {\n        subjectFilters,\n        difficultyFilters,\n        typeFilters,\n        workbookFilters,\n        topicFilter,\n        sort,\n        problems: allProblems,\n        passages: allPassages\n      } = this.state;\n      let problemsOrPassages;\n\n      if (type === 'problems') {\n        problemsOrPassages = allProblems;\n      } else {\n        problemsOrPassages = allPassages;\n      }\n\n      if (topicFilter.length || subjectFilters.length || difficultyFilters.length || typeFilters.length || workbookFilters.length) {\n        problemsOrPassages = this.onFilterProblemsOrPassages(type);\n      }\n\n      if (sort) {\n        return this.onSortBySubject(problemsOrPassages);\n      }\n\n      return problemsOrPassages;\n    });\n\n    _defineProperty(this, \"determineSort\", () => {\n      const {\n        sort\n      } = this.state;\n\n      if (sort === '' || sort === 'descending') {\n        return this.onSetAscendingSort();\n      }\n\n      return this.onSetDescendingSort();\n    });\n\n    _defineProperty(this, \"handleFilterClick\", (filterType, filter) => {\n      const {\n        subjectFilters: currentSubjectFilters,\n        difficultyFilters: currentDifficultyFilters,\n        typeFilters: currentTypeFilters,\n        workbookFilters: currentWorkbookFilters\n      } = this.state;\n      let modifiedFilterCurrentState;\n      let modifiedFilterName;\n      let modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'type':\n          modifiedFilterCurrentState = currentTypeFilters;\n          modifiedFilterName = 'typeFilters';\n          break;\n\n        case 'workbook':\n          modifiedFilterCurrentState = currentWorkbookFilters;\n          modifiedFilterName = 'workbookFilters';\n          break;\n\n        default:\n          break;\n      }\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      this.setState({\n        [modifiedFilterName]: modifiedFilterUpdatedState\n      });\n    });\n\n    _defineProperty(this, \"toggleSelectAllProblemsOrPassages\", () => {\n      const {\n        openSection: type,\n        problems,\n        passages,\n        selectedProblems: currentSelectedProblems,\n        selectedPassages: currentSelectedPassages\n      } = this.state;\n      let clickedTypeCurrentState;\n      let clickedTypeName;\n      let clickedAllOfType;\n\n      if (type === 'problems') {\n        clickedTypeCurrentState = currentSelectedProblems;\n        clickedTypeName = 'selectedProblems';\n        clickedAllOfType = problems;\n      } else {\n        clickedTypeCurrentState = currentSelectedPassages;\n        clickedTypeName = 'selectedPassages';\n        clickedAllOfType = passages;\n      }\n\n      if (clickedTypeCurrentState.length === 0) {\n        this.setState({\n          [clickedTypeName]: clickedAllOfType\n        });\n      } else {\n        this.setState({\n          [clickedTypeName]: []\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleProblemOrPassageClick\", (type, value) => {\n      const {\n        selectedProblems: currentSelectedProblems,\n        selectedPassages: currentSelectedPassages\n      } = this.state;\n      let clickedTypeCurrentState;\n      let clickedTypeName;\n\n      if (type === 'problem') {\n        clickedTypeCurrentState = currentSelectedProblems;\n        clickedTypeName = 'selectedProblems';\n      } else {\n        clickedTypeCurrentState = currentSelectedPassages;\n        clickedTypeName = 'selectedPassages';\n      }\n\n      let clickedTypeUpdatedState;\n\n      if (clickedTypeCurrentState.map(selectedElement => selectedElement.id).indexOf(value.id) === -1) {\n        clickedTypeUpdatedState = update(clickedTypeCurrentState, {\n          $push: [value]\n        });\n      } else {\n        const selectedIndex = clickedTypeCurrentState.map(selectedElement => selectedElement.id).indexOf(value.id);\n        clickedTypeUpdatedState = update(clickedTypeCurrentState, {\n          $splice: [[selectedIndex, 1]]\n        });\n      }\n\n      this.setState({\n        [clickedTypeName]: clickedTypeUpdatedState\n      });\n    });\n\n    _defineProperty(this, \"mapProblems\", () => this.getMappableProblemsOrPassages('problems').map(problem => {\n      const {\n        selectedProblems\n      } = this.state;\n      const selected = selectedProblems.map(selectedProblem => selectedProblem.id).indexOf(problem.id) !== -1;\n      return __jsx(\"div\", {\n        className: selected ? \"card list-table-row list-row-added\" : \"card list-table-row\"\n      }, __jsx(\"div\", {\n        className: \"list-table-cell checkbox-cell\"\n      }, __jsx(\"label\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        className: \"filled-in\",\n        name: \"check_01\",\n        checked: selectedProblems.map(selectedProblem => selectedProblem.id).indexOf(problem.id) !== -1,\n        onChange: () => this.handleProblemOrPassageClick('problem', problem)\n      }), __jsx(\"span\", null, \"\\xA0\"))), __jsx(\"div\", {\n        className: \"list-table-cell subject-cell\"\n      }, __jsx(\"span\", null, subjectMap[problem.subject])), __jsx(\"div\", {\n        className: \"list-table-cell info-cell\"\n      }, __jsx(\"span\", null, difficultyMap[problem.difficulty])), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\"\n      }, __jsx(\"span\", null, typeMap[problem.type])), __jsx(\"div\", {\n        className: \"list-table-cell in-cell\"\n      }, problem.inWorkbook ? 'Yes' : 'No'), __jsx(\"div\", {\n        className: \"list-table-cell topic-cell\"\n      }, problem.topics.map(topic => __jsx(\"span\", {\n        className: \"chip\",\n        id: topic\n      }, topicMap[topic]))), __jsx(\"div\", {\n        className: \"list-table-cell view-cell\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"i\", {\n        className: \"icon-eye\"\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell drop-cell\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"i\", {\n        className: \"icon-plus-circle\"\n      }))));\n    }));\n\n    _defineProperty(this, \"mapPassages\", () => this.getMappableProblemsOrPassages('passages').map(passage => {\n      const {\n        selectedPassages\n      } = this.state;\n      const selected = selectedPassages.map(selectedPassage => selectedPassage.id).indexOf(passage.id) !== -1;\n      return __jsx(\"div\", {\n        className: \"list-view-section\"\n      }, __jsx(\"div\", {\n        className: selected ? \"list-table detail-table list-table-added\" : \"list-table detail-table\"\n      }, __jsx(TableHeader, {\n        sortBySubject: this.determineSort\n      }), __jsx(\"div\", {\n        className: \"list-table-body\"\n      }, __jsx(\"div\", {\n        className: \"combined-holder\"\n      }, __jsx(\"div\", {\n        className: \"combined-header\"\n      }, __jsx(\"div\", {\n        className: \"list-table-row\"\n      }, __jsx(\"div\", {\n        className: \"list-table-cell checkbox-cell\"\n      }, __jsx(\"div\", {\n        className: \"checkbox-block\"\n      }, __jsx(\"label\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        className: \"filled-in\",\n        checked: selectedPassages.map(selectedPassage => selectedPassage.id).indexOf(passage.id) !== -1,\n        onChange: () => this.handleProblemOrPassageClick('passage', passage)\n      }), __jsx(\"span\", null, \"\\xA0\")))), __jsx(\"div\", {\n        className: \"list-table-cell subject-cell\"\n      }, __jsx(\"div\", {\n        className: \"filter-name\"\n      }, subjectMap[passage.subject])), __jsx(\"div\", {\n        className: \"list-table-cell combined-title-cell\"\n      }, __jsx(\"div\", {\n        className: \"combined-title\"\n      }, passage.title)), __jsx(\"div\", {\n        className: \"list-table-cell view-cell\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"i\", {\n        className: \"custom-icon-triangle-right\"\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell drop-cell\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"i\", {\n        className: \"icon-plus-circle\"\n      }))))), __jsx(\"div\", {\n        className: \"collection\"\n      }, passage.problems.map(problem => __jsx(\"div\", {\n        className: \"collection-item list-table-row\",\n        id: problem.id\n      }, __jsx(\"div\", {\n        className: \"list-table-cell checkbox-cell\"\n      }, __jsx(\"span\", null, \"\\xA0\")), __jsx(\"div\", {\n        className: \"list-table-cell subject-cell\"\n      }, __jsx(\"span\", null, subjectMap[problem.subject])), __jsx(\"div\", {\n        className: \"list-table-cell info-cell\"\n      }, __jsx(\"span\", null, difficultyMap[problem.difficulty])), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\"\n      }, __jsx(\"span\", null, typeMap[problem.type])), __jsx(\"div\", {\n        className: \"list-table-cell in-cell\"\n      }, problem.inWorkbook ? 'Yes' : 'No'), __jsx(\"div\", {\n        className: \"list-table-cell topic-cell\"\n      }, problem.topics.map(topic => __jsx(\"span\", {\n        className: \"chip\",\n        id: topic\n      }, topicMap[topic]))), __jsx(\"div\", {\n        className: \"list-table-cell view-cell\"\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, __jsx(\"i\", {\n        className: \"icon-eye\"\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell drop-cell\"\n      }, __jsx(\"span\", null, \"\\xA0\")))))))));\n    }));\n\n    this.state = {\n      addProblemsDropdownOpen: false,\n      openSection: 'problems',\n      topicFilter: '',\n      subjectFilters: [],\n      difficultyFilters: [],\n      typeFilters: [],\n      workbookFilters: [],\n      sort: '',\n      selectedProblems: [],\n      selectedPassages: [],\n      problems: [],\n      passages: [],\n      worksheetId: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      problems,\n      passages,\n      worksheetId\n    } = this.props; // eslint-disable-next-line react/no-did-mount-set-state\n\n    this.setState({\n      problems,\n      passages,\n      worksheetId\n    });\n  }\n\n  render() {\n    const {\n      open,\n      onClose,\n      problems\n    } = this.props;\n    const {\n      openSection,\n      subjectFilters,\n      difficultyFilters,\n      typeFilters,\n      workbookFilters,\n      addProblemsDropdownOpen\n    } = this.state;\n    return __jsx(Portal, {\n      selector: \"#modal\"\n    }, open && __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"wrapper\"\n    }, __jsx(\"div\", {\n      id: \"modal_add_problem\",\n      style: {\n        zIndex: '1003'\n      },\n      className: \"jsx-837324748\" + \" \" + \"modal-page modal modal-custom\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"card-modal grey lighten-3\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"header-modal-box card-panel light-blue lighten-1 white-text\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"header-flex-row row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"col s12 m4 l5\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"header-holder\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"header-col\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"icon-col\"\n    }, __jsx(\"i\", {\n      className: \"jsx-837324748\" + \" \" + \"icon-search\"\n    }))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"header-col\"\n    }, __jsx(\"nav\", {\n      className: \"jsx-837324748\" + \" \" + \"breadcrumb-header\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"nav-wrapper \"\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"jsx-837324748\" + \" \" + \"breadcrumb modal-close\"\n    }, \"< Custom Worksheet\"))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"card-panel-text\"\n    }, __jsx(\"h1\", {\n      className: \"jsx-837324748\" + \" \" + \"text-large\"\n    }, \"Problem Bank\"))))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"card-panel-description col s8 m3 l2\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"card-panel-text\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"col-row\"\n    }, __jsx(\"span\", {\n      className: \"jsx-837324748\" + \" \" + \"value\"\n    }, problems.length), __jsx(\"span\", {\n      className: \"jsx-837324748\" + \" \" + \"value-text\"\n    }, \"worksheet \", __jsx(\"br\", {\n      className: \"jsx-837324748\"\n    }), \"problems\")))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"col s2 m1 right-align position-mobile-right\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"close-block\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: onClose,\n      className: \"jsx-837324748\" + \" \" + \"modal-close close\"\n    }, __jsx(\"i\", {\n      className: \"jsx-837324748\" + \" \" + \"icon-close-thin\"\n    }))))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"tabs-switcher-holder card-panel-row\"\n    }, __jsx(\"ul\", {\n      className: \"jsx-837324748\" + \" \" + \"tabs\"\n    }, __jsx(\"li\", {\n      style: {\n        borderBottom: openSection === 'problems' ? '2px solid white' : ''\n      },\n      className: \"jsx-837324748\" + \" \" + \"tab col s3\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onChangeOpenSection('problems'),\n      className: \"jsx-837324748\" + \" \" + ((openSection === 'problems' ? 'active' : '') || \"\")\n    }, __jsx(\"b\", {\n      className: \"jsx-837324748\"\n    }, \"Problems\"))), __jsx(\"li\", {\n      style: {\n        borderBottom: openSection === 'passages' ? '2px solid white' : ''\n      },\n      className: \"jsx-837324748\" + \" \" + \"tab col s3\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onChangeOpenSection('passages'),\n      className: \"jsx-837324748\" + \" \" + ((openSection === 'passages' ? 'active' : '') || \"\")\n    }, __jsx(\"b\", {\n      className: \"jsx-837324748\"\n    }, \"Passages\")))))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"tabs-content\"\n    }, __jsx(FilterSection, {\n      onSetFilteredTopicState: this.onSetFilteredTopicState,\n      onClearFilters: this.onClearFilters,\n      sortBySubject: this.determineSort,\n      toggleSelectAllProblemsOrPassages: this.toggleSelectAllProblemsOrPassages,\n      handleFilterClick: this.handleFilterClick,\n      subjectFilters: subjectFilters,\n      difficultyFilters: difficultyFilters,\n      typeFilters: typeFilters,\n      workbookFilters: workbookFilters\n    }), openSection === 'problems' ? __jsx(\"div\", {\n      id: \"tab_problems\",\n      className: \"jsx-837324748\" + \" \" + \"tab-content active\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"content-section content-section-80\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"container-lg\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"result-row center-align\"\n    }, __jsx(\"b\", {\n      className: \"jsx-837324748\" + \" \" + \"result\"\n    }, \"- \", this.getMappableProblemsOrPassages('problems').length, \" matches -\")), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"list-view-section\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"list-table detail-table\"\n    }, __jsx(TableHeader, {\n      sortBySubject: this.determineSort\n    }), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"list-table-body\"\n    }, this.mapProblems())))))) : __jsx(\"div\", {\n      id: \"tab_passages\",\n      className: \"jsx-837324748\" + \" \" + \"tab-content active\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"content-section content-section-80\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"container-lg\"\n    }, __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"result-row center-align\"\n    }, __jsx(\"b\", {\n      className: \"jsx-837324748\" + \" \" + \"result\"\n    }, \"- \", this.getMappableProblemsOrPassages('passages').length, \" matches -\")), this.mapPassages()))), __jsx(\"div\", {\n      className: \"jsx-837324748\" + \" \" + \"add-btn-block\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown_assign_selected_passeges\",\n      onClick: this.onToggleAddProblemDropdown,\n      className: \"jsx-837324748\" + \" \" + \"dropdown-trigger waves-effect waves-teal btn add-btn\"\n    }, __jsx(\"i\", {\n      className: \"jsx-837324748\" + \" \" + \"material-icons\"\n    }, \"add\"), \"Add Selected Problems\"), __jsx(\"ul\", {\n      id: \"dropdown_assign_selected_passeges\",\n      style: {\n        display: addProblemsDropdownOpen ? 'block' : '0',\n        opacity: addProblemsDropdownOpen ? '1' : '0'\n      },\n      className: \"jsx-837324748\" + \" \" + 'dropdown-content'\n    }, __jsx(\"li\", {\n      className: \"jsx-837324748\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAddSelectedProblems('today'),\n      className: \"jsx-837324748\"\n    }, \"For Today\")), __jsx(\"li\", {\n      className: \"jsx-837324748\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAddSelectedProblems('tomorrow'),\n      className: \"jsx-837324748\"\n    }, \"For Tomorrow\")), __jsx(\"li\", {\n      className: \"jsx-837324748\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAddSelectedProblems('nextSession'),\n      className: \"jsx-837324748\"\n    }, \"For Next Session\")), __jsx(\"li\", {\n      className: \"jsx-837324748\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAddSelectedProblems('date'),\n      className: \"jsx-837324748\"\n    }, \"For Date...\")))))))), __jsx(_JSXStyle, {\n      id: \"837324748\"\n    }, [\".card-modal.jsx-837324748{margin:0;border-radius:6px;}\", \".wrapper.jsx-837324748{min-height:0px;}\", \".modal-custom.jsx-837324748{opacity:1;visibility:visible;}\", \".modal-footer.jsx-837324748{background-color:white;}\"]));\n  }\n\n}\n\nexport default ProblemBank;","map":null,"metadata":{},"sourceType":"module"}