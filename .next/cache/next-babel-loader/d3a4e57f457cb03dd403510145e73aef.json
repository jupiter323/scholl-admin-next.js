{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props = _this.props,\n          onSetFilteredLocationState = _this$props.onSetFilteredLocationState,\n          onUnsetFilteredLocationState = _this$props.onUnsetFilteredLocationState,\n          onSetSort = _this$props.onSetSort;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props2 = _this.props,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState;\n      var name = _this.state.name;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _this.state = {\n      open: false,\n      name: '',\n      activeFilters: [],\n      location: \"\",\n      sort: \"lastNameDescending\"\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          activeFilters = _this$state.activeFilters,\n          location = _this$state.location,\n          sort = _this$state.sort;\n      return __jsx(\"div\", {\n        className: \"filter-form-holder\"\n      }, __jsx(\"ul\", {\n        className: \"collapsible expandable\"\n      }, __jsx(\"li\", null, __jsx(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: \"block\"\n        } : {\n          display: \"none\"\n        }\n      }, __jsx(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions_this_week\",\n        checked: activeFilters.indexOf(\"sessions_this_week\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"sessions_this_week\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"sessions_this_week\"\n      }, \"Sessions This Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"session_today\",\n        checked: activeFilters.indexOf(\"session_today\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"session_today\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"session_today\"\n      }, \"Session Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions_no\",\n        checked: activeFilters.indexOf(\"sessions_no\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"sessions_no\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"sessions_no\"\n      }, \"No Sessions Scheduled\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain_no\",\n        checked: activeFilters.indexOf(\"gain_no\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"gain_no\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain_no\"\n      }, \"No Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain_0_49\",\n        checked: activeFilters.indexOf(\"gain_0_49\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"gain_0_49\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain_0_49\"\n      }, \"Gain of 0-49\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain_50_100\",\n        checked: activeFilters.indexOf(\"gain_50_100\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"gain_50_100\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain_50_100\"\n      }, \"Gain of 50-100\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain_100_199\",\n        checked: activeFilters.indexOf(\"gain_100_199\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"gain_100_199\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain_100_199\"\n      }, \"Gain of 100-199\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain_200\",\n        checked: activeFilters.indexOf(\"gain_200\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"gain_200\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain_200\"\n      }, \"Gain of 200+\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"current\",\n        checked: activeFilters.indexOf(\"current\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"current\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"current\"\n      }, \"Current\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"archived\",\n        checked: activeFilters.indexOf(\"archived\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick(\"archived\");\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"archived\"\n      }, \"Archived\")))), __jsx(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(location, locationOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'location');\n        },\n        options: locationOptions,\n        label: \"Location\",\n        stateKey: \"location\",\n        dropdownKey: \"location\"\n      }))), __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"search-field input-field\",\n        style: {\n          marginTop: \"50px\"\n        }\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control  validate\"\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, __jsx(\"i\", {\n        className: \"icon-search\"\n      })), __jsx(\"label\", {\n        className: \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))))), __jsx(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 xl7\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(sort, sortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'sort');\n        },\n        options: sortOptions,\n        label: \"Sort\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), __jsx(\"div\", {\n        className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"option-filters\",\n        style: {\n          marginTop: \"50px\"\n        }\n      }, __jsx(\"div\", {\n        className: \"option-item clear\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), __jsx(\"div\", {\n        className: \"option-item\"\n      }, __jsx(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, __jsx(\"span\", {\n        className: \"open-text\"\n      }, open ? \"Hide Filters\" : \"Open Filters\")))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nFilterSection.propTyes = {\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetFilteredLocationState: PropTypes.func.isRequired,\n  onUnsetFilteredLocationState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/ListPage/components/FilterSection/index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","locationOptions","sortOptions","FilterSection","props","filter","currentActiveFilters","state","activeFilters","indexOf","$push","filterIndex","$splice","setState","event","name","onSetFilteredLocationState","onUnsetFilteredLocationState","onSetSort","value","target","updatedState","$merge","onSetFilteredState","onUnsetFilteredState","transformedName","replace","toLowerCase","open","location","sort","display","onHandleFilterClick","handleFilterChange","marginTop","submitNameFilter","onClearFilters","onToggleShowFilters","Component","propTyes","func","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,0EAWG,UAAAC,MAAM,EAAI;AAAA,UACPC,oBADO,GACkB,MAAKC,KADvB,CACtBC,aADsB;AAE9B,UAAIA,aAAJ;;AACA,UAAIF,oBAAoB,CAACG,OAArB,CAA6BJ,MAA7B,MAAyC,CAAC,CAA9C,EAAiD;AAC/CG,QAAAA,aAAa,GAAGV,MAAM,CAACQ,oBAAD,EAAuB;AAC3CI,UAAAA,KAAK,EAAE,CAACL,MAAD;AADoC,SAAvB,CAAtB;AAGD,OAJD,MAIO;AACL,YAAMM,WAAW,GAAGL,oBAAoB,CAACG,OAArB,CAA6BJ,MAA7B,CAApB;AACAG,QAAAA,aAAa,GAAGV,MAAM,CAACQ,oBAAD,EAAuB;AAC3CM,UAAAA,OAAO,EAAE,CAAC,CAAED,WAAF,EAAe,CAAf,CAAD;AADkC,SAAvB,CAAtB;AAGD;;AACD,YAAKE,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAbA;AAAF,OAAd;AACD,KAzBkB;;AAAA,yEA8BE,UAACM,KAAD,EAAQC,IAAR,EAAiB;AAAA,wBAC2C,MAAKX,KADhD;AAAA,UAC5BY,0BAD4B,eAC5BA,0BAD4B;AAAA,UACAC,4BADA,eACAA,4BADA;AAAA,UAC6BC,SAD7B,eAC6BA,SAD7B;AAEpC,UAAMC,KAAK,GAAGL,KAAK,CAACM,MAAN,GAAeN,KAAK,CAACM,MAAN,CAAaD,KAA5B,GAAoCL,KAAlD;AACA,UAAMO,YAAY,GAAGvB,MAAM,CAAC,MAAKS,KAAN,EAAa;AACtCe,QAAAA,MAAM,sBAAKP,IAAL,EAAYI,KAAZ;AADgC,OAAb,CAA3B;;AAGA,YAAKN,QAAL,CAAcQ,YAAd;;AACA,UAAIN,IAAI,KAAK,UAAb,EAAyB;AACvB,YAAID,KAAK,KAAK,EAAd,EAAkB;AAChB,iBAAOG,4BAA4B,EAAnC;AACD;;AACD,eAAOD,0BAA0B,CAACF,KAAD,CAAjC;AACD,OALD,MAKM,IAAIC,IAAI,KAAK,MAAb,EAAqB;AACzB,eAAOG,SAAS,CAACJ,KAAD,CAAhB;AACD;AACF,KA7CkB;;AAAA,uEAgDA,YAAM;AAAA,yBAC8B,MAAKV,KADnC;AAAA,UACfmB,kBADe,gBACfA,kBADe;AAAA,UACKC,oBADL,gBACKA,oBADL;AAAA,UAEfT,IAFe,GAEN,MAAKR,KAFC,CAEfQ,IAFe;;AAGvB,UAAIA,IAAI,KAAK,EAAb,EAAiB;AACfS,QAAAA,oBAAoB;AACrB;;AACD,UAAMC,eAAe,GAAGV,IAAI,CAACW,OAAL,CAAa,KAAb,EAAoB,EAApB,EAAwBC,WAAxB,EAAxB;AACAJ,MAAAA,kBAAkB,CAACE,eAAD,CAAlB;AACD,KAxDkB;;AAAA,qEA0DF;AAAA,aAAM,MAAKZ,QAAL,CAAc;AAAEL,QAAAA,aAAa,EAAE;AAAjB,OAAd,CAAN;AAAA,KA1DE;;AAAA,0EA6DG;AAAA,aAAM,MAAKK,QAAL,CAAc;AAAA,YAAGe,IAAH,QAAGA,IAAH;AAAA,eAAe;AAAEA,UAAAA,IAAI,EAAE,CAACA;AAAT,SAAf;AAAA,OAAd,CAAN;AAAA,KA7DH;;AAEjB,UAAKrB,KAAL,GAAa;AACXqB,MAAAA,IAAI,EAAE,KADK;AAEXb,MAAAA,IAAI,EAAE,EAFK;AAGXP,MAAAA,aAAa,EAAE,EAHJ;AAIXqB,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,IAAI,EAAE;AALK,KAAb;AAFiB;AASlB;;;;6BAsDQ;AAAA;;AAAA,wBACuC,KAAKvB,KAD5C;AAAA,UACCqB,IADD,eACCA,IADD;AAAA,UACOpB,aADP,eACOA,aADP;AAAA,UACqBqB,QADrB,eACqBA,QADrB;AAAA,UAC8BC,IAD9B,eAC8BA,IAD9B;AAEP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE,kBACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,KAAK,EAAEF,IAAI,GAAG;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAH,GAA0B;AAAEA,UAAAA,OAAO,EAAE;AAAX;AAFvC,SAIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,OAAO,EAAGvB,aAAa,CAACC,OAAd,CAAsB,oBAAtB,MAAgD,CAAC,CAH/D;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,oBAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,8BAPF,CADF,EAYE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,eAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,eAAtB,MAA2C,CAAC,CAH1D;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,eAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,yBAPF,CAZF,EAqBE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,aAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,aAAtB,MAAyC,CAAC,CAHxD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,aAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,iCAPF,CArBF,CADF,EAgCE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,SAAtB,MAAqC,CAAC,CAHpD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,SAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,mBAPF,CADF,EAUE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,WAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,WAAtB,MAAuC,CAAC,CAHtD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,WAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,wBAPF,CAVF,EAmBE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,aAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,aAAtB,MAAyC,CAAC,CAHxD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,aAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,0BAPF,CAnBF,EA4BE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,cAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,cAAtB,MAA0C,CAAC,CAHzD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,cAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,2BAPF,CA5BF,EAqCE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,UAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,UAAtB,MAAsC,CAAC,CAHrD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,UAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,wBAPF,CArCF,CAhCF,EA+EE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,SAAtB,MAAqC,CAAC,CAHpD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,SAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,mBAPF,CADF,EAUE,kBACE;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,EAAE,EAAC,UAFP;AAGI,QAAA,OAAO,EAAGxB,aAAa,CAACC,OAAd,CAAsB,UAAtB,MAAsC,CAAC,CAHrD;AAII,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACuB,mBAAL,CAAyB,UAAzB,CAAN;AAAA;AAJd,QADF,EAOE;AAAO,QAAA,OAAO,EAAC;AAAf,oBAPF,CAVF,CA/EF,CAJF,EAwGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,QAAD;AACI,QAAA,KAAK,EAAEhC,iBAAiB,CAAC6B,QAAD,EAAW5B,eAAX,CAD5B;AAEI,QAAA,QAAQ,EAAE,kBAACa,KAAD;AAAA,iBAAW,MAAI,CAACmB,kBAAL,CAAwBnB,KAAxB,EAA+B,UAA/B,CAAX;AAAA,SAFd;AAGI,QAAA,OAAO,EAAEb,eAHb;AAII,QAAA,KAAK,EAAC,UAJV;AAKI,QAAA,QAAQ,EAAC,UALb;AAMI,QAAA,WAAW,EAAC;AANhB,QADF,CADF,CADF,EAaE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,KAAK,EAAK;AAACiC,UAAAA,SAAS,EAAC;AAAX;AAApD,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,aAFL;AAGE,QAAA,SAAS,EAAC;AAHZ,QADF,EAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,eAAhC;AAAgD,QAAA,OAAO,EAAE,KAAKC;AAA9D,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,CANF,EASE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAC;AAAjC,kBATF,CADF,CAbF,CAxGF,CADF,EAuIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,QAAD;AACE,QAAA,KAAK,EAAEnC,iBAAiB,CAAC8B,IAAD,EAAO5B,WAAP,CAD1B;AAEE,QAAA,QAAQ,EAAE,kBAACY,KAAD;AAAA,iBAAW,MAAI,CAACmB,kBAAL,CAAwBnB,KAAxB,EAA+B,MAA/B,CAAX;AAAA,SAFZ;AAGE,QAAA,OAAO,EAAEZ,WAHX;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,QAAQ,EAAC,MALX;AAME,QAAA,WAAW,EAAC;AANd,QADF,CADF,CADF,CADF,CADF,EAiBE;AAAK,QAAA,SAAS,EAAC;AAAf,gBAjBF,EAoBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAI;AAACgC,UAAAA,SAAS,EAAC;AAAX;AAAzC,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAE,KAAKE;AAA1B,yBADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAE,KAAKC;AAFhB,SAIE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGT,IAAI,GAAG,cAAH,GAAoB,cAD3B,CAJF,CADF,CAJF,CADF,CApBF,CAvIF,CADF,CADF,CADF;AAoLD;;;;EAtPyBhC,KAAK,CAAC0C,S;;AAyPlCnC,aAAa,CAACoC,QAAd,GAAyB;AACrBrB,EAAAA,SAAS,EAACrB,SAAS,CAAC2C,IAAV,CAAeC,UADJ;AAErBlB,EAAAA,kBAAkB,EAAC1B,SAAS,CAAC2C,IAAV,CAAeC,UAFb;AAGrBjB,EAAAA,oBAAoB,EAAC3B,SAAS,CAAC2C,IAAV,CAAeC,UAHf;AAIrBzB,EAAAA,0BAA0B,EAAEnB,SAAS,CAAC2C,IAAV,CAAeC,UAJtB;AAKrBxB,EAAAA,4BAA4B,EAAEpB,SAAS,CAAC2C,IAAV,CAAeC;AALxB,CAAzB;AAQA,eAAetC,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      name: '',\n      activeFilters: [],\n      location: \"\",\n      sort: \"lastNameDescending\",\n    };\n  }\n\n  onHandleFilterClick = filter => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  };\n\n  // This function does two things - first, it changes the filter state regardless of the field it's coming from\n  // If either location or sort filters are changed, we dispatch the appropriate action in ListPage to ensure the rendered instructors are filtered/sorted appropriately\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredLocationState, onUnsetFilteredLocationState,onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'location') {\n      if (event === '') {\n        return onUnsetFilteredLocationState();\n      }\n      return onSetFilteredLocationState(event);\n    }else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { name } = this.state;\n    if (name === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  // eslint-disable-next-line consistent-return\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }));\n\n  render() {\n    const { open, activeFilters,location,sort } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div\n              className=\"collapsible-body\"\n              style={open ? { display: \"block\" } : { display: \"none\" }}\n            >\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"sessions_this_week\"\n                        checked={ activeFilters.indexOf(\"sessions_this_week\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"sessions_this_week\")}\n                    />\n                    <label htmlFor=\"sessions_this_week\">\n                      Sessions This Week\n                    </label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"session_today\"\n                        checked={ activeFilters.indexOf(\"session_today\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"session_today\")}\n                    />\n                    <label htmlFor=\"session_today\">Session Today</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"sessions_no\"\n                        checked={ activeFilters.indexOf(\"sessions_no\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"sessions_no\")}\n                    />\n                    <label htmlFor=\"sessions_no\">No Sessions Scheduled</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_no\"\n                        checked={ activeFilters.indexOf(\"gain_no\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_no\")}\n                    />\n                    <label htmlFor=\"gain_no\">No Gain</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_0_49\"\n                        checked={ activeFilters.indexOf(\"gain_0_49\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_0_49\")}\n                    />\n                    <label htmlFor=\"gain_0_49\">Gain of 0-49</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_50_100\"\n                        checked={ activeFilters.indexOf(\"gain_50_100\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_50_100\")}\n                    />\n                    <label htmlFor=\"gain_50_100\">Gain of 50-100</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_100_199\"\n                        checked={ activeFilters.indexOf(\"gain_100_199\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_100_199\")}\n                    />\n                    <label htmlFor=\"gain_100_199\">Gain of 100-199</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_200\"\n                        checked={ activeFilters.indexOf(\"gain_200\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_200\")}\n                    />\n                    <label htmlFor=\"gain_200\">Gain of 200+</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"current\"\n                        checked={ activeFilters.indexOf(\"current\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"current\")}\n                    />\n                    <label htmlFor=\"current\">Current</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"archived\"\n                        checked={ activeFilters.indexOf(\"archived\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"archived\")}\n                    />\n                    <label htmlFor=\"archived\">Archived</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                        value={getValueFromState(location, locationOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'location')}\n                        options={locationOptions}\n                        label=\"Location\"\n                        stateKey=\"location\"\n                        dropdownKey=\"location\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\" style  = {{marginTop:\"50px\"}}>\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      className=\"input-control  validate\"\n                    />\n                    <button type=\"submit\" className=\"search-button\" onClick={this.submitNameFilter}>\n                      <i className=\"icon-search\" />\n                    </button>\n                    <label className=\"label\" htmlFor=\"name_search\">\n                      Search\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, sortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={sortOptions}\n                        label=\"Sort\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 hide-on-med-and-down show-on-large\">\n                &nbsp;\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\" style = {{marginTop:\"50px\"}}>\n                  <div className=\"option-item clear\">\n                    <a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a>\n                  </div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">\n                        {open ? \"Hide Filters\" : \"Open Filters\"}\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTyes = {\n    onSetSort:PropTypes.func.isRequired,\n    onSetFilteredState:PropTypes.func.isRequired,\n    onUnsetFilteredState:PropTypes.func.isRequired,\n    onSetFilteredLocationState: PropTypes.func.isRequired,\n    onUnsetFilteredLocationState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}