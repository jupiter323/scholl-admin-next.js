{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nclass ChallengeQuestions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"mapQuestions\", () => this.props.questions.map(question => React.createElement(Question, {\n      key: question.id,\n      question: question,\n      answerSheetComplete: this.props.answerSheetComplete,\n      onOpenQuestionModal: this.props.onOpenQuestionModal\n    })));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col s12 l6\"\n    }, React.createElement(\"div\", {\n      className: \"card-block\"\n    }, React.createElement(\"h2\", null, \"Challenge\"), React.createElement(\"div\", {\n      className: \"card-answer card\"\n    }, React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"ol\", {\n      className: \"answers-list\"\n    }, this.mapQuestions())))));\n  }\n\n}\n\nChallengeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired\n};\nexport default ChallengeQuestions;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/LessonDetailAnswerSheet/components/ChallengeQuestions/index.js"],"names":["React","PropTypes","Question","ChallengeQuestions","Component","props","questions","map","question","id","answerSheetComplete","onOpenQuestionModal","render","mapQuestions","propTypes","array","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,kBAAN,SAAiCH,KAAK,CAACI,SAAvC,CAAiD;AAAA;AAAA;;AAAA,0CAChC,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,QAAQ,IACpD,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADhB;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,mBAAmB,EAAE,KAAKH,KAAL,CAAWK,mBAHlC;AAIE,MAAA,mBAAmB,EAAE,KAAKL,KAAL,CAAWM;AAJlC,MADmB,CAD0B;AAAA;;AAU/CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,4CADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAI,MAAA,SAAS,EAAC;AAAd,OACG,KAAKC,YAAL,EADH,CADF,CADF,CAFF,CADF,CADF;AAcD;;AAzB8C;;AA4BjDV,kBAAkB,CAACW,SAAnB,GAA+B;AAC7BR,EAAAA,SAAS,EAAEL,SAAS,CAACc,KAAV,CAAgBC,UADE;AAE7BN,EAAAA,mBAAmB,EAAET,SAAS,CAACgB,IAAV,CAAeD,UAFP;AAG7BL,EAAAA,mBAAmB,EAAEV,SAAS,CAACiB,IAAV,CAAeF;AAHP,CAA/B;AAMA,eAAeb,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nclass ChallengeQuestions extends React.Component {\n  mapQuestions = () => this.props.questions.map(question => (\n    <Question\n      key={question.id}\n      question={question}\n      answerSheetComplete={this.props.answerSheetComplete}\n      onOpenQuestionModal={this.props.onOpenQuestionModal}\n    />\n  ))\n\n  render() {\n    return (\n      <div className=\"col s12 l6\">\n        <div className=\"card-block\">\n          <h2>Challenge</h2>\n          <div className=\"card-answer card\">\n            <div className=\"card-content\">\n              <ol className=\"answers-list\">\n                {this.mapQuestions()}\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChallengeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired,\n};\n\nexport default ChallengeQuestions;\n"]},"metadata":{},"sourceType":"module"}