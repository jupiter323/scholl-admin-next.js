{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Sticky } from 'react-sticky'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar LocationNavBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LocationNavBar, _React$Component);\n\n  function LocationNavBar() {\n    _classCallCheck(this, LocationNavBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LocationNavBar).apply(this, arguments));\n  }\n\n  _createClass(LocationNavBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          onSetActivePage = _this$props.onSetActivePage,\n          locationContactInfo = _this$props.location.locationContactInfo,\n          onRedirectToLocationsPage = _this$props.onRedirectToLocationsPage;\n      return React.createElement(Sticky, null, function (_ref) {\n        var style = _ref.style;\n        return React.createElement(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread({}, style, {\n            zIndex: 1999\n          })\n        }, React.createElement(\"div\", {\n          className: \"mobile-header\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\"\n        }, React.createElement(\"i\", {\n          className: \"material-icons\"\n        }, \"menu\"))), React.createElement(\"nav\", {\n          className: \"breadcrumb-holder\"\n        }, React.createElement(\"div\", {\n          className: \"nav-wrapper \"\n        }, React.createElement(\"a\", {\n          href: \"#!\",\n          onClick: onRedirectToLocationsPage,\n          className: \"breadcrumb\"\n        }, \"<  Locations\"))), React.createElement(\"h2\", {\n          className: \"h1 white-text\"\n        }, React.createElement(\"span\", {\n          className: \"heading-holder\"\n        }, React.createElement(\"i\", {\n          className: \"icon-location\"\n        }), React.createElement(\"span\", {\n          className: \"heading-block\"\n        }, locationContactInfo.locationName, \" - \", locationContactInfo.locationCity, \", \", locationContactInfo.locationState))), React.createElement(\"nav\", {\n          className: \"nav-additional\"\n        }, React.createElement(\"ul\", {\n          className: \"menu-additional\"\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick() {\n            return onSetActivePage('summary');\n          },\n          className: active === 'summary' ? 'active' : ''\n        }, \"Summary\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick() {\n            return onSetActivePage('account');\n          },\n          className: active === 'account' ? 'active' : ''\n        }, \"Account\")))));\n      });\n    }\n  }]);\n\n  return LocationNavBar;\n}(React.Component);\n\nLocationNavBar.propTypes = {\n  active: PropTypes.string.isRequired,\n  onSetActivePage: PropTypes.func.isRequired,\n  onRedirectToLocationsPage: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n};\nexport default LocationNavBar;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Location/components/LocationNavBar/index.js"],"names":["React","PropTypes","Sticky","LocationNavBar","props","active","onSetActivePage","locationContactInfo","location","onRedirectToLocationsPage","style","zIndex","locationName","locationCity","locationState","Component","propTypes","string","isRequired","func","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CAEA;;IACMC,c;;;;;;;;;;;;;6BACK;AAAA,wBAC2F,KAAKC,KADhG;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,eADT,eACSA,eADT;AAAA,UACsCC,mBADtC,eAC0BC,QAD1B,CACsCD,mBADtC;AAAA,UAC6DE,yBAD7D,eAC6DA,yBAD7D;AAEP,aACE,oBAAC,MAAD,QACG;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eACC;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAsC,UAAA,KAAK,oBAAOA,KAAP;AAAcC,YAAAA,MAAM,EAAE;AAAtB;AAA3C,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,yBAAY,WAAxB;AAAoC,UAAA,SAAS,EAAC;AAA9C,WAAgE;AAAG,UAAA,SAAS,EAAC;AAAb,kBAAhE,CADF,CADF,EAIE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAa,UAAA,OAAO,EAAEF,yBAAtB;AAAiD,UAAA,SAAS,EAAC;AAA3D,0BADF,CADF,CAJF,EASE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACE;AAAG,UAAA,SAAS,EAAC;AAAb,UADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAAiCF,mBAAmB,CAACK,YAArD,SAAsEL,mBAAmB,CAACM,YAA1F,QAA0GN,mBAAmB,CAACO,aAA9H,CAFF,CADF,CATF,EAeE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE,gCACE;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMR,eAAe,CAAC,SAAD,CAArB;AAAA,WAFX;AAGE,UAAA,SAAS,EAAED,MAAM,KAAK,SAAX,GAAuB,QAAvB,GAAkC;AAH/C,qBADF,CADF,EAUE,gCACE;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMC,eAAe,CAAC,SAAD,CAArB;AAAA,WAFX;AAGE,UAAA,SAAS,EAAED,MAAM,KAAK,SAAX,GAAuB,QAAvB,GAAkC;AAH/C,qBADF,CAVF,CADF,CAfF,CADD;AAAA,OADH,CADF;AA4CD;;;;EA/C0BL,KAAK,CAACe,S;;AAkDnCZ,cAAc,CAACa,SAAf,GAA2B;AACzBX,EAAAA,MAAM,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UADA;AAEzBZ,EAAAA,eAAe,EAAEL,SAAS,CAACkB,IAAV,CAAeD,UAFP;AAGzBT,EAAAA,yBAAyB,EAAER,SAAS,CAACkB,IAAV,CAAeD,UAHjB;AAIzBV,EAAAA,QAAQ,EAAEP,SAAS,CAACmB,MAAV,CAAiBF;AAJF,CAA3B;AAOA,eAAef,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Sticky } from 'react-sticky';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LocationNavBar extends React.Component {\n  render() {\n    const { active, onSetActivePage, location: { locationContactInfo }, onRedirectToLocationsPage } = this.props;\n    return (\n      <Sticky>\n        {({ style }) => (\n          <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n            <div className=\"mobile-header\">\n              <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            </div>\n            <nav className=\"breadcrumb-holder\">\n              <div className=\"nav-wrapper \">\n                <a href=\"#!\" onClick={onRedirectToLocationsPage} className=\"breadcrumb\">&lt;  Locations</a>\n              </div>\n            </nav>\n            <h2 className=\"h1 white-text\">\n              <span className=\"heading-holder\">\n                <i className=\"icon-location\"></i>\n                <span className=\"heading-block\">{locationContactInfo.locationName} - {locationContactInfo.locationCity}, {locationContactInfo.locationState}</span>\n              </span>\n            </h2>\n            <nav className=\"nav-additional\">\n              <ul className=\"menu-additional\">\n                <li>\n                  <a\n                    href=\"#\"\n                    onClick={() => onSetActivePage('summary')}\n                    className={active === 'summary' ? 'active' : ''}\n                  >\n                    Summary\n          </a>\n                </li>\n                <li>\n                  <a\n                    href=\"#\"\n                    onClick={() => onSetActivePage('account')}\n                    className={active === 'account' ? 'active' : ''}\n                  >\n                    Account\n          </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        )}\n      </Sticky>\n    )\n  }\n}\n\nLocationNavBar.propTypes = {\n  active: PropTypes.string.isRequired,\n  onSetActivePage: PropTypes.func.isRequired,\n  onRedirectToLocationsPage: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default LocationNavBar;\n"]},"metadata":{},"sourceType":"module"}