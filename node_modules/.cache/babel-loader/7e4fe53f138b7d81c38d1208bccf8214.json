{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  } // maybe don't map, but have set bubbles wiht set ids, then check for correct based on quesiton passed as props\n\n};\n\nvar BubbleGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BubbleGroup, _React$Component);\n\n  function BubbleGroup(props) {\n    var _this;\n\n    _classCallCheck(this, BubbleGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BubbleGroup).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var studentChoice = _this.props.question.studentChoice;\n\n      if (!studentChoice === \"\") {\n        _this.setState = ({\n          selected: studentChoice\n        }, // console.log(this.state.selected))\n        function () {\n          return _this.checkIfCorrect(_this.state.selected);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleBubbleChange\", function (event, letter) {\n      _this.setState({\n        selected: event.target.value\n      }, function () {\n        return _this.checkIfCorrect(letter);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectedBubbleClick\", function (event) {\n      var selected = _this.state.selected;\n      var studentChoice = _this.props.question.studentChoice;\n\n      if (selected === event.target.value && studentChoice !== event.target.value) {\n        _this.setState({\n          selected: \"\"\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkIfCorrect\", function (letter) {\n      var question = _this.props.question;\n\n      if (letter === question.answer) {\n        _this.setState({\n          correct: true\n        });\n      } else {\n        _this.setState({\n          correct: false\n        });\n      } // update counter on writing page\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubbleStyle\", function (letter) {\n      var _this$state = _this.state,\n          correct = _this$state.correct,\n          selected = _this$state.selected;\n      var answer = _this.props.question.answer;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubble\", function (letter, id) {\n      return React.createElement(\"li\", {\n        key: letter\n      }, React.createElement(\"form\", null, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"\".concat(id).concat(letter),\n        name: \"letter\",\n        value: letter,\n        checked: _this.state.selected === letter,\n        onChange: function onChange(event) {\n          return _this.onHandleBubbleChange(event, letter);\n        },\n        onClick: function onClick() {\n          return _this.onSelectedBubbleClick();\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"\".concat(id).concat(letter),\n        style: _this.state.selected ? _this.renderBubbleStyle(letter) : styles.plain\n      }, React.createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginTop: '2px',\n          paddingLeft: \"4.5px\"\n        }\n      }, letter))));\n    });\n\n    _this.state = {\n      selected: \"\",\n      correct: false\n    };\n    return _this;\n  }\n\n  _createClass(BubbleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.question.id;\n      return React.createElement(React.Fragment, null, this.renderBubble(\"A\", id), this.renderBubble(\"B\", id), this.renderBubble(\"C\", id), this.renderBubble(\"D\", id));\n    }\n  }]);\n\n  return BubbleGroup;\n}(React.Component);\n\nBubbleGroup.propTypes = {\n  question: PropTypes.object.isRequired\n};\nexport default BubbleGroup;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\components\\Bubble\\index.js"],"names":["React","PropTypes","styles","red","position","color","borderColor","border","backgroundColor","height","width","borderRadius","greenFilled","greenBorderOnly","plain","BubbleGroup","props","studentChoice","question","setState","selected","checkIfCorrect","state","event","letter","target","value","answer","correct","id","onHandleBubbleChange","onSelectedBubbleClick","renderBubbleStyle","display","marginTop","paddingLeft","renderBubble","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,MAA/B;AAAuCC,IAAAA,WAAW,EAAE,MAApD;AAA4DC,IAAAA,MAAM,EAAE,WAApE;AAAiFC,IAAAA,eAAe,EAAE,SAAlG;AAA6GC,IAAAA,MAAM,EAAE,MAArH;AAA6HC,IAAAA,KAAK,EAAE,MAApI;AAA4IC,IAAAA,YAAY,EAAE;AAA1J,GADQ;AAEbC,EAAAA,WAAW,EAAE;AAAER,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,MAA/B;AAAuCC,IAAAA,WAAW,EAAE,SAApD;AAA+DC,IAAAA,MAAM,EAAE,WAAvE;AAAoFC,IAAAA,eAAe,EAAE,SAArG;AAAgHC,IAAAA,MAAM,EAAE,MAAxH;AAAgIC,IAAAA,KAAK,EAAE,MAAvI;AAA+IC,IAAAA,YAAY,EAAE;AAA7J,GAFA;AAGbE,EAAAA,eAAe,EAAE;AAAET,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,SAA/B;AAA0CC,IAAAA,WAAW,EAAE,SAAvD;AAAkEC,IAAAA,MAAM,EAAE,WAA1E;AAAuFC,IAAAA,eAAe,EAAE,MAAxG;AAAgHC,IAAAA,MAAM,EAAE,MAAxH;AAAgIC,IAAAA,KAAK,EAAE,MAAvI;AAA+IC,IAAAA,YAAY,EAAE;AAA7J,GAHJ;AAIbG,EAAAA,KAAK,EAAE;AAAEV,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,SAA/B;AAA0CE,IAAAA,MAAM,EAAE,WAAlD;AAA+DD,IAAAA,WAAW,EAAE,SAA5E;AAAuFG,IAAAA,MAAM,EAAE,MAA/F;AAAuGC,IAAAA,KAAK,EAAE,MAA9G;AAAsHC,IAAAA,YAAY,EAAE;AAApI,GAJM,CAOf;;AAPe,CAAf;;IASMI,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;;AADiB,wEAQC,YAAM;AAAA,UACJC,aADI,GACe,MAAKD,KADpB,CAChBE,QADgB,CACJD,aADI;;AAExB,UAAI,CAACA,aAAD,KAAmB,EAAvB,EAA2B;AACzB,cAAKE,QAAL,IAAiB;AACfC,UAAAA,QAAQ,EAAEH;AADK,WAEf;AACF;AAAA,iBAAM,MAAKI,cAAL,CAAoB,MAAKC,KAAL,CAAWF,QAA/B,CAAN;AAAA,SAHA;AAID;AACF,KAhBkB;;AAAA,2EAkBI,UAACG,KAAD,EAAQC,MAAR,EAAmB;AACzC,YAAKL,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd,EACC;AAAA,eAAM,MAAKL,cAAL,CAAoBG,MAApB,CAAN;AAAA,OADD;AAEA,KArBkB;;AAAA,4EAwBK,UAACD,KAAD,EAAW;AAAA,UACzBH,QADyB,GACZ,MAAKE,KADO,CACzBF,QADyB;AAAA,UAEdH,aAFc,GAEM,MAAKD,KAFX,CAEzBE,QAFyB,CAEdD,aAFc;;AAGjC,UAAIG,QAAQ,KAAKG,KAAK,CAACE,MAAN,CAAaC,KAA1B,IAAoCT,aAAa,KAAKM,KAAK,CAACE,MAAN,CAAaC,KAAvE,EAA6E;AAC3E,cAAKP,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD;AACF,KA9BkB;;AAAA,qEAgCF,UAACI,MAAD,EAAY;AAAA,UACnBN,QADmB,GACN,MAAKF,KADC,CACnBE,QADmB;;AAE3B,UAAGM,MAAM,KAAKN,QAAQ,CAACS,MAAvB,EAA+B;AAC7B,cAAKR,QAAL,CAAc;AAACS,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD,OAFD,MAEK;AACH,cAAKT,QAAL,CAAc;AAACS,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD,OAN0B,CAO3B;;AACD,KAxCkB;;AAAA,wEA0CC,UAAEJ,MAAF,EAAc;AAAA,wBACF,MAAKF,KADH;AAAA,UACxBM,OADwB,eACxBA,OADwB;AAAA,UACfR,QADe,eACfA,QADe;AAAA,UAEZO,MAFY,GAEC,MAAKX,KAFN,CAExBE,QAFwB,CAEZS,MAFY;;AAGhC,UAAIP,QAAQ,KAAKI,MAAb,IAAuBI,OAA3B,EAAoC;AAClC,eAAO1B,MAAM,CAACU,WAAd;AACD;;AACD,UAAIQ,QAAQ,KAAKI,MAAb,IAAuB,CAACI,OAA5B,EAAqC;AACnC,eAAO1B,MAAM,CAACC,GAAd;AACD;;AACD,UAAIqB,MAAM,KAAKJ,QAAX,IAAuBI,MAAM,KAAK,CAACG,MAAvC,EAA+C;AAC7C,eAAOzB,MAAM,CAACY,KAAd;AACD;;AAAA,UAAGU,MAAM,KAAKJ,QAAX,IAAuBI,MAAM,KAAKG,MAArC,EAA4C;AAC3C,eAAOzB,MAAM,CAACW,eAAd;AACD;;AACD,aAAOX,MAAM,CAACY,KAAd;AACD,KAzDkB;;AAAA,mEA2DJ,UAACU,MAAD,EAASK,EAAT;AAAA,aACb;AAAI,QAAA,GAAG,EAAEL;AAAT,SACI,kCACE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,YAAKK,EAAL,SAAUL,MAAV,CAFJ;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAEA,MAJT;AAKE,QAAA,OAAO,EAAE,MAAKF,KAAL,CAAWF,QAAX,KAAwBI,MALnC;AAME,QAAA,QAAQ,EAAE,kBAACD,KAAD;AAAA,iBAAW,MAAKO,oBAAL,CAA0BP,KAA1B,EAAiCC,MAAjC,CAAX;AAAA,SANZ;AAOE,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAKO,qBAAL,EAAL;AAAA;AAPX,QADF,EAUE;AACE,QAAA,OAAO,YAAKF,EAAL,SAAUL,MAAV,CADT;AAEE,QAAA,KAAK,EAAE,MAAKF,KAAL,CAAWF,QAAX,GAAsB,MAAKY,iBAAL,CAAuBR,MAAvB,CAAtB,GAAuDtB,MAAM,CAACY;AAFvE,SAIA;AAAM,QAAA,KAAK,EAAE;AAAEmB,UAAAA,OAAO,EAAE,OAAX;AAAoBC,UAAAA,SAAS,EAAE,KAA/B;AAAsCC,UAAAA,WAAW,EAAE;AAAnD;AAAb,SAA4EX,MAA5E,CAJA,CAVF,CADJ,CADa;AAAA,KA3DI;;AAEjB,UAAKF,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE,EADC;AAEXQ,MAAAA,OAAO,EAAE;AAFE,KAAb;AAFiB;AAMlB;;;;6BA2EQ;AAAA,UACaC,EADb,GACsB,KAAKb,KAD3B,CACCE,QADD,CACaW,EADb;AAEL,aACE,oBAAC,KAAD,CAAO,QAAP,QACG,KAAKO,YAAL,CAAkB,GAAlB,EAAuBP,EAAvB,CADH,EAEG,KAAKO,YAAL,CAAkB,GAAlB,EAAuBP,EAAvB,CAFH,EAGG,KAAKO,YAAL,CAAkB,GAAlB,EAAuBP,EAAvB,CAHH,EAIG,KAAKO,YAAL,CAAkB,GAAlB,EAAuBP,EAAvB,CAJH,CADF;AAQH;;;;EA5FuB7B,KAAK,CAACqC,S;;AA+FhCtB,WAAW,CAACuB,SAAZ,GAAwB;AACtBpB,EAAAA,QAAQ,EAAEjB,SAAS,CAACsC,MAAV,CAAiBC;AADL,CAAxB;AAIA,eAAezB,WAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  red: { position: 'relative', color: '#fff', borderColor: '#fff', border: '1px solid', backgroundColor: '#db1d41', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenFilled: { position: 'relative', color: '#fff', borderColor: '#32955c', border: '1px solid', backgroundColor: '#32955c', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenBorderOnly: { position: 'relative', color: '#32955c', borderColor: '#32955c', border: '1px solid', backgroundColor: '#fff', height: '19px', width: '19px', borderRadius: '50%' },\r\n  plain: { position: 'relative', color: '#a6a8ab', border: '1px solid', borderColor: '#a6a8ab', height: '19px', width: '19px', borderRadius: '50%' }\r\n}\r\n\r\n// maybe don't map, but have set bubbles wiht set ids, then check for correct based on quesiton passed as props\r\n\r\nclass BubbleGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: \"\",\r\n      correct: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { question: { studentChoice} } = this.props;\r\n    if (!studentChoice === \"\") {\r\n      this.setState = ({\r\n        selected: studentChoice},\r\n        // console.log(this.state.selected))\r\n      () => this.checkIfCorrect(this.state.selected))\r\n    }\r\n  }\r\n\r\n  onHandleBubbleChange = (event, letter) => {\r\n   this.setState({selected: event.target.value},\r\n    () => this.checkIfCorrect(letter))\r\n  }\r\n\r\n// clears state when selected button is clicked again, unless it was studentChoice from props\r\n  onSelectedBubbleClick = (event) => {\r\n    const { selected } = this.state;\r\n    const { question: {studentChoice} }  = this.props;\r\n    if (selected === event.target.value  && studentChoice !== event.target.value){\r\n      this.setState({selected: \"\"})\r\n    }\r\n  }\r\n\r\n  checkIfCorrect = (letter) => {\r\n    const { question } = this.props;\r\n    if(letter === question.answer) {\r\n      this.setState({correct: true});\r\n    }else{\r\n      this.setState({correct: false})\r\n    }\r\n    // update counter on writing page\r\n  }\r\n\r\n  renderBubbleStyle = ( letter ) => {\r\n    const { correct, selected } = this.state;\r\n    const { question: { answer } } = this.props;\r\n    if (selected === letter && correct) {\r\n      return styles.greenFilled\r\n    }\r\n    if (selected === letter && !correct) {\r\n      return styles.red\r\n    }\r\n    if (letter !== selected && letter === !answer) {\r\n      return styles.plain\r\n    }if(letter !== selected && letter === answer){\r\n      return styles.greenBorderOnly\r\n    }\r\n    return styles.plain\r\n  }\r\n\r\n  renderBubble = (letter, id) => (\r\n    <li key={letter}>\r\n        <form>\r\n          <input\r\n            type=\"radio\"\r\n            id={`${id}${letter}`}\r\n            name=\"letter\"\r\n            value={letter}\r\n            checked={this.state.selected === letter}\r\n            onChange={(event) => this.onHandleBubbleChange(event, letter)}\r\n            onClick={()=> this.onSelectedBubbleClick()}\r\n            />\r\n          <label\r\n            htmlFor={`${id}${letter}`}\r\n            style={this.state.selected ? this.renderBubbleStyle(letter) : styles.plain}\r\n            >\r\n          <span style={{ display: 'block', marginTop: '2px', paddingLeft: \"4.5px\" }}>{letter}</span>\r\n          </label>\r\n        </form>\r\n      </li>\r\n  )\r\n\r\n  render() {\r\n    const { question: { id } } = this.props\r\n      return (\r\n        <React.Fragment>\r\n          {this.renderBubble(\"A\", id)}\r\n          {this.renderBubble(\"B\", id)}\r\n          {this.renderBubble(\"C\", id)}\r\n          {this.renderBubble(\"D\", id)}\r\n        </React.Fragment>\r\n      )\r\n  }\r\n}\r\n\r\nBubbleGroup.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default BubbleGroup;\r\n"]},"metadata":{},"sourceType":"module"}