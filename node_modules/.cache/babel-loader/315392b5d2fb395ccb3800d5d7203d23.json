{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCalendarCellClassName, getCalendarDayClassName } from '../../utils/dateAndCalendarUtils';\n\nvar CalendarRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarRow, _React$Component);\n\n  function CalendarRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CalendarRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CalendarRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignSessionModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          onToggleAssignSessionModal = _this$props.onToggleAssignSessionModal,\n          onToggleAddDropdown = _this$props.onToggleAddDropdown;\n      onToggleAssignSessionModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignLessonsModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props2 = _this.props,\n          onToggleAssignLessonsModal = _this$props2.onToggleAssignLessonsModal,\n          onToggleAddDropdown = _this$props2.onToggleAddDropdown;\n      onToggleAssignLessonsModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignWorksheetsModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props3 = _this.props,\n          onToggleAssignWorksheetsModal = _this$props3.onToggleAssignWorksheetsModal,\n          onToggleAddDropdown = _this$props3.onToggleAddDropdown;\n      onToggleAssignWorksheetsModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignTestSectionModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props4 = _this.props,\n          onToggleAssignTestSectionModal = _this$props4.onToggleAssignTestSectionModal,\n          onToggleAddDropdown = _this$props4.onToggleAddDropdown;\n      onToggleAssignTestSectionModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignSimulatedSatModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props5 = _this.props,\n          onToggleAssignSimulatedSatModal = _this$props5.onToggleAssignSimulatedSatModal,\n          onToggleAddDropdown = _this$props5.onToggleAddDropdown;\n      onToggleAssignSimulatedSatModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapDateLessons\", function (shouldMapLessons, lessons) {\n      if (shouldMapLessons) {\n        return lessons.map(function (lesson, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, lesson.completed && React.createElement(\"span\", {\n            className: \"event-check lesson-check\"\n          }, React.createElement(\"i\", {\n            className: \"icon-check02\"\n          })), React.createElement(\"span\", {\n            className: \"event event-lesson-box\"\n          }, lesson.title));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapDateWorksheets\", function (shouldMapWorksheets, worksheets) {\n      if (shouldMapWorksheets) {\n        return worksheets.map(function (worksheet, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, worksheet.completed && React.createElement(\"span\", {\n            className: \"event-check worksheet-check\"\n          }, React.createElement(\"i\", {\n            className: \"icon-check02\"\n          })), React.createElement(\"span\", {\n            className: \"event event-worksheet-box\"\n          }, worksheet.title));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapTestSections\", function (shouldMapTestSections, testSections) {\n      if (shouldMapTestSections) {\n        return testSections.map(function (testSection, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, React.createElement(\"span\", {\n            className: \"event event-test-box\"\n          }, \"Test Section: \", testSection.version));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapSimulatedSats\", function (shouldMapSimulatedSats, simulatedSat) {\n      if (shouldMapSimulatedSats) {\n        return simulatedSat.map(function (sat, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, React.createElement(\"span\", {\n            className: \"event event-sat-box\"\n          }, sat.version));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapRowDates\", function () {\n      return _this.props.rows && _this.props.rows.map(function (rowDate) {\n        var _this$props6 = _this.props,\n            eventFilters = _this$props6.eventFilters,\n            activeDate = _this$props6.activeDate,\n            addDropdownOpen = _this$props6.addDropdownOpen,\n            deleteDropdownOpen = _this$props6.deleteDropdownOpen,\n            onSetActiveDate = _this$props6.onSetActiveDate,\n            onToggleAddDropdown = _this$props6.onToggleAddDropdown,\n            onToggleDeleteDropdown = _this$props6.onToggleDeleteDropdown,\n            activeColumn = _this$props6.activeColumn;\n        var date = rowDate.date,\n            dayDate = rowDate.dayDate,\n            calDate = rowDate.calDate,\n            activeDateKey = rowDate.activeDateKey,\n            inMonth = rowDate.inMonth,\n            _rowDate$sessions = rowDate.sessions,\n            sessions = _rowDate$sessions === void 0 ? [] : _rowDate$sessions,\n            _rowDate$lessons = rowDate.lessons,\n            lessons = _rowDate$lessons === void 0 ? [] : _rowDate$lessons,\n            _rowDate$worksheets = rowDate.worksheets,\n            worksheets = _rowDate$worksheets === void 0 ? [] : _rowDate$worksheets,\n            _rowDate$testSections = rowDate.testSections,\n            testSections = _rowDate$testSections === void 0 ? [] : _rowDate$testSections,\n            _rowDate$simulatedSat = rowDate.simulatedSat,\n            simulatedSat = _rowDate$simulatedSat === void 0 ? [] : _rowDate$simulatedSat;\n        var hasEvents = sessions.length > 0 || lessons.length > 0 || worksheets.length > 0 || testSections.length > 0 || simulatedSat.length > 0;\n        var inActiveColumn = activeDateKey && activeDateKey[13] === activeColumn;\n        var isActiveDate = activeDate === activeDateKey;\n        var hasEventFilters = eventFilters.length > 0;\n        var shouldMapSessions = !hasEventFilters && sessions.length || hasEventFilters && eventFilters.indexOf('sessions') !== -1;\n        var shouldMapLessons = !hasEventFilters && lessons.length || lessons.length && hasEventFilters && eventFilters.indexOf('lessons') !== -1;\n        var shouldMapWorksheets = !hasEventFilters && worksheets.length || worksheets.length && hasEventFilters && eventFilters.indexOf('worksheets') !== -1;\n        var shouldMapTestSections = !hasEventFilters && testSections.length || testSections.length && hasEventFilters && eventFilters.indexOf('testSections') !== -1;\n        var shouldMapSimulatedSats = !hasEventFilters && simulatedSat.length || simulatedSat.length && hasEventFilters && eventFilters.indexOf('simulatedSats') !== -1;\n\n        if (!inMonth) {\n          return React.createElement(\"td\", {\n            className: \"cal-cell1 cal-cell cal-day-outmonth\",\n            key: dayDate\n          }, React.createElement(\"div\", {\n            className: getCalendarDayClassName(date, inMonth, activeDateKey)\n          }, React.createElement(\"span\", {\n            className: \"day-date\"\n          }, dayDate), React.createElement(\"span\", {\n            className: \"cal-date\"\n          }, calDate)));\n        }\n\n        return React.createElement(\"td\", {\n          key: activeDateKey,\n          className: getCalendarCellClassName(hasEvents, inActiveColumn),\n          onClick: function onClick() {\n            return onSetActiveDate(activeDateKey);\n          }\n        }, React.createElement(\"div\", {\n          className: getCalendarDayClassName(date, inMonth, activeDateKey)\n        }, React.createElement(\"span\", {\n          className: \"day-date\"\n        }, dayDate), React.createElement(\"span\", {\n          className: \"cal-date\"\n        }, calDate), React.createElement(\"ul\", {\n          className: \"day-collapsible collapsible\"\n        }, React.createElement(\"li\", {\n          className: isActiveDate ? 'collapsible-holder active' : 'collapsible-holder',\n          style: {\n            transform: 'none'\n          }\n        }, React.createElement(\"div\", {\n          className: \"collapsible-header\",\n          style: {\n            display: inActiveColumn && isActiveDate ? 'none' : 'block'\n          }\n        }, React.createElement(\"span\", {\n          className: \"fake-close\"\n        }, React.createElement(\"span\", {\n          className: \"icon-close-thin\"\n        })), hasEvents ? React.createElement(\"ul\", {\n          className: \"events-list events-list-short\"\n        }, shouldMapSessions ? React.createElement(\"li\", {\n          className: \"event-frame event-title\"\n        }, React.createElement(\"span\", {\n          className: \"event-title-box\"\n        }, \"Session \", sessions.length)) : null, shouldMapLessons ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-lesson-box\"\n        }, \" \", lessons.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Lesson\", lessons.length > 1 && 's'))) : null, shouldMapWorksheets ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-worksheet-box\"\n        }, worksheets.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Worksheet\", worksheets.length > 1 && 's'))) : null, shouldMapTestSections ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-test-box\"\n        }, testSections.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Test Section\", testSections.length > 1 && 's'))) : null, shouldMapSimulatedSats ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-sat-box\"\n        }, simulatedSat.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Simulated SAT\"))) : null) : null), React.createElement(\"div\", {\n          className: \"collapsible-body\",\n          style: {\n            opacity: inActiveColumn && isActiveDate ? '1' : '0',\n            visibility: inActiveColumn ? 'visible' : 'hidden'\n          }\n        }, hasEvents ? React.createElement(\"ul\", {\n          className: \"events-list\"\n        }, shouldMapSessions && sessions.map(function (session, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, React.createElement(\"span\", {\n            className: \"event-title-box\"\n          }, session.title));\n        }), _this.mapDateLessons(shouldMapLessons, lessons), _this.mapDateWorksheets(shouldMapWorksheets, worksheets), _this.mapTestSections(shouldMapTestSections, testSections), _this.mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)) : null, React.createElement(\"div\", {\n          className: \"day-footer\"\n        }, React.createElement(\"ul\", {\n          className: \"links-list\"\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown_day_240119_add\",\n          onClick: onToggleAddDropdown,\n          className: \"link-add dropdown-trigger waves-effect waves-teal\"\n        }, \"Add\"), React.createElement(\"ul\", {\n          id: \"dropdown_day_240119_add\",\n          className: \"dropdown-content\",\n          style: {\n            display: addDropdownOpen ? 'block' : 'none',\n            opacity: addDropdownOpen ? '100' : '0'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignSessionModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Session\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignLessonsModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Lesson\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignWorksheetsModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Worksheet\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignTestSectionModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Test Section\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignSimulatedSatModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Simulated SAT\")))), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown_day_240119_delete\",\n          onClick: onToggleDeleteDropdown,\n          className: \"link-delete dropdown-trigger waves-effect waves-teal\"\n        }, \"Delete\"), React.createElement(\"ul\", {\n          id: \"dropdown_day_240119_delete\",\n          className: \"dropdown-content\",\n          style: {\n            display: deleteDropdownOpen ? 'block' : 'none',\n            opacity: deleteDropdownOpen ? '100' : '0'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_section\",\n          className: \"modal-trigger\"\n        }, \"Session\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_lesson\",\n          className: \"modal-trigger\"\n        }, \"Lesson\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_worksheet\",\n          className: \"modal-trigger\"\n        }, \"Worksheet\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_test_section\",\n          className: \"modal-trigger\"\n        }, \"Test Section\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"disabled\"\n        }, \"Simulated SAT\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"disabled\"\n        }, \"Target Test\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"All\")))))))))));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CalendarRow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", {\n        className: \"cal-row-fluid\"\n      }, this.mapRowDates());\n    }\n  }]);\n\n  return CalendarRow;\n}(React.Component);\n\nexport default CalendarRow;","map":null,"metadata":{},"sourceType":"module"}