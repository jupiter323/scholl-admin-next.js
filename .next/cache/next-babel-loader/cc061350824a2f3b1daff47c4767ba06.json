{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var name = _this.state.name;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props2 = _this.props,\n          onSetFilteredLocationState = _this$props2.onSetFilteredLocationState,\n          onUnsetFilteredLocationState = _this$props2.onUnsetFilteredLocationState,\n          onSetSort = _this$props2.onSetSort;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _this.state = {\n      open: false,\n      name: '',\n      location: {},\n      sort: {},\n      activeFilters: []\n    };\n    return _this;\n  } // eslint-disable-next-line consistent-return\n\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // eslint-disable-next-line no-unused-vars\n      var _this$state = this.state,\n          name = _this$state.name,\n          location = _this$state.location,\n          sort = _this$state.sort,\n          open = _this$state.open,\n          activeFilters = _this$state.activeFilters;\n      return __jsx(\"div\", {\n        className: \"filter-form-holder\"\n      }, __jsx(\"ul\", {\n        className: \"collapsible expandable\"\n      }, __jsx(\"li\", null, __jsx(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, __jsx(\"div\", {\n        className: \"filter-form_checkbox-list-holder\"\n      }, __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"activated\",\n        checked: activeFilters.indexOf(\"activated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('activated');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"activated\"\n      }, \"Activated\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"unactivated\",\n        checked: activeFilters.indexOf(\"unactivated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unactivated');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"unactivated\"\n      }, \"Unactivated\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"expired\",\n        checked: activeFilters.indexOf(\"expired\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('expired');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"expired\"\n      }, \"Expired\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"current\",\n        checked: activeFilters.indexOf(\"current\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('current');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"current\"\n      }, \"Current\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"archived\",\n        checked: activeFilters.indexOf(\"archived\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('archived');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"archived\"\n      }, \"Archived\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"no-gain\",\n        checked: activeFilters.indexOf(\"no-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-gain');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"no-gain\"\n      }, \"No Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"some-gain\",\n        checked: activeFilters.indexOf(\"some-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('some-gain');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"some-gain\"\n      }, \"Some Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-100+\",\n        checked: activeFilters.indexOf(\"gain-100+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-100+');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain-100+\"\n      }, \"Gain of 100+\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-200+\",\n        checked: activeFilters.indexOf(\"gain-200+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-200+');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"gain-200+\"\n      }, \"Gain of 200+\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"hit-target-score\",\n        checked: activeFilters.indexOf(\"hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hit-target-score');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"hit-target-score\"\n      }, \"Hit Target Score\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"hasnt-hit-target-score\",\n        checked: activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hasnt-hit-target-score');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"hasnt-hit-target-score\"\n      }, \"Hasn\\u2019t Hit Target Score\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"no-tests\",\n        checked: activeFilters.indexOf(\"no-tests\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('tests');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"no-tests\"\n      }, \"No Tests\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"1-test\",\n        checked: activeFilters.indexOf(\"1-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('1-test');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"1-test\"\n      }, \"1 Test\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"2-test\",\n        checked: activeFilters.indexOf(\"2-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('2-test');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"2-test\"\n      }, \"2 Tests\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"3-test\",\n        checked: activeFilters.indexOf(\"3-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('3-test');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"3-test\"\n      }, \"3+ Tests\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"has-overdue-work\",\n        checked: activeFilters.indexOf(\"has-overdue-work\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('has-overdue-work');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"has-overdue-work\"\n      }, \"Has Overdue Work\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"unreviewed-flags\",\n        checked: activeFilters.indexOf(\"unreviewed-flags\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unreviewed-flags');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"unreviewed-flags\"\n      }, \"Unreviewed Flags\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions-this-week\",\n        checked: activeFilters.indexOf(\"sessions-this-week\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('sessions-this-week');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"sessions-this-week\"\n      }, \"Sessions This Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"session-today\",\n        checked: activeFilters.indexOf(\"session-today\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('session-today');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"session-today\"\n      }, \"Session Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"no-sessions\",\n        checked: activeFilters.indexOf(\"no-sessions\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-sessions');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"no-sessions\"\n      }, \"No Sessions Scheduled\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"entered-actual-score\",\n        checked: activeFilters.indexOf(\"entered-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('entered-actual-score');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"entered-actual-score\"\n      }, \"Entered Actual Score\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"no-actual-score\",\n        checked: activeFilters.indexOf(\"no-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-actual-score');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"no-actual-score\"\n      }, \"No Actual Score\"))))), __jsx(\"div\", {\n        className: \"filter-inputs-holder\"\n      }, __jsx(\"div\", {\n        className: \"col s12 18\",\n        style: {\n          marginTop: '-30px',\n          marginBottom: '-10px'\n        }\n      }, __jsx(\"div\", {\n        className: \"row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"search-field input-field\",\n        style: {\n          marginTop: '50px'\n        }\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control validate\",\n        name: \"name\",\n        value: name,\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'name');\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.onFilterByName\n      }, __jsx(\"i\", {\n        className: \"icon-search\"\n      })), __jsx(\"label\", {\n        className: name.length ? 'label active' : 'label',\n        htmlFor: \"name_search\"\n      }, \"Search\"))), __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(location, locationOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'location');\n        },\n        options: locationOptions,\n        label: \"Location\",\n        stateKey: \"location\",\n        dropdownKey: \"location\"\n      }))), __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(sort, sortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'sort');\n        },\n        options: sortOptions,\n        label: \"Sort\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      })))), __jsx(\"div\", {\n        className: \"col s12 14\"\n      }, __jsx(\"div\", {\n        className: \"option-filters\"\n      }, __jsx(\"div\", {\n        className: \"option-item clear\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), __jsx(\"div\", {\n        className: \"option-item\"\n      }, __jsx(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, __jsx(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters'))))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}