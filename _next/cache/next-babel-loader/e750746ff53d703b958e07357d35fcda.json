{"ast":null,"code":"var _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FullView/components/LessonCard/components/Checkbox.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar Checkbox = function Checkbox(_ref) {\n  var label = _ref.label,\n      checkBoxId = _ref.checkBoxId,\n      checkBoxtyle = _ref.checkBoxtyle,\n      checked = _ref.checked,\n      onChecked = _ref.onChecked,\n      onUnChecked = _ref.onUnChecked,\n      cardId = _ref.cardId,\n      type = _ref.type;\n\n  var handleCheck = function handleCheck(cardId) {\n    if (!checked) {\n      onChecked(cardId);\n    } else {\n      onUnChecked(cardId);\n    }\n  };\n\n  switch (type) {\n    case \"cardCheckBox\":\n      return __jsx(\"label\", {\n        htmlFor: checkBoxId,\n        style: {\n          checkBoxtyle: checkBoxtyle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: checkBoxId,\n        checked: checked,\n        onChange: function onChange() {\n          return handleCheck(cardId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, label));\n\n    case \"pageCheckBox\":\n      return __jsx(\"label\", {\n        htmlFor: checkBoxId,\n        style: {\n          checkBoxtyle: checkBoxtyle\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: checkBoxId,\n        checked: checked,\n        onChange: function onChange(e) {\n          return onChecked(!e.target.checked);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, label));\n\n    default:\n      return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"invaild checkbox\");\n  }\n};\n\nCheckbox.propTypes = {\n  label: PropTypes.string,\n  checkBoxId: PropTypes.string,\n  checkBoxtyle: PropTypes.object,\n  type: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChecked: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default Checkbox;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FullView/components/LessonCard/components/Checkbox.js"],"names":["React","PropTypes","Checkbox","label","checkBoxId","checkBoxtyle","checked","onChecked","onUnChecked","cardId","type","handleCheck","e","target","propTypes","string","object","isRequired","bool","func","index","number"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OASX;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,UAOI,QAPJA,UAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,IACI,QADJA,IACI;;AACJ,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAF,MAAM,EAAI;AAC5B,QAAI,CAACH,OAAL,EAAc;AACZC,MAAAA,SAAS,CAACE,MAAD,CAAT;AACD,KAFD,MAEO;AACLD,MAAAA,WAAW,CAACC,MAAD,CAAX;AACD;AACF,GAND;;AAOA,UAAQC,IAAR;AACE,SAAK,cAAL;AACE,aACE;AAAO,QAAA,OAAO,EAAEN,UAAhB;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAZA;AAAF,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAED,UAFN;AAGE,QAAA,OAAO,EAAEE,OAHX;AAIE,QAAA,QAAQ,EAAE;AAAA,iBAAMK,WAAW,CAACF,MAAD,CAAjB;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAON,KAAP,CAPF,CADF;;AAWF,SAAK,cAAL;AACE,aACE;AAAO,QAAA,OAAO,EAAEC,UAAhB;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAZA;AAAF,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAED,UAFN;AAGE,QAAA,OAAO,EAAEE,OAHX;AAIE,QAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,iBAAIL,SAAS,CAAC,CAACK,CAAC,CAACC,MAAF,CAASP,OAAX,CAAb;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,KAAP,CAPF,CADF;;AAWF;AACE,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AA1BJ;AA4BD,CA7CD;;AA+CAD,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,KAAK,EAAEF,SAAS,CAACc,MADE;AAEnBX,EAAAA,UAAU,EAAEH,SAAS,CAACc,MAFH;AAGnBV,EAAAA,YAAY,EAAEJ,SAAS,CAACe,MAHL;AAInBN,EAAAA,IAAI,EAAET,SAAS,CAACc,MAAV,CAAiBE,UAJJ;AAKnBX,EAAAA,OAAO,EAAEL,SAAS,CAACiB,IAAV,CAAeD,UALL;AAMnBV,EAAAA,SAAS,EAAEN,SAAS,CAACkB,IAAV,CAAeF,UANP;AAOnBG,EAAAA,KAAK,EAAEnB,SAAS,CAACoB,MAAV,CAAiBJ;AAPL,CAArB;AAUA,eAAef,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({\n  label,\n  checkBoxId,\n  checkBoxtyle,\n  checked,\n  onChecked,\n  onUnChecked,\n  cardId,\n  type\n}) => {\n  const handleCheck = cardId => {\n    if (!checked) {\n      onChecked(cardId);\n    } else {\n      onUnChecked(cardId);\n    }\n  };\n  switch (type) {\n    case \"cardCheckBox\":\n      return (\n        <label htmlFor={checkBoxId} style={{ checkBoxtyle }}>\n          <input\n            type='checkbox'\n            id={checkBoxId}\n            checked={checked}\n            onChange={() => handleCheck(cardId)}\n          />\n          <span>{label}</span>\n        </label>\n      );\n    case \"pageCheckBox\":\n      return (\n        <label htmlFor={checkBoxId} style={{ checkBoxtyle }}>\n          <input\n            type='checkbox'\n            id={checkBoxId}\n            checked={checked}\n            onChange={e => onChecked(!e.target.checked)}\n          />\n          <span>{label}</span>\n        </label>\n      );\n    default:\n      return <p>invaild checkbox</p>;\n  }\n};\n\nCheckbox.propTypes = {\n  label: PropTypes.string,\n  checkBoxId: PropTypes.string,\n  checkBoxtyle: PropTypes.object,\n  type: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChecked: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}