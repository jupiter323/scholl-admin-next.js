{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/CompletedTestCard/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { setActiveTestScores } from '../../../index/actions';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../../../index/selectors';\nimport { fetchStudentTestScoreApi } from '../../../index/api';\n\nvar CompletedTestCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CompletedTestCard, _React$Component);\n\n  function CompletedTestCard(props) {\n    var _this;\n\n    _classCallCheck(this, CompletedTestCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompletedTestCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function _callee() {\n      var test, formattedScores;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              test = _this.props.test;\n              _this._isMounted = true;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.getScoresByStudentTest(_this.props.test));\n\n            case 4:\n              formattedScores = _context.sent;\n\n              if (formattedScores) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (formattedScores && _this._isMounted) {\n                _this.setState({\n                  scores: _objectSpread({}, formattedScores, {\n                    student_test_id: test.student_test_id\n                  })\n                });\n\n                _this.setScores(formattedScores.subjects);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditTest\", function _callee2() {\n      var _this$props, onEditTest, onSetScores, scores;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, onEditTest = _this$props.onEditTest, onSetScores = _this$props.onSetScores;\n              scores = _this.state.scores;\n\n              if (scores) {\n                onSetScores(scores);\n                onEditTest();\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setScores\", function (scores) {\n      _Object$values(scores).map(function (score) {\n        switch (score.name) {\n          case 'Reading':\n            _this.setState({\n              ReadingScore: score\n            });\n\n            break;\n\n          case 'Writing and Language':\n            _this.setState({\n              ReadingAndWritingScore: score\n            });\n\n            break;\n\n          case 'Math':\n            _this.setState({\n              MathScore: score\n            });\n\n            break;\n\n          case 'Writing':\n            _this.setState({\n              WritingScore: score\n            });\n\n            break;\n\n          default:\n            _this.setState({\n              NA: 0\n            });\n\n            break;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getScoresByStudentTest\", function _callee3(test) {\n      var student_test_id, id, formattedTestScores;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              student_test_id = test.student_test_id;\n              id = _this.props.activeStudent.id;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(fetchStudentTestScoreApi(id, student_test_id));\n\n            case 4:\n              formattedTestScores = _context3.sent;\n              return _context3.abrupt(\"return\", formattedTestScores.data);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props2 = _this.props,\n          onSetDropdown = _this$props2.onSetDropdown,\n          onCloseDropdown = _this$props2.onCloseDropdown,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          index = _this$props2.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _this.state = {\n      scores: null,\n      ReadingScore: null,\n      WritingScore: null,\n      ReadingAndWritingScore: null,\n      MathScore: null,\n      NA: 0\n    };\n    return _this;\n  }\n\n  _createClass(CompletedTestCard, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          dropdownIndex = _this$props3.dropdownIndex,\n          index = _this$props3.index,\n          dropdownIsOpen = _this$props3.dropdownIsOpen,\n          onDownloadReport = _this$props3.onDownloadReport,\n          _this$props3$test = _this$props3.test,\n          test_name = _this$props3$test.test_name,\n          test_description = _this$props3$test.test_description,\n          due_date = _this$props3$test.due_date,\n          completion_date = _this$props3$test.completion_date,\n          student_test_id = _this$props3$test.student_test_id,\n          student_id = _this$props3$test.student_id,\n          problem_flag_count = _this$props3$test.problem_flag_count,\n          onEnterAnswers = _this$props3.onEnterAnswers,\n          onDeleteTest = _this$props3.onDeleteTest,\n          onTestFlagReviewed = _this$props3.onTestFlagReviewed,\n          handleTestSettingModalOpen = _this$props3.handleTestSettingModalOpen;\n      var _this$state = this.state,\n          ReadingScore = _this$state.ReadingScore,\n          WritingScore = _this$state.WritingScore,\n          ReadingAndWritingScore = _this$state.ReadingAndWritingScore,\n          MathScore = _this$state.MathScore;\n      var formattedDueDate = moment(due_date).format('MM/DD/YY');\n      var formattedCompletedDate = moment(completion_date.date).format('MM/DD/YY');\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-full-width card-scored card\",\n        style: {\n          margin: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \" card-panel-row row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"to-do-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: '0px !important',\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        className: \"list-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, test_name)), __jsx(\"div\", {\n        className: \"col s12 m6 right-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row icons-row\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, problem_flag_count > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge red darken-2 white-text\",\n        style: {\n          minWidth: '20px',\n          minHeight: '20px',\n          borderRadius: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"dropdown-block col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger btn\",\n        onClick: this.handleDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown01\",\n        style: {\n          display: 'block',\n          minWidth: '160px',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)',\n          width: '210px'\n        },\n        className: \"dropdown-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: handleTestSettingModalOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Edit Test Settings\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return onEnterAnswers(student_test_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Edit/Enter Answers\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return onDownloadReport(_this2.props.test);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Download score report\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Excuse/Unexcuse lateness\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: problem_flag_count === 0 ? \"disabled\" : \"\",\n        href: \"#\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          onTestFlagReviewed(student_test_id, student_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Mark flags reviewed\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Reset\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          onDeleteTest(student_test_id, student_id, 'completedStudentTests');\n        },\n        className: \"red-text text-darken-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Unassign\"))) : null)))), __jsx(\"div\", {\n        className: \"row\",\n        onClick: function onClick(e) {\n          return _this2.onEditTest(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"info-list info-list-gray  assigned\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"list-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"ico-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"status-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Complete \", formattedCompletedDate))), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"list-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Due \", formattedDueDate)))), __jsx(\"div\", {\n        className: \"card-meta-block\",\n        style: {\n          padding: '0px',\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, __jsx(\"dl\", {\n        className: \"dl-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Version:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, test_description))))))))), __jsx(\"ul\", {\n        className: \"points-list-custom\",\n        onClick: function onClick(e) {\n          return _this2.onEditTest(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, MathScore && ReadingAndWritingScore && ReadingScore ? __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          backgroundColor: '#00BBFF',\n          borderColor: '#00BBFF',\n          width: '120px',\n          height: '120px',\n          fontSize: '55px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        style: {\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"SAT Score\")), __jsx(\"h2\", {\n        style: {\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, MathScore.current_score + ReadingScore.current_score + ReadingAndWritingScore.current_score)))) : __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          width: '120px',\n          height: '120px',\n          fontSize: '55px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"SAT Score\")), __jsx(\"h2\", {\n        style: {\n          marginBottom: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"n/a\")))), MathScore ? __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          backgroundColor: '#4785f4',\n          borderColor: '#4785f4'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        style: {\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Math\")), __jsx(\"h2\", {\n        style: {\n          marginBottom: MathScore.previous_score ? '5px' : '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, MathScore.current_score, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), MathScore.previous_score === null ? '' : \"\".concat(MathScore.delta))))) : __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Math\")), __jsx(\"h2\", {\n        style: {\n          marginBottom: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"n/a\")))), ReadingAndWritingScore ? __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          backgroundColor: '#55b24b',\n          borderColor: '#55b24b'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        style: {\n          fontSize: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Writing\"), __jsx(\"h2\", {\n        style: {\n          marginBottom: ReadingAndWritingScore.previous_score ? '' : '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, ReadingAndWritingScore.current_score, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), ReadingAndWritingScore.previous_score === null ? '' : \"\".concat(ReadingAndWritingScore.delta))))) : __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        style: {\n          fontSize: '16px',\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Writing\"), __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, \"n/a\")))), ReadingScore ? __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          backgroundColor: '#35a6af',\n          borderColor: '#35a6af',\n          width: '80px',\n          height: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        style: {\n          fontSize: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Reading\", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }), __jsx(\"h3\", {\n        style: {\n          marginBottom: ReadingScore.previous_score ? '' : '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, ReadingScore.current_score, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), ReadingScore.previous_score === null ? '' : \"\".concat(ReadingScore.delta))))) : __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          width: '80px',\n          height: '80px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-text\",\n        style: {\n          fontSize: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Reading\", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), __jsx(\"h3\", {\n        style: {\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"n/a\"))))))));\n    }\n  }]);\n\n  return CompletedTestCard;\n}(React.Component);\n\nCompletedTestCard.propTypes = {\n  index: PropTypes.string,\n  dropdownIndex: PropTypes.string,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\nvar mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent()\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetScores: function onSetScores(scores) {\n      return dispatch(setActiveTestScores(scores));\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(CompletedTestCard);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/CompletedTestCard/index.js"],"names":["React","connect","compose","createStructuredSelector","PropTypes","moment","setActiveTestScores","makeSelectActiveTestScores","makeSelectActiveStudent","fetchStudentTestScoreApi","CompletedTestCard","props","test","_isMounted","getScoresByStudentTest","formattedScores","setState","scores","student_test_id","setScores","subjects","onEditTest","onSetScores","state","map","score","name","ReadingScore","ReadingAndWritingScore","MathScore","WritingScore","NA","id","activeStudent","formattedTestScores","data","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","dropdownIndex","onDownloadReport","test_name","test_description","due_date","completion_date","student_id","problem_flag_count","onEnterAnswers","onDeleteTest","onTestFlagReviewed","handleTestSettingModalOpen","formattedDueDate","format","formattedCompletedDate","date","margin","marginBottom","marginTop","minWidth","minHeight","borderRadius","handleDropdownClick","display","transformOrigin","opacity","transform","width","e","padding","backgroundColor","borderColor","height","fontSize","current_score","previous_score","delta","Component","propTypes","string","func","isRequired","bool","object","mapStateToProps","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { setActiveTestScores } from '../../../index/actions';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../../../index/selectors';\n\nimport { fetchStudentTestScoreApi } from '../../../index/api';\nclass CompletedTestCard extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      scores: null,\n      ReadingScore: null,\n      WritingScore: null,\n      ReadingAndWritingScore: null,\n      MathScore: null,\n      NA: 0,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { test } = this.props;\n    this._isMounted = true;\n    const formattedScores = await this.getScoresByStudentTest(this.props.test);\n    if (!formattedScores) return;\n    if (formattedScores && this._isMounted) {\n      this.setState({\n        scores: { ...formattedScores, student_test_id: test.student_test_id },\n      });\n      this.setScores(formattedScores.subjects);\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onEditTest = async () => {\n    const { onEditTest, onSetScores } = this.props;\n    const { scores } = this.state;\n    if (scores) {\n      onSetScores(scores);\n      onEditTest();\n    }\n  };\n\n  setScores = scores => {\n    Object.values(scores).map(score => {\n      switch (score.name) {\n        case 'Reading':\n          this.setState({ ReadingScore: score });\n          break;\n        case 'Writing and Language':\n          this.setState({ ReadingAndWritingScore: score });\n          break;\n        case 'Math':\n          this.setState({ MathScore: score });\n          break;\n        case 'Writing':\n          this.setState({ WritingScore: score });\n          break;\n        default:\n          this.setState({ NA: 0 });\n          break;\n      }\n    });\n  };\n\n  getScoresByStudentTest = async test => {\n    const { student_test_id } = test;\n    const { activeStudent: { id } } = this.props;\n    const formattedTestScores = await fetchStudentTestScoreApi(id, student_test_id);\n    return formattedTestScores.data;\n  };\n\n  handleDropdownClick = event => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  };\n\n  render() {\n    const {\n      dropdownIndex,\n      index,\n      dropdownIsOpen,\n      onDownloadReport,\n      test: {\n        test_name,\n        test_description,\n        due_date,\n        completion_date,\n        student_test_id,\n        student_id,\n        problem_flag_count,\n      },\n      onEnterAnswers,\n      onDeleteTest,\n      onTestFlagReviewed,\n      handleTestSettingModalOpen,\n    } = this.props;\n    const { ReadingScore, WritingScore, ReadingAndWritingScore, MathScore } = this.state;\n    const formattedDueDate = moment(due_date).format('MM/DD/YY');\n    const formattedCompletedDate = moment(completion_date.date).format('MM/DD/YY');\n    return (\n      <React.Fragment>\n        <div className=\"card-full-width card-scored card\" style={{ margin: '10px' }}>\n          <div className=\"card-content\">\n            <div className=\" card-panel-row row mb-0\">\n              <div className=\"col s12\">\n                <ul className=\"to-do-list\">\n                  <li>\n                    <div\n                      className=\"row\"\n                      style={{ marginBottom: '0px !important', marginTop: '20px' }}\n                    >\n                      <div className=\"col s12 m6\">\n                        <strong className=\"list-title\">\n                          {test_name}\n                        </strong>\n                      </div>\n                      <div className=\"col s12 m6 right-align\">\n                        <div className=\"row icons-row\" style={{ marginBottom: '10px' }}>\n                          {problem_flag_count > 0 &&\n                            <span\n                              className=\"badge-rounded-xs badge red darken-2 white-text\"\n                              style={{\n                                minWidth: '20px',\n                                minHeight: '20px',\n                                borderRadius: '50%',\n                              }}\n                            >\n                              <i className=\"icon-flag\" />\n                            </span>}\n                          <div className=\"dropdown-block col\">\n                            <a\n                              href=\"#\"\n                              className=\"dropdown-trigger btn\"\n                              onClick={this.handleDropdownClick}\n                            >\n                              <i className=\"material-icons dots-icon\">more_vert</i>\n                            </a>\n                            <If condition={dropdownIsOpen && dropdownIndex === index}>\n                              <ul\n                                id=\"dropdown01\"\n                                style={{\n                                  display: 'block',\n                                  minWidth: '160px',\n                                  transformOrigin: '0px 0px 0px',\n                                  opacity: '1',\n                                  transform: 'scaleX(1) scaleY(1)',\n                                  width: '210px',\n                                }}\n                                className=\"dropdown-content\"\n                              >\n                                <li>\n                                  <a href=\"#\" onClick={handleTestSettingModalOpen}>\n                                    Edit Test Settings\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" onClick={() => onEnterAnswers(student_test_id)}>\n                                    Edit/Enter Answers\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" onClick={() => onDownloadReport(this.props.test)}>\n                                    Download score report\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Excuse/Unexcuse lateness\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    className={problem_flag_count === 0 ? \"disabled\" : \"\"}\n                                    href=\"#\"\n                                    onClick={e => {\n                                      e.preventDefault();\n                                      onTestFlagReviewed(student_test_id, student_id);\n                                    }}\n                                  >\n                                    Mark flags reviewed\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Reset\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    onClick={e => {\n                                      e.preventDefault();\n                                      onDeleteTest(\n                                        student_test_id,\n                                        student_id,\n                                        'completedStudentTests',\n                                      );\n                                    }}\n                                    className=\"red-text text-darken-3\"\n                                  >\n                                    Unassign\n                                  </a>\n                                </li>\n                              </ul>\n                            </If>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" onClick={e => this.onEditTest(e)}>\n                      <div className=\"col s12 m8\">\n                        <ul className=\"info-list info-list-gray  assigned\">\n                          <li>\n                            <span className=\"list-status\">\n                              <span className=\"ico-mark\" />\n                              <span className=\"status-text\">\n                                Complete {formattedCompletedDate}\n                              </span>\n                            </span>\n                          </li>\n                          <li>\n                            <span className=\"list-date\">\n                              <i className=\"icon-calendar\" />\n                              <span className=\"date\">\n                                Due {formattedDueDate}\n                              </span>\n                            </span>\n                          </li>\n                        </ul>\n                        <div\n                          className=\"card-meta-block\"\n                          style={{ padding: '0px', marginTop: '10px' }}\n                        >\n                          <dl className=\"dl-horizontal\">\n                            <dt>Version:</dt>\n                            <dd>\n                              {test_description}\n                            </dd>\n                          </dl>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <ul className=\"points-list-custom\" onClick={e => this.onEditTest(e)}>\n              {MathScore && ReadingAndWritingScore && ReadingScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#00BBFF',\n                      borderColor: '#00BBFF',\n                      width: '120px',\n                      height: '120px',\n                      fontSize: '55px',\n                    }}\n                  >\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '5px' }}>SAT Score</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: '20px' }}>\n                        {MathScore.current_score +\n                            ReadingScore.current_score +\n                            ReadingAndWritingScore.current_score}\n                      </h2>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      width: '120px',\n                      height: '120px',\n                      fontSize: '55px',\n                    }}\n                  >\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '10px' }}>SAT Score</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: '15px' }}>n/a</h2>\n                    </span>\n                  </span>\n                </li>}\n              {MathScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#4785f4',\n                      borderColor: '#4785f4',\n                    }}\n                  >\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '5px' }}>Math</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: MathScore.previous_score ? '5px' : '20px' }}>\n                        {MathScore.current_score}\n                        <br />\n                        {MathScore.previous_score === null ? '' : `${MathScore.delta}`}\n                      </h2>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span className=\"badge-circle\">\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '10px' }}>Math</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: '15px' }}>n/a</h2>\n                    </span>\n                  </span>\n                </li>}\n              {ReadingAndWritingScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#55b24b',\n                      borderColor: '#55b24b',\n                    }}\n                  >\n                    <span className=\"badge-text\" style={{ fontSize: '16px' }}>\n                      <strong>\n                          Writing\n                        {/* <br />\n                                &amp; Language */}\n                      </strong>\n                      <h2\n                        style={{\n                          marginBottom: ReadingAndWritingScore.previous_score ? '' : '15px',\n                        }}\n                      >\n                        {ReadingAndWritingScore.current_score}\n                        <br />\n                        {ReadingAndWritingScore.previous_score === null\n                          ? ''\n                          : `${ReadingAndWritingScore.delta}`}\n                      </h2>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span className=\"badge-circle\">\n                    <span className=\"badge-text\" style={{ fontSize: '16px', marginBottom: '10px' }}>\n                      <strong>\n                          Writing\n                        {/* <br />\n                                &amp; Language */}\n                      </strong>\n                      <h2>n/a</h2>\n                    </span>\n                  </span>\n                </li>}\n\n              {ReadingScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#35a6af',\n                      borderColor: '#35a6af',\n                      width: '80px',\n                      height: '80px',\n                    }}\n                  >\n                    <span className=\"badge-text\" style={{ fontSize: '16px' }}>\n                        Reading\n                      <br />\n                      <h3 style={{ marginBottom: ReadingScore.previous_score ? '' : '20px' }}>\n                        {ReadingScore.current_score}\n                        <br />\n                        {ReadingScore.previous_score === null ? '' : `${ReadingScore.delta}`}\n                      </h3>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      width: '80px',\n                      height: '80px',\n                    }}\n                  >\n                    <span className=\"badge-text\" style={{ fontSize: '16px' }}>\n                        Reading\n                      <br />\n                      <h3 style={{ marginTop: '10px' }}>n/a</h3>\n                    </span>\n                  </span>\n                </li>}\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nCompletedTestCard.propTypes = {\n  index: PropTypes.string,\n  dropdownIndex: PropTypes.string,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent(),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetScores: scores => dispatch(setActiveTestScores(scores)),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(CompletedTestCard);\n"]},"metadata":{},"sourceType":"module"}