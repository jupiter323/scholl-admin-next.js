{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nconst LocationContactInfo = ({\n  state: {\n    locationName,\n    locationNickname,\n    locationEmail,\n    locationPhoneNumber,\n    website,\n    locationStreetAddress,\n    locationCity,\n    locationState,\n    locationZip\n  },\n  handleDetailsChange\n}) => __jsx(\"div\", {\n  className: \"col s12 l6\"\n}, __jsx(\"div\", {\n  className: \"card-block\"\n}, __jsx(\"h3\", null, \"Location Contact Info\"), __jsx(\"div\", {\n  className: \"card-main card\"\n}, __jsx(\"div\", {\n  className: \"card-content\"\n}, __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"location-name\",\n  name: \"locationName\",\n  value: locationName,\n  onChange: event => handleDetailsChange(event, 'locationName', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationName.length ? 'label active' : 'label',\n  htmlFor: \"location-name\"\n}, \"Location Name*\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"location-nickname\",\n  name: \"locationNickname\",\n  value: locationNickname,\n  onChange: event => handleDetailsChange(event, 'locationNickname', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationNickname.length ? 'label active' : 'label',\n  htmlFor: \"location-nickname\"\n}, \"Location Nickname*\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"location-email\",\n  name: \"locationEmail\",\n  value: locationEmail,\n  onChange: event => handleDetailsChange(event, 'locationEmail', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationEmail.length ? 'label active' : 'label',\n  htmlFor: \"location-email\"\n}, \"Location Email*\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"tel\",\n  id: \"location-phone-number\",\n  name: \"locationPhoneNumber\",\n  value: locationPhoneNumber,\n  onChange: event => handleDetailsChange(event, 'locationPhoneNumber', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationPhoneNumber.length ? 'label active' : 'label',\n  htmlFor: \"location-phone-number\"\n}, \"Location Phone Number (optional)\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"url\",\n  id: \"website\",\n  name: \"website\",\n  value: website,\n  onChange: event => handleDetailsChange(event, 'website', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: website.length ? 'label active' : 'label',\n  htmlFor: \"website\"\n}, \"Website (optional)\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"location-street-address\",\n  name: \"locationStreetAddress\",\n  value: locationStreetAddress,\n  onChange: event => handleDetailsChange(event, 'locationStreetAddress', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationStreetAddress.length ? 'label active' : 'label',\n  htmlFor: \"location-street-address\"\n}, \"Street Address (optional)\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"location-city\",\n  name: \"locationCity\",\n  value: locationCity,\n  onChange: event => handleDetailsChange(event, 'locationCity', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationCity.length ? 'label active' : 'label',\n  htmlFor: \"city\"\n}, \"City (optional)\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"col s12 m6 l5\"\n}, __jsx(\"div\", {\n  className: \"input-field\"\n}, __jsx(Dropdown, {\n  value: getValueFromState(locationState, stateOptions),\n  onChange: event => handleDetailsChange(event, 'locationState', 'locationContactInfo'),\n  options: stateOptions,\n  label: \"State (optional)\",\n  stateKey: \"locationState\",\n  dropdownKey: \"locationState\"\n}))), __jsx(\"div\", {\n  className: \"col s12 m6 l7\"\n}, __jsx(\"div\", {\n  className: \"input-field\"\n}, __jsx(\"input\", {\n  type: \"tel\",\n  id: \"location-zip\",\n  name: \"locationZip\",\n  value: locationZip,\n  onChange: event => handleDetailsChange(event, 'locationZip', 'locationContactInfo')\n}), __jsx(\"label\", {\n  className: locationZip.length ? 'label active' : 'label',\n  htmlFor: \"location-zip\"\n}, \"Zip (optional)\"))))))));\n\nLocationContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default LocationContactInfo;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Location/components/SharedModalComponents/LocationContactInfo/index.js"],"names":["React","PropTypes","Dropdown","getValueFromState","stateOptions","LocationContactInfo","state","locationName","locationNickname","locationEmail","locationPhoneNumber","website","locationStreetAddress","locationCity","locationState","locationZip","handleDetailsChange","event","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nconst LocationContactInfo = ({ state: { locationName, locationNickname, locationEmail, locationPhoneNumber, website, locationStreetAddress, locationCity, locationState, locationZip }, handleDetailsChange }) => (\n  <div className=\"col s12 l6\">\n    <div className=\"card-block\">\n      <h3>Location Contact Info</h3>\n      <div className=\"card-main card\">\n        <div className=\"card-content\">\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-name\"\n                name=\"locationName\"\n                value={locationName}\n                onChange={(event) => handleDetailsChange(event, 'locationName', 'locationContactInfo')}\n              />\n              <label className={locationName.length ? 'label active' : 'label'} htmlFor=\"location-name\">Location Name*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-nickname\"\n                name=\"locationNickname\"\n                value={locationNickname}\n                onChange={(event) => handleDetailsChange(event, 'locationNickname', 'locationContactInfo')}\n              />\n              <label className={locationNickname.length ? 'label active' : 'label'} htmlFor=\"location-nickname\">Location Nickname*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-email\"\n                name=\"locationEmail\"\n                value={locationEmail}\n                onChange={(event) => handleDetailsChange(event, 'locationEmail', 'locationContactInfo')}\n              />\n              <label className={locationEmail.length ? 'label active' : 'label'} htmlFor=\"location-email\">Location Email*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"tel\"\n                id=\"location-phone-number\"\n                name=\"locationPhoneNumber\"\n                value={locationPhoneNumber}\n                onChange={(event) => handleDetailsChange(event, 'locationPhoneNumber', 'locationContactInfo')}\n              />\n              <label className={locationPhoneNumber.length ? 'label active' : 'label'} htmlFor=\"location-phone-number\">Location Phone Number (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"url\"\n                id=\"website\"\n                name=\"website\"\n                value={website}\n                onChange={(event) => handleDetailsChange(event, 'website', 'locationContactInfo')}\n              />\n              <label className={website.length ? 'label active' : 'label'} htmlFor=\"website\">Website (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-street-address\"\n                name=\"locationStreetAddress\"\n                value={locationStreetAddress}\n                onChange={(event) => handleDetailsChange(event, 'locationStreetAddress', 'locationContactInfo')}\n              />\n              <label className={locationStreetAddress.length ? 'label active' : 'label'} htmlFor=\"location-street-address\">Street Address (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-city\"\n                name=\"locationCity\"\n                value={locationCity}\n                onChange={(event) => handleDetailsChange(event, 'locationCity', 'locationContactInfo')}\n              />\n              <label className={locationCity.length ? 'label active' : 'label'} htmlFor=\"city\">City (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"col s12 m6 l5\">\n              <div className=\"input-field\">\n                <Dropdown\n                  value={getValueFromState(locationState, stateOptions)}\n                  onChange={(event) => handleDetailsChange(event, 'locationState', 'locationContactInfo')}\n                  options={stateOptions}\n                  label=\"State (optional)\"\n                  stateKey=\"locationState\"\n                  dropdownKey=\"locationState\"\n                />\n              </div>\n            </div>\n            <div className=\"col s12 m6 l7\">\n              <div className=\"input-field\">\n                <input\n                  type=\"tel\"\n                  id=\"location-zip\"\n                  name=\"locationZip\"\n                  value={locationZip}\n                  onChange={(event) => handleDetailsChange(event, 'locationZip', 'locationContactInfo')}\n                />\n                <label className={locationZip.length ? 'label active' : 'label'} htmlFor=\"location-zip\">Zip (optional)</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocationContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationContactInfo;\n"]},"metadata":{},"sourceType":"module"}