{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport InstructorDetailsModal from '../InstructorDetailsModal';\nimport Modal from '../../../../Modal';\n\nvar _data = function data(value, total) {\n  return {\n    datasets: [{\n      data: [value, total - value],\n      backgroundColor: ['#62b771', '#eaeaea']\n    }]\n  };\n};\n\nvar InstructorCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorCard, _React$Component);\n\n  function InstructorCard(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorDetailsModal\", function () {\n      _this.props.onCloseDropdown();\n\n      _this.setState({\n        instructorDetailsModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorDetailsModal\", function () {\n      return _this.setState({\n        instructorDetailsModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneInstructor\", function () {\n      return _this.props.onCloneInstructor(_this.props.instructor);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDeleteModal\", function () {\n      return _this.setState({\n        deleteModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDeleteModal\", function () {\n      return _this.setState({\n        deleteModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onConfirmDeleteInstructor\", function () {\n      var _this$props = _this.props,\n          onDeleteInstructor = _this$props.onDeleteInstructor,\n          instructor = _this$props.instructor,\n          onCloseDropdown = _this$props.onCloseDropdown;\n      onDeleteInstructor(instructor);\n      onCloseDropdown();\n\n      _this.onCloseDeleteModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props2 = _this.props,\n          onSetDropdown = _this$props2.onSetDropdown,\n          onCloseDropdown = _this$props2.onCloseDropdown,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          index = _this$props2.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _this.state = {\n      instructorDetailsModalOpen: false,\n      deleteModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(InstructorCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          deleteModalOpen = _this$state.deleteModalOpen,\n          instructorDetailsModalOpen = _this$state.instructorDetailsModalOpen;\n      var _this$props3 = this.props,\n          dropdownIsOpen = _this$props3.dropdownIsOpen,\n          dropdownIndex = _this$props3.dropdownIndex,\n          index = _this$props3.index,\n          instructor = _this$props3.instructor,\n          onSaveInstructorChanges = _this$props3.onSaveInstructorChanges;\n      var _instructor$accountIn = instructor.accountInfo;\n      _instructor$accountIn = _instructor$accountIn === void 0 ? {} : _instructor$accountIn;\n      var lastName = _instructor$accountIn.lastName,\n          firstName = _instructor$accountIn.firstName,\n          email = _instructor$accountIn.email,\n          _instructor$basicInfo = instructor.basicInfo;\n      _instructor$basicInfo = _instructor$basicInfo === void 0 ? {} : _instructor$basicInfo;\n      var activeStudents = _instructor$basicInfo.activeStudents,\n          pastStudents = _instructor$basicInfo.pastStudents,\n          unactivatedStudents = _instructor$basicInfo.unactivatedStudents,\n          averageImprovement = _instructor$basicInfo.averageImprovement,\n          averageInitialScore = _instructor$basicInfo.averageInitialScore,\n          averageFinalScore = _instructor$basicInfo.averageFinalScore,\n          studentsAchievingTargetScore = _instructor$basicInfo.studentsAchievingTargetScore;\n      return __jsx(React.Fragment, null, __jsx(InstructorDetailsModal, {\n        instructor: instructor,\n        open: instructorDetailsModalOpen,\n        onClose: this.onCloseInstructorDetailsModal,\n        onSaveInstructorChanges: onSaveInstructorChanges,\n        onOpenDeleteModal: this.onOpenDeleteModal,\n        deleteModalOpen: deleteModalOpen\n      }), __jsx(Modal, {\n        open: deleteModalOpen,\n        onConfirm: this.onConfirmDeleteInstructor,\n        onClose: this.onCloseDeleteModal,\n        header: \"Are You Sure?\",\n        body: \"Deleting this instructor will be permanent\"\n      }), __jsx(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, __jsx(\"div\", {\n        className: \"card-main card-location card card-large\"\n      }, __jsx(\"div\", {\n        className: \"owner-box card-panel\",\n        style: {\n          backgroundColor: '#31837a',\n          color: '#fff'\n        }\n      }, __jsx(\"div\", {\n        className: \"card-panel-row row\"\n      }, __jsx(\"div\", {\n        className: \"col s9\"\n      }, __jsx(\"div\", {\n        className: \"user-block\"\n      }, __jsx(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: '#18b5e9',\n          color: '#fff'\n        }\n      }, __jsx(\"span\", {\n        className: \"initials\"\n      }, \"NT\")), __jsx(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: '#fff'\n        }\n      }, __jsx(\"h4\", {\n        className: \"h3\"\n      }, lastName, \", \", firstName), __jsx(\"a\", {\n        href: \"mailto:\".concat(email)\n      }, email)))), __jsx(\"div\", {\n        className: \"col s3 right-align\"\n      }, __jsx(\"div\", {\n        className: \"row icons-row\"\n      }, __jsx(\"div\", {\n        className: \"col right-align\"\n      }, __jsx(\"span\", {\n        className: \"block-icon\"\n      }, __jsx(\"i\", {\n        className: \"icon-user\"\n      }), __jsx(\"span\", {\n        className: \"text-icon\"\n      }, \"Instructor\"))), __jsx(\"div\", {\n        className: \"dropdown-block col\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.handleDropdownClick,\n        className: \"dropdown-trigger btn\",\n        \"data-target\": \"dropdown05\"\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown05\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          width: '103.991px',\n          left: '116.974px',\n          top: '7.99716px',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenInstructorDetailsModal,\n        className: \"modal-trigger link-block\"\n      }, \"Edit\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onCloneInstructor\n      }, \"Clone\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Impersonate\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenDeleteModal\n      }, \"Delete\"))) : null))))), __jsx(\"div\", {\n        className: \"card-content\"\n      }, __jsx(\"div\", {\n        className: \"row d-flex align-items-center mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m5\"\n      }, __jsx(\"div\", {\n        className: \"chart-container\"\n      }, __jsx(\"div\", {\n        className: \"chart-holder\"\n      }, __jsx(Doughnut, {\n        data: function data() {\n          return _data(activeStudents, activeStudents - 10);\n        },\n        height: 110,\n        width: 110,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 55,\n          tooltips: false\n        }\n      }), __jsx(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: '#31837a',\n          marginBottom: '-15px'\n        }\n      }, Math.floor(studentsAchievingTargetScore / activeStudents * 100), \"%\")), __jsx(\"div\", {\n        className: \"chart-description\",\n        style: {\n          color: '#31837a',\n          marginTop: '45px'\n        }\n      }, \"Students Who Achieved Target Score\"))), __jsx(\"div\", {\n        className: \"col s12 m7\"\n      }, __jsx(\"ul\", {\n        className: \"points-list\"\n      }, __jsx(\"li\", {\n        className: \"style-red-darken\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, activeStudents), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"active students\")), __jsx(\"li\", {\n        className: \"style-pink-darken\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, pastStudents), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"past students\")), __jsx(\"li\", null, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, unactivatedStudents), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"unactivated students\")), __jsx(\"li\", {\n        className: \"style-blue-light\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, \"+\", averageImprovement), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"average improvement\")), __jsx(\"li\", {\n        className: \"style-blue\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, averageInitialScore), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"average initial score\")), __jsx(\"li\", {\n        className: \"style-blue-dark\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, averageFinalScore), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"average final score\"))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"meta-info\"\n      }, __jsx(\"p\", {\n        className: \"truncate\"\n      }, \"First Location,  Second Location, Possible Additional Truncated More Locatioa...\")))))));\n    }\n  }]);\n\n  return InstructorCard;\n}(React.Component);\n\nexport default InstructorCard;","map":null,"metadata":{},"sourceType":"module"}