{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-did-update-set-state */\n\n/* eslint-disable react/no-did-mount-set-state */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport Portal from '../../../../Portal';\nimport TestVersionSettings from './components/TestVersionSettings';\nimport Settings from './components/Settings';\n\nvar EditTestModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditTestModal, _React$Component);\n\n  function EditTestModal(props) {\n    var _this;\n\n    _classCallCheck(this, EditTestModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditTestModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTestVersionSettingsChange\", function (event) {\n      var sections = _this.state.testVersion.sections;\n      var testVersion;\n\n      if (event.target) {\n        var setting = event.target.name;\n\n        if (sections[setting] !== undefined) {\n          testVersion = update(_this.state.testVersion, {\n            sections: _defineProperty({}, setting, {\n              $set: !sections[setting]\n            })\n          });\n        } else {\n          testVersion = update(_this.state.testVersion, _defineProperty({}, setting, {\n            $set: !_this.state.testVersion[setting]\n          }));\n        }\n      } else {\n        testVersion = update(_this.state.testVersion, {\n          version: {\n            $set: event\n          }\n        });\n      }\n\n      _this.setState({\n        testVersion: testVersion\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSettingsChange\", function (event) {\n      var previousSettings = _this.state.settings;\n      var setting = event.target.name;\n      var settings = update(_this.state.settings, _defineProperty({}, setting, {\n        $set: !previousSettings[setting]\n      }));\n\n      _this.setState({\n        settings: settings\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDatePickerChange\", function (field, value) {\n      var settings = update(_this.state.settings, _defineProperty({}, field, {\n        $set: value\n      }));\n\n      _this.setState({\n        settings: settings\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveTestChanges\", function () {\n      var onSaveTestChanges = _this.props.onSaveTestChanges;\n      var _this$state = _this.state,\n          testVersion = _this$state.testVersion,\n          _this$state$settings = _this$state.settings,\n          unformattedTestDate = _this$state$settings.testDate,\n          unformattedDueDate = _this$state$settings.dueDate,\n          allowStudentToEnterAnswers = _this$state$settings.allowStudentToEnterAnswers,\n          timed = _this$state$settings.timed;\n      var testDate = moment(unformattedTestDate).format('MM/DD/YY');\n      var dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n      onSaveTestChanges(testVersion, {\n        testDate: testDate,\n        dueDate: dueDate,\n        allowStudentToEnterAnswers: allowStudentToEnterAnswers,\n        timed: timed\n      });\n    });\n\n    _this.state = {\n      testVersion: {\n        version: '',\n        sections: {\n          reading: false,\n          writing: false,\n          math: false,\n          essay: false\n        },\n        includeScoreInImprovementMetrics: false\n      },\n      settings: {\n        testDate: '',\n        dueDate: '',\n        allowStudentToEnterAnswers: false,\n        timed: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(EditTestModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$test = this.props.test,\n          unformattedTestDate = _this$props$test.testDate,\n          unformattedDueDate = _this$props$test.dueDate;\n      var testDate = new Date(unformattedTestDate);\n      var dueDate = unformattedDueDate ? new Date(unformattedDueDate) : '';\n      var settings = update(this.state.settings, {\n        testDate: {\n          $set: testDate\n        },\n        dueDate: {\n          $set: dueDate\n        }\n      });\n      this.setState({\n        settings: settings\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$test2 = this.props.test,\n          unformattedTestDate = _this$props$test2.testDate,\n          unformattedDueDate = _this$props$test2.dueDate;\n      var testDate = new Date(unformattedTestDate);\n      var dueDate = unformattedDueDate ? new Date(unformattedDueDate) : '';\n\n      if (prevProps.test.id !== this.props.test.id) {\n        var settings = update(this.state.settings, {\n          testDate: {\n            $set: testDate\n          },\n          dueDate: {\n            $set: dueDate\n          }\n        });\n        this.setState({\n          settings: settings\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          test = _this$props.test,\n          user = _this$props.user,\n          onDeleteTest = _this$props.onDeleteTest;\n      var title = test.title,\n          testVersion = test.version,\n          completionDate = test.completionDate,\n          completionTime = test.completionTime;\n      var _user$studentInformat = user.studentInformation,\n          firstName = _user$studentInformat.firstName,\n          lastName = _user$studentInformat.lastName;\n      var _this$state2 = this.state,\n          _this$state2$testVers = _this$state2.testVersion,\n          _this$state2$testVers2 = _this$state2$testVers.sections,\n          reading = _this$state2$testVers2.reading,\n          writing = _this$state2$testVers2.writing,\n          math = _this$state2$testVers2.math,\n          essay = _this$state2$testVers2.essay,\n          version = _this$state2$testVers.version,\n          includeScoreInImprovementMetrics = _this$state2$testVers.includeScoreInImprovementMetrics,\n          _this$state2$settings = _this$state2.settings,\n          testDate = _this$state2$settings.testDate,\n          dueDate = _this$state2$settings.dueDate,\n          allowStudentToEnterAnswers = _this$state2$settings.allowStudentToEnterAnswers,\n          timed = _this$state2$settings.timed;\n      return React.createElement(Portal, {\n        selector: \"#modal\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5 modal\",\n        style: {\n          zIndex: '1003',\n          display: 'block',\n          position: 'absolute',\n          top: '0',\n          width: '100%'\n        }\n      }, React.createElement(\"div\", {\n        className: \"header-row card-panel light-blue lighten-1 white-text\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"icon-col col s1\"\n      }, React.createElement(\"i\", {\n        className: \"icon-letter-a\"\n      })), React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-text center-align\"\n      }, React.createElement(\"div\", {\n        className: \"text-xlarge\"\n      }, title), React.createElement(\"div\", {\n        className: \"text-small\"\n      }, \"Version: SAT Practice Test #\", testVersion))), React.createElement(\"div\", {\n        className: \"col s1 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, \"\\xA0\"))), React.createElement(\"div\", {\n        className: \"header-row-block card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s3\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"col s9 right-align\"\n      }, React.createElement(\"div\", null, React.createElement(\"span\", {\n        className: \"name\"\n      }, firstName, \" \", lastName))))), React.createElement(\"div\", {\n        className: \"nav-header white\"\n      }, React.createElement(\"div\", {\n        className: \"nav-additional\"\n      }, React.createElement(\"ul\", {\n        className: \"menu-additional\"\n      }, React.createElement(\"li\", {\n        className: \"col s3\"\n      }, React.createElement(\"a\", {\n        className: \"active\",\n        href: \"#\"\n      }, \"Scores\")), React.createElement(\"li\", {\n        className: \"col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Answer Sheet\")), React.createElement(\"li\", {\n        className: \"col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Strengths & Weaknesses\")), React.createElement(\"li\", {\n        className: \"col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Test Version\")), React.createElement(\"li\", {\n        className: \"menu-special col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Download Score Report \", React.createElement(\"i\", {\n        className: \"icon-download-file\"\n      })))))), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"container-xsmall\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-322\"\n      }, React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(TestVersionSettings, {\n        version: version,\n        reading: reading,\n        writing: writing,\n        math: math,\n        essay: essay,\n        includeScoreInImprovementMetrics: includeScoreInImprovementMetrics,\n        handleTestVersionSettingsChange: this.handleTestVersionSettingsChange\n      }), React.createElement(Settings, {\n        timed: timed,\n        testDate: testDate,\n        dueDate: dueDate,\n        handleSettingsChange: this.handleSettingsChange,\n        handleDatePickerChange: this.handleDatePickerChange,\n        allowStudentToEnterAnswers: allowStudentToEnterAnswers\n      })), React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"h2\", null, \"Status\"), React.createElement(\"div\", {\n        className: \"card card-test-detail\"\n      }, React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"meta-info\"\n      }, completionDate.length ? React.createElement(\"p\", null, \"Completed : \", React.createElement(\"time\", {\n        dateTime: \"2018-12-29\"\n      }, completionDate, \" at \", completionTime), completionDate.length && test.dueDate < completionDate ? React.createElement(\"span\", {\n        className: \"badge white-text badge-rounded-sm\",\n        style: {\n          backgroundColor: '#db1d41'\n        }\n      }, React.createElement(\"b\", {\n        className: \"badge-text\"\n      }, \"late\")) : null) : null, React.createElement(\"p\", null, \"Answers Entered by: \", firstName, \" \", lastName, \" (student)\")))))), React.createElement(\"div\", {\n        className: \"btn-holder\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn\",\n        onClick: this.saveTestChanges\n      }, \"Save\"), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-teal btn-flat pink-text text-darken-1\",\n        onClick: onDeleteTest\n      }, \"Delete\")))))));\n    }\n  }]);\n\n  return EditTestModal;\n}(React.Component);\n\nEditTestModal.propTypes = {\n  test: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  onDeleteTest: PropTypes.func.isRequired,\n  onSaveTestChanges: PropTypes.func.isRequired\n};\nexport default EditTestModal;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestList/components/EditTestModal/index.js"],"names":["React","PropTypes","update","moment","Portal","TestVersionSettings","Settings","EditTestModal","props","event","sections","state","testVersion","target","setting","name","undefined","$set","version","setState","previousSettings","settings","field","value","onSaveTestChanges","unformattedTestDate","testDate","unformattedDueDate","dueDate","allowStudentToEnterAnswers","timed","format","reading","writing","math","essay","includeScoreInImprovementMetrics","test","Date","prevProps","id","user","onDeleteTest","title","completionDate","completionTime","studentInformation","firstName","lastName","zIndex","display","position","top","width","handleTestVersionSettingsChange","handleSettingsChange","handleDatePickerChange","length","backgroundColor","saveTestChanges","Component","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-did-mount-set-state */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport moment from 'moment';\n\nimport Portal from '../../../../Portal';\nimport TestVersionSettings from './components/TestVersionSettings';\nimport Settings from './components/Settings';\n\nclass EditTestModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testVersion: {\n        version: '',\n        sections: {\n          reading: false,\n          writing: false,\n          math: false,\n          essay: false,\n        },\n        includeScoreInImprovementMetrics: false,\n      },\n      settings: {\n        testDate: '',\n        dueDate: '',\n        allowStudentToEnterAnswers: false,\n        timed: false,\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { test: { testDate: unformattedTestDate, dueDate: unformattedDueDate } } = this.props;\n    const testDate = new Date(unformattedTestDate);\n    const dueDate = unformattedDueDate ? new Date(unformattedDueDate) : '';\n    const settings = update(this.state.settings, {\n      testDate: {\n        $set: testDate,\n      },\n      dueDate: {\n        $set: dueDate,\n      },\n    });\n    this.setState({ settings });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { test: { testDate: unformattedTestDate, dueDate: unformattedDueDate } } = this.props;\n    const testDate = new Date(unformattedTestDate);\n    const dueDate = unformattedDueDate ? new Date(unformattedDueDate) : '';\n    if (prevProps.test.id !== this.props.test.id) {\n      const settings = update(this.state.settings, {\n        testDate: {\n          $set: testDate,\n        },\n        dueDate: {\n          $set: dueDate,\n        },\n      });\n      this.setState({ settings });\n    }\n  }\n\n  handleTestVersionSettingsChange = (event) => {\n    const { testVersion: { sections } } = this.state;\n    let testVersion;\n    if (event.target) {\n      const { target: { name: setting } } = event;\n      if (sections[setting] !== undefined) {\n        testVersion = update(this.state.testVersion, {\n          sections: {\n            [setting]: {\n              $set: !sections[setting],\n            },\n          },\n        });\n      } else {\n        testVersion = update(this.state.testVersion, {\n          [setting]: {\n            $set: !this.state.testVersion[setting],\n          },\n        });\n      }\n    } else {\n      testVersion = update(this.state.testVersion, {\n        version: {\n          $set: event,\n        },\n      });\n    }\n    this.setState({ testVersion });\n  }\n\n  handleSettingsChange = (event) => {\n    const { settings: previousSettings } = this.state;\n    const { target: { name: setting } } = event;\n    const settings = update(this.state.settings, {\n      [setting]: {\n        $set: !previousSettings[setting],\n      },\n    });\n    this.setState({ settings });\n  }\n\n  handleDatePickerChange = (field, value) => {\n    const settings = update(this.state.settings, {\n      [field]: {\n        $set: value,\n      },\n    });\n    this.setState({ settings });\n  }\n\n  saveTestChanges = () => {\n    const { onSaveTestChanges } = this.props;\n    const { testVersion, settings: { testDate: unformattedTestDate, dueDate: unformattedDueDate, allowStudentToEnterAnswers, timed } } = this.state;\n    const testDate = moment(unformattedTestDate).format('MM/DD/YY');\n    const dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n    onSaveTestChanges(testVersion, { testDate, dueDate, allowStudentToEnterAnswers, timed });\n  }\n\n  render() {\n    const { test, user, onDeleteTest } = this.props;\n    const { title, version: testVersion, completionDate, completionTime } = test;\n    const { studentInformation: { firstName, lastName } } = user;\n    const {\n      testVersion: {\n        sections: {\n          reading, writing, math, essay,\n        },\n        version, includeScoreInImprovementMetrics,\n      },\n      settings: { testDate, dueDate, allowStudentToEnterAnswers, timed },\n    } = this.state;\n    return (\n      <Portal selector=\"#modal\">\n        <div className=\"main-holder grey lighten-5 modal\" style={{ zIndex: '1003', display: 'block', position: 'absolute', top: '0', width: '100%' }}>\n          <div className=\"header-row card-panel light-blue lighten-1 white-text\">\n            <div className=\"card-panel-row row\">\n              <div className=\"icon-col col s1\">\n                <i className=\"icon-letter-a\"></i>\n              </div>\n              <div className=\"col s9\">\n                <div className=\"card-panel-text center-align\">\n                  <div className=\"text-xlarge\">{title}</div>\n                  <div className=\"text-small\">Version: SAT Practice Test #{testVersion}</div>\n                </div>\n              </div>\n              <div className=\"col s1 right-align\">\n                <div className=\"row icons-row\">&nbsp;</div>\n              </div>\n            </div>\n            <div className=\"header-row-block card-panel-row row\">\n              <div className=\"col s3\">&nbsp;</div>\n              <div className=\"col s9 right-align\">\n                <div><span className=\"name\">{firstName} {lastName}</span></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"nav-header white\">\n            <div className=\"nav-additional\">\n              <ul className=\"menu-additional\">\n                <li className=\"col s3\"><a className=\"active\" href=\"#\">Scores</a></li>\n                <li className=\"col s3\"><a href=\"#\">Answer Sheet</a></li>\n                <li className=\"col s3\"><a href=\"#\">Strengths &amp; Weaknesses</a></li>\n                <li className=\"col s3\"><a href=\"#\">Test Version</a></li>\n                <li className=\"menu-special col s3\"><a href=\"#\">Download Score Report <i className=\"icon-download-file\"></i></a></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"content-section\">\n            <div className=\"content-section-holder\">\n              <div className=\"container-xsmall\">\n                <div className=\"row d-flex-content card-width-322\">\n                  <div className=\"card-main-col col s12 m8 l7 xl5\">\n                    <TestVersionSettings\n                      version={version}\n                      reading={reading}\n                      writing={writing}\n                      math={math}\n                      essay={essay}\n                      includeScoreInImprovementMetrics={includeScoreInImprovementMetrics}\n                      handleTestVersionSettingsChange={this.handleTestVersionSettingsChange}\n                    />\n                    <Settings\n                      timed={timed}\n                      testDate={testDate}\n                      dueDate={dueDate}\n                      handleSettingsChange={this.handleSettingsChange}\n                      handleDatePickerChange={this.handleDatePickerChange}\n                      allowStudentToEnterAnswers={allowStudentToEnterAnswers}\n                    />\n                  </div>\n                  <div className=\"card-main-col col s12 m8 l7 xl5\">\n                    <h2>Status</h2>\n                    <div className=\"card card-test-detail\">\n                      <div className=\"card-content\">\n                        <div className=\"meta-info\">\n                          <If condition={completionDate.length}>\n                            <p>\n                              Completed : <time dateTime=\"2018-12-29\">{completionDate} at {completionTime}</time>\n                              <If condition={completionDate.length && test.dueDate < completionDate}>\n                                <span className=\"badge white-text badge-rounded-sm\" style={{ backgroundColor: '#db1d41' }}><b className=\"badge-text\">late</b></span>\n                              </If>\n                            </p>\n                          </If>\n                          <p>Answers Entered by: {firstName} {lastName} (student)</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"btn-holder\">\n                  <a href=\"#\" className=\"btn\" onClick={this.saveTestChanges}>Save</a>\n                  <a href=\"#\" className=\"waves-effect waves-teal btn-flat pink-text text-darken-1\" onClick={onDeleteTest}>Delete</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Portal>\n    );\n  }\n}\n\nEditTestModal.propTypes = {\n  test: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  onDeleteTest: PropTypes.func.isRequired,\n  onSaveTestChanges: PropTypes.func.isRequired,\n}\n\nexport default EditTestModal;\n"]},"metadata":{},"sourceType":"module"}