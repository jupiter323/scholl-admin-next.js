{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\nimport AccountInfo from '../SharedModalComponents/AccountInfo';\nimport ContactInfo from '../SharedModalComponents/ContactInfo';\nimport Locations from '../SharedModalComponents/Locations';\nimport { nestedCreateFieldValidation } from '../../../../utils/fieldValidation';\nimport initialState from './utils/initialState';\n\nconst idGenerator = () => Math.floor(Math.random() * 100 + 1);\n\nclass NewInstructorModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetDropdown\", dropdownIndex => this.setState({\n      dropdownIndex,\n      dropdownIsOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDropdown\", () => this.setState({\n      dropdownIsOpen: false\n    }));\n\n    _defineProperty(this, \"onOpenDeleteLocationModal\", pendingLocationDelete => this.setState({\n      deleteLocationModalOpen: true,\n      pendingLocationDelete\n    }));\n\n    _defineProperty(this, \"onCloseDeleteLocationModal\", () => this.setState({\n      deleteLocationModalOpen: false,\n      pendingLocationDelete: {}\n    }));\n\n    _defineProperty(this, \"onOpenNewLocationModal\", () => this.setState({\n      newLocationModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseNewLocationModal\", () => this.setState({\n      newLocationModalOpen: false\n    }));\n\n    _defineProperty(this, \"onOpenEditLocationModal\", activeLocation => this.setState({\n      editLocationModalOpen: true,\n      activeLocation\n    }));\n\n    _defineProperty(this, \"onCloseEditLocationModal\", () => this.setState({\n      editLocationModalOpen: false,\n      dropdownIsOpen: false,\n      activeLocation: {}\n    }));\n\n    _defineProperty(this, \"onResetInstructor\", () => this.setState(initialState));\n\n    _defineProperty(this, \"onCloseModal\", () => {\n      const {\n        onClose\n      } = this.props;\n      onClose();\n      this.onResetInstructor();\n    });\n\n    _defineProperty(this, \"onSetValidation\", (validation, cb) => this.setState({\n      validation\n    }, cb));\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const {\n        accountInfo,\n        contactInfo,\n        locations\n      } = this.state;\n      const {\n        onAddNewInstructor,\n        onClose\n      } = this.props; // NOTE: Swap out what instance of valid is active if you want to test saving a new location without worrying about validation\n      // const valid = true;\n\n      const valid = await nestedCreateFieldValidation(this.state, this.onSetValidation, validation => console.warn('validation', validation));\n\n      if (!valid) {\n        // return onSaveLocationError();\n        console.warn('not valid');\n      }\n\n      const id = idGenerator();\n      const postBody = {\n        id,\n        accountInfo,\n        contactInfo,\n        locations\n      };\n      onAddNewInstructor(postBody);\n      console.warn('stubbed out save function');\n      onClose();\n    });\n\n    _defineProperty(this, \"handleDetailsChange\", (event, name, section) => {\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        [section]: {\n          $merge: {\n            [name]: value\n          }\n        }\n      });\n      this.setState(updatedState);\n    });\n\n    _defineProperty(this, \"renderModalHeader\", () => {\n      const {\n        accountInfo: {\n          lastName,\n          firstName,\n          email\n        }\n      } = this.state;\n      return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n        className: \"h3\"\n      }, lastName, \", \", firstName), React.createElement(\"a\", {\n        href: `mailto:${email}`\n      }, email));\n    });\n\n    this.state = {\n      deleteLocationModalOpen: false,\n      newLocationModalOpen: false,\n      editLocationModalOpen: false,\n      pendingLocationDelete: {},\n      activeLocation: {},\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n      accountInfo: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        gender: {}\n      },\n      contactInfo: {\n        phone: '',\n        streetAddress: '',\n        city: '',\n        state: '',\n        zip: ''\n      },\n      locations: [],\n      validation: {\n        accountInfo: {\n          firstName: true,\n          lastName: true,\n          email: true,\n          gender: true\n        }\n      }\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.props;\n    const {\n      dropdownIsOpen,\n      dropdownIndex,\n      activeLocation,\n      deleteLocationModalOpen,\n      pendingLocationDelete,\n      newLocationModalOpen,\n      editLocationModalOpen,\n      accountInfo,\n      contactInfo,\n      locations\n    } = this.state;\n    return React.createElement(Portal, {\n      selector: \"#modal\"\n    }, open && React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"overlay\"\n    }, React.createElement(ClickOffComponentWrapper, {\n      onOuterClick: this.onCloseModal,\n      nestedModals: deleteLocationModalOpen || editLocationModalOpen || newLocationModalOpen\n    }, React.createElement(\"div\", {\n      id: \"modal_user_edit\",\n      className: \"jsx-2979935167\" + \" \" + \"modal modal-custom modal-custom-large modal-gray\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"card-modal card-main card grey lighten-3\"\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#31837a',\n        color: '#fff'\n      },\n      className: \"jsx-2979935167\" + \" \" + \"owner-box card-panel card-panel-title\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"col s9\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"user-block\"\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#0085ce',\n        color: '#fff'\n      },\n      className: \"jsx-2979935167\" + \" \" + \"user-circle\"\n    }, React.createElement(\"img\", {\n      src: \"images/img-owner01.jpg\",\n      alt: \"\",\n      className: \"jsx-2979935167\"\n    })), React.createElement(\"div\", {\n      style: {\n        color: '#fff'\n      },\n      className: \"jsx-2979935167\" + \" \" + \"user-text\"\n    }, this.renderModalHeader()))), React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      className: \"jsx-2979935167\" + \" \" + \"col\"\n    }, React.createElement(\"span\", {\n      className: \"jsx-2979935167\" + \" \" + \"block-icon\"\n    }, React.createElement(\"i\", {\n      className: \"jsx-2979935167\" + \" \" + \"icon-owner\"\n    }), React.createElement(\"span\", {\n      className: \"jsx-2979935167\" + \" \" + \"text-icon\"\n    }, \"Owner\"))))), React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"card-content\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"card-body\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"col s12 l6\"\n    }, React.createElement(AccountInfo, {\n      state: accountInfo,\n      handleDetailsChange: this.handleDetailsChange\n    }), React.createElement(ContactInfo, {\n      state: contactInfo,\n      handleDetailsChange: this.handleDetailsChange\n    })), React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"col s12 l6\"\n    }, React.createElement(Locations, {\n      state: locations,\n      handleDetailsChange: this.handleDetailsChange,\n      dropdownIsOpen: dropdownIsOpen,\n      dropdownIndex: dropdownIndex,\n      activeLocation: activeLocation,\n      deleteLocationModalOpen: deleteLocationModalOpen,\n      pendingLocationDelete: pendingLocationDelete,\n      newLocationModalOpen: newLocationModalOpen,\n      editLocationModalOpen: editLocationModalOpen,\n      onSetDropdown: this.onSetDropdown,\n      onCloseDropdown: this.onCloseDropdown,\n      onOpenNewLocationModal: this.onOpenNewLocationModal,\n      onOpenEditLocationModal: this.onOpenEditLocationModal,\n      onCloseNewLocationModal: this.onCloseNewLocationModal,\n      onCloseEditLocationModal: this.onCloseEditLocationModal,\n      onOpenDeleteLocationModal: this.onOpenDeleteLocationModal,\n      onCloseDeleteLocationModal: this.onCloseDeleteLocationModal\n    })))), React.createElement(\"div\", {\n      className: \"jsx-2979935167\" + \" \" + \"modal-footer\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onCloseModal,\n      className: \"jsx-2979935167\" + \" \" + \"modal-close waves-effect waves-teal btn-flat grey-text text-darken-1\"\n    }, \"Cancel\"), React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onSubmit,\n      className: \"jsx-2979935167\" + \" \" + \"btn\"\n    }, \"Save\"))))))), React.createElement(_JSXStyle, {\n      id: \"2979935167\"\n    }, [\".overlay.jsx-2979935167{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:999;}\", \".card-modal.jsx-2979935167{margin:0;border-radius:6px;}\", \".modal.jsx-2979935167{display:block;background-color:white;position:absolute;top:10%;right:10%;left:10%;box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);}\", \".modal-custom.jsx-2979935167{opacity:1;visibility:visible;}\", \".modal-footer.jsx-2979935167{background-color:white;}\"]));\n  }\n\n}\n\nexport default NewInstructorModal;","map":null,"metadata":{},"sourceType":"module"}