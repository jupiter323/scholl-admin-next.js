{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar _data = function data(total) {\n  return {\n    datasets: [{\n      data: [total, 0],\n      backgroundColor: ['#3d8946', 'rgb(234, 234, 234)']\n    }]\n  };\n};\n\nvar formatEstimatedTotalCourseWork = function formatEstimatedTotalCourseWork(minutes) {\n  return Math.floor(minutes / 60);\n};\n\nvar sourceMap = {\n  builtIn: 'Built-In',\n  userCreated: 'User Created'\n};\n\nvar TemplateCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateCard, _React$Component);\n\n  function TemplateCard(props) {\n    var _this;\n\n    _classCallCheck(this, TemplateCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemplateCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleEditModal\", function (event) {\n      var onToggleEditModal = _this.props.onToggleEditModal;\n      event.preventDefault();\n      onToggleEditModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleExpandedState\", function () {\n      return _this.setState(function (_ref) {\n        var expanded = _ref.expanded;\n        return {\n          expanded: !expanded\n        };\n      });\n    });\n\n    _this.state = {\n      expanded: false\n    };\n    return _this;\n  }\n\n  _createClass(TemplateCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          template = _this$props2.template,\n          dropdownIndex = _this$props2.dropdownIndex,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          index = _this$props2.index;\n      var title = template.title,\n          source = template.source,\n          sessions = template.sessions,\n          estimatedTotalCourseWork = template.estimatedTotalCourseWork,\n          lessons = template.lessons,\n          description = template.description,\n          instructions = template.instructions;\n      var expanded = this.state.expanded;\n      return React.createElement(\"div\", {\n        className: \"card-main-col col s12 l6\"\n      }, React.createElement(\"div\", {\n        className: \"card-template card\"\n      }, React.createElement(\"i\", {\n        className: \"icon-module icon-position-left\"\n      }), React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-card card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row align-items-start row\"\n      }, React.createElement(\"div\", {\n        className: \"col s10\"\n      }, React.createElement(\"div\", {\n        className: \"card-header-block\"\n      }, React.createElement(\"h3\", {\n        className: \"h4 collapsible-title\"\n      }, title), React.createElement(\"div\", {\n        className: \"meta-info\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Source:\"), React.createElement(\"dd\", null, sourceMap[source]))))), React.createElement(\"div\", {\n        className: \"col s2 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        className: \"dropdown-trigger btn\",\n        href: \"#\",\n        \"data-target\": \"dropdown02\",\n        onClick: this.handleDropdownClick\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown02\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-trigger link-block\",\n        onClick: this.toggleEditModal\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        className: \"link-delete\"\n      }, \"Delete\"))) : null), React.createElement(\"div\", {\n        className: \"col right-align\"\n      }, React.createElement(\"span\", {\n        onClick: this.toggleExpandedState,\n        className: \"collapsible-header collapsible-opener\"\n      }, React.createElement(\"i\", {\n        className: \"custom-icon-triangle-right color-black\"\n      })))))), React.createElement(\"div\", {\n        className: \"d-flex justify-content-center align-items-center row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col m6\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list list-two-cols badge-circle-78\"\n      }, React.createElement(\"li\", {\n        className: \"style-purple-dark\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, sessions), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"Sessions\")), React.createElement(\"li\", {\n        className: \"style-pink\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, formatEstimatedTotalCourseWork(estimatedTotalCourseWork), \" \", React.createElement(\"span\", {\n        className: \"badge-text\"\n      }, \"hrs\")), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"Estimated Total Course Work\")))), React.createElement(\"div\", {\n        className: \"col\"\n      }, React.createElement(\"div\", {\n        className: \"chart-block chart-block-140\"\n      }, React.createElement(Doughnut, {\n        data: function data() {\n          return _data(lessons);\n        },\n        height: 140,\n        width: 140,\n        options: {\n          cutoutPercentage: 55,\n          tooltips: false\n        }\n      }), React.createElement(\"div\", {\n        className: \"chart-text\"\n      }, React.createElement(\"span\", {\n        className: \"value\",\n        style: {\n          color: '#3d8946'\n        }\n      }, lessons), React.createElement(\"span\", {\n        className: \"title\",\n        style: {\n          color: '#3d8946'\n        }\n      }, \"Lessons\")))))), React.createElement(\"div\", {\n        className: \"card-content collapsible-body\",\n        style: {\n          display: expanded ? 'block' : 'none'\n        }\n      }, React.createElement(\"dl\", null, React.createElement(\"dt\", null, React.createElement(\"strong\", {\n        className: \"dl-title\"\n      }, \"Description:\")), React.createElement(\"dd\", null, React.createElement(\"p\", null, description))), React.createElement(\"dl\", null, React.createElement(\"dt\", null, React.createElement(\"strong\", {\n        className: \"dl-title\"\n      }, \"Instructions:\")), React.createElement(\"dd\", null, React.createElement(\"p\", null, instructions))))))));\n    }\n  }]);\n\n  return TemplateCard;\n}(React.Component);\n\nexport default TemplateCard;","map":null,"metadata":{},"sourceType":"module"}