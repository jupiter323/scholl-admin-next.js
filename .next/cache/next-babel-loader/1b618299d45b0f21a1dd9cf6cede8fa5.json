{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      activeFilters: []\n    }));\n\n    _defineProperty(this, \"handleFilterClick\", filter => {\n      const {\n        activeFilters: currentActiveFilters\n      } = this.state;\n      let activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        const filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      this.setState({\n        activeFilters\n      });\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onSetFilteredTopicState,\n        onUnsetFilteredTopicState,\n        onSetSort\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'topic') {\n        if (event === '') {\n          return onUnsetFilteredTopicState();\n        }\n\n        return onSetFilteredTopicState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        worksheetName\n      } = this.state;\n\n      if (worksheetName === '') {\n        onUnsetFilteredState();\n      }\n\n      const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: {},\n      sort: {},\n      activeFilters: []\n    };\n  }\n\n  render() {\n    const {\n      open,\n      activeFilters,\n      worksheetName,\n      topic,\n      sort\n    } = this.state;\n    const {\n      currentView,\n      onChangeView\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"reading\",\n      checked: activeFilters.indexOf('reading') !== -1,\n      onChange: () => this.handleFilterClick('reading')\n    }), __jsx(\"label\", {\n      htmlFor: \"reading\"\n    }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"writing\",\n      checked: activeFilters.indexOf('writing') !== -1,\n      onChange: () => this.handleFilterClick('writing')\n    }), __jsx(\"label\", {\n      htmlFor: \"writing\"\n    }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"math\",\n      checked: activeFilters.indexOf('math') !== -1,\n      onChange: () => this.handleFilterClick('math')\n    }), __jsx(\"label\", {\n      htmlFor: \"math\"\n    }, \"Math\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"beginning\",\n      checked: activeFilters.indexOf('beginning') !== -1,\n      onChange: () => this.handleFilterClick('beginning')\n    }), __jsx(\"label\", {\n      htmlFor: \"beginning\"\n    }, \"Beginning\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"developing\",\n      checked: activeFilters.indexOf('developing') !== -1,\n      onChange: () => this.handleFilterClick('developing')\n    }), __jsx(\"label\", {\n      htmlFor: \"developing\"\n    }, \"Developing\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"accomplished\",\n      checked: activeFilters.indexOf('accomplished') !== -1,\n      onChange: () => this.handleFilterClick('accomplished')\n    }), __jsx(\"label\", {\n      htmlFor: \"accomplished\"\n    }, \"Accomplished\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"exemplary\",\n      checked: activeFilters.indexOf('exemplary') !== -1,\n      onChange: () => this.handleFilterClick('exemplary')\n    }), __jsx(\"label\", {\n      htmlFor: \"exemplary\"\n    }, \"Exemplary\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"unassigned\",\n      checked: activeFilters.indexOf('unassigned') !== -1,\n      onChange: () => this.handleFilterClick('unassigned')\n    }), __jsx(\"label\", {\n      htmlFor: \"unassigned\"\n    }, \"Unassigned\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"complete\",\n      checked: activeFilters.indexOf('complete') !== -1,\n      onChange: () => this.handleFilterClick('complete')\n    }), __jsx(\"label\", {\n      htmlFor: \"complete\"\n    }, \"Complete\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"incomplete\",\n      checked: activeFilters.indexOf('incomplete') !== -1,\n      onChange: () => this.handleFilterClick('incomplete')\n    }), __jsx(\"label\", {\n      htmlFor: \"incomplete\"\n    }, \"Incomplete\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"hasReviewFlags\",\n      checked: activeFilters.indexOf('hasReviewFlags') !== -1,\n      onChange: () => this.handleFilterClick('hasReviewFlags')\n    }), __jsx(\"label\", {\n      htmlFor: \"hasReviewFlags\"\n    }, \"Has Review Flags\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"dueToday\",\n      checked: activeFilters.indexOf('dueToday') !== -1,\n      onChange: () => this.handleFilterClick('dueToday')\n    }), __jsx(\"label\", {\n      htmlFor: \"dueToday\"\n    }, \"Due Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"dueNextSession\",\n      checked: activeFilters.indexOf('dueNextSession') !== -1,\n      onChange: () => this.handleFilterClick('dueNextSession')\n    }), __jsx(\"label\", {\n      htmlFor: \"dueNextSession\"\n    }, \"Due By Next Session\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"dueThisWeek\",\n      checked: activeFilters.indexOf('dueThisWeek') !== -1,\n      onChange: () => this.handleFilterClick('dueThisWeek')\n    }), __jsx(\"label\", {\n      htmlFor: \"dueThisWeek\"\n    }, \"Due this Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"overdue\",\n      checked: activeFilters.indexOf('overdue') !== -1,\n      onChange: () => this.handleFilterClick('overdue')\n    }), __jsx(\"label\", {\n      htmlFor: \"overdue\"\n    }, \"Overdue\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"some-class\",\n      checked: activeFilters.indexOf('class') !== -1,\n      onChange: () => this.handleFilterClick('class')\n    }), __jsx(\"label\", {\n      htmlFor: \"some-class\"\n    }, \"Some Class\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"tutoring\",\n      checked: activeFilters.indexOf('tutoring') !== -1,\n      onChange: () => this.handleFilterClick('tutoring')\n    }), __jsx(\"label\", {\n      htmlFor: \"tutoring\"\n    }, \"Tutoring\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\"\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      value: worksheetName,\n      className: \"input-control validate\",\n      onChange: event => this.handleFilterChange(event, 'worksheetName')\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: worksheetName.length ? 'label active' : 'label',\n      htmlFor: \"name_search\"\n    }, \"Search\"))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(topic, sampleTopics),\n      onChange: event => this.handleFilterChange(event, 'topic'),\n      options: sampleTopics,\n      label: \"Topic\",\n      stateKey: \"topic\",\n      dropdownKey: \"topic\"\n    }))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 xl7\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, worksheetSortOptions),\n      onChange: event => this.handleFilterChange(event, 'sort'),\n      options: worksheetSortOptions,\n      label: \"Sort By\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), __jsx(\"div\", {\n      className: \"switcher-block col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"view-switcher\"\n    }, __jsx(\"ul\", {\n      className: \"switcher center-align\"\n    }, __jsx(\"li\", {\n      \"data-view\": \"view-full\",\n      className: currentView === 'full' ? 'active' : '',\n      onClick: () => onChangeView('full')\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"Full View\")), __jsx(\"li\", {\n      \"data-view\": \"view-list\",\n      className: currentView === 'list' ? 'active' : '',\n      onClick: () => onChangeView('list')\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"List View\"))))), __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\"\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/DetailWorksheetPage/components/FilterSection/index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","sampleTopics","worksheetSortOptions","FilterSection","Component","constructor","props","setState","open","activeFilters","filter","currentActiveFilters","state","indexOf","$push","filterIndex","$splice","event","name","onSetFilteredTopicState","onUnsetFilteredTopicState","onSetSort","value","target","updatedState","$merge","onSetFilteredState","onUnsetFilteredState","worksheetName","transformedName","replace","toLowerCase","topic","sort","render","currentView","onChangeView","display","handleFilterClick","handleFilterChange","submitNameFilter","length","onClearFilters","onToggleShowFilters","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: {},\n      sort: {},\n      activeFilters: [],\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  handleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredTopicState, onUnsetFilteredTopicState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'topic') {\n      if (event === '') {\n        return onUnsetFilteredTopicState();\n      }\n      return onSetFilteredTopicState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { worksheetName } = this.state;\n    if (worksheetName === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  render() {\n    const { open, activeFilters, worksheetName, topic, sort } = this.state;\n    const { currentView, onChangeView } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      checked={activeFilters.indexOf('reading') !== -1}\n                      onChange={() => this.handleFilterClick('reading')}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      checked={activeFilters.indexOf('writing') !== -1}\n                      onChange={() => this.handleFilterClick('writing')}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      checked={activeFilters.indexOf('math') !== -1}\n                      onChange={() => this.handleFilterClick('math')}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"beginning\"\n                      checked={activeFilters.indexOf('beginning') !== -1}\n                      onChange={() => this.handleFilterClick('beginning')}\n                    />\n                    <label htmlFor=\"beginning\">Beginning</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"developing\"\n                      checked={activeFilters.indexOf('developing') !== -1}\n                      onChange={() => this.handleFilterClick('developing')}\n                    />\n                    <label htmlFor=\"developing\">Developing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"accomplished\"\n                      checked={activeFilters.indexOf('accomplished') !== -1}\n                      onChange={() => this.handleFilterClick('accomplished')}\n                    />\n                    <label htmlFor=\"accomplished\">Accomplished</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"exemplary\"\n                      checked={activeFilters.indexOf('exemplary') !== -1}\n                      onChange={() => this.handleFilterClick('exemplary')}\n                    />\n                    <label htmlFor=\"exemplary\">Exemplary</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unassigned\"\n                      checked={activeFilters.indexOf('unassigned') !== -1}\n                      onChange={() => this.handleFilterClick('unassigned')}\n                    />\n                    <label htmlFor=\"unassigned\">Unassigned</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      checked={activeFilters.indexOf('complete') !== -1}\n                      onChange={() => this.handleFilterClick('complete')}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"incomplete\"\n                      checked={activeFilters.indexOf('incomplete') !== -1}\n                      onChange={() => this.handleFilterClick('incomplete')}\n                    />\n                    <label htmlFor=\"incomplete\">Incomplete</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      checked={activeFilters.indexOf('hasReviewFlags') !== -1}\n                      onChange={() => this.handleFilterClick('hasReviewFlags')}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      checked={activeFilters.indexOf('dueToday') !== -1}\n                      onChange={() => this.handleFilterClick('dueToday')}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      checked={activeFilters.indexOf('dueNextSession') !== -1}\n                      onChange={() => this.handleFilterClick('dueNextSession')}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      checked={activeFilters.indexOf('dueThisWeek') !== -1}\n                      onChange={() => this.handleFilterClick('dueThisWeek')}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      checked={activeFilters.indexOf('overdue') !== -1}\n                      onChange={() => this.handleFilterClick('overdue')}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"some-class\"\n                      checked={activeFilters.indexOf('class') !== -1}\n                      onChange={() => this.handleFilterClick('class')}\n                    />\n                    <label htmlFor=\"some-class\">Some Class</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"tutoring\"\n                      checked={activeFilters.indexOf('tutoring') !== -1}\n                      onChange={() => this.handleFilterClick('tutoring')}\n                    />\n                    <label htmlFor=\"tutoring\">Tutoring</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      value={worksheetName}\n                      className=\"input-control validate\"\n                      onChange={(event) => this.handleFilterChange(event, 'worksheetName')}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    >\n                      <i className=\"icon-search\"></i>\n                    </button>\n                    <label className={worksheetName.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                      value={getValueFromState(topic, sampleTopics)}\n                      onChange={(event) => this.handleFilterChange(event, 'topic')}\n                      options={sampleTopics}\n                      label=\"Topic\"\n                      stateKey=\"topic\"\n                      dropdownKey=\"topic\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, worksheetSortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={worksheetSortOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li\n                      data-view=\"view-full\"\n                      className={currentView === 'full' ? 'active' : ''}\n                      onClick={() => onChangeView('full')}\n                    >\n                      <a href=\"#\">Full View</a>\n                    </li>\n                    <li\n                      data-view=\"view-list\"\n                      className={currentView === 'list' ? 'active' : ''}\n                      onClick={() => onChangeView('list')}\n                    >\n                      <a href=\"#\">List View</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}