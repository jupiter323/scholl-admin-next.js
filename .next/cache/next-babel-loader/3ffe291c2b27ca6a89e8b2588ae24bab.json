{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard';\nimport sampleSessions from '../../utils/sampleUpComingSessions';\nimport * as moment from 'moment';\n\nvar SessionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SessionList, _Component);\n\n  function SessionList() {\n    _classCallCheck(this, SessionList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SessionList).apply(this, arguments));\n  }\n\n  _createClass(SessionList, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"dashboard-card card\"\n      }, sampleSessions.sessions.map(function (element, key) {\n        console.log(element);\n        return __jsx(\"div\", {\n          className: \"card-content\",\n          key: element.key\n        }, __jsx(\"h2\", {\n          className: \"dashboard-title\"\n        }, __jsx(\"time\", {\n          dateTime: \"2019-02-02\"\n        }, element.datetime), __jsx(\"span\", {\n          className: \"small\"\n        }, \" \", SessionList.getDateName(moment(element.datetime, 'M/D/YYYY')))), __jsx(\"div\", {\n          className: \"row d-flex-content card-width-366 mb-0\"\n        }, element.sessions.map(function (session) {\n          return __jsx(DashboardCard, {\n            sessionStats: session.sessionStats,\n            testStats: session.testStats,\n            user: session.user,\n            key: session.uuid\n          });\n        })));\n      }));\n    }\n  }], [{\n    key: \"getDateName\",\n    value: function getDateName(datetime) {\n      if (moment().isSame(moment(datetime, 'M/D/YYYY'), 'day')) {\n        return 'Today';\n      } else if (moment().add(1, 'days').isSame(moment(datetime, 'M/D/YYYY'), 'day')) {\n        return 'Tomorrow';\n      }\n\n      return 'Other';\n    }\n  }]);\n\n  return SessionList;\n}(Component);\n\nexport default SessionList;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Dashboard/components/SessionList/index.js"],"names":["React","Component","DashboardCard","sampleSessions","moment","SessionList","sessions","map","element","key","console","log","datetime","getDateName","session","sessionStats","testStats","user","uuid","isSame","add"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;IAEMC,W;;;;;;;;;;;;;6BAEO;AAEL,aAAQ;AAAK,QAAA,SAAS,EAAC;AAAf,SACFF,cAAc,CAACG,QAAf,CAAwBC,GAAxB,CAA4B,UAASC,OAAT,EAAkBC,GAAlB,EAAuB;AACjDC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,eACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,GAAG,EAAEA,OAAO,CAACC;AAA3C,WACI;AAAI,UAAA,SAAS,EAAC;AAAd,WACI;AAAM,UAAA,QAAQ,EAAC;AAAf,WAA8BD,OAAO,CAACI,QAAtC,CADJ,EAEI;AAAM,UAAA,SAAS,EAAC;AAAhB,gBAA2BP,WAAW,CAACQ,WAAZ,CAAwBT,MAAM,CAACI,OAAO,CAACI,QAAT,EAAmB,UAAnB,CAA9B,CAA3B,CAFJ,CADJ,EAKI;AAAK,UAAA,SAAS,EAAC;AAAf,WACMJ,OAAO,CAACF,QAAR,CAAiBC,GAAjB,CAAqB,UAASO,OAAT,EAAkB;AACrC,iBAAQ,MAAC,aAAD;AAAe,YAAA,YAAY,EAAEA,OAAO,CAACC,YAArC;AAAmD,YAAA,SAAS,EAAED,OAAO,CAACE,SAAtE;AAAiF,YAAA,IAAI,EAAEF,OAAO,CAACG,IAA/F;AAAqG,YAAA,GAAG,EAAEH,OAAO,CAACI;AAAlH,YAAR;AACH,SAFC,CADN,CALJ,CADJ;AAaH,OAfC,CADE,CAAR;AAkBH;;;gCAEkBN,Q,EAAU;AACzB,UAAIR,MAAM,GAAGe,MAAT,CAAgBf,MAAM,CAACQ,QAAD,EAAW,UAAX,CAAtB,EAA8C,KAA9C,CAAJ,EAA0D;AACtD,eAAO,OAAP;AACH,OAFD,MAEO,IAAIR,MAAM,GAAGgB,GAAT,CAAa,CAAb,EAAgB,MAAhB,EAAwBD,MAAxB,CAA+Bf,MAAM,CAACQ,QAAD,EAAW,UAAX,CAArC,EAA6D,KAA7D,CAAJ,EAAyE;AAC5E,eAAO,UAAP;AACH;;AACG,aAAO,OAAP;AAEP;;;;EAhCqBX,S;;AAmC1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard';\nimport sampleSessions from '../../utils/sampleUpComingSessions';\nimport * as moment from 'moment';\n\nclass SessionList extends Component {\n\n    render() {\n\n        return (<div className=\"dashboard-card card\">\n            { sampleSessions.sessions.map(function(element, key) {\n                console.log(element)\n                return (\n                    <div className=\"card-content\" key={element.key}>\n                        <h2 className=\"dashboard-title\">\n                            <time dateTime=\"2019-02-02\">{ element.datetime }</time>\n                            <span className=\"small\"> { SessionList.getDateName(moment(element.datetime, 'M/D/YYYY')) }</span>\n                        </h2>\n                        <div className=\"row d-flex-content card-width-366 mb-0\">\n                            { element.sessions.map(function(session) {\n                                return (<DashboardCard sessionStats={session.sessionStats} testStats={session.testStats} user={session.user} key={session.uuid}/>);\n                            }) }\n                        </div>\n                    </div>\n                )\n            })}\n        </div>);\n    }\n\n    static getDateName(datetime) {\n        if (moment().isSame(moment(datetime, 'M/D/YYYY'), 'day')) {\n            return 'Today';\n        } else if (moment().add(1, 'days').isSame(moment(datetime, 'M/D/YYYY'), 'day')) {\n            return 'Tomorrow';\n        }\n            return 'Other';\n\n    }\n}\n\nexport default SessionList;"]},"metadata":{},"sourceType":"module"}