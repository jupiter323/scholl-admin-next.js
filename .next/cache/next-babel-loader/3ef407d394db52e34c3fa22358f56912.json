{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\n\nconst data = (current, target, initial) => ({\n  datasets: [{\n    data: [current - initial, target - initial - (current - initial)],\n    backgroundColor: ['#0085ce', '#eaeaea']\n  }]\n});\n\nclass StudentCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(this, \"onOpenEditModal\", () => {\n      this.props.onCloseDropdown();\n      this.setState({\n        editModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"onCloseEditModal\", () => this.setState({\n      editModalOpen: false\n    }));\n\n    this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      onHandleStudentCard,\n      onSaveStudentChanges,\n      onDeleteStudent,\n      onCloneStudent,\n      index,\n      dropdownIndex,\n      student,\n      student: {\n        id,\n        active,\n        tutor,\n        testScores: {\n          initialScore,\n          currentScore\n        },\n        courseContext: {\n          targetScore\n        },\n        studentInformation: {\n          firstName,\n          lastName\n        },\n        emailAddress: {\n          email\n        }\n      },\n      dropdownIsOpen\n    } = this.props;\n    const {\n      editModalOpen\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(EditModal, {\n      open: editModalOpen,\n      onSaveStudentChanges: onSaveStudentChanges,\n      onCloseEditModal: this.onCloseEditModal,\n      student: student,\n      handleDetailsChange: this.handleDetailsChange\n    }), __jsx(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\",\n      id: id\n    }, __jsx(\"div\", {\n      className: active ? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"\n    }, __jsx(\"div\", {\n      className: \"owner-box card-panel card-panel-panel card-panel-large\",\n      style: {\n        backgroundColor: active ? '#0085ce' : '#9b9b9b',\n        color: '#fff'\n      }\n    }, __jsx(\"div\", {\n      className: \"card-panel-row row\"\n    }, __jsx(\"div\", {\n      className: \"col s9\"\n    }, __jsx(\"div\", {\n      className: \"user-block\"\n    }, __jsx(\"div\", {\n      className: \"user-circle\",\n      style: {\n        backgroundColor: active ? '#14b14b' : '#808080',\n        color: '#fff',\n        height: '45px'\n      }\n    }, __jsx(\"img\", {\n      src: \"#\",\n      alt: \"\"\n    })), __jsx(\"div\", {\n      className: \"user-text\",\n      style: {\n        color: '#fff'\n      }\n    }, __jsx(\"h4\", {\n      className: \"h3\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      value: student,\n      onClick: () => onHandleStudentCard({\n        index\n      })\n    }, lastName, \", \", firstName)), __jsx(\"a\", {\n      href: `mailto:${email}`\n    }, email)))), __jsx(\"div\", {\n      className: \"col s2 right-align\"\n    }, __jsx(\"span\", {\n      className: \"block-icon\"\n    }, __jsx(\"i\", {\n      className: \"icon-user\"\n    }), __jsx(\"span\", {\n      className: \"text-icon\"\n    }, \"Student\"))), __jsx(\"div\", {\n      className: \"col s1 right-align\"\n    }, __jsx(\"div\", {\n      className: \"row icons-row\"\n    }, __jsx(\"div\", {\n      className: \"dropdown-block col\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"dropdown-trigger btn\",\n      \"data-target\": \"dropdown01\",\n      onClick: this.handleDropdownClick\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: \"block\",\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      className: \"modal-trigger link-block\",\n      onClick: this.onOpenEditModal\n    }, \"Edit\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\",\n      onClick: () => onCloneStudent(index)\n    }, \"Clone\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\"\n    }, \"Show Owner\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\",\n      onClick: () => onDeleteStudent(index)\n    }, \"Delete\"))) : null))))), __jsx(\"div\", {\n      className: \"card-content\",\n      ref: this.studentCard\n    }, __jsx(\"div\", {\n      className: \"row d-flex align-items-center mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m6\"\n    }, __jsx(\"div\", {\n      className: \"chart-container chart-container-large\"\n    }, __jsx(\"div\", {\n      className: \"chart-holder\"\n    }, active ? __jsx(Doughnut, {\n      data: () => data(currentScore, targetScore, initialScore),\n      height: 210,\n      options: {\n        circumference: 1.45 * Math.PI,\n        rotation: -3.85,\n        cutoutPercentage: 60,\n        tooltips: false\n      }\n    }) : null, __jsx(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: \"#0085ce\",\n        bottom: \"7px\"\n      }\n    }, __jsx(\"span\", {\n      \"data-count-up\": true,\n      \"data-start-val\": initialScore,\n      \"data-end-val\": currentScore,\n      \"data-duration\": \"1\"\n    }, currentScore))), __jsx(\"div\", {\n      className: \"chart-row\"\n    }, __jsx(\"div\", {\n      className: \"chart-col chart-start\"\n    }, __jsx(\"span\", {\n      className: \"amount\",\n      style: {\n        color: '#0085ce'\n      }\n    }, initialScore), __jsx(\"span\", {\n      className: \"amount-text\"\n    }, \"\\xA0 initial\")), __jsx(\"div\", {\n      className: \"chart-col chart-end\"\n    }, __jsx(\"span\", {\n      className: \"amount\"\n    }, targetScore), __jsx(\"span\", {\n      className: \"amount-text\"\n    }, \"\\xA0 target\"))))), __jsx(\"div\", {\n      className: \"col s12 m6\"\n    }, __jsx(\"ul\", {\n      className: \"points-list-bordered\"\n    }, __jsx(\"li\", {\n      className: \"style-green\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, \"61\"), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"complete\")), __jsx(\"li\", {\n      className: \"style-red\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, \"7\"), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"overdue\")), __jsx(\"li\", {\n      className: \"style-orange\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, \"3\"), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"practice tests\")), __jsx(\"li\", {\n      className: \"style-blue-lighter\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, __jsx(\"span\", null, \"17\"), \" \", __jsx(\"span\", {\n      className: \"of\"\n    }, \"of 23\")), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"sessions\"))))), __jsx(\"div\", {\n      className: \"card-inner-row\"\n    }, __jsx(\"div\", {\n      className: \"row-holder\"\n    }, __jsx(\"ul\", {\n      className: \"category-list\"\n    }, __jsx(\"li\", {\n      className: \"category-box\"\n    }, __jsx(\"span\", {\n      className: \"category-badge badge-purple\"\n    }), __jsx(\"span\", {\n      className: \"category-text\"\n    }, tutor)))))))));\n  }\n\n}\n\n;\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired,\n  onHandleStudentCard: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  onDeleteStudent: PropTypes.func.isRequired,\n  onCloneStudent: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIndex: PropTypes.number,\n  onSaveStudentChanges: PropTypes.func.isRequired\n};\nexport default StudentCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/components/StudentCard/index.js"],"names":["React","PropTypes","Doughnut","EditModal","ClickOffComponentWrapper","data","current","target","initial","datasets","backgroundColor","StudentCard","Component","constructor","props","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","setState","editModalOpen","state","cloneModalOpen","showOwnerModalOpen","deleteModalOpen","activateAccountModalOpen","assignInstructorModalOpen","render","onHandleStudentCard","onSaveStudentChanges","onDeleteStudent","onCloneStudent","dropdownIndex","student","id","active","tutor","testScores","initialScore","currentScore","courseContext","targetScore","studentInformation","firstName","lastName","emailAddress","email","onCloseEditModal","handleDetailsChange","color","height","handleDropdownClick","display","opacity","transform","onOpenEditModal","studentCard","circumference","Math","PI","rotation","cutoutPercentage","tooltips","bottom","propTypes","object","isRequired","func","bool","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\nconst data = (current, target, initial) => ({\n  datasets: [{\n    data: [current-initial, (target-initial) - (current-initial) ],\n    backgroundColor: [\n      '#0085ce',\n      '#eaeaea',\n    ],\n  }],\n})\n\nclass StudentCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editModalOpen: false,\n            cloneModalOpen: false,\n            showOwnerModalOpen: false,\n            deleteModalOpen: false,\n            activateAccountModalOpen: false,\n            assignInstructorModalOpen: false,\n        }\n    }\n\n    handleDropdownClick = (event) => {\n      const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n      event.preventDefault();\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n      return onSetDropdown(index);\n    }\n\n    onOpenEditModal = () => {\n      this.props.onCloseDropdown();\n      this.setState({editModalOpen: true});\n    }\n    onCloseEditModal = () => this.setState({editModalOpen: false})\n\n    render() {\n    const { onHandleStudentCard,onSaveStudentChanges, onDeleteStudent, onCloneStudent, index, dropdownIndex,student, student: {id, active, tutor, testScores: { initialScore, currentScore }, courseContext: {targetScore}, studentInformation: { firstName, lastName },\n        emailAddress: { email }},dropdownIsOpen }= this.props;\n    const { editModalOpen } = this.state;\n    return (\n      <React.Fragment>\n      <EditModal open={editModalOpen} onSaveStudentChanges = {onSaveStudentChanges} onCloseEditModal={this.onCloseEditModal} student={student} handleDetailsChange={this.handleDetailsChange}/>\n\n      <div className=\"card-main-col col s12 m8 l7 xl5\" id={id}>\n          <div className={ active? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"}>\n\n        <div className=\"owner-box card-panel card-panel-panel card-panel-large\" style={{ backgroundColor: active ? '#0085ce' : '#9b9b9b', color: '#fff' }}>\n          <div className=\"card-panel-row row\">\n          <div className=\"col s9\">\n            <div className=\"user-block\">\n              <div className=\"user-circle\" style={{ backgroundColor: active ? '#14b14b' : '#808080', color: '#fff', height: '45px' }}>\n                <img src=\"#\" alt=\"\" />\n              </div>\n              <div className=\"user-text\" style={{ color: '#fff' }}>\n                <h4 className=\"h3\"><a href=\"#\" value={student} onClick={() => onHandleStudentCard({index})}>{lastName}, {firstName}</a></h4>\n                <a href={`mailto:${email}`}>{email}</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s2 right-align\">\n            <span className=\"block-icon\">\n              <i className=\"icon-user\"></i>\n              <span className=\"text-icon\">Student</span>\n            </span>\n          </div>\n          <div className=\"col s1 right-align\">\n            <div className=\"row icons-row\">\n              <div className=\"dropdown-block col\">\n                <a\n                href='#'\n                className='dropdown-trigger btn'\n                data-target='dropdown01'\n                onClick={this.handleDropdownClick}>\n                <i className=\"material-icons dots-icon\">more_vert</i>\n                </a>\n                <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{display: \"block\", opacity: '1', transform: 'scaleX(1) scaleY(1)'}}>\n                  <li>\n                    <a href=\"#\" className=\"modal-trigger link-block\" onClick={this.onOpenEditModal}>Edit</a>\n                  </li>\n                  <li><a href=\"#!\" onClick={() => onCloneStudent(index)}>Clone</a></li>\n                  <li><a href=\"#!\">Show Owner</a></li>\n                  <li><a href=\"#!\" onClick={() => onDeleteStudent(index)}>Delete</a></li>\n                </ul>\n                </If>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* card content */}\n      <div className=\"card-content\" ref={this.studentCard}>\n          <div className=\"row d-flex align-items-center mb-0\">\n            <div className=\"col s12 m6\">\n              <div className=\"chart-container chart-container-large\">\n                <div className=\"chart-holder\">\n                  <If condition={active}>\n                    <Doughnut\n                      data={() => data(currentScore, targetScore, initialScore)}\n                      height={210}\n                      options={{\n                        circumference: 1.45 * Math.PI,\n                        rotation: -3.85,\n                        cutoutPercentage: 60,\n                        tooltips: false,\n                      }}\n                    />\n                  </If>\n                  <span className=\"chart-value\" style={{backgroundColor: \"#0085ce\", bottom: \"7px\"}}><span data-count-up data-start-val={initialScore} data-end-val={currentScore} data-duration=\"1\">{currentScore}</span></span>\n                </div>\n                <div className=\"chart-row\">\n                  <div className=\"chart-col chart-start\">\n                    <span className=\"amount\" style={{color: '#0085ce'}}>{initialScore}</span>\n                    <span className=\"amount-text\">&nbsp; initial</span>\n                  </div>\n                  <div className=\"chart-col chart-end\">\n                    <span className=\"amount\">{targetScore}</span>\n                    <span className=\"amount-text\">&nbsp; target</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col s12 m6\">\n              <ul className=\"points-list-bordered\">\n                <li className=\"style-green\">\n                  <span className=\"badge-circle\">61</span>\n                  <span className=\"point-text\">complete</span>\n                </li>\n                <li className=\"style-red\">\n                  <span className=\"badge-circle\">7</span>\n                  <span className=\"point-text\">overdue</span>\n                </li>\n                <li className=\"style-orange\">\n                  <span className=\"badge-circle\">3</span>\n                  <span className=\"point-text\">practice tests</span>\n                </li>\n                <li className=\"style-blue-lighter\">\n                  <span className=\"badge-circle\"><span>17</span> <span className=\"of\">of 23</span></span>\n                  <span className=\"point-text\">sessions</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"card-inner-row\">\n            <div className=\"row-holder\">\n              <ul className=\"category-list\">\n                <li className=\"category-box\">\n                  <span className=\"category-badge badge-purple\"></span>\n                  <span className=\"category-text\">{tutor}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n     {/* </div> */}\n    </React.Fragment>\n)}};\n\n  StudentCard.propTypes = {\n    student: PropTypes.object.isRequired,\n    onHandleStudentCard: PropTypes.func.isRequired,\n    dropdownIsOpen: PropTypes.bool.isRequired,\n    index: PropTypes.number.isRequired,\n    onDeleteStudent: PropTypes.func.isRequired,\n    onCloneStudent: PropTypes.func.isRequired,\n    onSetDropdown: PropTypes.func.isRequired,\n    onCloseDropdown: PropTypes.func.isRequired,\n    dropdownIndex: PropTypes.number,\n    onSaveStudentChanges:PropTypes.func.isRequired,\n  };\n\nexport default StudentCard;\n"]},"metadata":{},"sourceType":"module"}