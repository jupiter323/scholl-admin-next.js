{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/FreeResponse/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addFreeResponseAnswerToTest } from '../../../../../index/actions';\n\nvar FreeResponseInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FreeResponseInput, _React$Component);\n\n  function FreeResponseInput(props) {\n    var _this;\n\n    _classCallCheck(this, FreeResponseInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FreeResponseInput).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (e) {\n      e.preventDefault();\n      var answer = e.target.value;\n      var _this$props = _this.props,\n          onAddFreeResponseAnswerToTest = _this$props.onAddFreeResponseAnswerToTest,\n          problem = _this$props.problem,\n          student_test_id = _this$props.testSection.student_test_id;\n      var postBody = {\n        student_test_id: student_test_id,\n        test_problem_id: problem.id,\n        answer: answer\n      };\n      onAddFreeResponseAnswerToTest(postBody, problem.test_section_id);\n\n      _this.setState({\n        answer: answer\n      });\n    });\n\n    _this.state = {\n      answer: props.problem.student_answer,\n      basicStyle: {\n        width: \"50px\"\n      },\n      incorrectStyle: {\n        color: \"#fff\",\n        borderColor: \"#ad1e3e\",\n        backgroundColor: \"#db1d41\",\n        width: \"50px\"\n      },\n      correctStyle: {\n        color: \"#fff\",\n        borderColor: \"#32955c\",\n        backgroundColor: \"#3eb777\",\n        width: \"50px\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(FreeResponseInput, [{\n    key: \"render\",\n    value: function render() {\n      var answerStatus = this.props.answerStatus;\n      var style = {};\n      !answerStatus.complete ? style = this.state.basicStyle : !answerStatus.isCorrect ? style = this.state.incorrectStyle : style = this.state.correctStyle;\n      return __jsx(\"input\", {\n        className: \"badge badge-rounded badge-rounded-bordered\",\n        style: style,\n        type: \"text\",\n        name: \"answer\",\n        defaultValue: this.state.answer,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FreeResponseInput;\n}(React.Component);\n\nFreeResponseInput.propTypes = {\n  problem: PropTypes.object,\n  answerStatus: PropTypes.object\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddFreeResponseAnswerToTest: function onAddFreeResponseAnswerToTest(postBody, sectionId) {\n      return dispatch(addFreeResponseAnswerToTest(postBody, sectionId));\n    }\n  };\n}\n\nvar withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(FreeResponseInput);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/FreeResponse/index.js"],"names":["React","PropTypes","connect","compose","addFreeResponseAnswerToTest","FreeResponseInput","props","e","preventDefault","answer","target","value","onAddFreeResponseAnswerToTest","problem","student_test_id","testSection","postBody","test_problem_id","id","test_section_id","setState","state","student_answer","basicStyle","width","incorrectStyle","color","borderColor","backgroundColor","correctStyle","answerStatus","style","complete","isCorrect","handleInputChange","Component","propTypes","object","mapDispatchToProps","dispatch","sectionId","withConnect"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,wEAUC,UAACC,CAAD,EAAO;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAxB;AAFyB,wBAG4D,MAAKL,KAHjE;AAAA,UAGjBM,6BAHiB,eAGjBA,6BAHiB;AAAA,UAGcC,OAHd,eAGcA,OAHd;AAAA,UAGsCC,eAHtC,eAGuBC,WAHvB,CAGsCD,eAHtC;AAIzB,UAAME,QAAQ,GAAG;AAAEF,QAAAA,eAAe,EAAfA,eAAF;AAAmBG,QAAAA,eAAe,EAAEJ,OAAO,CAACK,EAA5C;AAAgDT,QAAAA,MAAM,EAANA;AAAhD,OAAjB;AACAG,MAAAA,6BAA6B,CAACI,QAAD,EAAWH,OAAO,CAACM,eAAnB,CAA7B;;AACA,YAAKC,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,KAjBkB;;AAEjB,UAAKY,KAAL,GAAa;AACXZ,MAAAA,MAAM,EAAEH,KAAK,CAACO,OAAN,CAAcS,cADX;AAEXC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFD;AAGXC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,WAAW,EAAE,SAA9B;AAAyCC,QAAAA,eAAe,EAAE,SAA1D;AAAqEJ,QAAAA,KAAK,EAAE;AAA5E,OAHL;AAIXK,MAAAA,YAAY,EAAE;AAAEH,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,WAAW,EAAE,SAA9B;AAAyCC,QAAAA,eAAe,EAAE,SAA1D;AAAqEJ,QAAAA,KAAK,EAAE;AAA5E;AAJH,KAAb;AAFiB;AAQlB;;;;6BAWQ;AAAA,UACCM,YADD,GACkB,KAAKxB,KADvB,CACCwB,YADD;AAEP,UAAIC,KAAK,GAAG,EAAZ;AACA,OAACD,YAAY,CAACE,QAAd,GAAyBD,KAAK,GAAG,KAAKV,KAAL,CAAWE,UAA5C,GAAyD,CAACO,YAAY,CAACG,SAAd,GAA0BF,KAAK,GAAG,KAAKV,KAAL,CAAWI,cAA7C,GAA8DM,KAAK,GAAG,KAAKV,KAAL,CAAWQ,YAA1I;AACA,aACE;AACE,QAAA,SAAS,EAAC,4CADZ;AAEE,QAAA,KAAK,EAAEE,KAFT;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,YAAY,EAAE,KAAKV,KAAL,CAAWZ,MAL3B;AAME,QAAA,QAAQ,EAAE,KAAKyB,iBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EAlC6BlC,KAAK,CAACmC,S;;AAqCtC9B,iBAAiB,CAAC+B,SAAlB,GAA8B;AAC5BvB,EAAAA,OAAO,EAAEZ,SAAS,CAACoC,MADS;AAE5BP,EAAAA,YAAY,EAAE7B,SAAS,CAACoC;AAFI,CAA9B;;AAKA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL3B,IAAAA,6BAA6B,EAAE,uCAACI,QAAD,EAAWwB,SAAX;AAAA,aAAyBD,QAAQ,CAACnC,2BAA2B,CAACY,QAAD,EAAWwB,SAAX,CAA5B,CAAjC;AAAA;AAD1B,GAAP;AAGD;;AAED,IAAMC,WAAW,GAAGvC,OAAO,CAAC,IAAD,EAAOoC,kBAAP,CAA3B;AAEA,eAAenC,OAAO,CAACsC,WAAD,CAAP,CAAqBpC,iBAArB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addFreeResponseAnswerToTest } from '../../../../../index/actions';\n\nclass FreeResponseInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: props.problem.student_answer,\n      basicStyle: { width: \"50px\" },\n      incorrectStyle: { color: \"#fff\", borderColor: \"#ad1e3e\", backgroundColor: \"#db1d41\", width: \"50px\" },\n      correctStyle: { color: \"#fff\", borderColor: \"#32955c\", backgroundColor: \"#3eb777\", width: \"50px\" },\n    };\n  }\n\n  handleInputChange = (e) => {\n    e.preventDefault();\n    const answer = e.target.value;\n    const { onAddFreeResponseAnswerToTest, problem, testSection: { student_test_id } } = this.props;\n    const postBody = { student_test_id, test_problem_id: problem.id, answer };\n    onAddFreeResponseAnswerToTest(postBody, problem.test_section_id);\n    this.setState({ answer });\n  };\n\n  render() {\n    const { answerStatus } = this.props;\n    let style = {};\n    !answerStatus.complete ? style = this.state.basicStyle : !answerStatus.isCorrect ? style = this.state.incorrectStyle : style = this.state.correctStyle;\n    return (\n      <input\n        className=\"badge badge-rounded badge-rounded-bordered\"\n        style={style}\n        type=\"text\"\n        name=\"answer\"\n        defaultValue={this.state.answer}\n        onChange={this.handleInputChange}\n      />\n    );\n  }\n}\n\nFreeResponseInput.propTypes = {\n  problem: PropTypes.object,\n  answerStatus: PropTypes.object,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddFreeResponseAnswerToTest: (postBody, sectionId) => dispatch(addFreeResponseAnswerToTest(postBody, sectionId)),\n  };\n}\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(FreeResponseInput);\n"]},"metadata":{},"sourceType":"module"}