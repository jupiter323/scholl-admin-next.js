{"ast":null,"code":"// This function pulls the matching value objects from state for each Dropdown component if an existing value exists - otherwise, returns empty object\nvar getValueFromState = function getValueFromState(valueKey, state) {\n  var obj = {}; // eslint-disable-next-line array-callback-return\n\n  state.map(function (option) {\n    if (option.value === valueKey) {\n      obj = option;\n    }\n  });\n  return obj;\n};\n\nexport default getValueFromState;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\utils\\getValueFromState.js"],"names":["getValueFromState","valueKey","state","obj","map","option","value"],"mappings":"AAAA;AACA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,KAAX,EAAqB;AAC7C,MAAIC,GAAG,GAAG,EAAV,CAD6C,CAE7C;;AACAD,EAAAA,KAAK,CAACE,GAAN,CAAU,UAAAC,MAAM,EAAI;AAClB,QAAIA,MAAM,CAACC,KAAP,KAAiBL,QAArB,EAA+B;AAC7BE,MAAAA,GAAG,GAAGE,MAAN;AACD;AACF,GAJD;AAKA,SAAOF,GAAP;AACD,CATD;;AAWA,eAAeH,iBAAf","sourcesContent":["// This function pulls the matching value objects from state for each Dropdown component if an existing value exists - otherwise, returns empty object\nconst getValueFromState = (valueKey, state) => {\n  let obj = {};\n  // eslint-disable-next-line array-callback-return\n  state.map(option => {\n    if (option.value === valueKey) {\n      obj = option;\n    }\n  });\n  return obj;\n};\n\nexport default getValueFromState;\n"]},"metadata":{},"sourceType":"module"}