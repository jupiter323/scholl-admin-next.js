{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport DetailPage from '../components/Worksheet/DetailPage';\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView';\nimport ListView from '../components/Worksheets/components/ListView'; // import WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\n// import WorksheetListItem from '../components/Worksheets/components/WorksheetListItem';\n\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, worksheetName, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar Worksheets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Worksheets, _Component);\n\n  function Worksheets(props) {\n    var _this;\n\n    _classCallCheck(this, Worksheets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Worksheets).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        filterName: \"\",\n        filterTopic: \"\",\n        subjectFilters: [],\n        difficultyFilters: [],\n        problemTypeFilters: [],\n        sourceFilter: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({\n        worksheetsAreFiltered: false\n      }, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (filterTopic) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterTopic: filterTopic\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredTopicState\", function () {\n      return _this.setState({\n        filterTopic: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortWorksheets\", function (worksheets) {\n      var sort = _this.setState.sort;\n\n      switch (sort) {\n        case \"problemType\":\n          return worksheets.sort(problemType);\n\n        case 'subject':\n          return worksheets.sort(subject);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'difficulty':\n          return worksheets.sort(difficulty);\n\n        case 'name':\n          return worksheets.sort(worksheetName);\n\n        case 'source':\n          return worksheets.sort(source);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          worksheets = _this$state.worksheets,\n          filterName = _this$state.filterName;\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var newWorksheetName = currentWorksheet.newWorksheetName;\n        var worksheetString = newWorksheetName.replace(/\\s/g, \"\").toLowerCase();\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByTopic\", function () {\n      var preFilteredWorksheets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allWorksheets = _this$state2.worksheets,\n          filterTopic = _this$state2.filterTopic;\n      var worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var topic = currentWorksheet.topic;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      var newArray = _this.arrayItemRemover(worksheets, worksheets[index]);\n\n      _this.setState({\n        worksheets: newArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      _this.setState(function (prevState) {\n        prevState.worksheets.push(worksheets[index]);\n        return {\n          students: prevState.students\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterWorksheets\", function () {\n      var _this$state3 = _this.state,\n          problemTypeFilters = _this$state3.problemTypeFilters,\n          subjectFilters = _this$state3.subjectFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          sourceFilters = _this$state3.sourceFilters,\n          allWorksheets = _this$state3.worksheets;\n      var worksheets = allWorksheets;\n\n      if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return problemTypeFilters.indexOf(worksheet.problemType) !== -1;\n        });\n      }\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return subjectFilters.indexOf(worksheet.subject) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return difficultyFilters.indexOf(worksheet.difficulty) !== -1;\n        });\n      }\n\n      if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return sourceFilters.indexOf(worksheet.worksheetSource) !== -1;\n        });\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableWorksheets\", function () {\n      var _this$state4 = _this.state,\n          problemTypeFilters = _this$state4.problemTypeFilters,\n          subjectFilters = _this$state4.subjectFilters,\n          difficultyFilters = _this$state4.difficultyFilters,\n          sourceFilters = _this$state4.sourceFilters,\n          worksheets = _this$state4.worksheets,\n          filterName = _this$state4.filterName,\n          sort = _this$state4.sort,\n          filterTopic = _this$state4.filterTopic;\n      var mappableWorksheets = worksheets;\n\n      if (filterName.length && !filterTopic.length) {\n        mappableWorksheets = _this.onFilterByName();\n      }\n\n      if (!filterName.length && filterTopic.length) {\n        mappableWorksheets = _this.onFilterbyTopic();\n      }\n\n      if (filterName.length && filterTopic.length) {\n        var filteredByName = _this.onFilterByName();\n\n        mappableWorksheets = _this.onFilterByTopic(filteredByName);\n      }\n\n      if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length) {\n        mappableWorksheets = _this.onFilterWorksheets();\n      }\n\n      if (sort) {\n        return _this.onSortWorksheets(mappableWorksheets);\n      }\n\n      return mappableWorksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'filterName') {\n        if (event === '') {\n          return _this.onUnsetFilteredState();\n        }\n\n        return _this.onSetFilteredState(event);\n      }\n\n      if (name === 'filterTopic') {\n        if (event === \"\") {\n          return _this.onUnsetFilteredState();\n        }\n\n        return _this.onSetFilteredState(event);\n      } else if (name === 'sort') {\n        return _this.onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentSubjectFilters = _this$state5.subjectFilters,\n          currentProblemTypeFilters = _this$state5.problemTypeFilters,\n          currentDifficultyFilters = _this$state5.difficultyFilters,\n          currentSourceFilters = _this$state5.sourceFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'problemType':\n          modifiedFilterCurrentState = currentProblemTypeFilters;\n          modifiedFilterName = 'problemTypeFilters';\n          break;\n\n        case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n\n        default:\n          break;\n      } // Decide whether we're adding or removing the selected filter\n\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (worksheet) {\n        return worksheet !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var active = _this.state.active;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          worksheets: _this.getMappableWorksheets(),\n          mapWorksheets: _this.getMappableWorksheets,\n          onDeleteWorksheet: _this.onDeleteWorksheet,\n          onCloneWorksheet: _this.onCloneWorksheet\n        });\n      }\n\n      if (active === 'list') {\n        return React.createElement(ListView, {\n          worksheets: _this.getMappableWorksheets(),\n          mapWorksheets: _this.getMappableWorksheets,\n          onDeleteWorksheet: _this.onDeleteWorksheet\n        });\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      sourceFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(Worksheets, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state6 = this.state,\n          dropdownIsOpen = _this$state6.dropdownIsOpen,\n          currentView = _this$state6.currentView,\n          subjectFilters = _this$state6.subjectFilters,\n          sourceFilters = _this$state6.sourceFilters,\n          difficultyFilters = _this$state6.difficultyFilters,\n          problemTypeFilters = _this$state6.problemTypeFilters;\n      return React.createElement(\"div\", {\n        className: \"worksheets-page\"\n      }, React.createElement(\"div\", {\n        className: \"wrapper\"\n      }, React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(WorksheetHeading, null), React.createElement(FilterSection, {\n        subjectFilters: subjectFilters,\n        difficutlyFilters: difficultyFilters,\n        problemTypeFilters: problemTypeFilters,\n        sourceFilters: sourceFilters,\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        onUnsetFilteredTopicState: this.onUnsetFilteredTopicState,\n        handleFilterClick: this.handleFilterClick\n      }), this.renderCurrentView()), React.createElement(\"div\", {\n        className: \"add-btn-block dropdown-small\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetDropdown(event, dropdownIsOpen);\n        },\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n        \"data-target\": \"dropdown_assign_selected\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"Custom Worksheet\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign_selected\",\n        className: \"dropdown-content dropdown-small\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Create New\")))))));\n    }\n  }]);\n\n  return Worksheets;\n}(Component);\n\nexport default Worksheets;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\pages\\worksheets.js"],"names":["React","Component","update","DetailPage","WorksheetHeading","FullView","ListView","sampleWorksheets","FilterSection","problemType","subject","problems","difficulty","worksheetName","source","timeEstimate","Worksheets","props","setState","filterName","filterTopic","subjectFilters","difficultyFilters","problemTypeFilters","sourceFilter","sort","view","currentView","active","worksheetsAreFiltered","filter","checkForFilteredState","worksheets","state","reduce","finalArr","currentWorksheet","newWorksheetName","worksheetString","replace","toLowerCase","indexOf","push","preFilteredWorksheets","allWorksheets","length","topic","index","newArray","arrayItemRemover","prevState","students","sourceFilters","worksheet","worksheetSource","mappableWorksheets","onFilterByName","onFilterbyTopic","filteredByName","onFilterByTopic","onFilterWorksheets","onSortWorksheets","event","name","value","target","updatedState","$merge","onUnsetFilteredState","onSetFilteredState","onSetSort","filterType","currentSubjectFilters","currentProblemTypeFilters","currentDifficultyFilters","currentSourceFilters","modifiedFilterCurrentState","modifiedFilterName","modifiedFilterUpdatedState","$push","filterIndex","$splice","array","getMappableWorksheets","onDeleteWorksheet","onCloneWorksheet","modalOpen","dropdownIsOpen","onChangeView","onSetFilteredTopicState","onUnsetFilteredTopicState","handleFilterClick","renderCurrentView","onSetDropdown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport DetailPage from '../components/Worksheet/DetailPage';\n\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView'\nimport ListView from '../components/Worksheets/components/ListView';\n// import WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\n// import WorksheetListItem from '../components/Worksheets/components/WorksheetListItem';\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, worksheetName, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Worksheets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      sourceFilters: [],\n    };\n  }\n  onClearFilters = () => this.setState({ filterName: \"\", filterTopic: \"\", subjectFilters: [], difficultyFilters: [], problemTypeFilters: [], sourceFilter: \"\" })\n\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view, active: view });\n\n  onSetFilteredState = (filterName) => this.setState({ worksheetsAreFiltered: true, filterName })\n  onUnsetFilteredState = (filter) => this.setState({ worksheetsAreFiltered: false, [filter]: \"\" })\n\n  onSetFilteredTopicState = (filterTopic) => this.setState({ worksheetsAreFiltered: true, filterTopic })\n  onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.setState;\n    switch (sort) {\n      case \"problemType\":\n        return worksheets.sort(problemType);\n      case 'subject':\n        return worksheets.sort(subject);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'difficulty':\n        return worksheets.sort(difficulty);\n      case 'name':\n        return worksheets.sort(worksheetName);\n      case 'source':\n        return worksheets.sort(source);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { newWorksheetName } = currentWorksheet;\n      const worksheetString = newWorksheetName.replace(/\\s/g, \"\").toLowerCase();\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onDeleteWorksheet = (index) => {\n    const { worksheets } = this.state;\n    const newArray = this.arrayItemRemover(worksheets, worksheets[index])\n    this.setState({ worksheets: newArray })\n  }\n\n  onCloneWorksheet = (index) => {\n    const { worksheets } = this.state;\n    this.setState(prevState => {\n      prevState.worksheets.push(worksheets[index]);\n      return { students: prevState.students }\n    })\n  }\n\n  onFilterWorksheets = () => {\n    const { problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets: allWorksheets } = this.state;\n    let worksheets = allWorksheets;\n    if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n      worksheets = worksheets.filter(worksheet => problemTypeFilters.indexOf(worksheet.problemType) !== -1);\n    }\n    if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => subjectFilters.indexOf(worksheet.subject) !== -1)\n    }\n    if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => difficultyFilters.indexOf(worksheet.difficulty) !== -1)\n    }\n    if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => sourceFilters.indexOf(worksheet.worksheetSource) !== -1)\n    }\n    return worksheets;\n  }\n\n  getMappableWorksheets = () => {\n\n    const { problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets, filterName, sort, filterTopic } = this.state;\n    let mappableWorksheets = worksheets;\n    if (filterName.length && !filterTopic.length) {\n      mappableWorksheets = this.onFilterByName();\n    }\n    if (!filterName.length && filterTopic.length){\n      mappableWorksheets = this.onFilterbyTopic();\n    }\n    if (filterName.length && filterTopic.length) {\n      const filteredByName = this.onFilterByName();\n      mappableWorksheets = this.onFilterByTopic(filteredByName)\n    }\n    if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length){\n      mappableWorksheets = this.onFilterWorksheets();\n    }\n    if (sort) {\n      return this.onSortWorksheets(mappableWorksheets)\n    }\n    return mappableWorksheets;\n  }\n\n  handleFilterChange = (event, name) => {\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'filterName') {\n      if (event === '') {\n        return this.onUnsetFilteredState();\n      }\n      return this.onSetFilteredState(event);\n    }\n    if (name === 'filterTopic') {\n      if (event === \"\") {\n        return this.onUnsetFilteredState();\n      }\n      return this.onSetFilteredState(event);\n    } else if (name === 'sort') {\n      return this.onSetSort(event);\n    }\n  }\n\n  handleFilterClick = (filterType, filter) => {\n    const { subjectFilters: currentSubjectFilters, problemTypeFilters: currentProblemTypeFilters, difficultyFilters: currentDifficultyFilters, sourceFilters: currentSourceFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'difficulty':\n        modifiedFilterCurrentState = currentDifficultyFilters;\n        modifiedFilterName = 'difficultyFilters';\n        break;\n      case 'problemType':\n        modifiedFilterCurrentState = currentProblemTypeFilters;\n        modifiedFilterName = 'problemTypeFilters';\n        break;\n      case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n        default:\n        break;\n    }\n    // Decide whether we're adding or removing the selected filter\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n\narrayItemRemover = (array, value) => array.filter((worksheet) => worksheet !== value)\n\n// TODO get mappable worksheets before rendering view\nrenderCurrentView = () => {\n  const { active } = this.state;\n  if (active === 'full') {\n    return <FullView worksheets={this.getMappableWorksheets()} mapWorksheets={this.getMappableWorksheets} onDeleteWorksheet={this.onDeleteWorksheet} onCloneWorksheet={this.onCloneWorksheet} />;\n  }\n  if (active === 'list') {\n    return <ListView worksheets={this.getMappableWorksheets()} mapWorksheets={this.getMappableWorksheets} onDeleteWorksheet={this.onDeleteWorksheet} />;\n  }\n  return null;\n}\n\nrender() {\n  const { dropdownIsOpen, currentView, subjectFilters, sourceFilters, difficultyFilters, problemTypeFilters } = this.state;\n  return (\n    <div className=\"worksheets-page\">\n      <div className=\"wrapper\">\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-5\">\n            <WorksheetHeading />\n            <FilterSection\n              subjectFilters={subjectFilters}\n              difficutlyFilters={difficultyFilters}\n              problemTypeFilters={problemTypeFilters}\n              sourceFilters={sourceFilters}\n              currentView={currentView}\n              onChangeView={this.onChangeView}\n              onSetSort={this.onSetSort}\n              onSetFilteredState={this.onSetFilteredState}\n              onUnsetFilteredState={this.onUnsetFilteredState}\n              onSetFilteredTopicState={this.onSetFilteredTopicState}\n              onUnsetFilteredTopicState={this.onUnsetFilteredTopicState}\n              handleFilterClick={this.handleFilterClick}\n            />\n           {this.renderCurrentView()}\n            </div>\n          <div className=\"add-btn-block dropdown-small\">\n            <a\n              href=\"#\"\n              onClick={(event) => this.onSetDropdown(event, dropdownIsOpen)}\n              className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n              data-target='dropdown_assign_selected'>\n              <i className=\"material-icons\">add</i>\n              Custom Worksheet\n                </a>\n            <ul id='dropdown_assign_selected' className='dropdown-content dropdown-small'>\n              <li><a href=\"#\">From Saved</a></li>\n              <li><a href=\"#\">Create New</a></li>\n            </ul>\n          </div>\n        </main>\n      </div>\n    </div>\n\n  );\n}\n}\n\nexport default Worksheets;"]},"metadata":{},"sourceType":"module"}