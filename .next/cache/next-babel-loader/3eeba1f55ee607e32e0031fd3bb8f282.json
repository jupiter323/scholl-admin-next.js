{"ast":null,"code":"import { take, call, put, all } from \"redux-saga/effects\";\nimport { FETCH_STUDENTS, SET_STUDENTS, ADD_STUDENT, DELETE_STUDENT } from \"./components/Student/index/constants\";\nimport { fetchStudents, setStudents, addStudent } from \"./components/Student/index/actions\";\nimport { studentApi } from \"./api\";\nconst {\n  fetchStudentsApi,\n  addNewStudentApi\n} = studentApi;\n/** ******************************************    STUDENTS    ********************************************/\n\nexport function* watchForFetchStudents() {\n  while (true) {\n    yield take(FETCH_STUDENTS);\n    yield call(fetchStudents);\n  }\n}\nexport function* watchForAddStudent() {\n  while (true) {\n    try {\n      const {\n        student\n      } = yield take(ADD_STUDENT);\n      const response = yield call(addNewStudentApi, student);\n\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with adding a new student!\");\n      }\n\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occurred in watchForAddStudent\", err);\n    }\n  }\n}\nconst {\n  deleteStudentApi\n} = studentApi;\nexport function* watchForDeleteStudent() {\n  while (true) {\n    try {\n      const {\n        id\n      } = yield take(DELETE_STUDENT);\n      const response = yield call(deleteStudentApi, id);\n\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with deleting a student.\");\n      }\n\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occured in watchForDeleteStudent\", err);\n    }\n  }\n}\nexport default function* defaultSaga() {\n  yield all([watchForFetchStudents(), watchForAddStudent(), watchForDeleteStudent()]);\n}","map":null,"metadata":{},"sourceType":"module"}