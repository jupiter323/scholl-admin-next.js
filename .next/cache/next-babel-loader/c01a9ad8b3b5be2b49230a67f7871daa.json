{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { difficultyMap, getAnswerColor, getCompleteAnswerColor } from '../../utils';\n\nclass Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"mapAnswerChoices\", () => {\n      const {\n        question: {\n          answerType,\n          answerChoices,\n          studentAnswer\n        },\n        answerSheetComplete\n      } = this.props;\n\n      if (answerSheetComplete) {\n        if (answerType === 'letter') {\n          return __jsx(\"ul\", {\n            className: \"answer-list\"\n          }, answerChoices.map(answer => __jsx(\"li\", {\n            key: answer.answerLetter\n          }, __jsx(\"span\", {\n            className: \"badge-circle badge-circle-bordered\",\n            style: getCompleteAnswerColor('letter', answer, studentAnswer)\n          }, answer.answerLetter))));\n        }\n\n        return __jsx(\"ul\", {\n          className: \"answer-list\"\n        }, answerChoices.map(answer => __jsx(\"li\", {\n          key: answer.answerValue\n        }, __jsx(\"span\", {\n          className: \"badge badge-rounded badge-rounded-bordered\",\n          style: getCompleteAnswerColor('value', answer, studentAnswer)\n        }, answer.answerValue))));\n      }\n\n      if (answerType === 'letter') {\n        return __jsx(\"ul\", {\n          className: \"answer-list\"\n        }, answerChoices.map(answer => __jsx(\"li\", {\n          key: answer.answerLetter\n        }, __jsx(\"span\", {\n          className: \"badge-circle badge-circle-bordered\",\n          style: getAnswerColor(answer)\n        }, answer.answerLetter))));\n      }\n\n      return __jsx(\"ul\", {\n        className: \"answer-list\"\n      }, answerChoices.map(answer => __jsx(\"li\", {\n        key: answer.answerValue\n      }, __jsx(\"span\", {\n        className: \"badge badge-rounded badge-rounded-bordered\",\n        style: getAnswerColor(answer)\n      }, answer.answerValue))));\n    });\n  }\n\n  render() {\n    const {\n      onOpenQuestionModal,\n      question,\n      answerSheetComplete,\n      handleQuestionDropdownClick,\n      questionDropdownOpen,\n      questionDropdownIndex\n    } = this.props;\n    const {\n      difficulty,\n      hasVideo,\n      flagged,\n      studentNotes\n    } = question;\n    return __jsx(\"li\", {\n      className: \"answers-list-holder\"\n    }, __jsx(\"div\", {\n      className: \"answer-row row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col col-120\"\n    }, this.mapAnswerChoices()), __jsx(\"div\", {\n      className: \"col col-30\"\n    }, __jsx(\"span\", {\n      className: \"status-info\"\n    }, difficultyMap[difficulty])), hasVideo && __jsx(\"div\", {\n      className: \"col col-43\"\n    }, __jsx(\"span\", {\n      className: \"play-progress\",\n      \"data-video-id\": \"video001\"\n    }, __jsx(\"span\", {\n      className: \"play\"\n    }), __jsx(\"svg\", {\n      viewBox: \"0 0 50 50\",\n      width: \"50\",\n      height: \"50\",\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, __jsx(\"circle\", {\n      className: \"circle-static\",\n      cx: \"25.8\",\n      cy: \"24.3\",\n      r: \"22.8\",\n      style: {\n        strokeWidth: '3',\n        fill: 'rgba(0,0,0,0)'\n      }\n    }), __jsx(\"circle\", {\n      className: \"circle-progress\",\n      cx: \"25.8\",\n      cy: \"24.3\",\n      r: \"22.8\",\n      style: {\n        stroke: 'none',\n        strokeWidth: '3',\n        fill: 'rgba(0,0,0,0)'\n      }\n    })))), __jsx(\"div\", {\n      className: \"col col-auto\"\n    }, answerSheetComplete && flagged ? __jsx(\"span\", {\n      className: \"status-answer\",\n      style: {\n        color: '#c0272d'\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-flag\"\n    }), __jsx(\"b\", {\n      className: \"status-text\"\n    }, \"Review\")) : null), __jsx(\"div\", {\n      className: \"dropdown-block col col-35\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"dropdown-trigger\",\n      \"data-target\": \"dropdown_answer01-3\",\n      onClick: event => handleQuestionDropdownClick(event, question)\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), questionDropdownOpen && question.id === questionDropdownIndex ? __jsx(\"ul\", {\n      id: \"dropdown_answer01-3\",\n      className: \"dropdown-content dropdown-exwide\",\n      style: {\n        display: 'block',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      className: \"modal-trigger\",\n      href: \"#\",\n      onClick: () => onOpenQuestionModal(question)\n    }, \"View Problem\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\"\n    }, \"Dismiss Flag\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\"\n    }, \"Edit Response\"))) : null)), answerSheetComplete && studentNotes ? __jsx(\"div\", {\n      className: \"comment-block\"\n    }, __jsx(\"p\", null, \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore?  tincidunt ut laoreet dolore?\")) : null);\n  }\n\n}\n\n;\nexport default Question;","map":null,"metadata":{},"sourceType":"module"}