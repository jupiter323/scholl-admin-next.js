{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/components/StudentCard/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\n\nvar _data = function data() {\n  var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return {\n    datasets: [{\n      data: [current - initial, target - initial - (current - initial)],\n      backgroundColor: ['#0085ce', '#eaeaea']\n    }]\n  };\n};\n\nvar StudentCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StudentCard, _React$Component);\n\n  function StudentCard(props) {\n    var _this;\n\n    _classCallCheck(this, StudentCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenEditModal\", function () {\n      _this.props.onCloseDropdown();\n\n      _this.setState({\n        editModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseEditModal\", function () {\n      return _this.setState({\n        editModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(StudentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onHandleStudentCard = _this$props2.onHandleStudentCard,\n          onSaveStudentChanges = _this$props2.onSaveStudentChanges,\n          onDeleteStudent = _this$props2.onDeleteStudent,\n          onCloneStudent = _this$props2.onCloneStudent,\n          index = _this$props2.index,\n          dropdownIndex = _this$props2.dropdownIndex,\n          student = _this$props2.student,\n          _this$props2$student = _this$props2.student,\n          id = _this$props2$student.id,\n          active = _this$props2$student.active,\n          tutor = _this$props2$student.tutor,\n          _this$props2$student$ = _this$props2$student.testScores,\n          initialScore = _this$props2$student$.initialScore,\n          currentScore = _this$props2$student$.currentScore,\n          targetScore = _this$props2$student.courseContext.targetScore,\n          _this$props2$student$2 = _this$props2$student.studentInformation,\n          firstName = _this$props2$student$2.firstName,\n          lastName = _this$props2$student$2.lastName,\n          email = _this$props2$student.emailAddress.email,\n          stats = _this$props2$student.stats,\n          dropdownIsOpen = _this$props2.dropdownIsOpen;\n      var editModalOpen = this.state.editModalOpen;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(EditModal, {\n        open: editModalOpen,\n        onSaveStudentChanges: onSaveStudentChanges,\n        onCloseEditModal: this.onCloseEditModal,\n        student: student,\n        handleDetailsChange: this.handleDetailsChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\",\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: active ? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"owner-box card-panel card-panel-panel card-panel-large\",\n        style: {\n          backgroundColor: active ? \"#0085ce\" : \"#9b9b9b\",\n          color: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"user-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: active ? \"#14b14b\" : \"#808080\",\n          color: \"#fff\",\n          height: \"45px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: \"#\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        className: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        value: student,\n        onClick: function onClick() {\n          return onHandleStudentCard({\n            index: index\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, lastName, \", \", firstName)), __jsx(\"a\", {\n        href: \"mailto:\".concat(email),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, email)))), __jsx(\"div\", {\n        className: \"col s2 right-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"block-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"text-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Student\"))), __jsx(\"div\", {\n        className: \"col s1 right-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row icons-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"dropdown-block col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger btn\",\n        \"data-target\": \"dropdown01\",\n        onClick: this.handleDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: \"block\",\n          opacity: \"1\",\n          transform: \"scaleX(1) scaleY(1)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"modal-trigger link-block\",\n        onClick: this.onOpenEditModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Edit\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onCloneStudent(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Clone\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Show Owner\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onDeleteStudent(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Delete\"))) : null))))), __jsx(\"div\", {\n        className: \"card-content\",\n        ref: this.studentCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row d-flex align-items-center mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-container chart-container-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, active ? __jsx(Doughnut, {\n        data: function data() {\n          return _data(currentScore, targetScore, initialScore);\n        },\n        height: 210,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 60,\n          tooltips: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }) : null, __jsx(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: \"#0085ce\",\n          bottom: \"7px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": initialScore,\n        \"data-end-val\": currentScore,\n        \"data-duration\": \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, currentScore))), __jsx(\"div\", {\n        className: \"chart-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-col chart-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"amount\",\n        style: {\n          color: \"#0085ce\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, initialScore), __jsx(\"span\", {\n        className: \"amount-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\xA0 initial\")), __jsx(\"div\", {\n        className: \"chart-col chart-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, targetScore), __jsx(\"span\", {\n        className: \"amount-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"\\xA0 target\"))))), __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"points-list-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"style-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, stats.complete), __jsx(\"span\", {\n        className: \"point-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"complete\")), __jsx(\"li\", {\n        className: \"style-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, stats.overdue), __jsx(\"span\", {\n        className: \"point-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"overdue\")), __jsx(\"li\", {\n        className: \"style-orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, stats.practice_tests), __jsx(\"span\", {\n        className: \"point-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"practice tests\")), __jsx(\"li\", {\n        className: \"style-blue-lighter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, stats.sessions_complete), \" \", __jsx(\"span\", {\n        className: \"of\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"of \", stats.total_sessions)), __jsx(\"span\", {\n        className: \"point-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"sessions\"))))), __jsx(\"div\", {\n        className: \"card-inner-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"category-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"category-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"category-badge badge-purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"category-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, tutor)))))))));\n    }\n  }]);\n\n  return StudentCard;\n}(React.Component);\n\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired,\n  onHandleStudentCard: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  onDeleteStudent: PropTypes.func.isRequired,\n  onCloneStudent: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIndex: PropTypes.number,\n  onSaveStudentChanges: PropTypes.func.isRequired\n};\nexport default StudentCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/components/StudentCard/index.js"],"names":["React","PropTypes","Doughnut","EditModal","data","current","target","initial","datasets","backgroundColor","StudentCard","props","onCloseDropdown","setState","editModalOpen","event","onSetDropdown","dropdownIsOpen","index","preventDefault","state","cloneModalOpen","showOwnerModalOpen","deleteModalOpen","activateAccountModalOpen","assignInstructorModalOpen","onHandleStudentCard","onSaveStudentChanges","onDeleteStudent","onCloneStudent","dropdownIndex","student","id","active","tutor","testScores","initialScore","currentScore","targetScore","courseContext","studentInformation","firstName","lastName","email","emailAddress","stats","onCloseEditModal","handleDetailsChange","color","height","handleDropdownClick","display","opacity","transform","onOpenEditModal","studentCard","circumference","Math","PI","rotation","cutoutPercentage","tooltips","bottom","complete","overdue","practice_tests","sessions_complete","total_sessions","Component","propTypes","object","isRequired","func","bool","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\nconst data = (current = 0, target = 0, initial = 0) => ({\n  datasets: [{\n    data: [current - initial, (target - initial) - (current - initial)],\n    backgroundColor: [\n      '#0085ce',\n      '#eaeaea',\n    ],\n  }],\n});\n\nclass StudentCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false,\n    };\n  }\n\n    onOpenEditModal = () => {\n      this.props.onCloseDropdown();\n      this.setState({ editModalOpen: true });\n    }\n    onCloseEditModal = () => this.setState({ editModalOpen: false })\n\n    handleDropdownClick = (event) => {\n      const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n      event.preventDefault();\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n      return onSetDropdown(index);\n    }\n\n    render() {\n      const { onHandleStudentCard, onSaveStudentChanges, onDeleteStudent, onCloneStudent, index, dropdownIndex, student, student: { id, active, tutor, testScores: { initialScore, currentScore }, courseContext: { targetScore }, studentInformation: { firstName, lastName },\n        emailAddress: { email }, stats }, dropdownIsOpen } = this.props;\n      const { editModalOpen } = this.state;\n      return (\n        <React.Fragment>\n          <EditModal\n            open={editModalOpen}\n            onSaveStudentChanges={onSaveStudentChanges}\n            onCloseEditModal={this.onCloseEditModal}\n            student={student}\n            handleDetailsChange={this.handleDetailsChange}\n          />\n\n          <div className=\"card-main-col col s12 m8 l7 xl5\" id={id}>\n            <div\n              className={\n                active\n                  ? \"card-main card-location card card-large\"\n                  : \"card-main card-location card-disabled card-large card\"\n              }\n            >\n              <div\n                className=\"owner-box card-panel card-panel-panel card-panel-large\"\n                style={{\n                  backgroundColor: active ? \"#0085ce\" : \"#9b9b9b\",\n                  color: \"#fff\",\n                }}\n              >\n                <div className=\"card-panel-row row\">\n                  <div className=\"col s9\">\n                    <div className=\"user-block\">\n                      <div\n                        className=\"user-circle\"\n                        style={{\n                          backgroundColor: active ? \"#14b14b\" : \"#808080\",\n                          color: \"#fff\",\n                          height: \"45px\",\n                        }}\n                      >\n                        <img src=\"#\" alt=\"\" />\n                      </div>\n                      <div className=\"user-text\" style={{ color: \"#fff\" }}>\n                        <h4 className=\"h3\">\n                          <a\n                            href=\"#\"\n                            value={student}\n                            onClick={() => onHandleStudentCard({ index })}\n                          >\n                            {lastName}, {firstName}\n                          </a>\n                        </h4>\n                        <a href={`mailto:${email}`}>{email}</a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s2 right-align\">\n                    <span className=\"block-icon\">\n                      <i className=\"icon-user\"></i>\n                      <span className=\"text-icon\">Student</span>\n                    </span>\n                  </div>\n                  <div className=\"col s1 right-align\">\n                    <div className=\"row icons-row\">\n                      <div className=\"dropdown-block col\">\n                        <a\n                          href=\"#\"\n                          className=\"dropdown-trigger btn\"\n                          data-target=\"dropdown01\"\n                          onClick={this.handleDropdownClick}\n                        >\n                          <i className=\"material-icons dots-icon\">more_vert</i>\n                        </a>\n                        <If condition={dropdownIsOpen && dropdownIndex === index}>\n                          <ul\n                            id=\"dropdown01\"\n                            className=\"dropdown-content dropdown-wide\"\n                            style={{\n                              display: \"block\",\n                              opacity: \"1\",\n                              transform: \"scaleX(1) scaleY(1)\",\n                            }}\n                          >\n                            <li>\n                              <a\n                                href=\"#\"\n                                className=\"modal-trigger link-block\"\n                                onClick={this.onOpenEditModal}\n                              >\n                              Edit\n                              </a>\n                            </li>\n                            <li>\n                              <a href=\"#!\" onClick={() => onCloneStudent(index)}>\n                              Clone\n                              </a>\n                            </li>\n                            <li>\n                              <a href=\"#!\">Show Owner</a>\n                            </li>\n                            <li>\n                              <a href=\"#!\" onClick={() => onDeleteStudent(index)}>\n                              Delete\n                              </a>\n                            </li>\n                          </ul>\n                        </If>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* card content */}\n              <div className=\"card-content\" ref={this.studentCard}>\n                <div className=\"row d-flex align-items-center mb-0\">\n                  <div className=\"col s12 m6\">\n                    <div className=\"chart-container chart-container-large\">\n                      <div className=\"chart-holder\">\n                        <If condition={active}>\n                          <Doughnut\n                            data={() =>\n                              data(currentScore, targetScore, initialScore)\n                            }\n                            height={210}\n                            options={{\n                              circumference: 1.45 * Math.PI,\n                              rotation: -3.85,\n                              cutoutPercentage: 60,\n                              tooltips: false,\n                            }}\n                          />\n                        </If>\n                        <span\n                          className=\"chart-value\"\n                          style={{ backgroundColor: \"#0085ce\", bottom: \"7px\" }}\n                        >\n                          <span\n                            data-count-up\n                            data-start-val={initialScore}\n                            data-end-val={currentScore}\n                            data-duration=\"1\"\n                          >\n                            {currentScore}\n                          </span>\n                        </span>\n                      </div>\n                      <div className=\"chart-row\">\n                        <div className=\"chart-col chart-start\">\n                          <span className=\"amount\" style={{ color: \"#0085ce\" }}>\n                            {initialScore}\n                          </span>\n                          <span className=\"amount-text\">&nbsp; initial</span>\n                        </div>\n                        <div className=\"chart-col chart-end\">\n                          <span className=\"amount\">{targetScore}</span>\n                          <span className=\"amount-text\">&nbsp; target</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s12 m6\">\n                    <ul className=\"points-list-bordered\">\n                      <li className=\"style-green\">\n                        <span className=\"badge-circle\">\n                          {stats.complete}\n                        </span>\n                        <span className=\"point-text\">complete</span>\n                      </li>\n                      <li className=\"style-red\">\n                        <span className=\"badge-circle\">\n                          {stats.overdue}\n                        </span>\n                        <span className=\"point-text\">overdue</span>\n                      </li>\n                      <li className=\"style-orange\">\n                        <span className=\"badge-circle\">\n                          {stats.practice_tests}\n                        </span>\n                        <span className=\"point-text\">practice tests</span>\n                      </li>\n                      <li className=\"style-blue-lighter\">\n                        <span className=\"badge-circle\">\n                          <span>{stats.sessions_complete}</span>{\" \"}\n                          <span className=\"of\">\n                          of {stats.total_sessions}\n                          </span>\n                        </span>\n                        <span className=\"point-text\">sessions</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div className=\"card-inner-row\">\n                  <div className=\"row-holder\">\n                    <ul className=\"category-list\">\n                      <li className=\"category-box\">\n                        <span className=\"category-badge badge-purple\"></span>\n                        <span className=\"category-text\">{tutor}</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* </div> */}\n        </React.Fragment>\n      );\n    }\n}\n\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired,\n  onHandleStudentCard: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  onDeleteStudent: PropTypes.func.isRequired,\n  onCloneStudent: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIndex: PropTypes.number,\n  onSaveStudentChanges: PropTypes.func.isRequired,\n};\n\nexport default StudentCard;\n"]},"metadata":{},"sourceType":"module"}