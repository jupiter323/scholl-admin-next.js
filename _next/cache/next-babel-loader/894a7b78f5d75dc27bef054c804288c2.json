{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport TotalScoreCard from './components/TotalScoreCard';\nimport SectionScoreCard from './components/SectionScoreCard';\nimport TestScoreCard from './components/TestScoreCard';\nimport EssayScoresCard from './components/EssayScoresCard';\nimport CrossTestScoresCard from './components/CrossTestScoresCard';\nimport SubScoresCard from './components/SubscoresCard';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../index/selectors';\nimport { setActiveTestScores } from '../index/actions';\nimport { fetchStudentTestScoreApi } from '../index/api';\n\nclass DetailTestScorePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      this.props.onRef(this);\n    });\n\n    _defineProperty(this, \"delay\", () => {\n      const {\n        scores,\n        test: {\n          student_test_id\n        },\n        onGetTestScores,\n        activeStudent: {\n          id\n        }\n      } = this.props;\n      return new _Promise(async resolve => {\n        if (!scores) {\n          const postBody = {\n            studentId: id,\n            student_test_id\n          };\n          onGetTestScores(postBody);\n        }\n\n        setTimeout(() => {\n          resolve();\n        }, 5000);\n      });\n    });\n\n    _defineProperty(this, \"getComponentImages\", () => new _Promise(resolve => {\n      this.delay().then(() => {\n        setTimeout(async () => {\n          console.log(\"5000!\");\n          const {\n            getTargetImage\n          } = this.props;\n          const [scoresImages] = await _Promise.all([getTargetImage(document.getElementById('scoresRef'))]);\n          resolve(scoresImages);\n        }, 5000);\n      });\n    }));\n\n    _defineProperty(this, \"loadingSpinner\", () => __jsx(\"div\", {\n      className: \"overlay-spinning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Fetching Scores...\"), __jsx(\"div\", {\n      className: \"spinning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  render() {\n    const {\n      scores,\n      test\n    } = this.props;\n\n    if (!scores) {\n      return this.loadingSpinner();\n    }\n\n    if (scores.student_test_id !== test.student_test_id) {\n      return this.loadingSpinner();\n    }\n\n    const {\n      subjects,\n      cross_test_score,\n      sub_section_score,\n      essay\n    } = scores;\n    return __jsx(\"div\", {\n      className: \"container\",\n      id: \"scoresRef\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"cards-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"d-flex-content same-height justify-center row mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(TotalScoreCard, {\n      subjectScores: subjects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"d-flex-content same-height justify-center row mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(TestScoreCard, {\n      subjectScores: subjects,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), __jsx(EssayScoresCard, {\n      essayScores: essay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"d-flex-content justify-center row mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(CrossTestScoresCard, {\n      crossTestScores: cross_test_score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), __jsx(SubScoresCard, {\n      subScores: sub_section_score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nDetailTestScorePage.propTypes = {\n  getTargetImage: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent()\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetScores: scores => dispatch(setActiveTestScores(scores))\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(DetailTestScorePage);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/index.js"],"names":["React","PropTypes","connect","createStructuredSelector","compose","TotalScoreCard","SectionScoreCard","TestScoreCard","EssayScoresCard","CrossTestScoresCard","SubScoresCard","makeSelectActiveTestScores","makeSelectActiveStudent","setActiveTestScores","fetchStudentTestScoreApi","DetailTestScorePage","Component","constructor","props","onRef","scores","test","student_test_id","onGetTestScores","activeStudent","id","resolve","postBody","studentId","setTimeout","delay","then","console","log","getTargetImage","scoresImages","all","document","getElementById","componentWillUnmount","undefined","render","loadingSpinner","subjects","cross_test_score","sub_section_score","essay","propTypes","func","isRequired","object","mapStateToProps","mapDispatchToProps","dispatch","onSetScores","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport TotalScoreCard from './components/TotalScoreCard';\nimport SectionScoreCard from './components/SectionScoreCard';\nimport TestScoreCard from './components/TestScoreCard';\nimport EssayScoresCard from './components/EssayScoresCard';\nimport CrossTestScoresCard from './components/CrossTestScoresCard';\nimport SubScoresCard from './components/SubscoresCard';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../index/selectors';\nimport { setActiveTestScores } from '../index/actions';\nimport { fetchStudentTestScoreApi } from '../index/api';\n\nclass DetailTestScorePage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount = () => {\n    this.props.onRef(this);\n  };\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  delay = () => {\n    const { scores, test: { student_test_id }, onGetTestScores, activeStudent: { id } } = this.props;\n    return new Promise(async resolve => {\n      if (!scores) {\n        const postBody = { studentId: id, student_test_id };\n        onGetTestScores(postBody);\n      }\n      setTimeout(() => {\n        resolve();\n      }, 5000);\n      \n    });\n  };\n\n  getComponentImages = () =>\n    new Promise(resolve => {\n      this.delay().then(() => {\n        setTimeout(async () => {\n          console.log(\"5000!\")\n          const { getTargetImage } = this.props;\n          const [scoresImages] = await Promise.all([\n            getTargetImage(document.getElementById('scoresRef')),\n          ]);\n          resolve(scoresImages);\n        }, 5000);\n      });\n    });\n\n  loadingSpinner = () => (\n    <div className=\"overlay-spinning\">\n      <h1>Fetching Scores...</h1>\n      <div className=\"spinning\" />\n    </div>\n  )\n\n  render() {\n    const { scores, test } = this.props;\n    if (!scores) {\n      return this.loadingSpinner();\n    }\n    if (scores.student_test_id !== test.student_test_id) {\n      return this.loadingSpinner();\n    }\n    const { subjects, cross_test_score, sub_section_score, essay } = scores;\n    return (\n      <div className=\"container\" id=\"scoresRef\">\n        <div className=\"cards-section\">\n          <div className=\"d-flex-content same-height justify-center row mb-0\">\n            <TotalScoreCard subjectScores={subjects} />\n            {/* <SectionScoreCard sectionScores={sub_section_score} /> */}\n          </div>\n          <div className=\"d-flex-content same-height justify-center row mb-0\">\n            <TestScoreCard subjectScores={subjects} />\n            <EssayScoresCard essayScores={essay} />\n          </div>\n          <div className=\"d-flex-content justify-center row mb-0\">\n            <CrossTestScoresCard crossTestScores={cross_test_score} />\n            <SubScoresCard subScores={sub_section_score} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetailTestScorePage.propTypes = {\n  getTargetImage: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetScores: scores => dispatch(setActiveTestScores(scores)),\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(DetailTestScorePage);\n"]},"metadata":{},"sourceType":"module"}