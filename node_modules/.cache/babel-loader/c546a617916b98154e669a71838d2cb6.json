{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { data as _data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nvar TestSectionCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestSectionCard, _React$Component);\n\n  function TestSectionCard(props) {\n    var _this;\n\n    _classCallCheck(this, TestSectionCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestSectionCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"viewTestSectionDetails\", function () {\n      return console.warn('Pending implementation of view test section details functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dismissFlags\", function () {\n      return console.warn('Pending implementation of dismiss flags functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetTestSection\", function () {\n      return console.warn('Pending implementation of reset test section functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteTestSection\", function () {\n      return console.warn('Pending implementation of delete test section functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFlags\", function () {\n      var flags = _this.props.testSection.flags;\n\n      if (flags.length) {\n        return React.createElement(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, React.createElement(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", React.createElement(\"i\", {\n          className: \"icon-flag\"\n        }));\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      open: true\n    };\n    return _this;\n  }\n\n  _createClass(TestSectionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          testSection = _this$props2.testSection,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          dropdownIndex = _this$props2.dropdownIndex,\n          index = _this$props2.index;\n      var subject = testSection.subject,\n          timeEstimate = testSection.timeEstimate,\n          version = testSection.version,\n          availableDate = testSection.availableDate,\n          dueDate = testSection.dueDate,\n          problems = testSection.problems,\n          disabled = testSection.disabled,\n          status = testSection.status,\n          percentageComplete = testSection.percentageComplete;\n      return React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: disabled ? 'card-main test-card card-disabled card' : 'card-main test-card card'\n      }, React.createElement(\"div\", {\n        className: \"card-panel panel-border\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"icon-col col s2\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-assign-section\"\n      }), React.createElement(\"span\", {\n        className: \"text-icon\"\n      }, \"Assigned \", React.createElement(\"br\", null), \"Test Section\"))), React.createElement(\"div\", {\n        className: \"col s8\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-text\"\n      }, React.createElement(\"div\", {\n        className: \"text-large truncate\"\n      }, subjectMap[subject], \" Section\"), React.createElement(\"div\", {\n        className: \"text-small truncate\"\n      }, \"Version: \", version))), React.createElement(\"div\", {\n        className: \"position-top right-align\"\n      }, React.createElement(\"div\", {\n        className: \"icons-row\"\n      }, this.renderFlags(), React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        className: \"dropdown-trigger btn\",\n        onClick: this.handleDropdownClick\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.viewTestSectionDetails,\n        className: \"modal-trigger link-block\"\n      }, \"View Details\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.dismissFlags\n      }, \"Dismiss Flags\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.resetTestSection\n      }, \"Reset\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.deleteTestSection,\n        className: \"link-delete\"\n      }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex sameheight-all row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s6\"\n      }, React.createElement(\"div\", {\n        className: \"chart-container\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, React.createElement(Doughnut, {\n        data: function data() {\n          return _data(percentageComplete, status);\n        },\n        options: {\n          circumference: 1 * Math.PI,\n          rotation: 1 * Math.PI,\n          cutoutPercentage: 60,\n          tooltips: false\n        }\n      }), React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: graphColorMap[status]\n        }\n      }, React.createElement(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": \"0\",\n        \"data-end-val\": \"96\",\n        \"data-duration\": \"1\"\n      }), React.createElement(\"span\", {\n        className: \"percentage\"\n      }, percentageComplete, \"%\"))), React.createElement(\"div\", {\n        className: \"chart-row\"\n      }, React.createElement(\"div\", {\n        className: \"chart-col chart-start\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"chart-col chart-end\"\n      }, React.createElement(\"span\", {\n        className: \"amount\",\n        style: {\n          color: graphColorMap[status]\n        }\n      }, problems))), React.createElement(\"div\", {\n        className: \"chart-description\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Time Est:\"), React.createElement(\"dd\", null, timeEstimate, \" min\")), React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Problems:\"), React.createElement(\"dd\", null, problems))))), React.createElement(\"div\", {\n        className: \"col s6 right-align justify-end\"\n      }, React.createElement(\"div\", {\n        className: \"chart-description\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Available:\"), React.createElement(\"dd\", null, React.createElement(\"time\", {\n        dateTime: \"2018-12-15\"\n      }, availableDate))), React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Due:\"), React.createElement(\"dd\", null, React.createElement(\"time\", {\n        dateTime: \"2018-12-15\"\n      }, dueDate)))), React.createElement(\"div\", {\n        className: \"align-self-end\"\n      }, React.createElement(\"span\", {\n        className: testSectionCardColorMap[status]\n      }, status)))))));\n    }\n  }]);\n\n  return TestSectionCard;\n}(React.Component);\n\nTestSectionCard.propTypes = {\n  dropdownIndex: PropTypes.number,\n  index: PropTypes.number.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  testSection: PropTypes.object.isRequired\n};\nexport default TestSectionCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Class/TestSectionsPage/components/TestSectionCard/index.js"],"names":["React","PropTypes","Doughnut","data","subjectMap","testSectionCardColorMap","graphColorMap","TestSectionCard","props","console","warn","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","flags","testSection","length","state","open","dropdownIndex","subject","timeEstimate","version","availableDate","dueDate","problems","disabled","status","percentageComplete","renderFlags","handleDropdownClick","display","transformOrigin","opacity","transform","viewTestSectionDetails","dismissFlags","resetTestSection","deleteTestSection","circumference","Math","PI","rotation","cutoutPercentage","tooltips","backgroundColor","color","Component","propTypes","number","isRequired","func","bool","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport { data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nclass TestSectionCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    }\n  }\n\n  viewTestSectionDetails = () => console.warn('Pending implementation of view test section details functionality')\n  dismissFlags = () => console.warn('Pending implementation of dismiss flags functionality')\n  resetTestSection = () => console.warn('Pending implementation of reset test section functionality')\n  deleteTestSection = () => console.warn('Pending implementation of delete test section functionality')\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  renderFlags = () => {\n    const { testSection: { flags } } = this.props;\n    if (flags.length) {\n      return (\n        <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n      )\n    }\n    return null;\n  }\n\n  render() {\n    const { testSection, dropdownIsOpen, dropdownIndex, index } = this.props;\n    const { subject, timeEstimate, version, availableDate, dueDate, problems, disabled, status, percentageComplete } = testSection;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className={disabled ? 'card-main test-card card-disabled card' : 'card-main test-card card'}>\n          <div className=\"card-panel panel-border\">\n            <div className=\"card-panel-row row\">\n              <div className=\"icon-col col s2\">\n                <span className=\"block-icon\">\n                  <i className=\"icon-assign-section\"></i>\n                  <span className=\"text-icon\">Assigned <br />Test Section</span>\n                </span>\n              </div>\n              <div className=\"col s8\">\n                <div className=\"card-panel-text\">\n                  <div className=\"text-large truncate\">{subjectMap[subject]} Section</div>\n                  <div className=\"text-small truncate\">Version: {version}</div>\n                </div>\n              </div>\n              <div className=\"position-top right-align\">\n                <div className=\"icons-row\">\n                  {this.renderFlags()}\n                  <div className=\"dropdown-block col\">\n                    <a\n                      href='#'\n                      data-target='dropdown01'\n                      className='dropdown-trigger btn'\n                      onClick={this.handleDropdownClick}\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen && dropdownIndex === index}>\n                      <ul\n                        id='dropdown01'\n                        className='dropdown-content dropdown-wide'\n                        style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                      >\n                        <li><a href=\"#\" onClick={this.viewTestSectionDetails} className=\"modal-trigger link-block\">View Details</a></li>\n                        <li><a href=\"#\" onClick={this.dismissFlags}>Dismiss Flags</a></li>\n                        <li><a href=\"#\" onClick={this.resetTestSection}>Reset</a></li>\n                        <li><a href=\"#\" onClick={this.deleteTestSection} className=\"link-delete\">Delete</a></li>\n                      </ul>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"d-flex sameheight-all row mb-0\">\n              <div className=\"col s6\">\n                <div className=\"chart-container\">\n                  <div className=\"chart-holder\">\n                    <Doughnut\n                      data={() => data(percentageComplete, status)}\n                      options={{\n                        circumference: 1 * Math.PI,\n                        rotation: 1 * Math.PI,\n                        cutoutPercentage: 60,\n                        tooltips: false,\n                      }}\n                    />\n                    <span className=\"chart-value\" style={{ backgroundColor: graphColorMap[status] }}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span><span className=\"percentage\">{percentageComplete}%</span></span>\n                  </div>\n                  <div className=\"chart-row\">\n                    <div className=\"chart-col chart-start\">&nbsp;</div>\n                    <div className=\"chart-col chart-end\">\n                      <span className=\"amount\" style={{ color: graphColorMap[status] }}>{problems}</span>\n                    </div>\n                  </div>\n                  <div className=\"chart-description\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Time Est:</dt>\n                      <dd>{timeEstimate} min</dd>\n                    </dl>\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problems:</dt>\n                      <dd>{problems}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s6 right-align justify-end\">\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Available:</dt>\n                    <dd><time dateTime=\"2018-12-15\">{availableDate}</time></dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Due:</dt>\n                    <dd><time dateTime=\"2018-12-15\">{dueDate}</time></dd>\n                  </dl>\n                </div>\n                <div className=\"align-self-end\">\n                  <span className={testSectionCardColorMap[status]}>{status}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTestSectionCard.propTypes = {\n  dropdownIndex: PropTypes.number,\n  index: PropTypes.number.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  testSection: PropTypes.object.isRequired,\n}\n\nexport default TestSectionCard;\n"]},"metadata":{},"sourceType":"module"}