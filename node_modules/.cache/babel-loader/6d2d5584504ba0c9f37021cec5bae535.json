{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar _data = function data(totalScore, totalPossible) {\n  return {\n    datasets: [{\n      data: [totalPossible, totalPossible - totalScore],\n      backgroundColor: ['#ce237a', 'rgb(234, 234, 234)']\n    }]\n  };\n}; // eslint-disable-next-line react/prop-types\n\n\nvar TotalScoreCard = function TotalScoreCard(_ref) {\n  var totalScore = _ref.totalScore,\n      totalPossible = _ref.totalPossible;\n  return React.createElement(\"div\", {\n    className: \"col s12 l6 card-width-546\"\n  }, React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h2\", null, \"Your Score \", React.createElement(\"span\", {\n    className: \"separator\"\n  }, \"|\"), \" \", React.createElement(\"span\", {\n    className: \"quantity\"\n  }, \"400 to 1600\")), React.createElement(\"div\", {\n    className: \"card-main-full card\"\n  }, React.createElement(\"div\", {\n    className: \"card-content center-align\"\n  }, React.createElement(\"div\", {\n    className: \"chart-block chart-block-total\"\n  }, React.createElement(Doughnut, {\n    data: function data() {\n      return _data(totalScore, totalPossible);\n    },\n    width: 320,\n    height: 320,\n    options: {\n      cutoutPercentage: 80\n    }\n  }), React.createElement(\"div\", {\n    className: \"chart-text\"\n  }, React.createElement(\"span\", {\n    className: \"title\"\n  }, \"TotalScore\"), React.createElement(\"span\", {\n    className: \"value\"\n  }, totalScore), React.createElement(\"span\", {\n    className: \"description\"\n  }, \"(+220)\")))))));\n};\n\nTotalScoreCard.propTypes = {\n  totalScore: PropTypes.object.isRequired,\n  totalPossible: PropTypes.string.isRequired\n};\nexport default TotalScoreCard;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestScorePage\\components\\TotalScoreCard\\index.js"],"names":["React","PropTypes","Doughnut","data","totalScore","totalPossible","datasets","backgroundColor","TotalScoreCard","cutoutPercentage","propTypes","object","isRequired","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,IAAMC,KAAI,GAAG,SAAPA,IAAO,CAACC,UAAD,EAAaC,aAAb;AAAA,SAAgC;AAC3CC,IAAAA,QAAQ,EAAE,CAAC;AACTH,MAAAA,IAAI,EAAE,CAACE,aAAD,EAAgBA,aAAa,GAACD,UAA9B,CADG;AAETG,MAAAA,eAAe,EAAE,CACf,SADe,EAEf,oBAFe;AAFR,KAAD;AADiC,GAAhC;AAAA,CAAb,C,CASA;;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGJ,UAAH,QAAGA,UAAH;AAAA,MAAeC,aAAf,QAAeA,aAAf;AAAA,SACrB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,+CAAe;AAAM,IAAA,SAAS,EAAC;AAAhB,SAAf,OAAoD;AAAM,IAAA,SAAS,EAAC;AAAhB,mBAApD,CADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACA,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE;AAAA,aAAMF,KAAI,CAACC,UAAD,EAAaC,aAAb,CAAV;AAAA,KADR;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAE;AACPI,MAAAA,gBAAgB,EAAE;AADX;AAJX,IADA,EASA;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAM,IAAA,SAAS,EAAC;AAAhB,kBADJ,EAEI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAyBL,UAAzB,CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC;AAAhB,cAHJ,CATA,CADF,CADF,CAFF,CADF,CADqB;AAAA,CAAvB;;AA2BAI,cAAc,CAACE,SAAf,GAA2B;AACzBN,EAAAA,UAAU,EAAEH,SAAS,CAACU,MAAV,CAAiBC,UADJ;AAEzBP,EAAAA,aAAa,EAAEJ,SAAS,CAACY,MAAV,CAAiBD;AAFP,CAA3B;AAKA,eAAeJ,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalPossible, totalPossible-totalScore],\n    backgroundColor: [\n      '#ce237a',\n      'rgb(234, 234, 234)',\n    ],\n  }],\n})\n// eslint-disable-next-line react/prop-types\nconst TotalScoreCard = ( {totalScore, totalPossible} ) => (\n  <div className=\"col s12 l6 card-width-546\">\n    <div className=\"card-block\">\n      <h2>Your Score <span className=\"separator\">|</span> <span className=\"quantity\">400 to 1600</span></h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content center-align\">\n          <div className=\"chart-block chart-block-total\">\n          <Doughnut\n            data={() => data(totalScore, totalPossible)}\n            width={320}\n            height={320}\n            options={{\n              cutoutPercentage: 80,\n            }}\n          />\n          <div className=\"chart-text\">\n              <span className=\"title\">TotalScore</span>\n              <span className=\"value\">{totalScore}</span>\n              <span className=\"description\">(+220)</span>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n)\n\nTotalScoreCard.propTypes = {\n  totalScore: PropTypes.object.isRequired,\n  totalPossible: PropTypes.string.isRequired,\n};\n\nexport default TotalScoreCard;"]},"metadata":{},"sourceType":"module"}