{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport ClickOffComponentWrapper from '../../../../../../ClickOffComponentWrapper';\nimport statusColorMap, { chartColorMap } from '../../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../../LessonDetailAnswerSheet';\n\nvar data = function data(current, target, status) {\n  return {\n    datasets: [{\n      data: [current, target - current],\n      backgroundColor: [chartColorMap[status], '#eaeaea']\n    }]\n  };\n};\n\nvar getLessonActivityStatus = function getLessonActivityStatus(status) {\n  if (status === \"Scheduled\") {\n    return 'card-main card-lesson-detail card-disabled card-assigned card';\n  }\n\n  return 'card-main card-lesson-detail card-assigned card';\n};\n\nvar LessonCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LessonCard, _React$Component);\n\n  function LessonCard(props) {\n    var _this;\n\n    _classCallCheck(this, LessonCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LessonCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDetailModal\", function () {\n      return _this.setState({\n        detailModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDetailModal\", function () {\n      return _this.setState({\n        detailModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIsOpen) {\n      return _this.setState({\n        dropdownIsOpen: !dropdownIsOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onReschedule\", function (assignDate, assignTime, dueDate, dueTime) {\n      // eslint-disable-next-line no-console\n      console.warn('Stubbed out date functionality', assignDate, assignTime, dueDate, dueTime);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLessonIcon\", function (subject) {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDropdownOptions\", function (status) {\n      var _this$props$lesson = _this.props.lesson,\n          assignDate = _this$props$lesson.assignDate,\n          assignTime = _this$props$lesson.assignTime,\n          dueDate = _this$props$lesson.dueDate,\n          dueTime = _this$props$lesson.dueTime;\n\n      if (status === \"Scheduled\" || status === 'Assigned') {\n        return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#\"\n        }, \"Reschedule\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Unassign\")));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\",\n        onClick: _this.onReschedule(assignDate, assignTime, dueDate, dueTime)\n      }, \"Reschedule\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Mark all Flags Reviewed\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Reset\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Unassign\")));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProblemCount\", function (status, scoreStatus, score, problems, completedProblems) {\n      if (status === \"Started\") {\n        return __jsx(\"span\", {\n          className: \"chart-value chart-value-column\",\n          style: {\n            bottom: '8px',\n            backgroundColor: chartColorMap[status]\n          }\n        }, __jsx(\"span\", {\n          className: \"chart-count\",\n          \"data-count-up\": true,\n          \"data-start-val\": \"0\",\n          \"data-end-val\": \"4\",\n          \"data-duration\": \"1\"\n        }, __jsx(\"span\", {\n          className: \"text-small\",\n          style: {\n            fontSize: 'x-small'\n          }\n        }, completedProblems)), __jsx(\"span\", {\n          className: \"text-small\",\n          style: {\n            fontSize: 'xx-small'\n          }\n        }, \"out of\"), \" \", __jsx(\"span\", {\n          className: \"text-small\",\n          style: {\n            fontSize: 'x-small'\n          }\n        }, problems));\n      }\n\n      return __jsx(\"span\", {\n        className: \"chart-value\",\n        style: {\n          height: '50px',\n          width: '50px',\n          bottom: '6px',\n          backgroundColor: chartColorMap[scoreStatus]\n        }\n      }, __jsx(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": \"0\",\n        \"data-end-val\": \"96\",\n        \"data-duration\": \"1\"\n      }), score !== \"\" ? __jsx(\"span\", {\n        className: \"percentage\"\n      }, Math.floor(\"\".concat(score / problems * 100)), \"%\") : null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderAlerts\", function (flags) {\n      if (flags.length) {\n        return __jsx(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, __jsx(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", __jsx(\"i\", {\n          className: \"icon-flag\"\n        }));\n      }\n\n      return __jsx(\"div\", {\n        className: \"right-col col s3\"\n      }, \"\\xA0\");\n    });\n\n    _this.state = {\n      test: true,\n      dropdownIsOpen: false,\n      detailModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(LessonCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dropdownIsOpen = this.state.dropdownIsOpen;\n      var _this$props = this.props,\n          lesson = _this$props.lesson,\n          _this$props$lesson2 = _this$props.lesson,\n          subject = _this$props$lesson2.subject,\n          timeEstimate = _this$props$lesson2.timeEstimate,\n          status = _this$props$lesson2.status,\n          scoreStatus = _this$props$lesson2.scoreStatus,\n          score = _this$props$lesson2.score,\n          unit = _this$props$lesson2.unit,\n          lessonName = _this$props$lesson2.lessonName,\n          assigned = _this$props$lesson2.assigned,\n          flags = _this$props$lesson2.flags,\n          type = _this$props$lesson2.type,\n          problems = _this$props$lesson2.problems,\n          _this$props$lesson2$c = _this$props$lesson2.completedProblems,\n          completedProblems = _this$props$lesson2$c === void 0 ? '' : _this$props$lesson2$c,\n          passage = _this$props$lesson2.passage,\n          dueDate = _this$props$lesson2.dueDate,\n          availableDate = _this$props$lesson2.availableDate,\n          completionDate = _this$props$lesson2.completionDate,\n          overdue = _this$props$lesson2.overdue;\n      return __jsx(React.Fragment, null, __jsx(LessonDetailAnswerSheet, {\n        onCloseDetailModal: this.onCloseDetailModal,\n        open: this.state.detailModalOpen,\n        user: this.props.user,\n        lesson: lesson\n      }), __jsx(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, __jsx(\"div\", {\n        className: getLessonActivityStatus(status)\n      }, __jsx(\"div\", {\n        className: \"card-panel\",\n        style: {\n          backgroundColor: '#666',\n          color: '#fff'\n        }\n      }, __jsx(\"div\", {\n        className: \"card-panel-row row\"\n      }, __jsx(\"div\", {\n        className: \"icon-col col s1\"\n      }, __jsx(\"i\", {\n        className: this.renderLessonIcon(subject)\n      })), __jsx(\"div\", {\n        className: \"col s9\"\n      }, __jsx(\"div\", {\n        className: \"card-panel-text center-align\"\n      }, __jsx(\"div\", {\n        className: \"text-small\"\n      }, unit), __jsx(\"div\", {\n        className: \"text-large\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenDetailModal\n      }, lessonName)))), __jsx(\"div\", {\n        className: \"col s1 right-align\"\n      }, __jsx(\"div\", {\n        className: \"row icons-row\"\n      }, this.renderAlerts(flags), __jsx(\"div\", {\n        className: \"dropdown-block col\"\n      }, __jsx(\"a\", {\n        className: \"dropdown-trigger btn\",\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        onClick: function onClick() {\n          return _this2.onSetDropdown(dropdownIsOpen);\n        }\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen ? __jsx(ClickOffComponentWrapper, {\n        onOuterClick: function onOuterClick() {\n          return _this2.onSetDropdown(dropdownIsOpen);\n        }\n      }, __jsx(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: \"block\",\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, this.renderDropdownOptions(status))) : null))))), __jsx(\"div\", {\n        className: \"card-content\"\n      }, __jsx(\"div\", {\n        className: \"d-flex sameheight-all row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s6\"\n      }, __jsx(\"div\", {\n        className: \"chart-container\"\n      }, __jsx(\"div\", {\n        className: \"chart-holder\",\n        style: {\n          width: '140px',\n          height: '95px'\n        }\n      }, __jsx(Doughnut, {\n        data: completionDate ? function () {\n          return data(score, problems, scoreStatus);\n        } : function () {\n          return data(completedProblems, problems, status);\n        },\n        height: 210,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 60,\n          tooltips: false\n        }\n      }), this.renderProblemCount(status, scoreStatus, score, problems, completedProblems)), __jsx(\"div\", {\n        className: \"chart-row\"\n      }, __jsx(\"div\", {\n        className: \"chart-col chart-start\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"chart-col chart-end\"\n      }, __jsx(\"span\", {\n        className: \"amount\",\n        style: {\n          color: chartColorMap[status]\n        }\n      }, problems))), __jsx(\"div\", {\n        className: \"chart-description\",\n        style: {\n          marginTop: '10px'\n        }\n      }, __jsx(\"dl\", {\n        className: \"dl-horizontal\"\n      }, __jsx(\"dt\", null, \"Time Est:\"), __jsx(\"dd\", null, timeEstimate)), __jsx(\"dl\", {\n        className: \"dl-horizontal\"\n      }, __jsx(\"dt\", null, \"Problems:\"), __jsx(\"dd\", null, problems))))), __jsx(\"div\", {\n        className: \"col s6 right-align justify-end\"\n      }, __jsx(\"dl\", {\n        className: \"dl-horizontal\",\n        style: {\n          marginTop: '20px',\n          marginBottom: '-10px'\n        }\n      }, __jsx(\"dt\", null, \"Available:\"), __jsx(\"dd\", null, __jsx(\"time\", {\n        dateTime: availableDate\n      }, availableDate))), __jsx(\"dl\", {\n        className: overdue ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal',\n        style: {\n          marginTop: '13px',\n          marginBottom: '-3px'\n        }\n      }, !assigned || status === \"Scheduled\" ? __jsx(\"dt\", null, \"No Due Date\") : [__jsx(\"dt\", {\n        key: \"0\"\n      }, \"Due:\"), __jsx(\"dd\", {\n        key: \"1\"\n      }, __jsx(\"time\", {\n        dateTime: dueDate\n      }, dueDate))]), completionDate ? __jsx(\"dl\", {\n        className: \"dl-horizontal\"\n      }, __jsx(\"dt\", null, \"Completed:\"), __jsx(\"dd\", null, __jsx(\"time\", {\n        dateTime: completionDate\n      }, completionDate))) : null, __jsx(\"div\", {\n        className: \"align-self-end\"\n      }, scoreStatus !== \"\" ? __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[scoreStatus], \" white-text\")\n      }, scoreStatus) : __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\")\n      }, status))))), __jsx(\"div\", {\n        className: \"card-text\"\n      }, __jsx(\"dl\", {\n        className: \"dl-horizontal\"\n      }, __jsx(\"dt\", null, \"p.\", passage), __jsx(\"dd\", null, \"(\", type, \")\"))))));\n    }\n  }]);\n\n  return LessonCard;\n}(React.Component);\n\nLessonCard.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\nexport default LessonCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/components/FullView/components/LessonCard/index.js"],"names":["React","PropTypes","Doughnut","ClickOffComponentWrapper","statusColorMap","chartColorMap","LessonDetailAnswerSheet","data","current","target","status","datasets","backgroundColor","getLessonActivityStatus","LessonCard","props","setState","detailModalOpen","dropdownIsOpen","assignDate","assignTime","dueDate","dueTime","console","warn","subject","lesson","onReschedule","scoreStatus","score","problems","completedProblems","bottom","fontSize","height","width","Math","floor","flags","length","state","test","timeEstimate","unit","lessonName","assigned","type","passage","availableDate","completionDate","overdue","onCloseDetailModal","user","color","renderLessonIcon","onOpenDetailModal","renderAlerts","onSetDropdown","display","opacity","transform","renderDropdownOptions","circumference","PI","rotation","cutoutPercentage","tooltips","renderProblemCount","marginTop","marginBottom","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport ClickOffComponentWrapper from '../../../../../../ClickOffComponentWrapper';\nimport statusColorMap, {chartColorMap} from '../../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../../LessonDetailAnswerSheet';\n\nconst data = (current, target, status) => ({\n  datasets: [{\n    data: [current, target - current],\n    backgroundColor: [\n      chartColorMap[status],\n      '#eaeaea',\n    ],\n  }],\n})\n\nconst getLessonActivityStatus = (status) => {\n  if (status === \"Scheduled\") {\n    return 'card-main card-lesson-detail card-disabled card-assigned card';\n  }\n  return 'card-main card-lesson-detail card-assigned card';\n}\n\nclass LessonCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: true,\n      dropdownIsOpen: false,\n      detailModalOpen: false,\n    };\n  }\n\n  onOpenDetailModal = () => this.setState({detailModalOpen: true})\n  onCloseDetailModal = () => this.setState({detailModalOpen: false});\n  onSetDropdown = (dropdownIsOpen) => this.setState({ dropdownIsOpen: !dropdownIsOpen });\n\n  onReschedule = (assignDate, assignTime, dueDate, dueTime) => {\n    // eslint-disable-next-line no-console\n    console.warn('Stubbed out date functionality', assignDate, assignTime, dueDate, dueTime);\n  }\n\n  // eslint-disable-next-line consistent-return\n  renderLessonIcon = (subject) => {\n    switch (subject) {\n      case 'Reading':\n        return 'icon-books';\n      case 'Writing':\n        return 'icon-hands';\n      case 'Math':\n        return 'icon-calculator';\n      default:\n        break;\n    }\n  }\n\n  renderDropdownOptions = (status) => {\n    const { lesson: {assignDate, assignTime, dueDate, dueTime}} = this.props;\n    if (status === \"Scheduled\" || status === 'Assigned'){\n      return (\n        <React.Fragment>\n        <li><a href=\"#\">Reschedule</a></li>\n        <li><a href=\"#!\">Unassign</a></li>\n        </React.Fragment>\n      )\n    }\n      return (\n        <React.Fragment>\n        <li><a href=\"#\" onClick={this.onReschedule(assignDate, assignTime, dueDate, dueTime)}>Reschedule</a></li>\n        <li><a href=\"#!\" >Mark all Flags Reviewed</a></li>\n        <li><a href=\"#!\" >Reset</a></li>\n        <li><a href=\"#!\">Unassign</a></li>\n        </React.Fragment>\n      )\n  }\n\n  renderProblemCount = (status, scoreStatus, score, problems, completedProblems) => {\n    if (status === \"Started\") {\n      return (\n        <span className=\"chart-value chart-value-column\" style={{ bottom: '8px', backgroundColor: chartColorMap[status]}}>\n          <span className=\"chart-count\" data-count-up data-start-val=\"0\" data-end-val=\"4\" data-duration=\"1\"><span className=\"text-small\" style={{fontSize: 'x-small'}}>{completedProblems}</span></span>\n          <span className=\"text-small\" style={{fontSize: 'xx-small'}}>out of</span> <span className=\"text-small\" style={{fontSize: 'x-small'}}>{problems}</span>\n        </span>\n      )\n    }\n    return (\n      <span className=\"chart-value\" style={{ height: '50px', width: '50px', bottom: '6px', backgroundColor: chartColorMap[scoreStatus]}}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span>\n      <If condition={score !== \"\"}>\n        <span className=\"percentage\">{Math.floor(`${score / problems * 100}`)}%</span>\n        </If>\n        </span>\n    )\n  }\n\n\n  renderAlerts = (flags) => {\n    if (flags.length) {\n      return (\n          <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n      )\n    }\n    return (\n      <div className=\"right-col col s3\">&nbsp;</div>\n    )\n  }\n\n  render() {\n    const { dropdownIsOpen } = this.state;\n    const {  lesson, lesson: { subject, timeEstimate, status, scoreStatus, score, unit, lessonName, assigned, flags,\n      type, problems, completedProblems = '', passage, dueDate,\n       availableDate, completionDate, overdue } } = this.props;\n    return (\n      <React.Fragment>\n      <LessonDetailAnswerSheet\n        onCloseDetailModal={this.onCloseDetailModal}\n        open={this.state.detailModalOpen}\n        user={this.props.user}\n        lesson={lesson}  />\n              <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className={getLessonActivityStatus(status)}>\n          <div className=\"card-panel\" style={{ backgroundColor: '#666', color: '#fff' }}>\n            <div className=\"card-panel-row row\">\n              <div className=\"icon-col col s1\">\n                <i className={this.renderLessonIcon(subject)}></i>\n              </div>\n              <div className=\"col s9\">\n                <div className=\"card-panel-text center-align\">\n                  <div className=\"text-small\">{unit}</div>\n                  <div className=\"text-large\"><a href=\"#\" onClick={this.onOpenDetailModal}>{lessonName}</a></div>\n                </div>\n              </div>\n              <div className=\"col s1 right-align\">\n                <div className=\"row icons-row\">\n                  {this.renderAlerts(flags)}\n                  <div className=\"dropdown-block col\">\n                    <a\n                      className='dropdown-trigger btn'\n                      href='#'\n                      data-target='dropdown01'\n                      onClick={() => this.onSetDropdown(dropdownIsOpen)}\n                    ><i className=\"material-icons dots-icon\">more_vert</i></a>\n                    <If condition={dropdownIsOpen}>\n                      <ClickOffComponentWrapper onOuterClick={() => this.onSetDropdown(dropdownIsOpen)}>\n                        <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: \"block\", opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                          {this.renderDropdownOptions(status)}\n                        </ul>\n                      </ClickOffComponentWrapper>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"d-flex sameheight-all row mb-0\">\n              <div className=\"col s6\">\n                <div className=\"chart-container\">\n                  <div className=\"chart-holder\" style={{width: '140px', height: '95px'}}>\n                        <Doughnut\n                          data={completionDate ? () => data(score, problems, scoreStatus) : () => data(completedProblems, problems, status)}\n                          height={210}\n                          options={{\n                            circumference: 1.45 * Math.PI,\n                            rotation: -3.85,\n                            cutoutPercentage: 60,\n                            tooltips: false,\n                          }}\n                          />\n                          {this.renderProblemCount(status, scoreStatus, score, problems, completedProblems)}\n                  </div>\n                  <div className=\"chart-row\">\n                    <div className=\"chart-col chart-start\">&nbsp;</div>\n                    <div className=\"chart-col chart-end\">\n                      <span className=\"amount\" style={{color: chartColorMap[status]}}>{problems}</span>\n                    </div>\n                  </div>\n                  <div className=\"chart-description\" style={{marginTop: '10px'}}>\n                    <dl className=\"dl-horizontal\">\n                      <dt>Time Est:</dt>\n                      <dd>{timeEstimate}</dd>\n                    </dl>\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problems:</dt>\n                      <dd>{problems}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s6 right-align justify-end\">\n                <dl className=\"dl-horizontal\" style={{marginTop: '20px', marginBottom: '-10px'}}>\n                  <dt>Available:</dt>\n                  <dd><time dateTime={availableDate}>{availableDate}</time></dd>\n                </dl>\n                <dl className={overdue ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal'} style={{marginTop: '13px', marginBottom: '-3px'}}>\n                  <Choose>\n                    <When condition={!assigned || status === \"Scheduled\"}>\n                      <dt>No Due Date</dt>\n                    </When>\n                    <Otherwise>\n                      <dt>Due:</dt>\n                      <dd><time dateTime={dueDate}>{dueDate}</time></dd>\n                    </Otherwise>\n                  </Choose>\n                </dl>\n                <If condition={completionDate}>\n                <dl className=\"dl-horizontal\">\n                  <dt>Completed:</dt>\n                  <dd><time dateTime={completionDate}>{completionDate}</time></dd>\n                </dl>\n                </If>\n              <div className=\"align-self-end\">\n                <Choose>\n                  <When condition={scoreStatus !== \"\"}>\n                    <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n                  </When>\n                  <Otherwise>\n                  <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n                  </Otherwise>\n                </Choose>\n              </div>\n              </div>\n            </div>\n          </div>\n            <div className=\"card-text\">\n              <dl className=\"dl-horizontal\">\n                  <dt>p.{passage}</dt>\n                  <dd>({type})</dd>\n                </dl>\n          </div>\n        </div>\n      </div>\n      </React.Fragment>\n\n    );\n  }\n}\n\nLessonCard.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n\n};\n\nexport default LessonCard;\n"]},"metadata":{},"sourceType":"module"}