{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\n\nvar _data = function data(current, target, initial) {\n  return {\n    datasets: [{\n      data: [current - initial, target - initial - (current - initial)],\n      backgroundColor: ['#0085ce', '#eaeaea']\n    }]\n  };\n};\n\nvar StudentCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StudentCard, _React$Component);\n\n  function StudentCard(props) {\n    var _this;\n\n    _classCallCheck(this, StudentCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenEditModal\", function () {\n      _this.props.onCloseDropdown();\n\n      _this.setState({\n        editModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseEditModal\", function () {\n      return _this.setState({\n        editModalOpen: false\n      });\n    });\n\n    _this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(StudentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onHandleStudentCard = _this$props2.onHandleStudentCard,\n          onSaveStudentChanges = _this$props2.onSaveStudentChanges,\n          onDeleteStudent = _this$props2.onDeleteStudent,\n          onCloneStudent = _this$props2.onCloneStudent,\n          index = _this$props2.index,\n          dropdownIndex = _this$props2.dropdownIndex,\n          student = _this$props2.student,\n          _this$props2$student = _this$props2.student,\n          id = _this$props2$student.id,\n          active = _this$props2$student.active,\n          tutor = _this$props2$student.tutor,\n          _this$props2$student$ = _this$props2$student.testScores,\n          initialScore = _this$props2$student$.initialScore,\n          currentScore = _this$props2$student$.currentScore,\n          targetScore = _this$props2$student.courseContext.targetScore,\n          _this$props2$student$2 = _this$props2$student.studentInformation,\n          firstName = _this$props2$student$2.firstName,\n          lastName = _this$props2$student$2.lastName,\n          email = _this$props2$student.emailAddress.email,\n          dropdownIsOpen = _this$props2.dropdownIsOpen;\n      var editModalOpen = this.state.editModalOpen;\n      return __jsx(React.Fragment, null, __jsx(EditModal, {\n        open: editModalOpen,\n        onSaveStudentChanges: onSaveStudentChanges,\n        onCloseEditModal: this.onCloseEditModal,\n        student: student,\n        handleDetailsChange: this.handleDetailsChange\n      }), __jsx(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\",\n        id: id\n      }, __jsx(\"div\", {\n        className: active ? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"\n      }, __jsx(\"div\", {\n        className: \"owner-box card-panel card-panel-panel card-panel-large\",\n        style: {\n          backgroundColor: active ? '#0085ce' : '#9b9b9b',\n          color: '#fff'\n        }\n      }, __jsx(\"div\", {\n        className: \"card-panel-row row\"\n      }, __jsx(\"div\", {\n        className: \"col s9\"\n      }, __jsx(\"div\", {\n        className: \"user-block\"\n      }, __jsx(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: active ? '#14b14b' : '#808080',\n          color: '#fff',\n          height: '45px'\n        }\n      }, __jsx(\"img\", {\n        src: \"#\",\n        alt: \"\"\n      })), __jsx(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: '#fff'\n        }\n      }, __jsx(\"h4\", {\n        className: \"h3\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        value: student,\n        onClick: function onClick() {\n          return onHandleStudentCard({\n            index: index\n          });\n        }\n      }, lastName, \", \", firstName)), __jsx(\"a\", {\n        href: \"mailto:\".concat(email)\n      }, email)))), __jsx(\"div\", {\n        className: \"col s2 right-align\"\n      }, __jsx(\"span\", {\n        className: \"block-icon\"\n      }, __jsx(\"i\", {\n        className: \"icon-user\"\n      }), __jsx(\"span\", {\n        className: \"text-icon\"\n      }, \"Student\"))), __jsx(\"div\", {\n        className: \"col s1 right-align\"\n      }, __jsx(\"div\", {\n        className: \"row icons-row\"\n      }, __jsx(\"div\", {\n        className: \"dropdown-block col\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger btn\",\n        \"data-target\": \"dropdown01\",\n        onClick: this.handleDropdownClick\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: \"block\",\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\",\n        className: \"modal-trigger link-block\",\n        onClick: this.onOpenEditModal\n      }, \"Edit\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onCloneStudent(index);\n        }\n      }, \"Clone\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Show Owner\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onDeleteStudent(index);\n        }\n      }, \"Delete\"))) : null))))), __jsx(\"div\", {\n        className: \"card-content\",\n        ref: this.studentCard\n      }, __jsx(\"div\", {\n        className: \"row d-flex align-items-center mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m6\"\n      }, __jsx(\"div\", {\n        className: \"chart-container chart-container-large\"\n      }, __jsx(\"div\", {\n        className: \"chart-holder\"\n      }, active ? __jsx(Doughnut, {\n        data: function data() {\n          return _data(currentScore, targetScore, initialScore);\n        },\n        height: 210,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 60,\n          tooltips: false\n        }\n      }) : null, __jsx(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: \"#0085ce\",\n          bottom: \"7px\"\n        }\n      }, __jsx(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": initialScore,\n        \"data-end-val\": currentScore,\n        \"data-duration\": \"1\"\n      }, currentScore))), __jsx(\"div\", {\n        className: \"chart-row\"\n      }, __jsx(\"div\", {\n        className: \"chart-col chart-start\"\n      }, __jsx(\"span\", {\n        className: \"amount\",\n        style: {\n          color: '#0085ce'\n        }\n      }, initialScore), __jsx(\"span\", {\n        className: \"amount-text\"\n      }, \"\\xA0 initial\")), __jsx(\"div\", {\n        className: \"chart-col chart-end\"\n      }, __jsx(\"span\", {\n        className: \"amount\"\n      }, targetScore), __jsx(\"span\", {\n        className: \"amount-text\"\n      }, \"\\xA0 target\"))))), __jsx(\"div\", {\n        className: \"col s12 m6\"\n      }, __jsx(\"ul\", {\n        className: \"points-list-bordered\"\n      }, __jsx(\"li\", {\n        className: \"style-green\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, \"61\"), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"complete\")), __jsx(\"li\", {\n        className: \"style-red\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, \"7\"), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"overdue\")), __jsx(\"li\", {\n        className: \"style-orange\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, \"3\"), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"practice tests\")), __jsx(\"li\", {\n        className: \"style-blue-lighter\"\n      }, __jsx(\"span\", {\n        className: \"badge-circle\"\n      }, __jsx(\"span\", null, \"17\"), \" \", __jsx(\"span\", {\n        className: \"of\"\n      }, \"of 23\")), __jsx(\"span\", {\n        className: \"point-text\"\n      }, \"sessions\"))))), __jsx(\"div\", {\n        className: \"card-inner-row\"\n      }, __jsx(\"div\", {\n        className: \"row-holder\"\n      }, __jsx(\"ul\", {\n        className: \"category-list\"\n      }, __jsx(\"li\", {\n        className: \"category-box\"\n      }, __jsx(\"span\", {\n        className: \"category-badge badge-purple\"\n      }), __jsx(\"span\", {\n        className: \"category-text\"\n      }, tutor)))))))));\n    }\n  }]);\n\n  return StudentCard;\n}(React.Component);\n\n;\nexport default StudentCard;","map":null,"metadata":{},"sourceType":"module"}