{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSortChange\", function (event) {\n      var onSetSort = _this.props.onSetSort;\n\n      _this.setState({\n        sort: event\n      });\n\n      onSetSort(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var nameFilter = _this.state.nameFilter;\n\n      if (nameFilter === '') {\n        onUnsetFilteredState(nameFilter);\n      }\n\n      var transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUnitChange\", function (event) {\n      var onSetUnitFilter = _this.props.onSetUnitFilter;\n\n      _this.setState({\n        unitFilter: event\n      });\n\n      onSetUnitFilter(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAllFilters\", function () {\n      var onClearFilters = _this.props.onClearFilters;\n\n      _this.setState({\n        sort: {},\n        nameFilter: \"\",\n        unitFilter: \"\"\n      });\n\n      onClearFilters();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props2 = _this.props,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onSetUnitFilter = _this$props2.onSetUnitFilter;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'nameFilter') {\n        if (event === '') {\n          return onUnsetFilteredState();\n        }\n\n        return onSetFilteredState(event);\n      }\n\n      if (name === 'unitFilter') {\n        if (event === \"\") {\n          return onUnsetFilteredState();\n        }\n\n        return onSetUnitFilter(event);\n      }\n    });\n\n    _this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          sort = _this$state.sort,\n          nameFilter = _this$state.nameFilter,\n          unitFilter = _this$state.unitFilter;\n      var _this$props3 = this.props,\n          currentView = _this$props3.currentView,\n          dueDateFilters = _this$props3.dueDateFilters,\n          flagFilters = _this$props3.flagFilters,\n          subjectFilters = _this$props3.subjectFilters,\n          statusFilters = _this$props3.statusFilters,\n          scoreStatusFilters = _this$props3.scoreStatusFilters,\n          classTypeFilters = _this$props3.classTypeFilters,\n          onChangeView = _this$props3.onChangeView,\n          handleFilterClick = _this$props3.handleFilterClick;\n      return __jsx(\"div\", {\n        className: \"filter-form-holder\"\n      }, __jsx(\"ul\", {\n        className: \"collapsible expandable\"\n      }, __jsx(\"li\", null, __jsx(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, __jsx(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"reading\",\n        checked: subjectFilters.indexOf('Reading') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"subject\", 'Reading');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"reading\"\n      }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"writing\",\n        checked: subjectFilters.indexOf('Writing') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"subject\", 'Writing');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"writing\"\n      }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"math\",\n        checked: subjectFilters.indexOf('Math') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"subject\", 'Math');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"math\"\n      }, \"Math\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"beginning\",\n        checked: scoreStatusFilters.indexOf('Beginning') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"score\", 'Beginning');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"beginning\"\n      }, \"Beginning\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"developing\",\n        checked: scoreStatusFilters.indexOf('Developing') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"score\", 'Developing');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"developing\"\n      }, \"Developing\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"accomplished\",\n        checked: scoreStatusFilters.indexOf('Accomplished') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"score\", 'Accomplished');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"accomplished\"\n      }, \"Accomplished\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"exemplary\",\n        checked: scoreStatusFilters.indexOf('Exemplary') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick(\"score\", 'Exemplary');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"exemplary\"\n      }, \"Exemplary\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"scheduled\",\n        checked: statusFilters.indexOf('Scheduled') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Scheduled');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"scheduled\"\n      }, \"Scheduled\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"assigned\",\n        checked: statusFilters.indexOf('Assigned') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Assigned');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"assigned\"\n      }, \"Assigned\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"started\",\n        checked: statusFilters.indexOf('Started') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Started');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"started\"\n      }, \"Started\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"complete\",\n        checked: statusFilters.indexOf('Complete') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Complete');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"complete\"\n      }, \"Complete\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"hasReviewFlags\",\n        checked: flagFilters.indexOf(\"flags\") !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('flags', 'true');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"hasReviewFlags\"\n      }, \"Has Review Flags\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"dueToday\",\n        checked: dueDateFilters.indexOf('dueToday') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('dueDate', 'dueToday');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"dueToday\"\n      }, \"Due Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"dueNextSession\",\n        checked: dueDateFilters.indexOf('dueNextSession') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('dueDate', 'dueNextSession');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"dueNextSession\"\n      }, \"Due By Next Session\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"dueThisWeek\",\n        checked: dueDateFilters.indexOf('dueThisWeek') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('dueDate', 'dueThisWeek');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"dueThisWeek\"\n      }, \"Due this Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"overdue\",\n        checked: dueDateFilters.indexOf('overdue') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('dueDate', 'overdue');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"overdue\"\n      }, \"Overdue\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"some-class\",\n        checked: classTypeFilters.indexOf('class') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('classType', 'class');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"some-class\"\n      }, \"Some Class\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"tutoring\",\n        checked: classTypeFilters.indexOf('tutoring') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('classType', 'tutoring');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"tutoring\"\n      }, \"Tutoring\")))), __jsx(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"search-field input-field\",\n        style: {\n          marginTop: '30px'\n        }\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control  validate\",\n        name: \"nameFilter\",\n        value: nameFilter,\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'nameFilter');\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, __jsx(\"i\", {\n        className: \"icon-search\"\n      })), __jsx(\"label\", {\n        className: nameFilter.length ? \"label active\" : \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))), __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"input-field\",\n        style: {\n          marginTop: '-7px'\n        }\n      }, __jsx(Dropdown, {\n        value: getValueFromState(unitFilter, unitOptions),\n        onChange: function onChange(event) {\n          return _this2.handleUnitChange(event);\n        },\n        options: unitOptions,\n        label: \"Unit Number\",\n        stateKey: \"unit\",\n        dropdownKey: \"unit\"\n      }))))), __jsx(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 x17\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(sort, lessonSortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleSortChange(event);\n        },\n        options: lessonSortOptions,\n        label: \"Sort by\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), __jsx(\"div\", {\n        className: \"switcher-block col s12 l4\",\n        style: {\n          marginTop: '14px'\n        }\n      }, __jsx(\"div\", {\n        className: \"view-switcher\"\n      }, __jsx(\"ul\", {\n        className: \"switcher center-align\"\n      }, __jsx(\"li\", {\n        \"data-view\": \"view-full\",\n        className: currentView === 'full' ? 'active' : \"\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return onChangeView('full');\n        }\n      }, \"Full View\")), __jsx(\"li\", {\n        \"data-view\": \"view-list\",\n        className: currentView === 'list' ? 'active' : ''\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return onChangeView('list');\n        }\n      }, \"List View\"))))), __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"option-filters\"\n      }, __jsx(\"div\", {\n        className: \"option-item clear\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.clearAllFilters\n      }, \"Clear Filters\")), __jsx(\"div\", {\n        className: \"option-item\"\n      }, __jsx(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, __jsx(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}