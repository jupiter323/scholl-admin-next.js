{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n// TODO: change componentDidMount for when user comes though as props, profile pic change\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../components/FormComponents/Dropdown';\nimport getValueFromState from '../components/utils/getValueFromState';\nimport stateOptions from '../components/utils/stateOptions';\nimport { nestedEditFieldValidation } from '../components/utils/fieldValidation';\nimport sampleInstructors from \"../components/utils/sampleInstructors\";\nvar timeZoneOptions = [{\n  label: \"(UTC - 10:00) Hawaii Time Zone (US)\",\n  value: \"Hawaii\"\n}, {\n  label: \"(UTC - 9:00) Alaska Time Zone (US)\",\n  value: \"Alaska\"\n}, {\n  label: \"(UTC - 8:00) PaciÔ¨Åc/Yukon Time Zone (US & Canada)\",\n  value: \"Pacific\"\n}, {\n  label: \"(UTC - 7:00) Mountain Time Zone (US & Canada)\",\n  value: \"Mountain\"\n}, {\n  label: \"(UTC - 6:00) Central Time Zone (US & Canada)\",\n  value: \"Central\"\n}, {\n  label: \"(UTC - 5:00) Eastern Time Zone (US & Canada)\",\n  value: \"Eastern\"\n}, {\n  label: \"(UTC - 4:00) Atlantic Time Zone (Canada)\",\n  value: \"Atlantic\"\n}, {\n  label: \"(UTC - 3:30) Newfoundland Time Zone (Canada)\",\n  value: \"Newfoundland\"\n}];\n\nvar Account =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Account, _React$Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetValidation\", function (validation, cb) {\n      return _this.setState({\n        validation: validation\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUpdateProfile\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedAccount, valid;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n\n                updatedAccount = _this.state.updatedAccount;\n                _context.next = 4;\n                return nestedEditFieldValidation(_this.state, _this.state.updatedAccount, _this.onSetValidation, function (validation) {\n                  return console.warn('validation', validation);\n                });\n\n              case 4:\n                valid = _context.sent;\n\n                if (!valid) {\n                  // return onSaveChangesError();\n                  console.warn('not valid');\n                }\n\n                _this.setState({\n                  originalAccount: updatedAccount\n                }); // return onSavePassageChanges(updatedUser);\n\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSendPasswordResetEmail\", function (event) {\n      event.preventDefault();\n      console.warn('Stubbed out password reset email');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetPassword\", function (event) {\n      event.preventDefault();\n      var _this$state$actions = _this.state.actions,\n          password = _this$state$actions.password,\n          confirmPassword = _this$state$actions.confirmPassword;\n\n      if (password !== confirmPassword) {\n        console.warn('Toast is broken, have a console log'); // return this.notify\n      }\n\n      if (!confirmPassword.length) {\n        console.warn('Toast is broken, have a console log'); // return this.notify()\n      }\n\n      return console.warn('stubbed out password reset');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (event, name) {\n      var previousAccountState = _this.state.updatedAccount;\n      var value = event.target ? event.target.value : event;\n      var updatedAccount = update(previousAccountState, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState({\n        updatedAccount: updatedAccount\n      });\n    });\n\n    _this.state = {\n      originalAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\"\n      },\n      updatedAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\"\n      },\n      actions: {\n        ccAdmin: false,\n        requireUserToChange: false,\n        password: '',\n        confirmPassword: ''\n      },\n      validation: {\n        firstName: true,\n        lastName: true,\n        email: true\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _sampleInstructors$ = sampleInstructors[0],\n          firstName = _sampleInstructors$.firstName,\n          lastName = _sampleInstructors$.lastName,\n          avatarURL = _sampleInstructors$.avatarURL,\n          addressLine1 = _sampleInstructors$.addressLine1,\n          city = _sampleInstructors$.city,\n          state = _sampleInstructors$.state,\n          zipCode = _sampleInstructors$.zipCode,\n          timeZone = _sampleInstructors$.timeZone,\n          _sampleInstructors$$e = _sampleInstructors$.email,\n          email = _sampleInstructors$$e === void 0 ? {} : _sampleInstructors$$e;\n      var updatedAccount = {\n        firstName: firstName,\n        lastName: lastName,\n        avatarURL: avatarURL,\n        addressLine1: addressLine1,\n        city: city,\n        state: state,\n        zipCode: zipCode,\n        timeZone: timeZone,\n        email: email\n      };\n      var originalAccountState = this.state.originalAccount;\n      var originalAccount = update(originalAccountState, {\n        $merge: updatedAccount\n      });\n      this.setState({\n        originalAccount: originalAccount,\n        updatedAccount: updatedAccount\n      }); // eslint-disable-line\n    } // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n    // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state$updatedAc = this.state.updatedAccount,\n          firstName = _this$state$updatedAc.firstName,\n          lastName = _this$state$updatedAc.lastName,\n          avatarURL = _this$state$updatedAc.avatarURL,\n          addressLine1 = _this$state$updatedAc.addressLine1,\n          city = _this$state$updatedAc.city,\n          state = _this$state$updatedAc.state,\n          zipCode = _this$state$updatedAc.zipCode,\n          timeZone = _this$state$updatedAc.timeZone,\n          _this$state$updatedAc2 = _this$state$updatedAc.email,\n          email = _this$state$updatedAc2 === void 0 ? {} : _this$state$updatedAc2;\n      return React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-student\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"My Account\")))), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"custom-form\"\n      }, React.createElement(\"fieldset\", null, React.createElement(\"div\", {\n        className: \"container-xs container-align-left\"\n      }, React.createElement(\"div\", {\n        className: \"card-block\"\n      }, React.createElement(\"div\", {\n        className: \"card\"\n      }, React.createElement(\"div\", {\n        className: \"card-content card-account\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3 l5\"\n      }, React.createElement(\"div\", {\n        className: \"avatar\"\n      }, React.createElement(\"img\", {\n        src: avatarURL,\n        alt: \"\"\n      }), React.createElement(\"span\", {\n        className: \"btn-upload icon-photocam\"\n      }, React.createElement(\"input\", {\n        type: \"file\"\n      })))), React.createElement(\"div\", {\n        className: \"col s12 m9 l7\"\n      }, React.createElement(\"div\", {\n        className: \"input-field input-field-icon\"\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email Address\",\n        value: email,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"email\");\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-icon icon-letter2\"\n      })), React.createElement(\"div\", {\n        className: \"input-field input-field-icon\"\n      }, React.createElement(\"input\", {\n        style: {\n          width: '44%'\n        },\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"firstName\");\n        }\n      }), React.createElement(\"input\", {\n        style: {\n          width: '44%'\n        },\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"lastName\");\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-icon icon-user-line\"\n      })), React.createElement(\"div\", {\n        className: \"input-field input-field-icon\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Street Address\",\n        value: addressLine1,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"addressLine1\");\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-icon icon-search\"\n      })), React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        value: city,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"city\");\n        }\n      })), React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m6\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        style: {\n          zIndex: 1001\n        }\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(state, stateOptions),\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, 'state');\n        },\n        options: stateOptions,\n        label: \"State\",\n        stateKey: \"state\",\n        dropdownKey: \"state\"\n      }))), React.createElement(\"div\", {\n        className: \"col s12 m6\",\n        style: {\n          marginTop: '9%'\n        }\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Zip Code\",\n        value: zipCode,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"zipCode\");\n        }\n      })))), React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(timeZone, timeZoneOptions),\n        options: timeZoneOptions,\n        stateKey: \"timeZone\",\n        dropdownKey: \"timeZone\",\n        label: \"Time Zone\",\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, 'timeZone');\n        }\n      }))))))), React.createElement(\"div\", {\n        className: \"account_btn-holder\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onResetPassword\n      }, \"Reset Password\"), React.createElement(\"a\", {\n        className: \"btn\",\n        href: \"#\",\n        onClick: this.onUpdateProfile\n      }, \"Update Pro\\uFB01le\")))))))));\n    }\n  }]);\n\n  return Account;\n}(React.Component);\n\nexport default Account;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/pages/account.js"],"names":["React","update","Dropdown","getValueFromState","stateOptions","nestedEditFieldValidation","sampleInstructors","timeZoneOptions","label","value","Account","props","validation","cb","setState","event","preventDefault","updatedAccount","state","onSetValidation","console","warn","valid","originalAccount","actions","password","confirmPassword","length","name","previousAccountState","target","$merge","firstName","lastName","avatarURL","addressLine1","city","zipCode","timeZone","email","ccAdmin","requireUserToChange","originalAccountState","handleDetailsChange","width","zIndex","marginTop","onResetPassword","onUpdateProfile","Component"],"mappings":"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","sourcesContent":["  // TODO: change componentDidMount for when user comes though as props, profile pic change\n\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../components/FormComponents/Dropdown';\nimport getValueFromState from '../components/utils/getValueFromState';\nimport stateOptions from '../components/utils/stateOptions';\nimport { nestedEditFieldValidation } from '../components/utils/fieldValidation';\nimport sampleInstructors from \"../components/utils/sampleInstructors\";\n\nconst timeZoneOptions = [\n  {\n    label: \"(UTC - 10:00) Hawaii Time Zone (US)\",\n    value: \"Hawaii\",\n  },\n  {\n    label: \"(UTC - 9:00) Alaska Time Zone (US)\",\n    value: \"Alaska\",\n  },\n  {\n    label: \"(UTC - 8:00) PaciÔ¨Åc/Yukon Time Zone (US & Canada)\",\n    value: \"Pacific\",\n  },\n  {\n    label: \"(UTC - 7:00) Mountain Time Zone (US & Canada)\",\n    value: \"Mountain\",\n  },\n  {\n    label: \"(UTC - 6:00) Central Time Zone (US & Canada)\",\n    value: \"Central\",\n  },\n  {\n    label: \"(UTC - 5:00) Eastern Time Zone (US & Canada)\",\n    value: \"Eastern\",\n  },\n  {\n    label: \"(UTC - 4:00) Atlantic Time Zone (Canada)\",\n    value: \"Atlantic\",\n  },\n  {\n    label: \"(UTC - 3:30) Newfoundland Time Zone (Canada)\",\n    value: \"Newfoundland\",\n  },\n]\n\nclass Account extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      originalAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\",\n      },\n      updatedAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\",\n      },\n      actions: {\n        ccAdmin: false,\n        requireUserToChange: false,\n        password: '',\n        confirmPassword: '',\n      },\n      validation: {\n        firstName: true,\n        lastName: true,\n        email: true,\n      },\n    }\n  }\n\n\n  componentDidMount() {\n  const { firstName, lastName, avatarURL, addressLine1, city, state, zipCode, timeZone, email = {} } = sampleInstructors[0];\n  const updatedAccount = { firstName, lastName, avatarURL, addressLine1, city, state, zipCode, timeZone, email };\n  const { originalAccount: originalAccountState } = this.state;\n  const originalAccount = update(originalAccountState, {\n    $merge: updatedAccount,\n  });\n  this.setState({ originalAccount, updatedAccount }); // eslint-disable-line\n}\n\n  // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n  onSetValidation = (validation, cb) => this.setState({ validation }, cb);\n\n  // TODO: Clean this up once the react toast bugs are fixed. Just logging the validation response for now\n  onUpdateProfile = async (event) => {\n    event.preventDefault();\n    // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n    const { updatedAccount } = this.state;\n    const valid = await nestedEditFieldValidation(this.state, this.state.updatedAccount, this.onSetValidation, (validation) => console.warn('validation', validation));\n    if (!valid) {\n      // return onSaveChangesError();\n      console.warn('not valid');\n    }\n    this.setState({ originalAccount: updatedAccount });\n    // return onSavePassageChanges(updatedUser);\n  }\n\n  onSendPasswordResetEmail = (event) => {\n    event.preventDefault();\n    console.warn('Stubbed out password reset email');\n  }\n\n  onResetPassword = (event) => {\n    event.preventDefault();\n    const { actions: { password, confirmPassword } } = this.state;\n    if (password !== confirmPassword) {\n      console.warn('Toast is broken, have a console log');\n      // return this.notify\n    }\n    if (!confirmPassword.length) {\n      console.warn('Toast is broken, have a console log');\n      // return this.notify()\n    }\n    return console.warn('stubbed out password reset');\n  }\n\n\nhandleDetailsChange = (event, name ) => {\n  const { updatedAccount: previousAccountState } = this.state;\n  const value = event.target ? event.target.value : event;\n  const updatedAccount = update(previousAccountState, {\n     $merge: { [name]: value },\n  });\n  this.setState({ updatedAccount });\n}\n\n\n\n  render (){\n    const { firstName, lastName, avatarURL, addressLine1, city, state, zipCode, timeZone, email = {}} = this.state.updatedAccount;\n    return (\n      <main id=\"main\" role=\"main\">\n      <div className=\"main-holder grey lighten-5\">\n        <div className=\"title-row card-panel\">\n          <div className=\"mobile-header\">\n            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n          </div>\n          <h2 className=\"h1 white-text\">\n            <span className=\"heading-holder\">\n              <i className=\"icon-student\"></i>\n              <span className=\"heading-block\">My Account</span>\n            </span>\n          </h2>\n        </div>\n        <div className=\"content-section\">\n          <div className=\"content-section-holder\">\n            <form action=\"#\" className=\"custom-form\">\n              <fieldset>\n                <div className=\"container-xs container-align-left\">\n                  <div className=\"card-block\">\n                    <div className=\"card\">\n                      <div className=\"card-content card-account\">\n                        <div className=\"row mb-0\">\n                          <div className=\"col s12 m3 l5\">\n                            <div className=\"avatar\">\n                              <img src={avatarURL} alt=\"\"></img>\n                              <span className=\"btn-upload icon-photocam\">\n                                <input type=\"file\"></input>\n                              </span>\n                            </div>\n                          </div>\n                          <div className=\"col s12 m9 l7\">\n                            <div className=\"input-field input-field-icon\">\n                              <input\n                              type=\"email\"\n                              placeholder=\"Email Address\"\n                              value={email}\n                              onChange={(event) => this.handleDetailsChange(event, \"email\")}\n                              />\n                              <span className=\"input-icon icon-letter2\"></span>\n                            </div>\n                            <div className=\"input-field input-field-icon\">\n                              <input\n                                style={{width: '44%'}}\n                                type=\"text\"\n                                placeholder=\"First Name\"\n                                value={firstName}\n                                onChange={(event) => this.handleDetailsChange(event, \"firstName\")}\n                               />\n                                <input\n                                style={{width: '44%'}}\n                                type=\"text\"\n                                placeholder=\"Last Name\"\n                                value={lastName}\n                                onChange={(event) => this.handleDetailsChange(event, \"lastName\")}\n                               />\n                              <span className=\"input-icon icon-user-line\"></span>\n                            </div>\n                            <div className=\"input-field input-field-icon\">\n                              <input\n                                type=\"text\"\n                                placeholder=\"Street Address\"\n                                value={addressLine1}\n                                onChange={(event) => this.handleDetailsChange(event, \"addressLine1\")}\n                                  />\n                              <span className=\"input-icon icon-search\"></span>\n                            </div>\n                            <div className=\"input-field\">\n                              <input\n                                type=\"text\"\n                                placeholder=\"City\"\n                                value={city}\n                                onChange={(event) => this.handleDetailsChange(event, \"city\" )}\n                                  />\n                            </div>\n                            <div className=\"row mb-0\">\n                              <div className=\"col s12 m6\">\n                                {/* add dropdown  */}\n                                <div className=\"input-field\" style={{zIndex: 1001}}>\n                                 <Dropdown\n                                  value={getValueFromState(state, stateOptions)}\n                                  onChange={(event) => this.handleDetailsChange(event, 'state')}\n                                  options={stateOptions}\n                                  label=\"State\"\n                                  stateKey=\"state\"\n                                  dropdownKey=\"state\"\n                                  />\n                                </div>\n                              </div>\n                              <div className=\"col s12 m6\" style={{marginTop: '9%'}}>\n                                <div className=\"input-field\">\n                                  <input\n                                    type=\"text\"\n                                    placeholder=\"Zip Code\"\n                                    value={zipCode}\n                                    onChange={(event) => this.handleDetailsChange(event, \"zipCode\" )}\n                                      />\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"input-field\">\n                             <Dropdown\n                              value={getValueFromState(timeZone, timeZoneOptions)}\n                              options={timeZoneOptions}\n                              stateKey=\"timeZone\"\n                              dropdownKey=\"timeZone\"\n                              label=\"Time Zone\"\n                              onChange={(event) => this.handleDetailsChange(event, 'timeZone')}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"account_btn-holder\">\n                    <a href=\"#\" onClick={this.onResetPassword}>Reset Password</a>\n                    <a className=\"btn\" href=\"#\" onClick={this.onUpdateProfile}>Update ProÔ¨Åle</a>\n                  </div>\n                </div>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </main>\n    )\n  }\n}\n\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}