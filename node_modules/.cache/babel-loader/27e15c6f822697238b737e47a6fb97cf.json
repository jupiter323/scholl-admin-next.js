{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { data as _data } from '../../../utils';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\n\nvar FullView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullView, _React$Component);\n\n  function FullView(props) {\n    var _this;\n\n    _classCallCheck(this, FullView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event, index) {\n      var dropdownIsOpen = _this.state.dropdownIsOpen;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return _this.onCloseDropdown();\n      }\n\n      return _this.onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapWorksheetCards\", function () {\n      var _this$props = _this.props,\n          worksheets = _this$props.worksheets,\n          onSetActiveWorksheet = _this$props.onSetActiveWorksheet;\n      var _this$state = _this.state,\n          dropdownIndex = _this$state.dropdownIndex,\n          dropdownIsOpen = _this$state.dropdownIsOpen;\n      return worksheets.map(function (worksheet, index) {\n        var timeEstimate = worksheet.timeEstimate,\n            subject = worksheet.subject,\n            difficulty = worksheet.difficulty,\n            problems = worksheet.problems,\n            completedProblems = worksheet.completedProblems,\n            problemType = worksheet.problemType,\n            worksheetName = worksheet.worksheetName,\n            worksheetSource = worksheet.worksheetSource,\n            classifications = worksheet.classifications;\n        var completedPercentage = Number(completedProblems / problems.length) * 100;\n        return React.createElement(\"div\", {\n          className: \"card-main-col col s12 m8 l7 xl5\",\n          key: worksheet.id\n        }, React.createElement(\"div\", {\n          className: \"card-main work-card card\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel panel-border\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel-row row\"\n        }, React.createElement(\"div\", {\n          className: \"icon-col col s2\"\n        }, React.createElement(\"span\", {\n          className: \"block-icon\"\n        }, React.createElement(\"i\", {\n          className: \"icon-sheets-w\"\n        }))), React.createElement(\"div\", {\n          className: \"col s8\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel-text\"\n        }, React.createElement(\"div\", {\n          className: \"text-small truncate\"\n        }, \"Worksheet (\", subject, \")\"), React.createElement(\"div\", {\n          className: \"text-large truncate\"\n        }, worksheetName))), React.createElement(\"div\", {\n          className: \"position-top right-align\"\n        }, React.createElement(\"div\", {\n          className: \"icons-row\"\n        }, React.createElement(\"div\", {\n          className: \"dropdown-block col\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown01\",\n          className: \"dropdown-trigger btn\",\n          onClick: function onClick(event) {\n            return _this.handleDropdownClick(event, index);\n          }\n        }, React.createElement(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: 'block',\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"modal-trigger link-block\",\n          onClick: function onClick() {\n            return onSetActiveWorksheet(worksheet);\n          }\n        }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"link-delete\"\n        }, \"Delete\"))) : null)))), React.createElement(\"div\", {\n          className: \"card-top-block\"\n        }, React.createElement(\"div\", {\n          className: \"d-flex row mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"left-col col s7\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Problem Type:\"), React.createElement(\"dd\", null, problemType))), React.createElement(\"div\", {\n          className: \"right-col col s5 right-align\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Di\\uFB03culty:\"), React.createElement(\"dd\", null, difficulty)))))), React.createElement(\"div\", {\n          className: \"card-content\"\n        }, React.createElement(\"div\", {\n          className: \"d-flex sameheight-all row mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"col s12\"\n        }, React.createElement(\"div\", {\n          className: \"chart-container\"\n        }, React.createElement(\"div\", {\n          className: \"chart-holder\"\n        }, React.createElement(Doughnut, {\n          data: function data() {\n            return _data(completedPercentage);\n          },\n          options: {\n            circumference: 1 * Math.PI,\n            rotation: 1 * Math.PI,\n            cutoutPercentage: 60,\n            tooltips: false\n          }\n        }), React.createElement(\"span\", {\n          className: \"chart-value\",\n          style: {\n            backgroundColor: '#333'\n          }\n        }, React.createElement(\"span\", {\n          \"data-count-up\": true,\n          \"data-start-val\": \"0\",\n          \"data-end-val\": \"0\",\n          \"data-duration\": \"1\"\n        }), React.createElement(\"span\", {\n          className: \"percentage\"\n        }, \"%\"))), React.createElement(\"div\", {\n          className: \"chart-row\"\n        }, React.createElement(\"div\", {\n          className: \"chart-col chart-start\"\n        }, \"\\xA0\"), React.createElement(\"div\", {\n          className: \"chart-col chart-end\"\n        }, React.createElement(\"span\", {\n          className: \"amount\",\n          style: {\n            color: 'inherit'\n          }\n        }, \"\\xA0\"))), React.createElement(\"div\", {\n          className: \"chart-description\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Time Est:\"), React.createElement(\"dd\", null, formatTimeEstimate(timeEstimate))), React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Problems:\"), React.createElement(\"dd\", null, problems.length)))))), React.createElement(\"div\", {\n          className: \"card-text\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Worksheet Source:\"), React.createElement(\"dd\", null, worksheetSource))), React.createElement(\"div\", {\n          className: \"card-inner-row\"\n        }, React.createElement(\"div\", {\n          className: \"row-holder\"\n        }, React.createElement(\"ul\", {\n          className: \"classification-list\"\n        }, classifications.map(function (classification) {\n          return React.createElement(\"li\", {\n            className: \"class-box\",\n            key: classification\n          }, classification);\n        })))))));\n      });\n    });\n\n    _this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(FullView, [{\n    key: \"render\",\n    value: function render() {\n      var worksheets = this.props.worksheets;\n      return React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"result-row center-align\"\n      }, React.createElement(\"b\", {\n        className: \"result\"\n      }, \" - \", worksheets.length, \" results -\")), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-272\"\n      }, this.mapWorksheetCards()));\n    }\n  }]);\n\n  return FullView;\n}(React.Component);\n\nFullView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onSetActiveWorksheet: PropTypes.func.isRequired\n};\nexport default FullView;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Worksheet/ListPage/components/FullView/index.js"],"names":["React","PropTypes","Doughnut","data","formatTimeEstimate","FullView","props","dropdownIndex","setState","dropdownIsOpen","event","index","state","preventDefault","onCloseDropdown","onSetDropdown","worksheets","onSetActiveWorksheet","map","worksheet","timeEstimate","subject","difficulty","problems","completedProblems","problemType","worksheetName","worksheetSource","classifications","completedPercentage","Number","length","id","handleDropdownClick","display","opacity","transform","circumference","Math","PI","rotation","cutoutPercentage","tooltips","backgroundColor","color","classification","mapWorksheetCards","Component","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport { data } from '../../../utils';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\n\nclass FullView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    }\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetCards = () => {\n    const { worksheets, onSetActiveWorksheet } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { timeEstimate, subject, difficulty, problems, completedProblems, problemType, worksheetName, worksheetSource, classifications } = worksheet;\n      const completedPercentage = Number(completedProblems / problems.length) * 100;\n      return (\n        <div className=\"card-main-col col s12 m8 l7 xl5\" key={worksheet.id}>\n          <div className=\"card-main work-card card\">\n            <div className=\"card-panel panel-border\">\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-sheets-w\"></i>\n                  </span>\n                </div>\n                <div className=\"col s8\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small truncate\">Worksheet ({subject})</div>\n                    <div className=\"text-large truncate\">{worksheetName}</div>\n                  </div>\n                </div>\n                <div className=\"position-top right-align\">\n                  <div className=\"icons-row\">\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        data-target='dropdown01'\n                        className='dropdown-trigger btn'\n                        onClick={(event) => this.handleDropdownClick(event, index)}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                          <li>\n                            <a\n                              href=\"#\"\n                              className=\"modal-trigger link-block\"\n                              onClick={() => onSetActiveWorksheet(worksheet)}\n                            >\n                              Edit\n                            </a>\n                          </li>\n                          <li><a href=\"#!\">Clone</a></li>\n                          <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-top-block\">\n                <div className=\"d-flex row mb-0\">\n                  <div className=\"left-col col s7\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problem Type:</dt>\n                      <dd>{problemType}</dd>\n                    </dl>\n                  </div>\n                  <div className=\"right-col col s5 right-align\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Diﬃculty:</dt>\n                      <dd>{difficulty}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"d-flex sameheight-all row mb-0\">\n                <div className=\"col s12\">\n                  <div className=\"chart-container\">\n                    <div className=\"chart-holder\">\n                      <Doughnut\n                        data={() => data(completedPercentage)}\n                        options={{\n                          circumference: 1 * Math.PI,\n                          rotation: 1 * Math.PI,\n                          cutoutPercentage: 60,\n                          tooltips: false,\n                        }}\n                      />\n                      <span className=\"chart-value\" style={{ backgroundColor: '#333' }}><span data-count-up data-start-val=\"0\" data-end-val=\"0\" data-duration=\"1\"></span><span className=\"percentage\">%</span></span>\n                    </div>\n                    <div className=\"chart-row\">\n                      <div className=\"chart-col chart-start\">&nbsp;</div>\n                      <div className=\"chart-col chart-end\">\n                        <span className=\"amount\" style={{ color: 'inherit' }}>&nbsp;</span>\n                      </div>\n                    </div>\n                    <div className=\"chart-description\">\n                      <dl className=\"dl-horizontal\">\n                        <dt>Time Est:</dt>\n                        <dd>{formatTimeEstimate(timeEstimate)}</dd>\n                      </dl>\n                      <dl className=\"dl-horizontal\">\n                        <dt>Problems:</dt>\n                        <dd>{problems.length}</dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-text\">\n                <dl className=\"dl-horizontal\">\n                  <dt>Worksheet Source:</dt>\n                  <dd>{worksheetSource}</dd>\n                </dl>\n              </div>\n              <div className=\"card-inner-row\">\n                <div className=\"row-holder\">\n                  <ul className=\"classification-list\">\n                    {classifications.map(classification => <li className=\"class-box\" key={classification}>{classification}</li>)}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <div className=\"content-section\">\n        <div className=\"result-row center-align\">\n          <b className=\"result\"> - {worksheets.length} results -</b>\n        </div>\n        <div className=\"row d-flex-content card-width-272\">\n          {this.mapWorksheetCards()}\n        </div>\n      </div>\n    );\n  }\n}\n\nFullView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onSetActiveWorksheet: PropTypes.func.isRequired,\n};\n\nexport default FullView;\n"]},"metadata":{},"sourceType":"module"}