{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nconst styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  }\n};\n\nclass BubbleGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      const {\n        question: {\n          studentChoice\n        }\n      } = this.props;\n      this.setState({\n        selected: studentChoice\n      }, () => this.checkIfCorrect(this.state.selected));\n    });\n\n    _defineProperty(this, \"onHandleBubbleChange\", (event, letter) => {\n      if (this.props.question.studentChoice === \"\") {\n        this.setState({\n          selected: event.target.value\n        }, () => this.checkIfCorrect(letter));\n      }\n    });\n\n    _defineProperty(this, \"onSelectedBubbleClick\", event => {\n      const {\n        selected\n      } = this.state;\n\n      if (this.props.question.studentChoice === \"\") {\n        if (selected === event.target.value) {\n          this.setState({\n            selected: \"\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(this, \"checkIfCorrect\", letter => {\n      const {\n        question\n      } = this.props;\n\n      if (letter === question.answer) {\n        this.setState({\n          correct: true\n        });\n      } else {\n        this.setState({\n          correct: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"mapEmptyBubbles\", id => {\n      const letters = [\"A\", \"B\", \"C\", \"D\"];\n      return letters.map(letter => __jsx(\"li\", {\n        key: letter\n      }, __jsx(\"form\", null, __jsx(\"input\", {\n        type: \"radio\",\n        id: `${id}${letter}`,\n        name: \"letter\",\n        value: letter,\n        checked: this.state.selected === letter,\n        onChange: event => this.onHandleBubbleChange(event, letter),\n        onClick: event => this.onSelectedBubbleClick(event)\n      }), __jsx(\"label\", {\n        htmlFor: `${id}${letter}`,\n        style: this.state.selected ? this.renderBubbleStyle(letter) : styles.plain\n      }, __jsx(\"span\", {\n        style: {\n          display: 'block',\n          marginTop: '2px',\n          paddingLeft: \"4.5px\"\n        }\n      }, letter)))));\n    });\n\n    _defineProperty(this, \"renderBubbleStyle\", letter => {\n      const {\n        correct,\n        selected\n      } = this.state;\n      const {\n        question: {\n          answer\n        }\n      } = this.props;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    this.state = {\n      selected: this.props.question.studentChoice,\n      correct: null\n    };\n  }\n\n  render() {\n    const {\n      question: {\n        id\n      }\n    } = this.props;\n    return __jsx(React.Fragment, null, this.mapEmptyBubbles(id));\n  }\n\n}\n\nexport default BubbleGroup;","map":null,"metadata":{},"sourceType":"module"}