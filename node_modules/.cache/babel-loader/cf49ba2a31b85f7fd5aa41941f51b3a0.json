{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TestCard from './components/TestCard';\nimport TestSections from '../TestSections';\nimport sampleTests from './utils/sampleTests';\nimport EditTestModal from './components/EditTestModal';\n\nvar DetailTestList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailTestList, _React$Component);\n\n  function DetailTestList(props) {\n    var _this;\n\n    _classCallCheck(this, DetailTestList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailTestList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleEditTestModal\", function () {\n      var activeTest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return _this.setState(function (_ref) {\n        var editTestModalOpen = _ref.editTestModalOpen;\n        return {\n          editTestModalOpen: !editTestModalOpen,\n          activeTest: activeTest\n        };\n      }, _this.onCloseDropdown);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCreateTest\", function (event) {\n      event.preventDefault();\n      console.warn('Pending implementation of create test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnterAnswers\", function () {\n      return console.warn('Pending implementation of enter answers UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditTest\", function () {\n      return console.warn('Pending implementation edit test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDownloadReport\", function () {\n      return console.warn('Pending implementation of download report ui and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteTest\", function () {\n      return _this.setState({\n        editTestModalOpen: false\n      }, function () {\n        return console.warn('Pending implementation of delete test UI and functionality');\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveTestChanges\", function (testVersion, settings) {\n      _this.onToggleEditTestModal();\n\n      console.warn('Pending save test changes functionality', testVersion, settings);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openTestScores\", function (index) {\n      var tests = _this.state.tests;\n      var newTestArray = tests.filter(function (test) {\n        return test.status === 'complete';\n      });\n\n      _this.setState({\n        selectedTest: newTestArray[index.index]\n      }, console.log(\"clicked\", index[0], newTestArray, newTestArray[{\n        index: index\n      }]));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapCompletedTests\", function () {\n      var tests = _this.state.tests;\n      return tests.filter(function (test) {\n        return test.status === 'complete';\n      }).map(function (test, index) {\n        return React.createElement(TestCard, {\n          test: test,\n          key: \"completed-\".concat(test.id),\n          index: index,\n          onEditTest: function onEditTest() {\n            return _this.onToggleEditTestModal(test);\n          },\n          onDeleteTest: _this.onDeleteTest,\n          onSetDropdown: _this.onSetDropdown,\n          onEnterAnswers: _this.onEnterAnswers,\n          onCloseDropdown: _this.onCloseDropdown,\n          onDownloadReport: _this.onDownloadReport,\n          dropdownIndex: _this.state.dropdownIndex,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          openTestScores: _this.openTestScores\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapFutureTests\", function () {\n      var tests = _this.state.tests;\n      return tests.filter(function (test) {\n        return test.status !== 'complete';\n      }).map(function (test, index) {\n        return React.createElement(TestCard, {\n          futureTest: true,\n          test: test,\n          key: \"future-\".concat(test.id),\n          onEditTest: function onEditTest() {\n            return _this.onToggleEditTestModal(test);\n          },\n          onDeleteTest: _this.onDeleteTest,\n          onSetDropdown: _this.onSetDropdown,\n          onEnterAnswers: _this.onEnterAnswers,\n          onCloseDropdown: _this.onCloseDropdown,\n          onDownloadReport: _this.onDownloadReport,\n          dropdownIndex: _this.state.dropdownIndex,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          openTestScores: _this.openTestScores,\n          index: tests.filter(function (filterTest) {\n            return filterTest.status === 'complete';\n          }).length + index\n        });\n      });\n    });\n\n    _this.state = {\n      tests: sampleTests,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      editTestModalOpen: false,\n      activeTest: null,\n      selectedTest: null\n    };\n    return _this;\n  }\n\n  _createClass(DetailTestList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          editTestModalOpen = _this$state.editTestModalOpen,\n          activeTest = _this$state.activeTest,\n          selectedTest = _this$state.selectedTest;\n      var user = this.props.user;\n      return React.createElement(React.Fragment, null, !selectedTest && (editTestModalOpen ? React.createElement(EditTestModal, {\n        user: user,\n        test: activeTest,\n        onDeleteTest: this.onDeleteTest,\n        onSaveTestChanges: this.onSaveTestChanges\n      }) : React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"content-container\"\n      }, React.createElement(\"h2\", null, \"Completed Tests\"), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapCompletedTests())), React.createElement(\"div\", {\n        className: \"content-container\"\n      }, React.createElement(\"h2\", null, \"Future Tests\"), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapFutureTests()))), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onCreateTest,\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Test\"))), selectedTest && React.createElement(TestSections, {\n        test: selectedTest\n      }));\n    }\n  }]);\n\n  return DetailTestList;\n}(React.Component);\n\nDetailTestList.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default DetailTestList;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestList/index.js"],"names":["React","PropTypes","TestCard","TestSections","sampleTests","EditTestModal","DetailTestList","props","activeTest","setState","editTestModalOpen","onCloseDropdown","dropdownIndex","dropdownIsOpen","event","preventDefault","console","warn","testVersion","settings","onToggleEditTestModal","index","tests","state","newTestArray","filter","test","status","selectedTest","log","map","id","onDeleteTest","onSetDropdown","onEnterAnswers","onDownloadReport","openTestScores","filterTest","length","user","onSaveTestChanges","mapCompletedTests","mapFutureTests","onCreateTest","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TestCard from './components/TestCard';\nimport TestSections from '../TestSections';\nimport sampleTests from './utils/sampleTests';\nimport EditTestModal from './components/EditTestModal';\n\nclass DetailTestList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tests: sampleTests,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      editTestModalOpen: false,\n      activeTest: null,\n      selectedTest: null,\n    };\n  }\n\n  onToggleEditTestModal = (activeTest = null) => this.setState(({ editTestModalOpen }) => ({ editTestModalOpen: !editTestModalOpen, activeTest }), this.onCloseDropdown)\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false, dropdownIndex: null });\n\n  onCreateTest = (event) => {\n    event.preventDefault();\n    console.warn('Pending implementation of create test UI and functionality');\n  }\n\n  onEnterAnswers = () => console.warn('Pending implementation of enter answers UI and functionality')\n  onEditTest = () => console.warn('Pending implementation edit test UI and functionality')\n  onDownloadReport = () => console.warn('Pending implementation of download report ui and functionality')\n  onDeleteTest = () => this.setState({ editTestModalOpen: false }, () => console.warn('Pending implementation of delete test UI and functionality'))\n\n  onSaveTestChanges = (testVersion, settings) => {\n    this.onToggleEditTestModal();\n    console.warn('Pending save test changes functionality', testVersion, settings);\n  }\n  openTestScores = (index) => {\n    const { tests } = this.state;\n    const newTestArray = tests.filter(test => test.status === 'complete');\n    this.setState({selectedTest: newTestArray[index.index]}, console.log(\"clicked\", index[0], newTestArray, newTestArray[{index}]))\n  }\n\n  mapCompletedTests = () => {\n    const { tests } = this.state;\n    return tests.filter(test => test.status === 'complete').map((test, index) => (\n      <TestCard\n        test={test}\n        key={`completed-${test.id}`}\n        index={index}\n        onEditTest={() => this.onToggleEditTestModal(test)}\n        onDeleteTest={this.onDeleteTest}\n        onSetDropdown={this.onSetDropdown}\n        onEnterAnswers={this.onEnterAnswers}\n        onCloseDropdown={this.onCloseDropdown}\n        onDownloadReport={this.onDownloadReport}\n        dropdownIndex={this.state.dropdownIndex}\n        dropdownIsOpen={this.state.dropdownIsOpen}\n        openTestScores={this.openTestScores}\n      />\n    ))\n  }\n\n  mapFutureTests = () => {\n    const { tests } = this.state;\n    return tests.filter(test => test.status !== 'complete').map((test, index) => (\n      <TestCard\n        futureTest\n        test={test}\n        key={`future-${test.id}`}\n        onEditTest={() => this.onToggleEditTestModal(test)}\n        onDeleteTest={this.onDeleteTest}\n        onSetDropdown={this.onSetDropdown}\n        onEnterAnswers={this.onEnterAnswers}\n        onCloseDropdown={this.onCloseDropdown}\n        onDownloadReport={this.onDownloadReport}\n        dropdownIndex={this.state.dropdownIndex}\n        dropdownIsOpen={this.state.dropdownIsOpen}\n        openTestScores={this.openTestScores}\n        index={tests.filter(filterTest => filterTest.status === 'complete').length + index}\n      />\n    ))\n  }\n\n  render() {\n    const { editTestModalOpen, activeTest, selectedTest} = this.state;\n    const {user} = this.props;\n    return (\n      <React.Fragment>\n      {!selectedTest && (\n        <Choose>\n          <When condition={editTestModalOpen}>\n            <EditTestModal\n              user={user}\n              test={activeTest}\n              onDeleteTest={this.onDeleteTest}\n              onSaveTestChanges={this.onSaveTestChanges}\n            />\n          </When>\n          <Otherwise>\n            <div className=\"content-section\">\n              <div className=\"section-holder\">\n                <div className=\"content-container\">\n                  <h2>Completed Tests</h2>\n                  <div className=\"row d-flex-content card-width-366\">\n                    {this.mapCompletedTests()}\n                  </div>\n                </div>\n                <div className=\"content-container\">\n                  <h2>Future Tests</h2>\n                  <div className=\"row d-flex-content card-width-366\">\n                    {this.mapFutureTests()}\n                  </div>\n                </div>\n              </div>\n              <a href=\"#\" onClick={this.onCreateTest} className=\"waves-effect waves-teal btn add-btn\"><i className=\"material-icons\">add</i>New Test</a>\n            </div>\n          </Otherwise>\n        </Choose>\n      )}\n      {selectedTest && (\n        <TestSections test={selectedTest} />\n        )}\n        </React.Fragment>\n\n    );\n  }\n}\n\nDetailTestList.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default DetailTestList;\n"]},"metadata":{},"sourceType":"module"}