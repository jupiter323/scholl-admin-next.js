{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalPossible, totalPossible - totalScore],\n    backgroundColor: ['#ce237a', 'rgb(234, 234, 234)']\n  }]\n}); // eslint-disable-next-line react/prop-types\n\n\nconst TotalScoreCard = ({\n  totalScore,\n  totalPossible\n}) => __jsx(\"div\", {\n  className: \"col s12 l6 card-width-546\"\n}, __jsx(\"div\", {\n  className: \"card-block\"\n}, __jsx(\"h2\", null, \"Your Score \", __jsx(\"span\", {\n  className: \"separator\"\n}, \"|\"), \" \", __jsx(\"span\", {\n  className: \"quantity\"\n}, \"400 to 1600\")), __jsx(\"div\", {\n  className: \"card-main-full card\"\n}, __jsx(\"div\", {\n  className: \"card-content center-align\"\n}, __jsx(\"div\", {\n  className: \"chart-block chart-block-total\"\n}, __jsx(Doughnut, {\n  data: () => data(totalScore, totalPossible),\n  width: 320,\n  height: 320,\n  options: {\n    cutoutPercentage: 80\n  }\n}), __jsx(\"div\", {\n  className: \"chart-text\"\n}, __jsx(\"span\", {\n  className: \"title\"\n}, \"TotalScore\"), __jsx(\"span\", {\n  className: \"value\"\n}, totalScore), __jsx(\"span\", {\n  className: \"description\"\n}, \"(+220)\")))))));\n\nTotalScoreCard.propTypes = {\n  totalScore: PropTypes.string.isRequired,\n  totalPossible: PropTypes.string.isRequired\n};\nexport default TotalScoreCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestScorePage/components/TotalScoreCard/index.js"],"names":["React","PropTypes","Doughnut","data","totalScore","totalPossible","datasets","backgroundColor","TotalScoreCard","cutoutPercentage","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,IAAI,GAAG,CAACC,UAAD,EAAaC,aAAb,MAAgC;AAC3CC,EAAAA,QAAQ,EAAE,CAAC;AACTH,IAAAA,IAAI,EAAE,CAACE,aAAD,EAAgBA,aAAa,GAAGD,UAAhC,CADG;AAETG,IAAAA,eAAe,EAAE,CACf,SADe,EAEf,oBAFe;AAFR,GAAD;AADiC,CAAhC,CAAb,C,CASA;;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEJ,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KACrB;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE,iCAAe;AAAM,EAAA,SAAS,EAAC;AAAhB,OAAf,OAAoD;AAAM,EAAA,SAAS,EAAC;AAAhB,iBAApD,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE,MAAC,QAAD;AACE,EAAA,IAAI,EAAE,MAAMF,IAAI,CAACC,UAAD,EAAaC,aAAb,CADlB;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAE;AACPI,IAAAA,gBAAgB,EAAE;AADX;AAJX,EADF,EASE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAM,EAAA,SAAS,EAAC;AAAhB,gBADF,EAEE;AAAM,EAAA,SAAS,EAAC;AAAhB,GAAyBL,UAAzB,CAFF,EAGE;AAAM,EAAA,SAAS,EAAC;AAAhB,YAHF,CATF,CADF,CADF,CAFF,CADF,CADF;;AA2BAI,cAAc,CAACE,SAAf,GAA2B;AACzBN,EAAAA,UAAU,EAAEH,SAAS,CAACU,MAAV,CAAiBC,UADJ;AAEzBP,EAAAA,aAAa,EAAEJ,SAAS,CAACU,MAAV,CAAiBC;AAFP,CAA3B;AAKA,eAAeJ,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalPossible, totalPossible - totalScore],\n    backgroundColor: [\n      '#ce237a',\n      'rgb(234, 234, 234)',\n    ],\n  }],\n})\n// eslint-disable-next-line react/prop-types\nconst TotalScoreCard = ({ totalScore, totalPossible }) => (\n  <div className=\"col s12 l6 card-width-546\">\n    <div className=\"card-block\">\n      <h2>Your Score <span className=\"separator\">|</span> <span className=\"quantity\">400 to 1600</span></h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content center-align\">\n          <div className=\"chart-block chart-block-total\">\n            <Doughnut\n              data={() => data(totalScore, totalPossible)}\n              width={320}\n              height={320}\n              options={{\n                cutoutPercentage: 80,\n              }}\n            />\n            <div className=\"chart-text\">\n              <span className=\"title\">TotalScore</span>\n              <span className=\"value\">{totalScore}</span>\n              <span className=\"description\">(+220)</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nTotalScoreCard.propTypes = {\n  totalScore: PropTypes.string.isRequired,\n  totalPossible: PropTypes.string.isRequired,\n};\n\nexport default TotalScoreCard;"]},"metadata":{},"sourceType":"module"}