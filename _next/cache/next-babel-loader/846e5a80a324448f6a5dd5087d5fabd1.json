{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FullView/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport PropTypes from \"prop-types\";\nimport LessonCard from \"./components/LessonCard\";\nimport Checkbox from \"./components/LessonCard/components/Checkbox\"; // eslint-disable-next-line\n\nimport ClickOffComponentWrapper from \"../../../../ClickOffComponentWrapper\";\nimport { rescheduleStudentLessons, unAssignLessonToStudent, resetStudentLessons } from '../../../index/actions';\nimport moment from 'moment';\nimport { makeSelectCheckedLessons } from '../../../index/selectors';\nimport RescheduleModal from \"../RescheduleModal\";\nimport Modal from '../../../../Modal/index';\n\nconst FullView = props => {\n  const {\n    0: openRescheduleModal,\n    1: toggleRescheduleModal\n  } = useState(false);\n  const {\n    0: activeLesson,\n    1: setActiveLesson\n  } = useState([]);\n  const {\n    0: isConfirmModalOpen,\n    1: setIsConfirmModalOpen\n  } = useState(false);\n  const {\n    0: confirmationFunc,\n    1: setConfirmationFunc\n  } = useState(\"\");\n  const {\n    0: lessonIdsToEdit,\n    1: setLessonIdsToEdit\n  } = useState([]);\n  const {\n    0: rescheduleModalState,\n    1: setRescheduleModalState\n  } = useState({});\n  const {\n    lessons = [],\n    onCloneLesson,\n    onDeleteLesson,\n    user,\n    onAddCheckedLesson,\n    onRemoveCheckedLesson,\n    onCheckAll,\n    selectAll,\n    dropdownIsOpen,\n    onOpenModal,\n    onOpenDropdown,\n    onCloseDropdown,\n    renderDropdownOptions,\n    checkedCardIds,\n    resetLessonSelections,\n    handleMarkAllFlagsReviewed,\n    lessonIdsToUnFlag\n  } = props;\n\n  const mapLessons = () => lessons.map((lesson, index) => __jsx(LessonCard // eslint-disable-next-line react/no-array-index-key\n  , {\n    key: lesson.id,\n    lessonId: lesson.lesson_id ? lesson.lesson_id : lesson.id,\n    uniqueId: lesson.id,\n    index: index,\n    lesson: lesson,\n    onCloneLesson: () => onCloneLesson(index),\n    onDeleteLesson: () => onDeleteLesson(index),\n    user: user,\n    selected: lesson.selected,\n    onAddCheckedLesson: onAddCheckedLesson,\n    onRemoveCheckedLesson: onRemoveCheckedLesson,\n    handleRescheduleModalOpen: handleRescheduleModalOpen,\n    onOpenModal: onOpenModal,\n    onCloseDropdown: onCloseDropdown,\n    onAddAssignLessonIds: props.onAddAssignLessonIds,\n    handleResetLesson: handleResetLesson,\n    handleUnassignLesson: handleUnassignLesson,\n    handleMarkAllFlagsReviewed: handleMarkAllFlagsReviewed,\n    flagRemoved: lessonIdsToUnFlag.includes(lesson.id),\n    handleExcuseLessonLateness: props.handleExcuseLessonLateness,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n\n  const handleRescheduleModalOpen = activeLesson => {\n    onCloseDropdown();\n    toggleRescheduleModal(!openRescheduleModal);\n    setActiveLesson(activeLesson);\n  };\n\n  const handleAssignLesson = () => {\n    onOpenModal();\n  };\n\n  const onSaveScheduleChanges = modalState => {\n    if (checkForDifferentStatus(activeLesson)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(activeLesson);\n      setRescheduleModalState(modalState);\n      return setConfirmationFunc('reschedule');\n    }\n\n    onSubmitScheduleChanges(modalState, activeLesson);\n  };\n\n  const onSubmitScheduleChanges = (modalState, activeLesson) => {\n    const {\n      dispathRescheduleStudentLessons\n    } = props;\n    const payload = {\n      student_lesson_ids: activeLesson,\n      assignment_date: moment(modalState.assignDate).format('YYYY-MM-DD'),\n      due_date: !modalState.isTimed ? moment(modalState.dueDate).format('YYYY-MM-DD') : null\n    };\n\n    if (_Object$keys(payload).length > 0 && typeof payload === 'object') {\n      dispathRescheduleStudentLessons(payload);\n      toggleRescheduleModal(!openRescheduleModal);\n      resetLessonSelections();\n    }\n  };\n\n  const handleUnassignLesson = lessonIds => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('unassign');\n    }\n\n    onSubmitUnassignLesson(lessonIds);\n  };\n\n  const onSubmitUnassignLesson = lessonIds => {\n    const {\n      dispathUnAssignLessonToStudent\n    } = props;\n\n    if (lessonIds && typeof lessonIds === 'object' && lessonIds.length > 0) {\n      dispathUnAssignLessonToStudent(lessonIds);\n      onCloseDropdown();\n      resetLessonSelections();\n    }\n  };\n\n  const handleResetLesson = lessonIds => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('reset');\n    }\n\n    onSubmitResetLesson(lessonIds);\n  };\n\n  const onSubmitResetLesson = lessonIds => {\n    const {\n      dispathResetStudentLessons\n    } = props;\n\n    if (lessonIds && typeof lessonIds === 'object' && lessonIds.length > 0) {\n      dispathResetStudentLessons(lessonIds);\n      onCloseDropdown();\n      resetLessonSelections();\n    }\n  };\n\n  const onHandleExcuseLesson = lessonIds => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('excuse/unexcuse');\n    }\n\n    onSubmitExcuseLesson(lessonIds);\n  };\n\n  const onSubmitExcuseLesson = lessonIds => {\n    const {\n      handleExcuseLessonLateness\n    } = props;\n    handleExcuseLessonLateness(lessonIds);\n    onCloseDropdown();\n  };\n\n  const checkForDifferentStatus = lessonIds => {\n    const relevantLessons = lessons.filter(lesson => lessonIds.includes(lesson.id));\n    const statusList = [];\n    relevantLessons.map(lesson => !statusList.includes(lesson.status) && statusList.push(lesson.status));\n\n    if (statusList.length > 1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const startMarkFlagsReviewed = lessonIds => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('review flagged');\n    }\n\n    onSubmitMarkFlagsReviewed(lessonIds);\n  };\n\n  const onSubmitMarkFlagsReviewed = lessonIds => {\n    handleMarkAllFlagsReviewed(lessonIds);\n    onCloseDropdown();\n  };\n\n  const onConfirmModalFunction = () => {\n    switch (confirmationFunc) {\n      case 'reschedule':\n        onSubmitScheduleChanges(rescheduleModalState, lessonIdsToEdit);\n        break;\n\n      case 'unassign':\n        onSubmitUnassignLesson(lessonIdsToEdit);\n        break;\n\n      case 'reset':\n        onSubmitResetLesson(lessonIdsToEdit);\n        break;\n\n      case 'excuse/unexcuse':\n        onSubmitExcuseLesson(lessonIdsToEdit);\n        break;\n\n      case 'review flagged':\n        onSubmitMarkFlagsReviewed(lessonIdsToEdit);\n        break;\n\n      default:\n        break;\n    }\n\n    setIsConfirmModalOpen(false);\n    toggleRescheduleModal(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"content-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(Modal, {\n    open: isConfirmModalOpen,\n    onConfirm: () => onConfirmModalFunction(),\n    onClose: () => setIsConfirmModalOpen(false),\n    header: `Are you sure you want to ${confirmationFunc} lesson(s)?`,\n    body: \"Some of the lessons are you are trying to edit have a different completion status. Edit lesson(s) anyways?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    label: \"Check all\",\n    checkBoxId: \"checkall\",\n    onChecked: onCheckAll,\n    type: \"pageCheckBox\",\n    checked: selectAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \" - \", lessons && lessons.length, \" results -\")), __jsx(\"div\", {\n    className: \"dropdown-block col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"dropdown-trigger btn\",\n    href: \"#\",\n    \"data-target\": \"dropdown01\" // eslint-disable-next-line\n    ,\n    onClick: e => {\n      e.preventDefault();\n      onOpenDropdown();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"material-icons dots-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"more_vert\")), __jsx(\"div\", {\n    className: \"row d-flex-content card-width-272\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, __jsx(RescheduleModal, {\n    open: openRescheduleModal,\n    lesson: activeLesson,\n    onClose: handleRescheduleModalOpen,\n    onSave: onSaveScheduleChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })), dropdownIsOpen ? __jsx(ClickOffComponentWrapper, {\n    onOuterClick: () => onCloseDropdown(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    id: \"dropdown01\",\n    className: \"dropdown-content dropdown-wide\",\n    style: {\n      display: \"block\",\n      opacity: \"1\",\n      transform: \"scaleX(1) scaleY(1)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, renderDropdownOptions(status, handleAssignLesson, handleRescheduleModalOpen, onHandleExcuseLesson, handleResetLesson, startMarkFlagsReviewed, handleUnassignLesson, checkedCardIds))) : null)), __jsx(\"div\", {\n    className: \"row d-flex-content  justify-content-center card-width-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, mapLessons()));\n};\n\nFullView.propTypes = {\n  lessons: PropTypes.array.ifsRequired,\n  user: PropTypes.object.isRequired,\n  onCloneLesson: PropTypes.func.isRequired,\n  onDeleteLesson: PropTypes.func.isRequired,\n  onCheckAll: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispathRescheduleStudentLessons: bindActionCreators(rescheduleStudentLessons, dispatch),\n  dispathUnAssignLessonToStudent: bindActionCreators(unAssignLessonToStudent, dispatch),\n  dispathResetStudentLessons: bindActionCreators(resetStudentLessons, dispatch)\n});\n\nconst mapStateToProps = createStructuredSelector({\n  checkedLessons: makeSelectCheckedLessons()\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(FullView);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FullView/index.js"],"names":["React","useState","connect","createStructuredSelector","bindActionCreators","PropTypes","LessonCard","Checkbox","ClickOffComponentWrapper","rescheduleStudentLessons","unAssignLessonToStudent","resetStudentLessons","moment","makeSelectCheckedLessons","RescheduleModal","Modal","FullView","props","openRescheduleModal","toggleRescheduleModal","activeLesson","setActiveLesson","isConfirmModalOpen","setIsConfirmModalOpen","confirmationFunc","setConfirmationFunc","lessonIdsToEdit","setLessonIdsToEdit","rescheduleModalState","setRescheduleModalState","lessons","onCloneLesson","onDeleteLesson","user","onAddCheckedLesson","onRemoveCheckedLesson","onCheckAll","selectAll","dropdownIsOpen","onOpenModal","onOpenDropdown","onCloseDropdown","renderDropdownOptions","checkedCardIds","resetLessonSelections","handleMarkAllFlagsReviewed","lessonIdsToUnFlag","mapLessons","map","lesson","index","id","lesson_id","selected","handleRescheduleModalOpen","onAddAssignLessonIds","handleResetLesson","handleUnassignLesson","includes","handleExcuseLessonLateness","handleAssignLesson","onSaveScheduleChanges","modalState","checkForDifferentStatus","onSubmitScheduleChanges","dispathRescheduleStudentLessons","payload","student_lesson_ids","assignment_date","assignDate","format","due_date","isTimed","dueDate","length","lessonIds","onSubmitUnassignLesson","dispathUnAssignLessonToStudent","onSubmitResetLesson","dispathResetStudentLessons","onHandleExcuseLesson","onSubmitExcuseLesson","relevantLessons","filter","statusList","status","push","startMarkFlagsReviewed","onSubmitMarkFlagsReviewed","onConfirmModalFunction","e","preventDefault","display","opacity","transform","propTypes","array","ifsRequired","object","isRequired","func","mapDispatchToProps","dispatch","mapStateToProps","checkedLessons"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport PropTypes from \"prop-types\";\nimport LessonCard from \"./components/LessonCard\";\nimport Checkbox from \"./components/LessonCard/components/Checkbox\";\n// eslint-disable-next-line\nimport ClickOffComponentWrapper from \"../../../../ClickOffComponentWrapper\";\nimport { rescheduleStudentLessons, unAssignLessonToStudent, resetStudentLessons } from '../../../index/actions';\nimport moment from 'moment';\nimport { makeSelectCheckedLessons } from '../../../index/selectors';\nimport RescheduleModal from \"../RescheduleModal\";\nimport Modal from '../../../../Modal/index';\n\n\nconst FullView = props => {\n  const [openRescheduleModal, toggleRescheduleModal] = useState(false);\n  const [activeLesson, setActiveLesson] = useState([]);\n  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);\n  const [confirmationFunc, setConfirmationFunc] = useState(\"\");\n  const [lessonIdsToEdit, setLessonIdsToEdit] = useState([]);\n  const [rescheduleModalState, setRescheduleModalState] = useState({});\n\n  const {\n    lessons = [],\n    onCloneLesson,\n    onDeleteLesson,\n    user,\n    onAddCheckedLesson,\n    onRemoveCheckedLesson,\n    onCheckAll,\n    selectAll,\n    dropdownIsOpen,\n    onOpenModal,\n    onOpenDropdown,\n    onCloseDropdown,\n    renderDropdownOptions,\n    checkedCardIds,\n    resetLessonSelections,\n    handleMarkAllFlagsReviewed,\n    lessonIdsToUnFlag,\n  } = props;\n  const mapLessons = () => lessons.map((lesson, index) => (\n    <LessonCard\n      // eslint-disable-next-line react/no-array-index-key\n      key={lesson.id}\n      lessonId={lesson.lesson_id ? lesson.lesson_id : lesson.id}\n      uniqueId={lesson.id}\n      index={index}\n      lesson={lesson}\n      onCloneLesson={() => onCloneLesson(index)}\n      onDeleteLesson={() => onDeleteLesson(index)}\n      user={user}\n      selected={lesson.selected}\n      onAddCheckedLesson={onAddCheckedLesson}\n      onRemoveCheckedLesson={onRemoveCheckedLesson}\n      handleRescheduleModalOpen={handleRescheduleModalOpen}\n      onOpenModal={onOpenModal}\n      onCloseDropdown={onCloseDropdown}\n      onAddAssignLessonIds={props.onAddAssignLessonIds}\n      handleResetLesson={handleResetLesson}\n      handleUnassignLesson={handleUnassignLesson}\n      handleMarkAllFlagsReviewed={handleMarkAllFlagsReviewed}\n      flagRemoved={lessonIdsToUnFlag.includes(lesson.id)}\n      handleExcuseLessonLateness={props.handleExcuseLessonLateness}\n    />\n  ));\n  const handleRescheduleModalOpen = activeLesson => {\n    onCloseDropdown();\n    toggleRescheduleModal(!openRescheduleModal);\n    setActiveLesson(activeLesson);\n  };\n\n  const handleAssignLesson = () => {\n    onOpenModal();\n  };\n\n  const onSaveScheduleChanges = (modalState) => {\n    if (checkForDifferentStatus(activeLesson)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(activeLesson);\n      setRescheduleModalState(modalState);\n      return setConfirmationFunc('reschedule');\n    }\n    onSubmitScheduleChanges(modalState, activeLesson);\n  };\n\n  const onSubmitScheduleChanges = (modalState, activeLesson) => {\n    const { dispathRescheduleStudentLessons } = props;\n    const payload = {\n      student_lesson_ids: activeLesson,\n      assignment_date: moment(modalState.assignDate).format('YYYY-MM-DD'),\n      due_date: !modalState.isTimed ? moment(modalState.dueDate).format('YYYY-MM-DD') : null,\n    };\n    if (Object.keys(payload).length > 0 && typeof payload === 'object') {\n      dispathRescheduleStudentLessons(payload);\n      toggleRescheduleModal(!openRescheduleModal);\n      resetLessonSelections();\n    }\n  };\n\n  const handleUnassignLesson = lessonIds => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('unassign');\n    }\n    onSubmitUnassignLesson(lessonIds);\n  };\n\n  const onSubmitUnassignLesson = (lessonIds) => {\n    const { dispathUnAssignLessonToStudent } = props;\n    if (lessonIds && typeof lessonIds === 'object' && lessonIds.length > 0) {\n      dispathUnAssignLessonToStudent(lessonIds);\n      onCloseDropdown();\n      resetLessonSelections();\n    }\n  };\n\n  const handleResetLesson = lessonIds => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('reset');\n    }\n    onSubmitResetLesson(lessonIds);\n  };\n\n  const onSubmitResetLesson = (lessonIds) => {\n    const { dispathResetStudentLessons } = props;\n    if (lessonIds && typeof lessonIds === 'object' && lessonIds.length > 0) {\n      dispathResetStudentLessons(lessonIds);\n      onCloseDropdown();\n      resetLessonSelections();\n    }\n  };\n\n  const onHandleExcuseLesson = (lessonIds) => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('excuse/unexcuse');\n    }\n    onSubmitExcuseLesson(lessonIds);\n  };\n\n  const onSubmitExcuseLesson = (lessonIds) => {\n    const { handleExcuseLessonLateness } = props;\n    handleExcuseLessonLateness(lessonIds);\n    onCloseDropdown();\n  };\n\n  const checkForDifferentStatus = (lessonIds) => {\n    const relevantLessons = lessons.filter(lesson => lessonIds.includes(lesson.id));\n    const statusList = [];\n    relevantLessons.map(lesson => !statusList.includes(lesson.status) && statusList.push(lesson.status));\n    if (statusList.length > 1) {\n      return true;\n    }\n    return false;\n  };\n\n  const startMarkFlagsReviewed = (lessonIds) => {\n    if (checkForDifferentStatus(lessonIds)) {\n      setIsConfirmModalOpen(true);\n      setLessonIdsToEdit(lessonIds);\n      return setConfirmationFunc('review flagged');\n    }\n    onSubmitMarkFlagsReviewed(lessonIds);\n  };\n\n  const onSubmitMarkFlagsReviewed = (lessonIds) => {\n    handleMarkAllFlagsReviewed(lessonIds);\n    onCloseDropdown();\n  };\n\n  const onConfirmModalFunction = () => {\n    switch (confirmationFunc) {\n      case 'reschedule':\n        onSubmitScheduleChanges(rescheduleModalState, lessonIdsToEdit);\n        break;\n      case 'unassign':\n        onSubmitUnassignLesson(lessonIdsToEdit);\n        break;\n      case 'reset':\n        onSubmitResetLesson(lessonIdsToEdit);\n        break;\n      case 'excuse/unexcuse':\n        onSubmitExcuseLesson(lessonIdsToEdit);\n        break;\n      case 'review flagged':\n        onSubmitMarkFlagsReviewed(lessonIdsToEdit);\n        break;\n      default:\n        break;\n    }\n    setIsConfirmModalOpen(false);\n    toggleRescheduleModal(false);\n  };\n\n  return (\n    <div className=\"content-section\">\n      <Modal\n        open={isConfirmModalOpen}\n        onConfirm={() => onConfirmModalFunction()}\n        onClose={() => setIsConfirmModalOpen(false)}\n        header={`Are you sure you want to ${confirmationFunc} lesson(s)?`}\n        body={\"Some of the lessons are you are trying to edit have a different completion status. Edit lesson(s) anyways?\"}\n      />\n      <div className=\"d-flex justify-content-between\">\n        <div>\n          <Checkbox\n            label=\"Check all\"\n            checkBoxId=\"checkall\"\n            onChecked={onCheckAll}\n            type=\"pageCheckBox\"\n            checked={selectAll}\n          />\n        </div>\n        <div>\n          <b> - {lessons && lessons.length} results -</b>\n        </div>\n\n        <div className=\"dropdown-block col\">\n          <a\n            className=\"dropdown-trigger btn\"\n            href=\"#\"\n            data-target=\"dropdown01\"\n            // eslint-disable-next-line\n            onClick={(e) => {\n              e.preventDefault();\n              onOpenDropdown();\n            }}\n          >\n            <i className=\"material-icons dots-icon\">more_vert</i>\n          </a>\n          <div className=\"row d-flex-content card-width-272\">\n            <RescheduleModal\n              open={openRescheduleModal}\n              lesson={activeLesson}\n              onClose={handleRescheduleModalOpen}\n              onSave={onSaveScheduleChanges}\n            />\n          </div>\n\n          <If condition={dropdownIsOpen}>\n            <ClickOffComponentWrapper onOuterClick={() => onCloseDropdown()}>\n              <ul\n                id=\"dropdown01\"\n                className=\"dropdown-content dropdown-wide\"\n                style={{\n                  display: \"block\",\n                  opacity: \"1\",\n                  transform: \"scaleX(1) scaleY(1)\",\n                }}\n              >\n                {renderDropdownOptions(\n                  status,\n                  handleAssignLesson,\n                  handleRescheduleModalOpen,\n                  onHandleExcuseLesson,\n                  handleResetLesson,\n                  startMarkFlagsReviewed,\n                  handleUnassignLesson,\n                  checkedCardIds)}\n              </ul>\n            </ClickOffComponentWrapper>\n          </If>\n        </div>\n      </div>\n      <div className=\"row d-flex-content  justify-content-center card-width-auto\">\n        {mapLessons()}\n      </div>\n    </div>\n  );\n};\n\nFullView.propTypes = {\n  lessons: PropTypes.array.ifsRequired,\n  user: PropTypes.object.isRequired,\n  onCloneLesson: PropTypes.func.isRequired,\n  onDeleteLesson: PropTypes.func.isRequired,\n  onCheckAll: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispathRescheduleStudentLessons: bindActionCreators(rescheduleStudentLessons, dispatch),\n  dispathUnAssignLessonToStudent: bindActionCreators(unAssignLessonToStudent, dispatch),\n  dispathResetStudentLessons: bindActionCreators(resetStudentLessons, dispatch),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  checkedLessons: makeSelectCheckedLessons(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullView);\n"]},"metadata":{},"sourceType":"module"}