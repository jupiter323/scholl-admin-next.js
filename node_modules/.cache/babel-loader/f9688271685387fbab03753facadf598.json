{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar IncompleteAnswers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IncompleteAnswers, _React$Component);\n\n  function IncompleteAnswers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IncompleteAnswers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IncompleteAnswers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapIncompleteBubbles\", function (_ref) {\n      var index = _ref.index;\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      var sampleAnswers = _this.props.sampleAnswers;\n      var _sampleAnswers$index = sampleAnswers[index],\n          answer = _sampleAnswers$index.answer,\n          studentChoice = _sampleAnswers$index.studentChoice;\n      return letters.map(function (letter) {\n        if (!answer && studentChoice === letter) {\n          return React.createElement(\"li\", null, React.createElement(\"span\", {\n            className: \"badge-circle badge-circle-bordered\",\n            style: {\n              color: \"#fff\",\n              borderColor: \"#19b4e9\",\n              backgroundColor: \"#19b4e9\"\n            }\n          }, letter));\n        } // if (answer === letter) {\n        //   return (\n        //     <li>\n        //      <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>{letter}</span>\n        //     </li>\n        //   )\n        // }\n        // if (studentChoice === letter && studentChoice !== answer){\n        //   return (\n        //     <li>\n        //       <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#fff\", borderColor: \"#19b4e9\", backgroundColor: \"#19b4e9\"}}>{letter}</span>\n        //     </li>\n        //   )\n        // }\n        // if (studentChoice === \"\" &&  answer === \"\") {\n        //   return(\n        //     <input type=\"text\" className=\"answer-input\"></input>\n        //   )\n        // }\n\n\n        return React.createElement(\"li\", null, React.createElement(\"span\", {\n          className: \"badge-circle badge-circle-bordered\"\n        }, letter));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapSampleAnswers\", function () {\n      var sampleAnswers = _this.props.sampleAnswers;\n      return sampleAnswers.map(function (question, index) {\n        return React.createElement(\"div\", {\n          className: \"answer-row row mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"col col-120\"\n        }, React.createElement(\"ul\", {\n          className: \"answer-list\"\n        }, question.incomplete ? _this.mapIncompleteBubbles({\n          index: index\n        }) : null), React.createElement(\"div\", {\n          className: \"col col-30\"\n        }, React.createElement(\"span\", {\n          className: \"status-info\"\n        }, question.status))));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(IncompleteAnswers, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"slide\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"ol\", {\n        className: \"answers-list\"\n      }, React.createElement(\"div\", {\n        className: \"answer-row row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col col-120\"\n      }, React.createElement(\"ul\", {\n        className: \"answer-list\"\n      }, this.mapSampleAnswers()), React.createElement(\"div\", {\n        className: \"col col-30\"\n      }, React.createElement(\"span\", {\n        className: \"status-info\"\n      }, \"E\"))))))));\n    }\n  }]);\n\n  return IncompleteAnswers;\n}(React.Component);\n\nIncompleteAnswers.propTypes = {\n  sampleAnswers: PropTypes.array.isRequired\n};\nexport default IncompleteAnswers;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\components\\IncompleteAnswers\\index.js"],"names":["React","PropTypes","IncompleteAnswers","index","letters","sampleAnswers","props","answer","studentChoice","map","letter","color","borderColor","backgroundColor","question","incomplete","mapIncompleteBubbles","status","mapSampleAnswers","Component","propTypes","array","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,iB;;;;;;;;;;;;;;;;;;2EAEmB,gBAAc;AAAA,UAAZC,KAAY,QAAZA,KAAY;AACnC,UAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AADmC,UAE3BC,aAF2B,GAET,MAAKC,KAFI,CAE3BD,aAF2B;AAAA,iCAGDA,aAAa,CAACF,KAAD,CAHZ;AAAA,UAG3BI,MAH2B,wBAG3BA,MAH2B;AAAA,UAGnBC,aAHmB,wBAGnBA,aAHmB;AAInC,aAAOJ,OAAO,CAACK,GAAR,CAAY,UAAAC,MAAM,EAAI;AAC3B,YAAI,CAACH,MAAD,IAAWC,aAAa,KAAKE,MAAjC,EAAyC;AACvC,iBACE,gCACE;AAAM,YAAA,SAAS,EAAC,oCAAhB;AAAqD,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE,MAAR;AAAgBC,cAAAA,WAAW,EAAE,SAA7B;AAAwCC,cAAAA,eAAe,EAAE;AAAzD;AAA5D,aAAkIH,MAAlI,CADF,CADF;AAKD,SAP0B,CAQ3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eACE,gCACA;AAAM,UAAA,SAAS,EAAC;AAAhB,WAAsDA,MAAtD,CADA,CADF;AAKH,OAhCQ,CAAP;AAiCD,K;;uEAEkB,YAAM;AAAA,UACfL,aADe,GACG,MAAKC,KADR,CACfD,aADe;AAEvB,aAAOA,aAAa,CAACI,GAAd,CAAkB,UAACK,QAAD,EAAWX,KAAX;AAAA,eACvB;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WACiBW,QAAQ,CAACC,UAD1B,GAEK,MAAKC,oBAAL,CAA0B;AAACb,UAAAA,KAAK,EAALA;AAAD,SAA1B,CAFL,QADF,EAME;AAAK,UAAA,SAAS,EAAC;AAAf,WACG;AAAM,UAAA,SAAS,EAAC;AAAhB,WAA+BW,QAAQ,CAACG,MAAxC,CADH,CANF,CADF,CADuB;AAAA,OAAlB,CAAP;AAeD,K;;;;;;;6BACO;AAEN,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACA;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACA;AAAK,QAAA,SAAS,EAAC;AAAf,SACF;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACK,KAAKC,gBAAL,EADL,CADF,EAIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG;AAAM,QAAA,SAAS,EAAC;AAAhB,aADH,CAJF,CADE,CADA,CADF,CADF,CADA,CADF;AA6LD;;;;EA1P6BlB,KAAK,CAACmB,S;;AA6PtCjB,iBAAiB,CAACkB,SAAlB,GAA8B;AAC5Bf,EAAAA,aAAa,EAAEJ,SAAS,CAACoB,KAAV,CAAgBC;AADH,CAA9B;AAIA,eAAepB,iBAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass IncompleteAnswers extends React.Component {\r\n\r\n   mapIncompleteBubbles =({index})  => {\r\n    const letters = [\"A\", \"B\", \"C\", \"D\"];\r\n    const { sampleAnswers } = this.props;\r\n    const { answer, studentChoice } = sampleAnswers[index];\r\n    return letters.map(letter => {\r\n      if (!answer && studentChoice === letter) {\r\n        return(\r\n          <li>\r\n            <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#fff\", borderColor: \"#19b4e9\", backgroundColor: \"#19b4e9\"}}>{letter}</span>\r\n          </li>\r\n          )\r\n      }\r\n      // if (answer === letter) {\r\n      //   return (\r\n      //     <li>\r\n      //      <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>{letter}</span>\r\n      //     </li>\r\n      //   )\r\n      // }\r\n      // if (studentChoice === letter && studentChoice !== answer){\r\n      //   return (\r\n      //     <li>\r\n      //       <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#fff\", borderColor: \"#19b4e9\", backgroundColor: \"#19b4e9\"}}>{letter}</span>\r\n      //     </li>\r\n      //   )\r\n      // }\r\n      // if (studentChoice === \"\" &&  answer === \"\") {\r\n      //   return(\r\n      //     <input type=\"text\" className=\"answer-input\"></input>\r\n      //   )\r\n      // }\r\n      return (\r\n        <li>\r\n        <span className=\"badge-circle badge-circle-bordered\">{letter}</span>\r\n      </li>\r\n      )\r\n  })\r\n  }\r\n\r\n  mapSampleAnswers = () => {\r\n    const { sampleAnswers } = this.props;\r\n    return sampleAnswers.map((question, index) => (\r\n      <div className=\"answer-row row mb-0\">\r\n        <div className=\"col col-120\">\r\n          <ul className=\"answer-list\">\r\n            <If condition={question.incomplete}>\r\n              {this.mapIncompleteBubbles({index})}\r\n            </If>\r\n          </ul>\r\n          <div className=\"col col-30\">\r\n             <span className=\"status-info\">{question.status}</span>\r\n           </div>\r\n        </div>\r\n      </div>\r\n\r\n    ))\r\n  }\r\n  render(){\r\n    \r\n    return(\r\n      <div className=\"slide\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 l4\">\r\n          <ol className=\"answers-list\">\r\n          <div className=\"answer-row row mb-0\">\r\n        <div className=\"col col-120\">\r\n          <ul className=\"answer-list\">\r\n              {this.mapSampleAnswers()}\r\n          </ul>\r\n          <div className=\"col col-30\">\r\n             <span className=\"status-info\">E</span>\r\n           </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n            {/* <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <ul className=\"answer-list\">\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">A</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#fff\", borderColor: \"#19b4e9\", backgroundColor: \"#19b4e9\"}}>B</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">C</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">D</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">M</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <ul className=\"answer-list\">\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#fff\", borderColor: \"#19b4e9\", backgroundColor: \"#19b4e9\"}}>A</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">B</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">C</span>\r\n                    </li>\r\n                    <li>\r\n                    <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>B</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">H</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ol>\r\n        </div>\r\n        <div className=\"col s12 l4\">\r\n          <ol className=\"answers-list\">\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <ul className=\"answer-list\">\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">A</span>\r\n                    </li>\r\n                    <li>\r\n                    <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>B</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">C</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">D</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">E</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <ul className=\"answer-list\">\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">A</span>\r\n                    </li>\r\n                    <li>\r\n                    <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>B</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">C</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">D</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">E</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <input type=\"text\" className=\"answer-input\"></input>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">E</span>\r\n                </div>\r\n              </div>\r\n            </li> */}\r\n          {/* </ol>\r\n        </div>\r\n        <div className=\"col s12 l4\">\r\n          <ol className=\"answers-list\">\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <ul className=\"answer-list\">\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">A</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>B</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">C</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">D</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">E</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <ul className=\"answer-list\">\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">A</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\" style={{color: \"#32955c\", borderColor: \"#32955c\", backgroundColor: \"#fff\"}}>B</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">C</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"badge-circle badge-circle-bordered\">D</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">E</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"answers-list-holder\">\r\n              <div className=\"answer-row row mb-0\">\r\n                <div className=\"col col-120\">\r\n                  <input type=\"text\" className=\"answer-input\"></input>\r\n                </div>\r\n                <div className=\"col col-30\">\r\n                  <span className=\"status-info\">E</span>\r\n                </div>\r\n              </div>\r\n            </li> */}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nIncompleteAnswers.propTypes = {\r\n  sampleAnswers: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default IncompleteAnswers;"]},"metadata":{},"sourceType":"module"}