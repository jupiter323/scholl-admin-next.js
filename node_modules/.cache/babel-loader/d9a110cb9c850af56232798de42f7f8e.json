{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport ScoredTestCard from './components/ScoredTestCard';\nvar sampleTests = [{\n  id: 1,\n  status: 'complete',\n  testType: 'real',\n  title: 'May 2019',\n  testDate: '05/12/2019',\n  dueDate: '',\n  completionDate: '',\n  completionTime: '',\n  disabled: false,\n  available: true,\n  weekNumber: '',\n  version: '',\n  initialScore: '1050',\n  targetScore: '1500',\n  currentScore: '1245',\n  totalGain: '132',\n  flags: ['', '', ''],\n  subjects: [{\n    subject: 'Reading',\n    targetScore: '400',\n    currentScore: '376',\n    totalGain: '73'\n  }, {\n    subject: 'Writing',\n    targetScore: '400',\n    currentScore: '310',\n    totalGain: '73'\n  }, {\n    subject: 'Math',\n    targetScore: '800',\n    currentScore: '681',\n    totalGain: '101'\n  }]\n}, {\n  id: 2,\n  status: 'complete',\n  testType: 'simulated',\n  title: '1st Simulated SAT',\n  testDate: '',\n  availableDate: '04/01/19',\n  dueDate: '05/05/2019',\n  completionDate: '05/07/19',\n  completionTime: '4:21 PM',\n  disabled: false,\n  available: true,\n  weekNumber: '3',\n  version: '2345',\n  initialScore: '1100',\n  targetScore: '1320',\n  currentScore: '1221',\n  totalGain: '98',\n  flags: [],\n  subjects: [{\n    subject: 'Reading',\n    targetScore: '400',\n    currentScore: '332',\n    totalGain: '81'\n  }, {\n    subject: 'Writing',\n    targetScore: '400',\n    currentScore: '291',\n    totalGain: '65'\n  }, {\n    subject: 'Math',\n    targetScore: '800',\n    currentScore: '702',\n    totalGain: '98'\n  }]\n}, {\n  id: 3,\n  status: 'complete',\n  testType: 'simulated',\n  title: '1st Simulated SAT',\n  testDate: '',\n  availableDate: '04/01/19',\n  dueDate: '05/05/2019',\n  completionDate: '05/07/19',\n  completionTime: '4:21 PM',\n  disabled: true,\n  available: true,\n  weekNumber: '3',\n  version: '2345',\n  initialScore: '1100',\n  targetScore: '1320',\n  currentScore: '1221',\n  totalGain: '98',\n  flags: [],\n  subjects: [{\n    subject: 'Reading',\n    targetScore: '400',\n    currentScore: '332',\n    totalGain: '81'\n  }, {\n    subject: 'Writing',\n    targetScore: '400',\n    currentScore: '291',\n    totalGain: '65'\n  }, {\n    subject: 'Math',\n    targetScore: '800',\n    currentScore: '702',\n    totalGain: '98'\n  }]\n}, {\n  id: 4,\n  status: 'complete',\n  testType: 'simulated',\n  title: '1st Simulated SAT',\n  testDate: '',\n  availableDate: '04/01/19',\n  dueDate: '05/05/2019',\n  completionDate: '05/07/19',\n  completionTime: '4:21 PM',\n  disabled: false,\n  available: false,\n  weekNumber: '3',\n  version: '2345',\n  initialScore: '1100',\n  targetScore: '1320',\n  currentScore: '1221',\n  totalGain: '98',\n  flags: [],\n  subjects: [{\n    subject: 'Reading',\n    targetScore: '400',\n    currentScore: '332',\n    totalGain: '81'\n  }, {\n    subject: 'Writing',\n    targetScore: '400',\n    currentScore: '291',\n    totalGain: '65'\n  }, {\n    subject: 'Math',\n    targetScore: '800',\n    currentScore: '702',\n    totalGain: '98'\n  }]\n}, {\n  id: 5,\n  status: 'complete',\n  testType: 'simulated',\n  title: '1st Simulated SAT',\n  testDate: '',\n  availableDate: '04/01/19',\n  dueDate: '05/05/2019',\n  completionDate: '05/07/19',\n  completionTime: '4:21 PM',\n  disabled: false,\n  available: true,\n  weekNumber: '3',\n  version: '2345',\n  initialScore: '1100',\n  targetScore: '1320',\n  currentScore: '',\n  totalGain: '',\n  flags: [],\n  subjects: [{\n    subject: 'Reading',\n    targetScore: '400',\n    currentScore: '332',\n    totalGain: '81'\n  }, {\n    subject: 'Writing',\n    targetScore: '400',\n    currentScore: '291',\n    totalGain: '65'\n  }, {\n    subject: 'Math',\n    targetScore: '800',\n    currentScore: '',\n    totalGain: ''\n  }]\n}];\n\nvar ScoredTestListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScoredTestListPage, _React$Component);\n\n  function ScoredTestListPage(props) {\n    var _this;\n\n    _classCallCheck(this, ScoredTestListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScoredTestListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditTest\", function () {\n      return console.warn('Pending implementation edit test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetTest\", function () {\n      return console.warn('Pending implementation of reset UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteTest\", function () {\n      return console.warn('Pending implementation of delete test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDownloadReport\", function () {\n      return console.warn('Pending implementation of download report ui and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapScoredTests\", function () {\n      return _this.state.scoredTests.map(function (test, index) {\n        return React.createElement(ScoredTestCard, {\n          test: test,\n          index: index,\n          key: test.id,\n          onEditTest: _this.onEditTest,\n          onResetTest: _this.onResetTest,\n          onDeleteTest: _this.onDeleteTest,\n          onDownloadReport: _this.onDownloadReport,\n          dropdownIndex: _this.state.dropdownIndex,\n          dropdownIsOpen: _this.state.dropdownIsOpen\n        });\n      });\n    });\n\n    _this.state = {\n      scoredTests: sampleTests,\n      dropdownIndex: null,\n      dropdownIsOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ScoredTestListPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\"\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"future\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"future\"\n      }, \"Future\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"available\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"available\"\n      }, \"Available\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"complete\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"complete\"\n      }, \"Complete\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"due_today\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"due_today\"\n      }, \"Due Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"due_next_session\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"due_next_session\"\n      }, \"Due By Next Session\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"due_week\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"due_week\"\n      }, \"Due this Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"overdue\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"overdue\"\n      }, \"Overdue\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"has_review_flags\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"has_review_flags\"\n      }, \"Has Review Flags\")))), React.createElement(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"test_version_search\",\n        className: \"input-control  validate\"\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\"\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"test_version_search\"\n      }, \"Test Version\"))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 xl7\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"select\", {\n        id: \"sort_tests\"\n      }, React.createElement(\"option\", null, \"Date\"), React.createElement(\"option\", null, \"Page\")), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"sort_tests\"\n      }, \"Sort By\"))))), React.createElement(\"div\", {\n        className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\"\n      }, React.createElement(\"span\", {\n        className: \"hide-text\"\n      }, \"Hide\"), \" \", React.createElement(\"span\", {\n        className: \"open-text\"\n      }, \"Open\"), \" Filters\")))))))), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapScoredTests())));\n    }\n  }]);\n\n  return ScoredTestListPage;\n}(React.Component);\n\nexport default ScoredTestListPage;","map":null,"metadata":{},"sourceType":"module"}