{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../utils/getValueFromState';\nimport stateOptions from '../../../../../utils/stateOptions';\n\nvar ContactInfo = function ContactInfo(_ref) {\n  var _ref$state = _ref.state,\n      phone = _ref$state.phone,\n      streetAddress = _ref$state.streetAddress,\n      city = _ref$state.city,\n      state = _ref$state.state,\n      zip = _ref$state.zip,\n      handleDetailsChange = _ref.handleDetailsChange;\n  return __jsx(\"div\", {\n    className: \"card-block\"\n  }, __jsx(\"h3\", null, \"Contact Info\"), __jsx(\"div\", {\n    className: \"card-main card\"\n  }, __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"tel\",\n    id: \"contact_phone_edit\",\n    name: \"phone\",\n    value: phone,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'phone', 'contactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: phone.length ? 'label active' : 'label',\n    htmlFor: \"contact_phone_edit\"\n  }, \"Phone (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"contact_address_edit\",\n    name: \"streetAddress\",\n    value: streetAddress,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'streetAddress', 'contactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: streetAddress.length ? 'label active' : 'label',\n    htmlFor: \"contact_address_edit\"\n  }, \"Street Address (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"contact_city_edit\",\n    name: \"city\",\n    value: city,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'city', 'contactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: city.length ? 'label active' : 'label',\n    htmlFor: \"contact_city_edit\"\n  }, \"City (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"col s12 m6 l5\"\n  }, __jsx(\"div\", {\n    className: \"input-field\"\n  }, __jsx(Dropdown, {\n    value: getValueFromState(state, stateOptions),\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'state', 'contactInfo');\n    },\n    options: stateOptions,\n    label: \"State (optional)\",\n    stateKey: \"state\",\n    dropdownKey: \"state\"\n  }))), __jsx(\"div\", {\n    className: \"col s12 m6 l7\"\n  }, __jsx(\"div\", {\n    className: \"input-field\"\n  }, __jsx(\"input\", {\n    type: \"tel\",\n    id: \"contact_zip_edit\",\n    name: \"zip\",\n    value: zip,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'zip', 'contactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: zip.length ? 'label active' : 'label',\n    htmlFor: \"contact_zip_edit\"\n  }, \"Zip (optional)\")))))));\n};\n\nContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default ContactInfo;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/ListPage/components/SharedModalComponents/ContactInfo/index.js"],"names":["React","PropTypes","Dropdown","getValueFromState","stateOptions","ContactInfo","state","phone","streetAddress","city","zip","handleDetailsChange","event","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../utils/getValueFromState';\nimport stateOptions from '../../../../../utils/stateOptions';\n\n\nconst ContactInfo = ({ state: { phone, streetAddress, city, state, zip }, handleDetailsChange }) => (\n  <div className=\"card-block\">\n    <h3>Contact Info</h3>\n    <div className=\"card-main card\">\n      <div className=\"card-content\">\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"tel\"\n              id=\"contact_phone_edit\"\n              name=\"phone\"\n              value={phone}\n              onChange={(event) => handleDetailsChange(event, 'phone', 'contactInfo')}\n            />\n            <label className={phone.length ? 'label active' : 'label'} htmlFor=\"contact_phone_edit\">Phone (optional)</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"contact_address_edit\"\n              name=\"streetAddress\"\n              value={streetAddress}\n              onChange={(event) => handleDetailsChange(event, 'streetAddress', 'contactInfo')}\n            />\n            <label className={streetAddress.length ? 'label active' : 'label'} htmlFor=\"contact_address_edit\">Street Address (optional)</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <input\n              type=\"text\"\n              id=\"contact_city_edit\"\n              name=\"city\"\n              value={city}\n              onChange={(event) => handleDetailsChange(event, 'city', 'contactInfo')}\n            />\n            <label className={city.length ? 'label active' : 'label'} htmlFor=\"contact_city_edit\">City (optional)</label>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"col s12 m6 l5\">\n            <div className=\"input-field\">\n              <Dropdown\n                value={getValueFromState(state, stateOptions)}\n                onChange={(event) => handleDetailsChange(event, 'state', 'contactInfo')}\n                options={stateOptions}\n                label=\"State (optional)\"\n                stateKey=\"state\"\n                dropdownKey=\"state\"\n              />\n            </div>\n          </div>\n          <div className=\"col s12 m6 l7\">\n            <div className=\"input-field\">\n              <input\n                type=\"tel\"\n                id=\"contact_zip_edit\"\n                name=\"zip\"\n                value={zip}\n                onChange={(event) => handleDetailsChange(event, 'zip', 'contactInfo')}\n              />\n              <label className={zip.length ? 'label active' : 'label'} htmlFor=\"contact_zip_edit\">Zip (optional)</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default ContactInfo;\n"]},"metadata":{},"sourceType":"module"}