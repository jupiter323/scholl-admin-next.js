{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport getValueFromState from '../../../utils/getValueFromState';\nimport classSortOptions from '../../utils/classSortOptions';\nimport Dropdown from '../../../FormComponents/Dropdown';\nimport locationOptions from '../../../utils/locationOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocationChange\", function (location) {\n      var onSetLocationFilter = _this.props.onSetLocationFilter;\n\n      _this.setState({\n        location: location\n      });\n\n      return onSetLocationFilter(location);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSortChange\", function (sort) {\n      var onSetSort = _this.props.onSetSort;\n\n      _this.setState({\n        sort: sort\n      });\n\n      return onSetSort(sort);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var name = _this.state.name;\n\n      if (name === \"\") {\n        onUnsetFilteredState(name);\n      }\n\n      var transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _this.state = {\n      open: true,\n      name: \"\",\n      sort: {},\n      location: {}\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          name = _this$state.name,\n          sort = _this$state.sort,\n          locations = _this$state.locations;\n      var _this$props2 = this.props,\n          handleFilterClick = _this$props2.handleFilterClick,\n          onClearFilters = _this$props2.onClearFilters,\n          sessionFilters = _this$props2.sessionFilters,\n          gainFilters = _this$props2.gainFilters,\n          statusFilters = _this$props2.statusFilters;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: {\n          display: open ? 'block' : 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions_this_week\",\n        checked: sessionFilters.indexOf('sessionsThisWeek') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('sessions', 'sessionsThisWeek');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"sessions_this_week\"\n      }, \"Sessions This Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"session_today\",\n        checked: sessionFilters.indexOf('sessionToday') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('sessions', 'sessionToday');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"session_today\"\n      }, \"Session Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions_no\",\n        checked: sessionFilters.indexOf('noSessions') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('sessions', 'noSessions');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"sessions_no\"\n      }, \"No Sessions Scheduled\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gains_no\",\n        checked: gainFilters.indexOf('gains_no') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('gain', 'gains_no');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gains_no\"\n      }, \"No Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gains_0_49\",\n        checked: gainFilters.indexOf('gains_0_49') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('gain', 'gains_0_49');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gains_0_49\"\n      }, \"Gain of 0-49\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gains_50_99\",\n        checked: gainFilters.indexOf('gains_50_99') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('gain', 'gains_50_99');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gains_50_99\"\n      }, \"Gain of 50-99\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gains_100_199\",\n        checked: gainFilters.indexOf('gains_100_199') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('gain', 'gains_100_199');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gains_100_199\"\n      }, \"Gain of 100-199\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain_200\",\n        checked: gainFilters.indexOf('gains200') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('gain', 'gains200');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain_200\"\n      }, \"Gain of 200+\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"current\",\n        checked: statusFilters.indexOf('current') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'current');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"current\"\n      }, \"Current\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"archived\",\n        checked: statusFilters.indexOf('archived') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'archived');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"archived\"\n      }, \"Archived\"))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\",\n        style: {\n          marginRight: '-70px'\n        }\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m9\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(sort, classSortOptions),\n        onChange: this.handleSortChange,\n        options: classSortOptions,\n        label: \"Sort\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(locations, locationOptions),\n        onChange: this.handleLocationChange // onChange={(event) => this.handleFilterChange(event, 'locationFilter')}\n        ,\n        options: locationOptions,\n        label: \"Location\",\n        stateKey: \"location\",\n        dropdownKey: \"location\"\n      }), \"                \")), React.createElement(\"div\", {\n        className: \"col s12 m3\",\n        style: {\n          height: '12px'\n        }\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control validate\",\n        name: \"name\",\n        value: name,\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'name');\n        }\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: name.length ? \"label active\" : \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\",\n        style: {\n          marginRight: '15px',\n          marginTop: '25px'\n        }\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"a\", {\n        role: \"button\",\n        tabIndex: \"0\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\"\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Show Filters'))))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nFilterSection.propTypes = {\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  sessionFilters: PropTypes.array.isRequired,\n  gainFilters: PropTypes.array.isRequired,\n  statusFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetLocationFilter: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Class\\components\\FilterSection\\index.js"],"names":["React","PropTypes","update","getValueFromState","classSortOptions","Dropdown","locationOptions","FilterSection","props","setState","open","location","onSetLocationFilter","sort","onSetSort","onSetFilteredState","onUnsetFilteredState","name","state","transformedName","replace","toLowerCase","locations","handleFilterClick","onClearFilters","sessionFilters","gainFilters","statusFilters","display","indexOf","marginRight","handleSortChange","handleLocationChange","height","event","handleFilterChange","submitNameFilter","length","marginTop","onToggleShowFilters","Component","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport update from 'immutability-helper';\r\nimport getValueFromState from '../../../utils/getValueFromState';\r\nimport classSortOptions from '../../utils/classSortOptions';\r\nimport Dropdown from '../../../FormComponents/Dropdown';\r\nimport locationOptions from '../../../utils/locationOptions';\r\n\r\nclass FilterSection extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      open: true,\r\n      name: \"\",\r\n      sort: {},\r\n      location: {},\r\n    };\r\n  }\r\n\r\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\r\n\r\n  // onHandleFilterLocations = () => {\r\n  //   const { onSetFilteredState, onUnsetFilteredState } = this.props;\r\n  //   if (this.state.location === {}) {\r\n  //     onUnsetFilteredState(this.state.location);\r\n  //   }\r\n  //   onSetFilteredState(this.state.location)\r\n  // }\r\n\r\n  handleLocationChange = (location) => {\r\n    const {onSetLocationFilter} = this.props;\r\n    this.setState({location});\r\n    return onSetLocationFilter(location)\r\n;  }\r\n  handleSortChange = (sort) => {\r\n    const {onSetSort} = this.props;\r\n    this.setState({sort});\r\n    return onSetSort(sort);\r\n  }\r\n\r\n  submitNameFilter = () => {\r\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\r\n    const { name } = this.state;\r\n    if (name === \"\") {\r\n      onUnsetFilteredState(name);\r\n    }\r\n    const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\r\n    onSetFilteredState(transformedName);\r\n  }\r\n\r\n  render() {\r\n    const { open, name, sort, locations } = this.state;\r\n    const { handleFilterClick, onClearFilters, sessionFilters, gainFilters, statusFilters } = this.props;\r\n    \r\n    return (\r\n      <div className=\"filter-form-holder\">\r\n      <ul className=\"collapsible expandable\">\r\n        <li>\r\n          <div className=\"collapsible-body\" style={{display: open ? 'block' : 'none'}}>\r\n            <div className=\"filter-form_checkbox-list-holder justify-center\">\r\n              <ul className=\"filter-form_checkbox-list\">\r\n                <li>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"sessions_this_week\"\r\n                    checked={sessionFilters.indexOf('sessionsThisWeek') !== -1}\r\n                    onChange={() => handleFilterClick('sessions', 'sessionsThisWeek')}\r\n                  />\r\n                  <label htmlFor=\"sessions_this_week\">Sessions This Week</label>\r\n                </li>\r\n                <li>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"session_today\"\r\n                    checked={sessionFilters.indexOf('sessionToday') !== -1}\r\n                    onChange={() => handleFilterClick('sessions', 'sessionToday')}\r\n                  />\r\n                  <label htmlFor=\"session_today\">Session Today</label>\r\n                </li>\r\n                <li>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"sessions_no\"\r\n                    checked={sessionFilters.indexOf('noSessions') !== -1}\r\n                    onChange={() => handleFilterClick('sessions', 'noSessions')}\r\n                  />                 \r\n                  <label htmlFor=\"sessions_no\">No Sessions Scheduled</label>\r\n                </li>\r\n              </ul>\r\n              <ul className=\"filter-form_checkbox-list\">\r\n                <li>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"gains_no\"\r\n                    checked={gainFilters.indexOf('gains_no') !== -1}\r\n                    onChange={() => handleFilterClick('gain', 'gains_no')}\r\n                  />\r\n                  <label htmlFor=\"gains_no\">No Gain</label>\r\n                </li>\r\n                <li>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"gains_0_49\"\r\n                    checked={gainFilters.indexOf('gains_0_49') !== -1}\r\n                    onChange={() => handleFilterClick('gain', 'gains_0_49')}\r\n                  />\r\n                  <label htmlFor=\"gains_0_49\">Gain of 0-49</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                  type=\"checkbox\"\r\n                  id=\"gains_50_99\"\r\n                  checked={gainFilters.indexOf('gains_50_99') !== -1}\r\n                  onChange={() => handleFilterClick('gain', 'gains_50_99')}\r\n                  />\r\n                  <label htmlFor=\"gains_50_99\">Gain of 50-99</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"gains_100_199\"\r\n                    checked={gainFilters.indexOf('gains_100_199') !== -1}\r\n                    onChange={() => handleFilterClick('gain', 'gains_100_199')}\r\n                  />\r\n                  <label htmlFor=\"gains_100_199\">Gain of 100-199</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                  type=\"checkbox\"\r\n                  id=\"gain_200\"\r\n                  checked={gainFilters.indexOf('gains200') !== -1}\r\n                  onChange={() => handleFilterClick('gain', 'gains200')}\r\n                  />\r\n                  <label htmlFor=\"gain_200\">Gain of 200+</label>\r\n                </li>\r\n              </ul>\r\n              <ul className=\"filter-form_checkbox-list\">\r\n                <li>\r\n                  <input\r\n                  type=\"checkbox\"\r\n                  id=\"current\"\r\n                  checked={statusFilters.indexOf('current') !== -1}\r\n                  onChange={() => handleFilterClick('status', 'current')}\r\n                  />\r\n                  <label htmlFor=\"current\">Current</label>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                  type=\"checkbox\"\r\n                  id=\"archived\"\r\n                  checked={statusFilters.indexOf('archived') !== -1}\r\n                  onChange={() => handleFilterClick('status', 'archived')}\r\n                  />\r\n                  <label htmlFor=\"archived\">Archived</label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-0 d-flex align-items-center\">\r\n            <div className=\"col s12 m3\" style={{marginRight: '-70px'}}>\r\n              <div className=\"row mb-0\">\r\n                <div className=\"col s12 m9\">\r\n                  <div className=\"input-field\">\r\n                    <Dropdown\r\n                      value={getValueFromState(sort, classSortOptions)}\r\n                      onChange={this.handleSortChange}\r\n                      options={classSortOptions}\r\n                      label=\"Sort\"\r\n                      stateKey=\"sort\"\r\n                      dropdownKey=\"sort\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n              <div className=\"col s12 m3\">\r\n                <div className=\"input-field\">\r\n                <Dropdown\r\n                value={getValueFromState(locations, locationOptions)}\r\n                onChange={this.handleLocationChange}\r\n                // onChange={(event) => this.handleFilterChange(event, 'locationFilter')}\r\n                options={locationOptions}\r\n                label=\"Location\"\r\n                stateKey=\"location\"\r\n                dropdownKey=\"location\"\r\n              />                </div>\r\n              </div>\r\n              <div className=\"col s12 m3\" style={{height: '12px'}}>\r\n                <div className=\"search-field input-field\">\r\n                <input\r\n                type=\"search\"\r\n                id=\"name_search\"\r\n                className=\"input-control validate\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={(event) => this.handleFilterChange(event, 'name')}\r\n                />\r\n\r\n                  <button\r\n                  type=\"submit\"\r\n                  className=\"search-button\"\r\n                  onClick={this.submitNameFilter}\r\n                  >\r\n                    <i className=\"icon-search\"></i></button>\r\n                  <label className={name.length ? \"label active\" : \"label\"} htmlFor=\"name_search\">Search</label>\r\n                </div>\r\n              </div>\r\n            <div className=\"col s12 m3\">\r\n              <div className=\"option-filters\" style={{marginRight: '15px', marginTop: '25px'}}>\r\n                <div className=\"option-item clear\"><a href=\"#\" onClick={onClearFilters}>Clear Filters</a></div>\r\n                <a role=\"button\" tabIndex=\"0\" onClick={this.onToggleShowFilters}>\r\n                  <div className=\"option-item\">\r\n                    <span\r\n                      className=\"collapsible-header\"\r\n                    >\r\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Show Filters'}</span>\r\n                    </span>\r\n                  </div>\r\n                    </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nFilterSection.propTypes = {\r\n  onSetFilteredState: PropTypes.func.isRequired,\r\n  onUnsetFilteredState: PropTypes.func.isRequired,\r\n  onSetSort: PropTypes.func.isRequired,\r\n  sessionFilters: PropTypes.array.isRequired,\r\n  gainFilters: PropTypes.array.isRequired,\r\n  statusFilters: PropTypes.array.isRequired,\r\n  handleFilterClick: PropTypes.func.isRequired,\r\n  onClearFilters: PropTypes.func.isRequired,\r\n  onSetLocationFilter: PropTypes.func.isRequired,\r\n}\r\nexport default FilterSection;"]},"metadata":{},"sourceType":"module"}