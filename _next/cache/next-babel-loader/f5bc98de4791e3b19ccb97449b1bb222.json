{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FullView/components/LessonCard/index.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable */\n// used vars and indentifers not camelcase\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport PropTypes from \"prop-types\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport ClickOffComponentWrapper from \"../../../../../../ClickOffComponentWrapper\";\nimport moment from 'moment'; // RENDERING UTILS\n\nimport { getProblemCompletionStatusColor, getLessonActivityStatus, renderLessonIcon, renderDropdownOptions, renderProblemCount, renderAlerts, statusColorMap, chartColorMap, gradeColorMap, formatStatus } from \"./utils\";\nimport Checkbox from \"./components/Checkbox\";\nimport { setIsVisibleTopBar, setActiveLesson, setOpenActivePage } from \"../../../../../index/actions\";\nimport { fetchStudentLessonSectionApi } from \"../../../../../index/api\";\nimport { makeSelectSubjects, makeSelectUnitFilterOptions } from '../../../../../index/selectors';\n\nvar data = function data(current, target, status) {\n  return {\n    datasets: [{\n      data: [current, target - current],\n      backgroundColor: [chartColorMap[status], \"#eaeaea\"]\n    }]\n  };\n};\n\nvar LessonCard = function LessonCard(props) {\n  // PROPS\n  var lesson = props.lesson,\n      _props$lesson = props.lesson,\n      id = _props$lesson.id,\n      name = _props$lesson.name,\n      drillPage = _props$lesson.drill_page,\n      practicePage = _props$lesson.practice_page,\n      startingPage = _props$lesson.starting_page,\n      endingPage = _props$lesson.ending_page,\n      status = _props$lesson.status,\n      timeEstimate = _props$lesson.time_estimate,\n      subjectId = _props$lesson.subject_id,\n      unitId = _props$lesson.unit_id,\n      lessonProblems = _props$lesson.lesson_problems,\n      dueDate = _props$lesson.dueDate,\n      completionDate = _props$lesson.completionDate,\n      challenge_page = _props$lesson.challenge_page,\n      practice_page = _props$lesson.practice_page,\n      due_date = _props$lesson.due_date,\n      completed_at = _props$lesson.completed_at,\n      assignment_date = _props$lesson.assignment_date,\n      _props$lesson$scoring = _props$lesson.scoring,\n      scoring = _props$lesson$scoring === void 0 ? {} : _props$lesson$scoring,\n      onOpenModal = props.onOpenModal,\n      onCloseDropdown = props.onCloseDropdown,\n      handleRescheduleModalOpen = props.handleRescheduleModalOpen,\n      handleResetLesson = props.handleResetLesson,\n      handleMarkAllFlagsReviewed = props.handleMarkAllFlagsReviewed;\n  var dueAt = due_date || dueDate;\n  var completedAt = completed_at || completionDate; // STATE\n\n  var _useState = useState(false),\n      dropdownIsOpen = _useState[0],\n      toggleDropdown = _useState[1];\n\n  var _useState2 = useState(false),\n      hasFlaggedProblems = _useState2[0],\n      setHasFlaggedProblems = _useState2[1];\n\n  useEffect(function () {\n    if (lesson.problems && lesson.problems.length > 0) {\n      var _hasFlaggedProblems = lesson.problems.filter(function (problem) {\n        return problem.flag_status === \"FLAGGED\";\n      });\n\n      if (_hasFlaggedProblems.length > 0) {\n        return setHasFlaggedProblems(true);\n      }\n    } else if (lesson.sections && lesson.sections.length > 0) {\n      var section1 = fetchStudentLessonSectionApi(props.user.id, lesson.id, lesson.sections[0].id);\n      var section2 = fetchStudentLessonSectionApi(props.user.id, lesson.id, lesson.sections[1].id);\n\n      _Promise.all([section1, section2]).then(function (sections) {\n        var filteredSections = sections.filter(function (section) {\n          return section;\n        });\n        filteredSections.map(function (section) {\n          section.lesson_problems.map(function (problem) {\n            if (problem.flag_status === \"FLAGGED\") {\n              setHasFlaggedProblems(true);\n            }\n          });\n        });\n      });\n    }\n  }, []);\n\n  var onOpenDetailModal = function onOpenDetailModal(e) {\n    var onSetIsVisibleTopbar, onSetActiveLesson, onSetOpenActivePage, lesson, condition;\n    return _regeneratorRuntime.async(function onOpenDetailModal$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            onSetIsVisibleTopbar = props.onSetIsVisibleTopbar, onSetActiveLesson = props.onSetActiveLesson, onSetOpenActivePage = props.onSetOpenActivePage, lesson = props.lesson;\n            onSetIsVisibleTopbar(false);\n            onSetActiveLesson(lesson);\n            condition = lesson.type.label === 'Drill' || lesson.type.label === \"Module\";\n\n            if (condition) {\n              onSetOpenActivePage(\"AnswerSheet\");\n            } else {\n              onSetOpenActivePage(\"ReadWorkBook\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var onSetDropdown = function onSetDropdown() {\n    return toggleDropdown(!dropdownIsOpen);\n  };\n\n  var onReschedule = function onReschedule(assignDate, assignTime, dueAt, dueTime) {\n    // eslint-disable-next-line no-console\n    console.warn(\"Stubbed out date functionality\", assignDate, assignTime, dueAt, dueTime);\n  };\n\n  var onChecked = function onChecked(cardId) {\n    props.onAddCheckedLesson(cardId, props.uniqueId);\n  };\n\n  var onUnChecked = function onUnChecked(cardId) {\n    props.onRemoveCheckedLesson(cardId, props.uniqueId);\n  };\n\n  var handleAssignLesson = function handleAssignLesson() {\n    onOpenModal();\n    props.onAddCheckedLesson(props.lessonId);\n  };\n\n  var getUnitName = function getUnitName() {\n    // Get the unit name of the lesson\n    if (lesson.units) {\n      return lesson.units.name;\n    }\n\n    var lessonUnit = props.units.filter(function (unit) {\n      return unit.value === unitId;\n    });\n    return lessonUnit[0] ? lessonUnit[0].label : '';\n  };\n\n  var graphData = function graphData() {\n    // Determines the graph progress of a completed or started lesson\n    if (status === 'COMPLETED') {\n      return data(scoring.correct_count, scoring.question_count, scoring.grade ? scoring.grade : \"POOR\");\n    } else if (status === 'STARTED' && lesson.problems) {\n      var completedProblems = lesson.problems.filter(function (problem) {\n        return problem.answered;\n      }).length;\n      return data(completedProblems, lesson.problems.length, status);\n    } else if (status === 'STARTED' && lesson.sections) {\n      var completedSections = lesson.sections.filter(function (section) {\n        return section.status === 'COMPLETED';\n      }).length;\n      return data(completedSections, lesson.sections.length, status);\n    }\n\n    return data(0, 1, \"ASSIGNED\");\n  };\n\n  var startMarkFlagsReviewed = function startMarkFlagsReviewed(lessonIds) {\n    handleMarkAllFlagsReviewed(lessonIds);\n    setHasFlaggedProblems(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-main-col col s12 m8 l7 xl5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: getLessonActivityStatus(props.lesson.lesson_id ? \"assigned\" : \"notassigned\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-panel-row row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"icon-col col s2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: renderLessonIcon(lesson.subjects ? lesson.subjects.name : props.subjects[subjectId]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"col s9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-panel-text center-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"text-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, getUnitName()), __jsx(\"div\", {\n    className: \"text-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick(e) {\n      return onOpenDetailModal(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, lesson.name)), __jsx(\"div\", {\n    className: \"text-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Subject: \", lesson.subjects ? lesson.subjects.name : props.subjects[subjectId]))), __jsx(\"div\", {\n    className: \"col s1 right-align\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row icons-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, hasFlaggedProblems && !props.flagRemoved && __jsx(\"i\", {\n    style: {\n      color: \"#c0272d\"\n    },\n    className: \"icon-flag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"dropdown-block col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"dropdown-trigger btn\",\n    href: \"#\",\n    \"data-target\": \"dropdown01\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      onSetDropdown(dropdownIsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"material-icons dots-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"more_vert\")), dropdownIsOpen ? __jsx(ClickOffComponentWrapper, {\n    onOuterClick: function onOuterClick() {\n      return onSetDropdown(dropdownIsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    id: \"dropdown01\",\n    className: \"dropdown-content dropdown-wide\",\n    style: {\n      display: \"block\",\n      opacity: \"1\",\n      transform: \"scaleX(1) scaleY(1)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, renderDropdownOptions(status, handleAssignLesson, handleRescheduleModalOpen, props.handleExcuseLessonLateness, handleResetLesson, startMarkFlagsReviewed, props.handleUnassignLesson, [lesson.id]))) : null))))), __jsx(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"d-flex sameheight-all row mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col s6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"chart-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"chart-holder\",\n    style: {\n      width: \"140px\",\n      height: \"95px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, lesson.type.label !== \"Reading\" ? [__jsx(Doughnut, {\n    data: graphData(),\n    options: {\n      circumference: Math.PI,\n      rotation: Math.PI,\n      cutoutPercentage: 60,\n      tooltips: false\n    },\n    key: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), lesson.problems && renderProblemCount(status, scoring.grade ? scoring.grade : \"POOR\", scoring && scoring.percentage_correct, lesson.problems.length, lesson.problems.filter(function (problem) {\n    return problem.answered;\n  }).length), lesson.sections && renderProblemCount(status, scoring.grade ? scoring.grade : \"POOR\", scoring && scoring.percentage_correct, lesson.sections.length, lesson.sections.filter(function (section) {\n    return section.status === 'COMPLETED';\n  }).length)] : __jsx(\"p\", {\n    style: {\n      paddingTop: \"25%\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"No Scoring Available For Reading Lessons.\")), __jsx(\"div\", {\n    className: \"chart-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"chart-col chart-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"chart-col chart-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, status === \"COMPLETED\" && (lesson.type.label === \"Drill\" || lesson.type.label === 'Module') ? __jsx(\"span\", {\n    className: \"amount\",\n    style: {\n      color: chartColorMap[scoring.grade ? scoring.grade : 'POOR']\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, scoring.correct_count, \" of \", scoring.question_count) : null)), __jsx(\"div\", {\n    className: \"chart-description\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, __jsx(\"dl\", {\n    className: \"dl-horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }, __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, \"Time Est:\"), __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, timeEstimate ? \"\".concat(timeEstimate, \" mins\") : \"None\")), lesson.type.label === \"Reading\" || lesson.type.label === \"Module\" ? null : lesson.type.label === \"Drill\" ? __jsx(\"dl\", {\n    className: \"dl-horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Problems:\"), __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, lesson.problems.length)) : __jsx(\"dl\", {\n    className: \"dl-horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"Problems:\"), __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, lessonProblems && lessonProblems.length))))), __jsx(\"div\", {\n    className: \"col s6 d-flex align-items-center left-align\",\n    style: {\n      height: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"dates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, __jsx(\"dl\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, assignment_date && __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \"Available:\", \" \", __jsx(\"time\", {\n    dateTime: assignment_date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, moment(assignment_date).format(\"MM/DD/YYYY\"))), dueAt && assignment_date ? __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, \"Due: \", __jsx(\"time\", {\n    dateTime: dueAt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, moment(dueAt).format(\"MM/DD/YYYY\"))) : assignment_date ? __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, \"No Due Date\") : \"\", completedAt ? __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"Completed:\", \" \", __jsx(\"time\", {\n    dateTime: completedAt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, moment(completedAt).format(\"MM/DD/YYYY\"))) : \"\")), __jsx(\"div\", {\n    className: \"align-self-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, lesson.lesson_id ? status === \"COMPLETED\" && lesson.type.label === \"Reading\" ? __jsx(\"span\", {\n    style: {\n      backgroundColor: \"#74b287\"\n    },\n    className: \"badge badge-rounded-md white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, formatStatus(status)) : status === \"COMPLETED\" ? __jsx(\"span\", {\n    style: {\n      backgroundColor: \"\".concat(scoring.grade ? gradeColorMap[scoring.grade] : gradeColorMap[\"POOR\"])\n    },\n    className: \"badge badge-rounded-md white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, formatStatus(scoring.grade ? scoring.grade : 'POOR')) : status === \"OVERDUE\" ? __jsx(\"span\", {\n    style: status === \"OVERDUE\" ? {\n      backgroundColor: \"#fff\",\n      borderColor: \"red\",\n      color: \"red\"\n    } : {\n      backgroundColor: \"#212121\",\n      color: \"white\"\n    },\n    className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, formatStatus(status)) : __jsx(\"span\", {\n    style: {\n      backgroundColor: \"#212121\",\n      color: \"white\"\n    },\n    className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, formatStatus(status)) : null)))), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col s2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    checked: props.lesson.selected,\n    onChecked: onChecked,\n    onUnChecked: onUnChecked,\n    cardId: props.lessonId,\n    type: \"cardCheckBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"col s8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, __jsx(\"dl\", {\n    className: \"dl-horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }, __jsx(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, \"p.\"), lesson.type.label === \"Module\" ? __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, \"(\", challenge_page, \" - \", practice_page, \") (\", \"Challenge\", \" + \", \"Practice\", \")\") : lesson.type.label === \"Drill\" ? __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, \"(\", drillPage, \" - \", drillPage, \") (\", \"Drill\", \")\") : __jsx(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"(\", startingPage, \" - \", endingPage, \") (\", \"Starting\", \" - \", \"Ending\", \")\")))))));\n};\n\nLessonCard.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  onSetIsVisibleTopbar: PropTypes.func.isRequired\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSetIsVisibleTopbar: bindActionCreators(setIsVisibleTopBar, dispatch),\n    onSetActiveLesson: bindActionCreators(setActiveLesson, dispatch),\n    onSetOpenActivePage: bindActionCreators(setOpenActivePage, dispatch)\n  };\n};\n\nvar mapStateToProps = createStructuredSelector({\n  subjects: makeSelectSubjects(),\n  units: makeSelectUnitFilterOptions()\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonCard);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FullView/components/LessonCard/index.js"],"names":["React","useState","useEffect","useRef","connect","bindActionCreators","createStructuredSelector","PropTypes","Doughnut","ClickOffComponentWrapper","moment","getProblemCompletionStatusColor","getLessonActivityStatus","renderLessonIcon","renderDropdownOptions","renderProblemCount","renderAlerts","statusColorMap","chartColorMap","gradeColorMap","formatStatus","Checkbox","setIsVisibleTopBar","setActiveLesson","setOpenActivePage","fetchStudentLessonSectionApi","makeSelectSubjects","makeSelectUnitFilterOptions","data","current","target","status","datasets","backgroundColor","LessonCard","props","lesson","id","name","drillPage","drill_page","practicePage","practice_page","startingPage","starting_page","endingPage","ending_page","timeEstimate","time_estimate","subjectId","subject_id","unitId","unit_id","lessonProblems","lesson_problems","dueDate","completionDate","challenge_page","due_date","completed_at","assignment_date","scoring","onOpenModal","onCloseDropdown","handleRescheduleModalOpen","handleResetLesson","handleMarkAllFlagsReviewed","dueAt","completedAt","dropdownIsOpen","toggleDropdown","hasFlaggedProblems","setHasFlaggedProblems","problems","length","filter","problem","flag_status","sections","section1","user","section2","all","then","filteredSections","section","map","onOpenDetailModal","e","preventDefault","onSetIsVisibleTopbar","onSetActiveLesson","onSetOpenActivePage","condition","type","label","onSetDropdown","onReschedule","assignDate","assignTime","dueTime","console","warn","onChecked","cardId","onAddCheckedLesson","uniqueId","onUnChecked","onRemoveCheckedLesson","handleAssignLesson","lessonId","getUnitName","units","lessonUnit","unit","value","graphData","correct_count","question_count","grade","completedProblems","answered","completedSections","startMarkFlagsReviewed","lessonIds","lesson_id","subjects","flagRemoved","color","display","opacity","transform","handleExcuseLessonLateness","handleUnassignLesson","width","height","circumference","Math","PI","rotation","cutoutPercentage","tooltips","percentage_correct","paddingTop","fontWeight","marginTop","format","borderColor","selected","propTypes","object","isRequired","index","number","func","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable */\n// used vars and indentifers not camelcase\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport PropTypes from \"prop-types\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport ClickOffComponentWrapper from \"../../../../../../ClickOffComponentWrapper\";\nimport moment from 'moment'\n// RENDERING UTILS\nimport {\n  getProblemCompletionStatusColor,\n  getLessonActivityStatus,\n  renderLessonIcon,\n  renderDropdownOptions,\n  renderProblemCount,\n  renderAlerts,\n  statusColorMap,\n  chartColorMap,\n  gradeColorMap,\n  formatStatus\n} from \"./utils\";\nimport Checkbox from \"./components/Checkbox\";\nimport { setIsVisibleTopBar, setActiveLesson, setOpenActivePage } from \"../../../../../index/actions\";\nimport { fetchStudentLessonSectionApi } from \"../../../../../index/api\";\nimport {makeSelectSubjects,makeSelectUnitFilterOptions} from '../../../../../index/selectors'\n\nconst data = (current, target, status) => ({\n  datasets: [\n    {\n      data: [current, target - current],\n      backgroundColor: [chartColorMap[status], \"#eaeaea\"]\n    }\n  ]\n});\n\nconst LessonCard = props => {\n  // PROPS\n  const {\n    lesson,\n    lesson: {\n      id,\n      name,\n      drill_page: drillPage,\n      practice_page: practicePage,\n      starting_page: startingPage,\n      ending_page: endingPage,\n      status,\n      time_estimate: timeEstimate,\n      subject_id: subjectId,\n      unit_id: unitId,\n      lesson_problems: lessonProblems,\n      dueDate,\n      completionDate,\n      challenge_page,\n      practice_page,\n      due_date,\n      completed_at,\n      assignment_date,\n      scoring = {}\n    },\n    onOpenModal,\n    onCloseDropdown,\n    handleRescheduleModalOpen,\n    handleResetLesson,\n    handleMarkAllFlagsReviewed\n  } = props;\n  const dueAt = due_date || dueDate\n  const completedAt = completed_at || completionDate\n  // STATE\n  const [dropdownIsOpen, toggleDropdown] = useState(false);\n  const [hasFlaggedProblems, setHasFlaggedProblems] = useState(false)\n\n  useEffect(() => {\n    if (lesson.problems && lesson.problems.length > 0) {\n      const hasFlaggedProblems = lesson.problems.filter(\n        (problem) => problem.flag_status === \"FLAGGED\"\n      );\n      if (hasFlaggedProblems.length > 0) {\n        return setHasFlaggedProblems(true);\n      }\n    } else if (lesson.sections && lesson.sections.length > 0) {\n      const section1 = fetchStudentLessonSectionApi(\n        props.user.id,\n        lesson.id,\n        lesson.sections[0].id\n      );\n      const section2 = fetchStudentLessonSectionApi(\n        props.user.id,\n        lesson.id,\n        lesson.sections[1].id\n      );\n      Promise.all([section1, section2]).then((sections) => {\n        const filteredSections = sections.filter((section) => section);\n        filteredSections.map((section) => {\n          section.lesson_problems.map((problem) => {\n            if (problem.flag_status === \"FLAGGED\") {\n              setHasFlaggedProblems(true);\n            }\n          });\n        });\n      });\n    }\n  }, []);\n\n  const onOpenDetailModal = async (e) => {\n    e.preventDefault()\n    const { onSetIsVisibleTopbar, onSetActiveLesson, onSetOpenActivePage, lesson } = props;\n    onSetIsVisibleTopbar(false);\n    onSetActiveLesson(lesson);\n    const condition = lesson.type.label === 'Drill' || lesson.type.label === \"Module\"\n    if (condition) {\n      onSetOpenActivePage(\"AnswerSheet\")\n    } else {\n      onSetOpenActivePage(\"ReadWorkBook\")\n    }\n  }\n  const onSetDropdown = () => toggleDropdown(!dropdownIsOpen);\n\n  const onReschedule = (assignDate, assignTime, dueAt, dueTime) => {\n    // eslint-disable-next-line no-console\n    console.warn(\"Stubbed out date functionality\", assignDate, assignTime, dueAt, dueTime);\n  };\n\n  const onChecked = cardId => {\n    props.onAddCheckedLesson(cardId, props.uniqueId);\n  };\n\n  const onUnChecked = cardId => {\n    props.onRemoveCheckedLesson(cardId, props.uniqueId);\n  };\n\n  const handleAssignLesson = () => {\n    onOpenModal();\n    props.onAddCheckedLesson(props.lessonId);\n  };\n\n  const getUnitName = () => {\n    // Get the unit name of the lesson\n    if (lesson.units) {\n      return lesson.units.name\n    }\n    const lessonUnit = props.units.filter(unit => unit.value === unitId)\n    return (lessonUnit[0] ? lessonUnit[0].label : '') \n  }\n\n  const graphData = () => {\n    // Determines the graph progress of a completed or started lesson\n    if (status === 'COMPLETED') {\n      return data(\n        scoring.correct_count,\n        scoring.question_count,\n        scoring.grade ? scoring.grade : \"POOR\"\n      )\n\n    } else if (status === 'STARTED' && lesson.problems) {\n      const completedProblems = lesson.problems.filter(problem => problem.answered).length\n      return data(completedProblems, lesson.problems.length, status)\n\n    } else if (status === 'STARTED' && lesson.sections) {\n      const completedSections = lesson.sections.filter(section => section.status === 'COMPLETED').length\n      return data(completedSections, lesson.sections.length, status)\n    }\n\n    return data(0, 1, \"ASSIGNED\")\n  }\n\n  const startMarkFlagsReviewed = (lessonIds) => {\n    handleMarkAllFlagsReviewed(lessonIds)\n    setHasFlaggedProblems(false)\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div\n          className={getLessonActivityStatus(props.lesson.lesson_id ? \"assigned\" : \"notassigned\")}\n        >\n          <div className=\"card-panel\">\n            <div className=\"card-panel-row row\">\n              <div className=\"icon-col col s2\">\n                <i\n                  className={renderLessonIcon(\n                    lesson.subjects ? lesson.subjects.name : props.subjects[subjectId]\n                  )}\n                ></i>\n              </div>\n              <div className=\"col s9\">\n                <div className=\"card-panel-text center-left\">\n                  <div className=\"text-small\">\n                    {getUnitName()}\n                  </div>\n                  <div className=\"text-large\">\n                    <a href=\"#\" onClick={(e) => onOpenDetailModal(e)}>\n                      {lesson.name}\n                    </a>\n                  </div>\n                  <div className=\"text-small\">\n                    Subject: {lesson.subjects ? lesson.subjects.name : props.subjects[subjectId]}\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s1 right-align\">\n                <div className=\"row icons-row\">\n                  {hasFlaggedProblems && !props.flagRemoved && <i style={{ color: \"#c0272d\" }} className=\"icon-flag\"></i>}\n                  <div className=\"dropdown-block col\">\n                    <a\n                      className=\"dropdown-trigger btn\"\n                      href=\"#\"\n                      data-target=\"dropdown01\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        onSetDropdown(dropdownIsOpen);\n                      }}\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen}>\n                      <ClickOffComponentWrapper onOuterClick={() => onSetDropdown(dropdownIsOpen)}>\n                        <ul\n                          id=\"dropdown01\"\n                          className=\"dropdown-content dropdown-wide\"\n                          style={{\n                            display: \"block\",\n                            opacity: \"1\",\n                            transform: \"scaleX(1) scaleY(1)\",\n                          }}\n                        >\n                          {renderDropdownOptions(\n                            status,\n                            handleAssignLesson,\n                            handleRescheduleModalOpen,\n                            props.handleExcuseLessonLateness,\n                            handleResetLesson,\n                            startMarkFlagsReviewed,\n                            props.handleUnassignLesson,\n                            [lesson.id]\n                          )}\n                        </ul>\n                      </ClickOffComponentWrapper>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"d-flex sameheight-all row mb-0\">\n              <div className=\"col s6\">\n                <div className=\"chart-container\">\n                  <div className=\"chart-holder\" style={{ width: \"140px\", height: \"95px\" }}>\n                    <Choose>\n                      <When condition={lesson.type.label !== \"Reading\"}>\n                        <Doughnut\n                          data={\n                            graphData()\n                          }\n                          options={{\n                            circumference: Math.PI,\n                            rotation: Math.PI,\n                            cutoutPercentage: 60,\n                            tooltips: false,\n                          }}\n                        />\n                        {lesson.problems && renderProblemCount(\n                          status,\n                          scoring.grade ? scoring.grade : \"POOR\",\n                          scoring && scoring.percentage_correct,\n                          lesson.problems.length,\n                          lesson.problems.filter(problem => problem.answered).length\n                        )}\n                        {lesson.sections && renderProblemCount(\n                          status,\n                          scoring.grade ? scoring.grade : \"POOR\",\n                          scoring && scoring.percentage_correct,\n                          lesson.sections.length,\n                          lesson.sections.filter(section => section.status === 'COMPLETED').length\n                        )}\n                      </When>\n                      <Otherwise>\n                        <p style={{ paddingTop: \"25%\", fontWeight: \"bold\" }}>\n                          No Scoring Available For Reading Lessons.\n                        </p>\n                      </Otherwise>\n                    </Choose>\n                  </div>\n\n                  <div className=\"chart-row\">\n                    <div className=\"chart-col chart-start\"></div>\n                    <div className=\"chart-col chart-end\">\n                    <Choose>\n                          <When condition={status === \"COMPLETED\" && (lesson.type.label === \"Drill\" || lesson.type.label === 'Module')}>\n                      <span className=\"amount\" style={{ color: chartColorMap[scoring.grade ? scoring.grade : 'POOR'] }}>\n                        \n                            {scoring.correct_count} of {scoring.question_count}\n                            </span>\n                          </When>\n                        </Choose>\n                      \n                    </div>\n                  </div>\n                  <div className=\"chart-description\" style={{ marginTop: \"10px\" }}>\n                    <dl className=\"dl-horizontal\">\n                      <dt>Time Est:</dt>\n                      <dd>{timeEstimate ? `${timeEstimate} mins` : \"None\"}</dd>\n                    </dl>\n                    <Choose>\n                      <When\n                        condition={lesson.type.label === \"Reading\" || lesson.type.label === \"Module\"}\n                      ></When>\n                      <When condition={lesson.type.label === \"Drill\"}>\n                        <dl className=\"dl-horizontal\">\n                          <dt>Problems:</dt>\n                          <dd>{lesson.problems.length}</dd>\n                        </dl>\n                      </When>\n                      <Otherwise>\n                        <dl className=\"dl-horizontal\">\n                          <dt>Problems:</dt>\n                          <dd>{lessonProblems && lessonProblems.length}</dd>\n                        </dl>\n                      </Otherwise>\n                    </Choose>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"col s6 d-flex align-items-center left-align\"\n                style={{ height: \"100px\" }}\n              >\n                <div className=\"dates\">\n                  <dl className=\"row\">\n                    {assignment_date && (\n                      <dt /*style={{ float: \"right\", clear: \"both\" }}*/>\n                        Available:{\" \"}\n                        <time dateTime={assignment_date}>\n                          {moment(assignment_date).format(\"MM/DD/YYYY\")}\n                        </time>\n                      </dt>\n                    )}\n\n                    {dueAt && assignment_date ? (\n                      <dt /*style={{ float: \"right\", clear: \"both\" }}*/>\n                        Due: <time dateTime={dueAt}>{moment(dueAt).format(\"MM/DD/YYYY\")}</time>\n                      </dt>\n                    ) : assignment_date ? (\n                      <dt>No Due Date</dt>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {completedAt ? (\n                      <dt /*style={{ float: \"right\", clear: \"both\" }}*/>\n                        Completed:{\" \"}\n                        <time dateTime={completedAt}>\n                          {moment(completedAt).format(\"MM/DD/YYYY\")}\n                        </time>\n                      </dt>\n                    ) : (\n                      \"\"\n                    )}\n                  </dl>\n                </div>\n\n                <div className=\"align-self-end\">\n                  <Choose>\n                    {/* If this is an assigned student lesson */}\n                    <When condition={lesson.lesson_id}>\n                      <Choose>\n                        <When condition={status === \"COMPLETED\" && lesson.type.label === \"Reading\"}>\n                          <span\n                            style={{\n                              backgroundColor: `#74b287`,\n                            }}\n                            className={`badge badge-rounded-md white-text`}\n                          >\n                            {formatStatus(status)}\n                          </span>\n                        </When>\n                        <When condition={status === \"COMPLETED\"}>\n                          <span\n                            style={{\n                              backgroundColor: `${\n                                scoring.grade\n                                  ? gradeColorMap[scoring.grade]\n                                  : gradeColorMap[\"POOR\"]\n                              }`,\n                            }}\n                            className={`badge badge-rounded-md white-text`}\n                          >\n                            {formatStatus(scoring.grade ? scoring.grade : 'POOR')}\n                          </span>\n                        </When>\n                        <When condition={status === \"OVERDUE\"}>\n                          <span\n                            style={\n                              status === \"OVERDUE\"\n                                ? {\n                                    backgroundColor: `#fff`,\n                                    borderColor: \"red\",\n                                    color: \"red\",\n                                  }\n                                : { backgroundColor: `#212121`, color: \"white\" }\n                            }\n                            className={`badge badge-rounded-md ${statusColorMap[status]} `}\n                          >\n                            {formatStatus(status)}\n                          </span>\n                        </When>\n                        <Otherwise>\n                          <span\n                            style={{ backgroundColor: `#212121`, color: \"white\" }}\n                            className={`badge badge-rounded-md ${statusColorMap[status]} `}\n                          >\n                            {formatStatus(status)}\n                          </span>\n                        </Otherwise>\n                      </Choose>\n                    </When>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s2\">\n              <Checkbox\n                checked={props.lesson.selected}\n                onChecked={onChecked}\n                onUnChecked={onUnChecked}\n                cardId={props.lessonId}\n                type=\"cardCheckBox\"\n              />\n            </div>\n            <div className=\"col s8\">\n              <dl className=\"dl-horizontal\">\n                <dt>p.</dt>\n                <Choose>\n                  <When condition={lesson.type.label === \"Module\"}>\n                    <dd>\n                      ({challenge_page} - {practice_page}) ({\"Challenge\"} + {\"Practice\"})\n                    </dd>\n                  </When>\n                  <When condition={lesson.type.label === \"Drill\"}>\n                    <dd>\n                      ({drillPage} - {drillPage}) ({\"Drill\"})\n                    </dd>\n                  </When>\n                  <Otherwise>\n                    <dd>\n                      ({startingPage} - {endingPage}) ({\"Starting\"} - {\"Ending\"})\n                    </dd>\n                  </Otherwise>\n                </Choose>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLessonCard.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  onSetIsVisibleTopbar: PropTypes.func.isRequired,\n};\nconst mapDispatchToProps = dispatch => ({\n  onSetIsVisibleTopbar: bindActionCreators(setIsVisibleTopBar, dispatch),\n  onSetActiveLesson: bindActionCreators(setActiveLesson, dispatch),\n  onSetOpenActivePage: bindActionCreators(setOpenActivePage, dispatch)\n});\n\nconst mapStateToProps = createStructuredSelector({\n  subjects: makeSelectSubjects(),\n  units: makeSelectUnitFilterOptions(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonCard);\n"]},"metadata":{},"sourceType":"module"}