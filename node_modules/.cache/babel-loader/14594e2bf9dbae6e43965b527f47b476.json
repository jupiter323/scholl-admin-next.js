{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView';\nimport ListView from '../components/Worksheets/components/ListView';\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, name, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar Worksheets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Worksheets, _Component);\n\n  function Worksheets(props) {\n    var _this;\n\n    _classCallCheck(this, Worksheets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Worksheets).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        filterName: \"\",\n        filterTopic: \"\",\n        subjectFilters: [],\n        difficultyFilters: [],\n        problemTypeFilters: [],\n        sourceFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (event, dropdownIsOpen) {\n      event.preventDefault();\n\n      _this.setState({\n        dropdownIsOpen: !dropdownIsOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (worksheet) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterName: worksheet\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({\n        worksheetsAreFiltered: false\n      }, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (topic) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterTopic: topic\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortWorksheets\", function (worksheets) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'problemType':\n          return worksheets.sort(problemType);\n\n        case 'subject':\n          return worksheets.sort(subject);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'difficulty':\n          return worksheets.sort(difficulty);\n\n        case 'name':\n          return worksheets.sort(name);\n\n        case 'source':\n          return worksheets.sort(source);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          worksheets = _this$state.worksheets,\n          filterName = _this$state.filterName;\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var worksheetName = currentWorksheet.worksheetName;\n        var worksheetString = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      var newArray = _this.arrayItemRemover(worksheets, worksheets[index]);\n\n      _this.setState({\n        worksheets: newArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      _this.setState(function (prevState) {\n        prevState.worksheets.push(worksheets[index]);\n        return {\n          students: prevState.students\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterWorksheets\", function () {\n      var _this$state2 = _this.state,\n          filterTopic = _this$state2.filterTopic,\n          problemTypeFilters = _this$state2.problemTypeFilters,\n          subjectFilters = _this$state2.subjectFilters,\n          difficultyFilters = _this$state2.difficultyFilters,\n          sourceFilters = _this$state2.sourceFilters,\n          allWorksheets = _this$state2.worksheets;\n      var worksheets = allWorksheets;\n\n      if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return problemTypeFilters.indexOf(worksheet.problemType) !== -1;\n        });\n      }\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return subjectFilters.indexOf(worksheet.subject) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return difficultyFilters.indexOf(worksheet.difficulty) !== -1;\n        });\n      }\n\n      if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return sourceFilters.indexOf(worksheet.worksheetSource) !== -1;\n        });\n      }\n\n      if (filterTopic.length && filterTopic.indexOf(\"all\") === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return filterTopic.indexOf(worksheet.topic) !== -1;\n        });\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableWorksheets\", function () {\n      var _this$state3 = _this.state,\n          problemTypeFilters = _this$state3.problemTypeFilters,\n          subjectFilters = _this$state3.subjectFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          sourceFilters = _this$state3.sourceFilters,\n          worksheets = _this$state3.worksheets,\n          filterName = _this$state3.filterName,\n          sort = _this$state3.sort,\n          filterTopic = _this$state3.filterTopic;\n      var mappableWorksheets = worksheets;\n\n      if (filterName.length) {\n        mappableWorksheets = _this.onFilterByName();\n      }\n\n      if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length || filterTopic.length) {\n        mappableWorksheets = _this.onFilterWorksheets();\n      }\n\n      if (sort) {\n        return _this.onSortWorksheets(mappableWorksheets);\n      }\n\n      return mappableWorksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state4 = _this.state,\n          currentSubjectFilters = _this$state4.subjectFilters,\n          currentProblemTypeFilters = _this$state4.problemTypeFilters,\n          currentDifficultyFilters = _this$state4.difficultyFilters,\n          currentSourceFilters = _this$state4.sourceFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'problemType':\n          modifiedFilterCurrentState = currentProblemTypeFilters;\n          modifiedFilterName = 'problemTypeFilters';\n          break;\n\n        case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n\n        default:\n          break;\n      } // Decide whether we're adding or removing the selected filter\n\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForFilteredState\", function () {\n      var _this$state5 = _this.state,\n          filterName = _this$state5.filterName,\n          filterTopic = _this$state5.filterTopic;\n\n      if (!filterName.length && !filterTopic.length) {\n        _this.setState({\n          worksheetsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (worksheet) {\n        return worksheet !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var active = _this.state.active;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          worksheets: _this.getMappableWorksheets(),\n          onDeleteWorksheet: _this.onDeleteWorksheet,\n          onCloneWorksheet: _this.onCloneWorksheet\n        });\n      }\n\n      if (active === 'list') {\n        return React.createElement(ListView, {\n          worksheets: _this.getMappableWorksheets(),\n          onDeleteWorksheet: _this.onDeleteWorksheet\n        });\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      sourceFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(Worksheets, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state6 = this.state,\n          dropdownIsOpen = _this$state6.dropdownIsOpen,\n          currentView = _this$state6.currentView,\n          subjectFilters = _this$state6.subjectFilters,\n          difficultyFilters = _this$state6.difficultyFilters,\n          sourceFilters = _this$state6.sourceFilters,\n          problemTypeFilters = _this$state6.problemTypeFilters;\n      return React.createElement(\"div\", {\n        className: \"worksheets-page\"\n      }, React.createElement(\"div\", {\n        className: \"wrapper\"\n      }, React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(WorksheetHeading, null), React.createElement(FilterSection, {\n        subjectFilters: subjectFilters,\n        difficultyFilters: difficultyFilters,\n        problemTypeFilters: problemTypeFilters,\n        sourceFilters: sourceFilters,\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        handleFilterClick: this.handleFilterClick,\n        onClearFilters: this.onClearFilters\n      }), this.renderCurrentView()), React.createElement(\"div\", {\n        className: \"add-btn-block dropdown-small\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetDropdown(event, dropdownIsOpen);\n        },\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n        \"data-target\": \"dropdown_assign_selected\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"Custom Worksheet\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign_selected\",\n        className: \"dropdown-content dropdown-small\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Create New\")))))));\n    }\n  }]);\n\n  return Worksheets;\n}(Component);\n\nexport default Worksheets;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\pages\\worksheets.js"],"names":["React","Component","update","WorksheetHeading","FullView","ListView","sampleWorksheets","FilterSection","problemType","subject","problems","difficulty","name","source","timeEstimate","Worksheets","props","setState","filterName","filterTopic","subjectFilters","difficultyFilters","problemTypeFilters","sourceFilters","event","dropdownIsOpen","preventDefault","sort","view","currentView","active","worksheet","worksheetsAreFiltered","filter","topic","worksheets","state","reduce","finalArr","currentWorksheet","worksheetName","worksheetString","replace","toLowerCase","indexOf","push","index","newArray","arrayItemRemover","prevState","students","allWorksheets","length","worksheetSource","mappableWorksheets","onFilterByName","onFilterWorksheets","onSortWorksheets","filterType","currentSubjectFilters","currentProblemTypeFilters","currentDifficultyFilters","currentSourceFilters","modifiedFilterCurrentState","modifiedFilterName","modifiedFilterUpdatedState","$push","filterIndex","$splice","array","value","getMappableWorksheets","onDeleteWorksheet","onCloneWorksheet","modalOpen","onChangeView","onSetFilteredState","onUnsetFilteredState","onSetFilteredTopicState","handleFilterClick","onClearFilters","renderCurrentView","onSetDropdown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView'\nimport ListView from '../components/Worksheets/components/ListView';\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, name, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Worksheets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      sourceFilters: [],\n    };\n  }\n  onClearFilters = () => this.setState({ filterName: \"\", filterTopic: \"\", subjectFilters: [], difficultyFilters: [], problemTypeFilters: [], sourceFilters: []})\n  onSetDropdown = (event, dropdownIsOpen) => {\n    event.preventDefault();\n    this.setState({dropdownIsOpen: !dropdownIsOpen})\n  }\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view, active: view });\n\n  onSetFilteredState = (worksheet) => this.setState({ worksheetsAreFiltered: true, filterName: worksheet })\n  onUnsetFilteredState = (filter) => this.setState({ worksheetsAreFiltered: false, [filter]: \"\" })\n  onSetFilteredTopicState = (topic) => this.setState({worksheetsAreFiltered: true, filterTopic: topic})\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'problemType':\n        return worksheets.sort(problemType);\n      case 'subject':\n        return worksheets.sort(subject);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'difficulty':\n        return worksheets.sort(difficulty);\n      case 'name':\n        return worksheets.sort(name);\n      case 'source':\n        return worksheets.sort(source);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { worksheetName } = currentWorksheet;\n      const worksheetString = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onDeleteWorksheet = (index) => {\n    const { worksheets } = this.state;\n    const newArray = this.arrayItemRemover(worksheets, worksheets[index])\n    this.setState({ worksheets: newArray })\n  }\n\n  onCloneWorksheet = (index) => {\n    const { worksheets } = this.state;\n    this.setState(prevState => {\n      prevState.worksheets.push(worksheets[index]);\n      return { students: prevState.students }\n    })\n  }\n\n  onFilterWorksheets = () => {\n    const { filterTopic, problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets: allWorksheets } = this.state;\n    let worksheets = allWorksheets;\n    if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n      worksheets = worksheets.filter(worksheet => problemTypeFilters.indexOf(worksheet.problemType) !== -1);\n    }\n    if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => subjectFilters.indexOf(worksheet.subject) !== -1)\n    }\n    if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => difficultyFilters.indexOf(worksheet.difficulty) !== -1)\n    }\n    if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => sourceFilters.indexOf(worksheet.worksheetSource) !== -1)\n    }\n    if (filterTopic.length && filterTopic.indexOf(\"all\") === -1) {\n      worksheets = worksheets.filter(worksheet => filterTopic.indexOf(worksheet.topic) !== -1)\n    }\n    return worksheets;\n  }\n\n  getMappableWorksheets = () => {\n\n    const { problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets, filterName, sort, filterTopic } = this.state;\n    let mappableWorksheets = worksheets;\n    if (filterName.length) {\n      mappableWorksheets = this.onFilterByName();\n    }\n    if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length || filterTopic.length){\n      mappableWorksheets = this.onFilterWorksheets();\n    }\n    if (sort) {\n     return this.onSortWorksheets(mappableWorksheets)\n    }\n    return mappableWorksheets;\n  }\n\n\n\n  handleFilterClick = (filterType, filter) => {\n    const { subjectFilters: currentSubjectFilters, problemTypeFilters: currentProblemTypeFilters, difficultyFilters: currentDifficultyFilters, sourceFilters: currentSourceFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'difficulty':\n        modifiedFilterCurrentState = currentDifficultyFilters;\n        modifiedFilterName = 'difficultyFilters';\n        break;\n      case 'problemType':\n        modifiedFilterCurrentState = currentProblemTypeFilters;\n        modifiedFilterName = 'problemTypeFilters';\n        break;\n      case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n        default:\n        break;\n    }\n    // Decide whether we're adding or removing the selected filter\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterTopic } = this.state;\n    if (!filterName.length && !filterTopic.length) {\n      this.setState({ worksheetsAreFiltered: false });\n    }\n  }\n\narrayItemRemover = (array, value) => array.filter((worksheet) => worksheet !== value)\n\nrenderCurrentView = () => {\n  const { active } = this.state;\n  if (active === 'full') {\n    return <FullView worksheets={this.getMappableWorksheets()} onDeleteWorksheet={this.onDeleteWorksheet} onCloneWorksheet={this.onCloneWorksheet} />;\n  }\n  if (active === 'list') {\n    return <ListView worksheets={this.getMappableWorksheets()}  onDeleteWorksheet={this.onDeleteWorksheet} />;\n  }\n  return null;\n}\n\nrender() {\n  const { dropdownIsOpen, currentView, subjectFilters, difficultyFilters, sourceFilters, problemTypeFilters } = this.state;\n  return (\n    <div className=\"worksheets-page\">\n      <div className=\"wrapper\">\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-5\">\n            <WorksheetHeading />\n            <FilterSection\n              subjectFilters={subjectFilters}\n              difficultyFilters={difficultyFilters}\n              problemTypeFilters={problemTypeFilters}\n              sourceFilters={sourceFilters}\n              currentView={currentView}\n              onChangeView={this.onChangeView}\n              onSetFilteredState={this.onSetFilteredState}\n              onUnsetFilteredState={this.onUnsetFilteredState}\n              onSetFilteredTopicState={this.onSetFilteredTopicState}\n              handleFilterClick={this.handleFilterClick}\n              onClearFilters={this.onClearFilters}\n            />\n           {this.renderCurrentView()}\n            </div>\n          <div className=\"add-btn-block dropdown-small\">\n            <a\n              href=\"#\"\n              onClick={(event) => this.onSetDropdown(event, dropdownIsOpen)}\n              className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n              data-target='dropdown_assign_selected'>\n              <i className=\"material-icons\">add</i>\n              Custom Worksheet\n                </a>\n            <ul id='dropdown_assign_selected' className='dropdown-content dropdown-small'>\n              <li><a href=\"#\">From Saved</a></li>\n              <li><a href=\"#\">Create New</a></li>\n            </ul>\n          </div>\n        </main>\n      </div>\n    </div>\n\n  );\n}\n}\n\nexport default Worksheets;"]},"metadata":{},"sourceType":"module"}