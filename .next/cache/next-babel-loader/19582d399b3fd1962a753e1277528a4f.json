{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassDetailModal from '../ClassDetailModal';\nimport RadialBar from \"../../../../common/RadialBar\";\n\nclass ClassCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenClassDetailsModal\", event => {\n      event.preventDefault();\n      this.props.onCloseDropdown();\n      this.setState({\n        classDetailsModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"onCloseClassDetailsModal\", () => this.setState({\n      classDetailsModalOpen: false\n    }));\n\n    _defineProperty(this, \"onCloneClass\", () => this.props.onCloneClass(this.props.classroom));\n\n    _defineProperty(this, \"onOpenDeleteModal\", () => this.setState({\n      deleteModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDeleteModal\", () => this.setState({\n      deleteModalOpen: false\n    }));\n\n    _defineProperty(this, \"onConfirmDeleteClass\", () => {\n      const {\n        onDeleteClass,\n        classroom,\n        onCloseDropdown\n      } = this.props;\n      onDeleteClass(classroom);\n      onCloseDropdown();\n      this.onCloseDeleteModal();\n    });\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    this.state = {\n      classDetailsModalOpen: false,\n      deleteModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      dropdownIsOpen,\n      dropdownIndex,\n      index,\n      classroom,\n      onHandleClassCard,\n      onCloneClass,\n      onDeleteClass,\n      onSaveClassChanges\n    } = this.props;\n    const {\n      deleteModalOpen,\n      classDetailsModalOpen\n    } = this.state;\n    const {\n      summary: {\n        amount_students,\n        start_date,\n        end_date,\n        improvement,\n        coursework_assigned,\n        coursework_completed,\n        problems_flagged_review,\n        average_score,\n        achieved_target_score,\n        average_practice_tests_completed,\n        instruction\n      }\n    } = classroom;\n    return __jsx(React.Fragment, null, __jsx(ClassDetailModal, {\n      index: index,\n      classroom: classroom,\n      open: classDetailsModalOpen,\n      onClose: this.onCloseClassDetailsModal,\n      onOpenDeleteModal: this.onOpenDeleteModal,\n      deleteModalOpen: deleteModalOpen,\n      onSaveClassChanges: onSaveClassChanges,\n      onDeleteClass: onDeleteClass\n    }), __jsx(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, __jsx(\"div\", {\n      className: \"card-main card-class card card-large\"\n    }, __jsx(\"div\", {\n      className: \"owner-box card-panel\",\n      style: {\n        backgroundColor: \"#408e49\",\n        color: \"#fff\",\n        cursor: \"pointer\"\n      }\n    }, __jsx(\"div\", {\n      className: \"card-panel-row row\"\n    }, __jsx(\"div\", {\n      className: \"col s9\"\n    }, __jsx(\"div\", {\n      className: \"user-block\"\n    }, __jsx(\"div\", {\n      className: \"user-circle\",\n      style: {\n        backgroundColor: \"#fff\",\n        color: \"#408e49\"\n      }\n    }, __jsx(\"span\", {\n      className: \"initials\"\n    }, amount_students), __jsx(\"span\", {\n      className: \"ititials-text\"\n    }, \"students\")), __jsx(\"div\", {\n      className: \"user-text\",\n      style: {\n        color: \"#fff\"\n      },\n      onClick: () => onHandleClassCard(index)\n    }, __jsx(\"h4\", {\n      className: \"h3\"\n    }, \"Some Class in June\"), __jsx(\"time\", {\n      dateTime: \"P120D\"\n    }, start_date, \" - \", end_date)))), __jsx(\"div\", {\n      className: \"col s3 right-align\"\n    }, __jsx(\"div\", {\n      className: \"row icons-row\"\n    }, __jsx(\"div\", {\n      className: \"col right-align\"\n    }, __jsx(\"span\", {\n      className: \"block-icon\"\n    }, __jsx(\"i\", {\n      className: \"icon-members\"\n    }), __jsx(\"span\", {\n      className: \"text-icon\"\n    }, \"Class\"))), __jsx(\"div\", {\n      className: \"dropdown-block col\"\n    }, __jsx(\"a\", {\n      className: \"dropdown-trigger btn\",\n      href: \"#\",\n      onClick: this.handleDropdownClick,\n      \"data-target\": \"dropdown01\"\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        width: '103.991px',\n        left: '116.974px',\n        top: '7.99716px',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#modal_user_edit\",\n      onClick: this.onOpenClassDetailsModal,\n      className: \"modal-trigger link-block\"\n    }, \"Edit\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\",\n      onClick: () => onCloneClass(index)\n    }, \"Clone\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\"\n    }, \"Impersonate\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#!\",\n      onClick: () => onDeleteClass(index)\n    }, \"Delete\"))) : null))))), __jsx(\"div\", {\n      className: \"card-content\"\n    }, __jsx(\"div\", {\n      className: \"row d-flex mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m5\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s6 m12\"\n    }, __jsx(\"ul\", {\n      className: \"points-list-custom\"\n    }, __jsx(\"li\", {\n      className: \"style-aqua\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, \"+\", improvement, __jsx(\"span\", {\n      className: \"badge-text\"\n    }, \"improvement\"))))), __jsx(\"div\", {\n      className: \"col s6 m12\"\n    }, __jsx(\"div\", {\n      className: \"chart-block chart-block-test\"\n    }, __jsx(\"span\", {\n      className: \"value-max\"\n    }, \"24\"), __jsx(RadialBar, {\n      svgWidth: 104,\n      svgHeight: 104,\n      strokeWidth: 14,\n      maxValue: 24,\n      currentValue: instruction,\n      strokeColor: \"#55b24b\"\n    }), __jsx(\"div\", {\n      className: \"chart-text\"\n    }, __jsx(\"span\", {\n      className: \"title\"\n    }, \"Instruction\"), __jsx(\"span\", {\n      className: \"value\"\n    }, (instruction / 24 * 100).toFixed(1), \"%\"), __jsx(\"span\", {\n      className: \"description\"\n    }, \"vs scheduled instruction\")))))), __jsx(\"div\", {\n      className: \"col s12 m7\"\n    }, __jsx(\"ul\", {\n      className: \"points-list\"\n    }, __jsx(\"li\", {\n      className: \"style-purple-darken\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, coursework_assigned), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"coursework assigned\")), __jsx(\"li\", {\n      className: \"style-purple-lighten\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, coursework_completed, \"%\"), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"coursework completed\")), __jsx(\"li\", {\n      className: \"style-red-darken-3\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, problems_flagged_review), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"problems \\uFB02agged for review\")), __jsx(\"li\", {\n      className: \"style-blue-light\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, average_score), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"average score\")), __jsx(\"li\", {\n      className: \"style-blue\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, achieved_target_score, \"%\"), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"achieved target score\")), __jsx(\"li\", {\n      className: \"style-orange-accent-4\"\n    }, __jsx(\"span\", {\n      className: \"badge-circle\"\n    }, average_practice_tests_completed), __jsx(\"span\", {\n      className: \"point-text\"\n    }, \"average practice tests completed\"))))), __jsx(\"div\", {\n      className: \"card-inner-row\"\n    }, __jsx(\"div\", {\n      className: \"row-holder\"\n    }, __jsx(\"ul\", {\n      className: \"category-list\"\n    }, __jsx(\"li\", {\n      className: \"category-box \"\n    }, __jsx(\"span\", {\n      className: \"category-badge badge-purple\"\n    }, \"TW\"), __jsx(\"span\", {\n      className: \"category-text\"\n    }, \"Tutor Withalongername\")))))))));\n  }\n\n}\n\nClassCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  classroom: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  dropdownIndex: PropTypes.number,\n  onHandleClassCard: PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass: PropTypes.func.isRequired,\n  onSaveClassChanges: PropTypes.func.isRequired\n};\nexport default ClassCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/ListPage/components/ClassCard/index.js"],"names":["React","PropTypes","ClassDetailModal","RadialBar","ClassCard","Component","constructor","props","event","preventDefault","onCloseDropdown","setState","classDetailsModalOpen","onCloneClass","classroom","deleteModalOpen","onDeleteClass","onCloseDeleteModal","onSetDropdown","dropdownIsOpen","index","state","render","dropdownIndex","onHandleClassCard","onSaveClassChanges","summary","amount_students","start_date","end_date","improvement","coursework_assigned","coursework_completed","problems_flagged_review","average_score","achieved_target_score","average_practice_tests_completed","instruction","onCloseClassDetailsModal","onOpenDeleteModal","backgroundColor","color","cursor","handleDropdownClick","display","width","left","top","transformOrigin","opacity","transform","onOpenClassDetailsModal","toFixed","propTypes","number","isRequired","object","func","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassDetailModal from '../ClassDetailModal';\nimport RadialBar from \"../../../../common/RadialBar\";\n\n\nclass ClassCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classDetailsModalOpen: false,\n      deleteModalOpen: false,\n    }\n  }\n\n  onOpenClassDetailsModal = (event) => {\n    event.preventDefault();\n    this.props.onCloseDropdown();\n    this.setState({ classDetailsModalOpen: true });\n  };\n\n  onCloseClassDetailsModal = () => this.setState({ classDetailsModalOpen: false });\n\n  onCloneClass = () => this.props.onCloneClass(this.props.classroom)\n\n  onOpenDeleteModal = () => this.setState({ deleteModalOpen: true });\n  onCloseDeleteModal = () => this.setState({ deleteModalOpen: false });\n\n  onConfirmDeleteClass = () => {\n    const { onDeleteClass, classroom, onCloseDropdown } = this.props;\n    onDeleteClass(classroom);\n    onCloseDropdown();\n    this.onCloseDeleteModal();\n  }\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  render() {\n    const { dropdownIsOpen, dropdownIndex, index,classroom,onHandleClassCard,onCloneClass,onDeleteClass,onSaveClassChanges } = this.props;\n    const { deleteModalOpen, classDetailsModalOpen } = this.state;\n    const {summary:{\n      amount_students,\n      start_date,\n      end_date,\n      improvement,\n      coursework_assigned,\n      coursework_completed,\n      problems_flagged_review,\n      average_score,\n      achieved_target_score,\n      average_practice_tests_completed,\n      instruction},\n    } = classroom;\n    return (\n      <React.Fragment>\n        <ClassDetailModal\n          index = {index}\n          classroom={classroom}\n          open={classDetailsModalOpen}\n          onClose={this.onCloseClassDetailsModal}\n          onOpenDeleteModal={this.onOpenDeleteModal}\n          deleteModalOpen={deleteModalOpen}\n          onSaveClassChanges = {onSaveClassChanges}\n          onDeleteClass={onDeleteClass}\n        />\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-main card-class card card-large\">\n          <div className=\"owner-box card-panel\" style={{ backgroundColor: \"#408e49\", color: \"#fff\",cursor:\"pointer\" }}>\n            <div className=\"card-panel-row row\">\n              <div className=\"col s9\">\n                <div className=\"user-block\">\n                  <div className=\"user-circle\" style={{ backgroundColor: \"#fff\", color: \"#408e49\" }}>\n                    <span className=\"initials\">{amount_students}</span>\n                    <span className=\"ititials-text\">students</span>\n                  </div>\n                  <div className=\"user-text\" style={{ color: \"#fff\" }} onClick={()=>onHandleClassCard(index)}>\n                    <h4 className=\"h3\">Some Class in June</h4>\n                    <time dateTime=\"P120D\">{start_date} - {end_date}</time>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s3 right-align\">\n                <div className=\"row icons-row\">\n                  <div className=\"col right-align\">\n                    <span className=\"block-icon\">\n                      <i className=\"icon-members\" />\n                      <span className=\"text-icon\">Class</span>\n                    </span>\n                  </div>\n                  <div className=\"dropdown-block col\">\n                    <a\n                      className=\"dropdown-trigger btn\"\n                      href=\"#\"\n                      onClick={this.handleDropdownClick}\n                      data-target=\"dropdown01\"\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen && dropdownIndex === index}>\n                      <ul\n                        id=\"dropdown01\"\n                        className=\"dropdown-content dropdown-wide\"\n                        style={{ display: 'block', width: '103.991px', left: '116.974px', top: '7.99716px', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                      >\n                        <li>\n                          <a\n                            href=\"#modal_user_edit\"\n                            onClick={this.onOpenClassDetailsModal}\n                            className=\"modal-trigger link-block\"\n                          >\n                            Edit\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#!\" onClick={() => onCloneClass(index)}>Clone</a>\n                        </li>\n                        <li>\n                          <a href=\"#!\">Impersonate</a>\n                        </li>\n                        <li>\n                          <a href=\"#!\" onClick={() => onDeleteClass(index)}>Delete</a>\n                        </li>\n                      </ul>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"row d-flex mb-0\">\n              <div className=\"col s12 m5\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s6 m12\">\n                    <ul className=\"points-list-custom\">\n                      <li className=\"style-aqua\">\n                        <span className=\"badge-circle\">\n                          +{improvement}\n                          <span className=\"badge-text\">improvement</span>\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"col s6 m12\">\n                    <div className=\"chart-block chart-block-test\">\n                      <span className=\"value-max\">24</span>\n                      <RadialBar\n                          svgWidth={104}\n                          svgHeight={104}\n                          strokeWidth={14}\n                          maxValue={24}\n                          currentValue={instruction}\n                          strokeColor = \"#55b24b\"\n                        />\n                      <div className=\"chart-text\">\n                        <span className=\"title\">Instruction</span>\n                        <span className=\"value\">{((instruction/24)*100).toFixed(1)}%</span>\n                        <span className=\"description\">\n                          vs scheduled instruction\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 m7\">\n                <ul className=\"points-list\">\n                  <li className=\"style-purple-darken\">\n                    <span className=\"badge-circle\">{coursework_assigned}</span>\n                    <span className=\"point-text\">coursework assigned</span>\n                  </li>\n                  <li className=\"style-purple-lighten\">\n                    <span className=\"badge-circle\">{coursework_completed}%</span>\n                    <span className=\"point-text\">coursework completed</span>\n                  </li>\n                  <li className=\"style-red-darken-3\">\n                    <span className=\"badge-circle\">{problems_flagged_review}</span>\n                    <span className=\"point-text\">\n                      problems ﬂagged for review\n                    </span>\n                  </li>\n                  <li className=\"style-blue-light\">\n                    <span className=\"badge-circle\">{average_score}</span>\n                    <span className=\"point-text\">average score</span>\n                  </li>\n                  <li className=\"style-blue\">\n                    <span className=\"badge-circle\">{achieved_target_score}%</span>\n                    <span className=\"point-text\">achieved target score</span>\n                  </li>\n                  <li className=\"style-orange-accent-4\">\n                    <span className=\"badge-circle\">{average_practice_tests_completed}</span>\n                    <span className=\"point-text\">\n                      average practice tests completed\n                    </span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"card-inner-row\">\n              <div className=\"row-holder\">\n                <ul className=\"category-list\">\n                  <li className=\"category-box \">\n                    <span className=\"category-badge badge-purple\">TW</span>\n                    <span className=\"category-text\">Tutor Withalongername</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nClassCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  classroom: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  dropdownIndex: PropTypes.number,\n  onHandleClassCard:PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass:PropTypes.func.isRequired,\n  onSaveClassChanges:PropTypes.func.isRequired,\n};\n\nexport default ClassCard;\n"]},"metadata":{},"sourceType":"module"}