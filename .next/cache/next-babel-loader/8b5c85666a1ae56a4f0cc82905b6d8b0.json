{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"onHandleFilterClick\", filter => {\n      const {\n        activeFilters: currentActiveFilters\n      } = this.state;\n      let activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        const filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      this.setState({\n        activeFilters\n      });\n    });\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      activeFilters: []\n    }));\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        name\n      } = this.state;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onSetFilteredLocationState,\n        onUnsetFilteredLocationState,\n        onSetSort\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    this.state = {\n      open: false,\n      name: '',\n      location: {},\n      sort: {},\n      activeFilters: []\n    };\n  } // eslint-disable-next-line consistent-return\n\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const {\n      name,\n      location,\n      sort,\n      open,\n      activeFilters\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"activated\",\n      checked: activeFilters.indexOf(\"activated\") !== -1,\n      onChange: () => this.onHandleFilterClick('activated')\n    }), __jsx(\"label\", {\n      htmlFor: \"activated\"\n    }, \"Activated\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"unactivated\",\n      checked: activeFilters.indexOf(\"unactivated\") !== -1,\n      onChange: () => this.onHandleFilterClick('unactivated')\n    }), __jsx(\"label\", {\n      htmlFor: \"unactivated\"\n    }, \"Unactivated\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"expired\",\n      checked: activeFilters.indexOf(\"expired\") !== -1,\n      onChange: () => this.onHandleFilterClick('expired')\n    }), __jsx(\"label\", {\n      htmlFor: \"expired\"\n    }, \"Expired\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"current\",\n      checked: activeFilters.indexOf(\"current\") !== -1,\n      onChange: () => this.onHandleFilterClick('current')\n    }), __jsx(\"label\", {\n      htmlFor: \"current\"\n    }, \"Current\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"archived\",\n      checked: activeFilters.indexOf(\"archived\") !== -1,\n      onChange: () => this.onHandleFilterClick('archived')\n    }), __jsx(\"label\", {\n      htmlFor: \"archived\"\n    }, \"Archived\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"no-gain\",\n      checked: activeFilters.indexOf(\"no-gain\") !== -1,\n      onChange: () => this.onHandleFilterClick('no-gain')\n    }), __jsx(\"label\", {\n      htmlFor: \"no-gain\"\n    }, \"No Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"some-gain\",\n      checked: activeFilters.indexOf(\"some-gain\") !== -1,\n      onChange: () => this.onHandleFilterClick('some-gain')\n    }), __jsx(\"label\", {\n      htmlFor: \"some-gain\"\n    }, \"Some Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain-100+\",\n      checked: activeFilters.indexOf(\"gain-100+\") !== -1,\n      onChange: () => this.onHandleFilterClick('gain-100+')\n    }), __jsx(\"label\", {\n      htmlFor: \"gain-100+\"\n    }, \"Gain of 100+\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain-200+\",\n      checked: activeFilters.indexOf(\"gain-200+\") !== -1,\n      onChange: () => this.onHandleFilterClick('gain-200+')\n    }), __jsx(\"label\", {\n      htmlFor: \"gain-200+\"\n    }, \"Gain of 200+\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"hit-target-score\",\n      checked: activeFilters.indexOf(\"hit-target-score\") !== -1,\n      onChange: () => this.onHandleFilterClick('hit-target-score')\n    }), __jsx(\"label\", {\n      htmlFor: \"hit-target-score\"\n    }, \"Hit Target Score\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"hasnt-hit-target-score\",\n      checked: activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1,\n      onChange: () => this.onHandleFilterClick('hasnt-hit-target-score')\n    }), __jsx(\"label\", {\n      htmlFor: \"hasnt-hit-target-score\"\n    }, \"Hasn\\u2019t Hit Target Score\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"no-tests\",\n      checked: activeFilters.indexOf(\"no-tests\") !== -1,\n      onChange: () => this.onHandleFilterClick('tests')\n    }), __jsx(\"label\", {\n      htmlFor: \"no-tests\"\n    }, \"No Tests\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"1-test\",\n      checked: activeFilters.indexOf(\"1-test\") !== -1,\n      onChange: () => this.onHandleFilterClick('1-test')\n    }), __jsx(\"label\", {\n      htmlFor: \"1-test\"\n    }, \"1 Test\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"2-test\",\n      checked: activeFilters.indexOf(\"2-test\") !== -1,\n      onChange: () => this.onHandleFilterClick('2-test')\n    }), __jsx(\"label\", {\n      htmlFor: \"2-test\"\n    }, \"2 Tests\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"3-test\",\n      checked: activeFilters.indexOf(\"3-test\") !== -1,\n      onChange: () => this.onHandleFilterClick('3-test')\n    }), __jsx(\"label\", {\n      htmlFor: \"3-test\"\n    }, \"3+ Tests\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"has-overdue-work\",\n      checked: activeFilters.indexOf(\"has-overdue-work\") !== -1,\n      onChange: () => this.onHandleFilterClick('has-overdue-work')\n    }), __jsx(\"label\", {\n      htmlFor: \"has-overdue-work\"\n    }, \"Has Overdue Work\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"unreviewed-flags\",\n      checked: activeFilters.indexOf(\"unreviewed-flags\") !== -1,\n      onChange: () => this.onHandleFilterClick('unreviewed-flags')\n    }), __jsx(\"label\", {\n      htmlFor: \"unreviewed-flags\"\n    }, \"Unreviewed Flags\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sessions-this-week\",\n      checked: activeFilters.indexOf(\"sessions-this-week\") !== -1,\n      onChange: () => this.onHandleFilterClick('sessions-this-week')\n    }), __jsx(\"label\", {\n      htmlFor: \"sessions-this-week\"\n    }, \"Sessions This Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"session-today\",\n      checked: activeFilters.indexOf(\"session-today\") !== -1,\n      onChange: () => this.onHandleFilterClick('session-today')\n    }), __jsx(\"label\", {\n      htmlFor: \"session-today\"\n    }, \"Session Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"no-sessions\",\n      checked: activeFilters.indexOf(\"no-sessions\") !== -1,\n      onChange: () => this.onHandleFilterClick('no-sessions')\n    }), __jsx(\"label\", {\n      htmlFor: \"no-sessions\"\n    }, \"No Sessions Scheduled\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"entered-actual-score\",\n      checked: activeFilters.indexOf(\"entered-actual-score\") !== -1,\n      onChange: () => this.onHandleFilterClick('entered-actual-score')\n    }), __jsx(\"label\", {\n      htmlFor: \"entered-actual-score\"\n    }, \"Entered Actual Score\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"no-actual-score\",\n      checked: activeFilters.indexOf(\"no-actual-score\") !== -1,\n      onChange: () => this.onHandleFilterClick('no-actual-score')\n    }), __jsx(\"label\", {\n      htmlFor: \"no-actual-score\"\n    }, \"No Actual Score\"))))), __jsx(\"div\", {\n      className: \"filter-inputs-holder\"\n    }, __jsx(\"div\", {\n      className: \"col s12 18\",\n      style: {\n        marginTop: '-30px',\n        marginBottom: '-10px'\n      }\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\",\n      style: {\n        marginTop: '50px'\n      }\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control validate\",\n      name: \"name\",\n      value: name,\n      onChange: event => this.handleFilterChange(event, 'name')\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.onFilterByName\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: name.length ? 'label active' : 'label',\n      htmlFor: \"name_search\"\n    }, \"Search\"))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(location, locationOptions),\n      onChange: event => this.handleFilterChange(event, 'location'),\n      options: locationOptions,\n      label: \"Location\",\n      stateKey: \"location\",\n      dropdownKey: \"location\"\n    }))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, sortOptions),\n      onChange: event => this.handleFilterChange(event, 'sort'),\n      options: sortOptions,\n      label: \"Sort\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    })))), __jsx(\"div\", {\n      className: \"col s12 14\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\"\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters'))))))))));\n  }\n\n}\n\nFilterSection.propTypes = {\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetFilteredLocationState: PropTypes.func.isRequired,\n  onUnsetFilteredLocationState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/ListPage/Components/FilterSection/index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","locationOptions","sortOptions","FilterSection","Component","constructor","props","setState","open","filter","activeFilters","currentActiveFilters","state","indexOf","$push","filterIndex","$splice","onSetFilteredState","onUnsetFilteredState","name","transformedName","replace","toLowerCase","event","onSetFilteredLocationState","onUnsetFilteredLocationState","onSetSort","value","target","updatedState","$merge","location","sort","render","display","onHandleFilterClick","marginTop","marginBottom","handleFilterChange","onFilterByName","length","onClearFilters","onToggleShowFilters","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      name: '',\n      location: {},\n      sort: {},\n      activeFilters: [],\n    };\n  }\n\n  // eslint-disable-next-line consistent-return\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onHandleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { name } = this.state;\n    if (name === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredLocationState, onUnsetFilteredLocationState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'location') {\n      if (event === '') {\n        return onUnsetFilteredLocationState();\n      }\n      return onSetFilteredLocationState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const { name, location, sort, open, activeFilters } = this.state;\n    return(\n      <div className=\"filter-form-holder\">\n      <ul className=\"collapsible expandable\">\n        <li>\n          <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n            <div className=\"filter-form_checkbox-list-holder\">\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"activated\"\n                    checked={activeFilters.indexOf(\"activated\") !== -1}\n                    onChange={() => this.onHandleFilterClick('activated')}\n                  />\n                  <label htmlFor=\"activated\">Activated</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"unactivated\"\n                    checked={activeFilters.indexOf(\"unactivated\") !== -1}\n                    onChange={() => this.onHandleFilterClick('unactivated')}\n                  />\n                  <label htmlFor=\"unactivated\">Unactivated</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"expired\"\n                    checked={activeFilters.indexOf(\"expired\") !== -1}\n                    onChange={() => this.onHandleFilterClick('expired')}\n                  />\n                  <label htmlFor=\"expired\">Expired</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"current\"\n                    checked={activeFilters.indexOf(\"current\") !== -1}\n                    onChange={() => this.onHandleFilterClick('current')}\n                  />\n                  <label htmlFor=\"current\">Current</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"archived\"\n                    checked={activeFilters.indexOf(\"archived\") !== -1}\n                    onChange={() => this.onHandleFilterClick('archived')}\n                  />\n                  <label htmlFor=\"archived\">Archived</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"no-gain\"\n                    checked={activeFilters.indexOf(\"no-gain\") !== -1}\n                    onChange={() => this.onHandleFilterClick('no-gain')}\n                  />\n                  <label htmlFor=\"no-gain\">No Gain</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"some-gain\"\n                    checked={activeFilters.indexOf(\"some-gain\") !== -1}\n                    onChange={() => this.onHandleFilterClick('some-gain')}\n                  />\n                  <label htmlFor=\"some-gain\">Some Gain</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"gain-100+\"\n                    checked={activeFilters.indexOf(\"gain-100+\") !== -1}\n                    onChange={() => this.onHandleFilterClick('gain-100+')}\n                  />\n                  <label htmlFor=\"gain-100+\">Gain of 100+</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"gain-200+\"\n                    checked={activeFilters.indexOf(\"gain-200+\") !== -1}\n                    onChange={() => this.onHandleFilterClick('gain-200+')}\n                  />\n                  <label htmlFor=\"gain-200+\">Gain of 200+</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"hit-target-score\"\n                    checked={activeFilters.indexOf(\"hit-target-score\") !== -1}\n                    onChange={() => this.onHandleFilterClick('hit-target-score')}\n                  />\n                  <label htmlFor=\"hit-target-score\">Hit Target Score</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"hasnt-hit-target-score\"\n                    checked={activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1}\n                    onChange={() => this.onHandleFilterClick('hasnt-hit-target-score')}\n                  />\n                  <label htmlFor=\"hasnt-hit-target-score\">Hasn’t Hit Target Score</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"no-tests\"\n                    checked={activeFilters.indexOf(\"no-tests\") !== -1}\n                    onChange={() => this.onHandleFilterClick('tests')}\n                  />\n                  <label htmlFor=\"no-tests\">No Tests</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"1-test\"\n                    checked={activeFilters.indexOf(\"1-test\") !== -1}\n                    onChange={() => this.onHandleFilterClick('1-test')}\n                  />\n                  <label htmlFor=\"1-test\">1 Test</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"2-test\"\n                    checked={activeFilters.indexOf(\"2-test\") !== -1}\n                    onChange={() => this.onHandleFilterClick('2-test')}\n                  />\n                  <label htmlFor=\"2-test\">2 Tests</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"3-test\"\n                    checked={activeFilters.indexOf(\"3-test\") !== -1}\n                    onChange={() => this.onHandleFilterClick('3-test')}\n                  />\n                  <label htmlFor=\"3-test\">3+ Tests</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"has-overdue-work\"\n                    checked={activeFilters.indexOf(\"has-overdue-work\") !== -1}\n                    onChange={() => this.onHandleFilterClick('has-overdue-work')}\n                  />\n                  <label htmlFor=\"has-overdue-work\">Has Overdue Work</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"unreviewed-flags\"\n                    checked={activeFilters.indexOf(\"unreviewed-flags\") !== -1}\n                    onChange={() => this.onHandleFilterClick('unreviewed-flags')}\n                  />\n                  <label htmlFor=\"unreviewed-flags\">Unreviewed Flags</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"sessions-this-week\"\n                    checked={activeFilters.indexOf(\"sessions-this-week\") !== -1}\n                    onChange={() => this.onHandleFilterClick('sessions-this-week')}\n                  />\n                  <label htmlFor=\"sessions-this-week\">Sessions This Week</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"session-today\"\n                    checked={activeFilters.indexOf(\"session-today\") !== -1}\n                    onChange={() => this.onHandleFilterClick('session-today')}\n                  />\n                  <label htmlFor=\"session-today\">Session Today</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"no-sessions\"\n                    checked={activeFilters.indexOf(\"no-sessions\") !== -1}\n                    onChange={() => this.onHandleFilterClick('no-sessions')}\n                  />\n                  <label htmlFor=\"no-sessions\">No Sessions Scheduled</label>\n                </li>\n              </ul>\n              <ul className=\"filter-form_checkbox-list\">\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"entered-actual-score\"\n                    checked={activeFilters.indexOf(\"entered-actual-score\") !== -1}\n                    onChange={() => this.onHandleFilterClick('entered-actual-score')}\n                  />\n                  <label htmlFor=\"entered-actual-score\">Entered Actual Score</label>\n                </li>\n                <li>\n                  <input\n                    type=\"checkbox\"\n                    id=\"no-actual-score\"\n                    checked={activeFilters.indexOf(\"no-actual-score\") !== -1}\n                    onChange={() => this.onHandleFilterClick('no-actual-score')}\n                  />\n                  <label htmlFor=\"no-actual-score\">No Actual Score</label>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n        <div className=\"filter-inputs-holder\">\n          <div className=\"col s12 18\" style={{marginTop: '-30px', marginBottom: '-10px'}}>\n\n        <div className=\"row mb-0\">\n          <div className=\"col s12 m3\">\n            <div className=\"search-field input-field\" style={{marginTop: '50px'}}>\n              <input\n                type=\"search\"\n                id=\"name_search\"\n                className=\"input-control validate\"\n                name=\"name\"\n                value={name}\n                onChange={(event) => this.handleFilterChange(event, 'name')}\n                />\n              <button\n                type=\"submit\"\n                className=\"search-button\"\n                onClick={this.onFilterByName}\n              >\n                <i className=\"icon-search\"></i>\n              </button>\n              <label className={name.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n            </div>\n          </div>\n          <div className=\"col s12 m3\">\n            <div className=\"input-field\">\n              <Dropdown\n                value={getValueFromState(location, locationOptions)}\n                onChange={(event) => this.handleFilterChange(event, 'location')}\n                options={locationOptions}\n                label=\"Location\"\n                stateKey=\"location\"\n                dropdownKey=\"location\"\n              />\n            </div>\n          </div>\n          <div className=\"col s12 m3\">\n            <div className=\"input-field\">\n              <Dropdown\n                value={getValueFromState(sort, sortOptions)}\n                onChange={(event) => this.handleFilterChange(event, 'sort')}\n                options={sortOptions}\n                label=\"Sort\"\n                stateKey=\"sort\"\n                dropdownKey=\"sort\"\n                />\n            </div>\n          </div>\n                </div>\n          <div className=\"col s12 14\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                   {/*  eslint-disable-next-line jsx-a11y/no-static-element-interactions  */}\n                    <span className=\"collapsible-header\" onClick={this.onToggleShowFilters}>\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n        </div>\n        </li>\n        </ul>\n        </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\nonSetSort: PropTypes.func.isRequired,\nonSetFilteredState: PropTypes.func.isRequired,\nonUnsetFilteredState: PropTypes.func.isRequired,\nonSetFilteredLocationState: PropTypes.func.isRequired,\nonUnsetFilteredLocationState: PropTypes.func.isRequired,\n};\n\nexport default FilterSection;"]},"metadata":{},"sourceType":"module"}