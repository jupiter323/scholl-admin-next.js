{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../Location/components/LocationCard';\n\nclass Locations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"mapLocations\", () => {\n      const {\n        locations,\n        onRemoveLocation\n      } = this.props;\n      return locations.map((location, index) => __jsx(LocationCard, {\n        key: index,\n        index: index,\n        location: location,\n        onRemoveLocation: () => onRemoveLocation(index)\n      }));\n    });\n  }\n\n  render() {\n    const {\n      onOpenLocationModal\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"card-block\"\n    }, __jsx(\"h3\", null, \"Class Location\"), __jsx(\"div\", {\n      className: \"card-main card card-instructor\"\n    }, __jsx(\"div\", {\n      className: \"card-content\"\n    }, __jsx(\"div\", {\n      className: \"text-block\"\n    }, __jsx(\"p\", null, \"Select the location/branch where this class will be located.\")), __jsx(\"div\", {\n      className: \"box-scrollable\"\n    }, __jsx(\"div\", {\n      className: \"height-360 jcf-scrollable\"\n    }, __jsx(\"div\", {\n      className: \"card-location-holder\",\n      style: {\n        height: \"320px\",\n        overflowY: \"scroll\"\n      }\n    }, this.mapLocations()))), __jsx(\"div\", {\n      className: \"card-footer right-align\"\n    }, __jsx(\"a\", {\n      href: \"#modal_Location1\",\n      className: \"modal-trigger link-block\",\n      onClick: onOpenLocationModal\n    }, \"Add Location\")))));\n  }\n\n}\n\nLocations.propTypes = {\n  locations: PropTypes.array.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired\n};\nexport default Locations;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/SharedModalComponents/Locations/index.js"],"names":["React","PropTypes","LocationCard","Locations","Component","constructor","props","locations","onRemoveLocation","map","location","index","render","onOpenLocationModal","height","overflowY","mapLocations","propTypes","array","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAGA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,0CAIJ,MAAK;AAClB,YAAM;AAAEC,QAAAA,SAAF;AAAYC,QAAAA;AAAZ,UAAiC,KAAKF,KAA5C;AACA,aAAOC,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAUC,KAAV,KACnB,MAAC,YAAD;AACE,QAAA,GAAG,EAAIA,KADT;AAEE,QAAA,KAAK,EAAIA,KAFX;AAGE,QAAA,QAAQ,EAAID,QAHd;AAIE,QAAA,gBAAgB,EAAE,MAAMF,gBAAgB,CAACG,KAAD;AAJ1C,QADK,CAAP;AAQD,KAdkB;AAElB;;AAcDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAA0B,KAAKP,KAArC;AACA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,mCADF,EAGE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,gFADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,KAAK,EAAI;AAACQ,QAAAA,MAAM,EAAC,OAAR;AAAgBC,QAAAA,SAAS,EAAC;AAA1B;AAA/C,OACG,KAAKC,YAAL,EADH,CADF,CADF,CANF,EAaE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAG,MAAA,IAAI,EAAC,kBAAR;AAA2B,MAAA,SAAS,EAAC,0BAArC;AAAgE,MAAA,OAAO,EAAKH;AAA5E,sBADF,CAbF,CADF,CAHF,CADF;AA2BD;;AA9CqC;;AAiDxCV,SAAS,CAACc,SAAV,GAAsB;AACpBV,EAAAA,SAAS,EAACN,SAAS,CAACiB,KAAV,CAAgBC,UADN;AAEpBN,EAAAA,mBAAmB,EAACZ,SAAS,CAACmB,IAAV,CAAeD,UAFf;AAGpBX,EAAAA,gBAAgB,EAAEP,SAAS,CAACmB,IAAV,CAAeD;AAHb,CAAtB;AAMA,eAAehB,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../Location/components/LocationCard';\n\n\nclass Locations extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mapLocations = () =>{\n    const { locations,onRemoveLocation } = this.props;\n    return locations.map((location,index) => (\n      <LocationCard\n        key = {index}\n        index = {index}\n        location = {location}\n        onRemoveLocation={() => onRemoveLocation(index)}\n      />\n    ))\n  }\n\n  render() {\n    const { onOpenLocationModal } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h3>Class Location</h3>\n        {/* card */}\n        <div className=\"card-main card card-instructor\">\n          <div className=\"card-content\">\n            <div className=\"text-block\">\n              <p>\n                Select the location/branch where this class will be located.\n              </p>\n            </div>\n            <div className=\"box-scrollable\">\n              <div className=\"height-360 jcf-scrollable\">\n                <div className=\"card-location-holder\" style = {{height:\"320px\",overflowY:\"scroll\"}}>\n                  {this.mapLocations()}\n                </div>\n              </div>\n            </div>\n            <div className=\"card-footer right-align\">\n              <a href=\"#modal_Location1\" className=\"modal-trigger link-block\" onClick = { onOpenLocationModal}>\n                Add Location\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocations.propTypes = {\n  locations:PropTypes.array.isRequired,\n  onOpenLocationModal:PropTypes.func.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n}\n\nexport default Locations;\n"]},"metadata":{},"sourceType":"module"}