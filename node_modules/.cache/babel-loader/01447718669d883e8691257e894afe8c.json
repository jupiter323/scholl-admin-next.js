{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Sticky } from 'react-sticky';\nimport AccountPage from '../AccountPage';\nimport DetailSummaryPage from '../DetailSummaryPage';\nimport DetailWorksheetPage from '../DetailWorksheetPage';\nimport DetailLessonList from '../DetailLessonList';\nimport DetailTestList from '../DetailTestList';\nimport LessonDetailAnswerSheet from '../LessonDetailAnswerSheet';\nimport StudentNavBar from '../components/StudentNavBar';\nimport ScoredTestListPage from '../ScoredTestListPage';\n\nvar IndividualStudentPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IndividualStudentPage, _React$Component);\n\n  function IndividualStudentPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndividualStudentPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndividualStudentPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleActivationDropdown\", function () {\n      return _this.setState(function (_ref) {\n        var activationDropdownOpen = _ref.activationDropdownOpen;\n        return {\n          activationDropdownOpen: !activationDropdownOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetActivePage\", function (activePage) {\n      return _this.setState({\n        activePage: activePage\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleDetailsChange\", function (name, event) {\n      return _this.setState(_defineProperty({}, name, event.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentPage\", function () {\n      var activePage = _this.state.activePage;\n      var student = _this.props.student;\n\n      if (activePage === 'summary') {\n        return React.createElement(DetailSummaryPage, {\n          user: student\n        });\n      }\n\n      if (activePage === 'account') {\n        return React.createElement(AccountPage, {\n          user: student\n        });\n      }\n\n      if (activePage === 'lessons') {\n        return React.createElement(DetailLessonList, {\n          user: student\n        });\n      }\n\n      if (activePage === 'worksheets') {\n        return React.createElement(DetailWorksheetPage, {\n          user: student\n        });\n      }\n\n      if (activePage === 'answer-sheet') {\n        return React.createElement(LessonDetailAnswerSheet, null);\n      }\n\n      if (activePage === 'test') {\n        return React.createElement(DetailTestList, {\n          user: student\n        });\n      }\n\n      if (activePage === 'scored-tests') {\n        return React.createElement(ScoredTestListPage, null);\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      activePage: 'summary',\n      activationDropdownOpen: false,\n      licenseCode: ''\n    };\n    return _this;\n  }\n\n  _createClass(IndividualStudentPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onRedirectToStudentPage = _this$props.onRedirectToStudentPage,\n          _this$props$student = _this$props.student,\n          active = _this$props$student.active,\n          _this$props$student$s = _this$props$student.studentInformation,\n          firstName = _this$props$student$s.firstName,\n          lastName = _this$props$student$s.lastName;\n      var _this$state = this.state,\n          activePage = _this$state.activePage,\n          activationDropdownOpen = _this$state.activationDropdownOpen,\n          licenseCode = _this$state.licenseCode;\n      return React.createElement(React.Fragment, null, React.createElement(Sticky, null, function (_ref2) {\n        var style = _ref2.style;\n        return React.createElement(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread({}, style, {\n            zIndex: 1999\n          })\n        }, React.createElement(\"div\", {\n          className: \"mobile-header\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\"\n        }, React.createElement(\"i\", {\n          className: \"material-icons\"\n        }, \"menu\"))), React.createElement(\"nav\", {\n          className: \"breadcrumb-holder\"\n        }, React.createElement(\"div\", {\n          className: \"nav-wrapper \"\n        }, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"breadcrumb\",\n          onClick: onRedirectToStudentPage\n        }, \"<  Students\"))), React.createElement(\"h2\", {\n          className: \"h1 white-text\"\n        }, React.createElement(\"span\", {\n          className: \"heading-holder\"\n        }, React.createElement(\"i\", {\n          className: \"icon-student\"\n        }), React.createElement(\"span\", {\n          className: \"heading-block\"\n        }, firstName, \" \", lastName))), React.createElement(StudentNavBar, {\n          activePage: activePage,\n          onSetActivePage: _this2.onSetActivePage\n        }), React.createElement(\"div\", {\n          className: \"activate-block\"\n        }, active ? React.createElement(\"a\", {\n          href: \"#\",\n          className: \"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n        }, React.createElement(\"b\", {\n          className: \"btn-text visible-lg\"\n        }, \"Account Activated\"), \" \", React.createElement(\"i\", {\n          className: \"icon-unlock\"\n        })) : React.createElement(\"a\", {\n          href: \"#\",\n          onClick: _this2.onToggleActivationDropdown,\n          className: \"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\",\n          \"data-target\": \"dropdown_activate\"\n        }, React.createElement(\"b\", {\n          className: \"btn-text visible-lg\"\n        }, \"Activate Account\"), \" \", React.createElement(\"i\", {\n          className: \"icon-key\"\n        })), React.createElement(\"div\", {\n          id: \"dropdown_activate\",\n          className: \"dropdown-content\",\n          style: activationDropdownOpen ? {\n            display: 'block',\n            opacity: '1'\n          } : {}\n        }, React.createElement(\"div\", {\n          className: \"card-panel\"\n        }, React.createElement(\"div\", {\n          className: \"title-block\"\n        }, React.createElement(\"div\", {\n          className: \"h3\"\n        }, \"Ready to begin your course?\"), React.createElement(\"div\", {\n          className: \"subtitle\"\n        }, \"Please enter a valid license code below.\")), React.createElement(\"div\", {\n          className: \"input-field\"\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          value: licenseCode,\n          id: \"license-code\",\n          onChange: function onChange(event) {\n            return _this2.onHandleDetailsChange('licenseCode', event);\n          }\n        }), React.createElement(\"label\", {\n          className: \"label\",\n          htmlFor: \"license_code\"\n        }, \"License Code\")), React.createElement(\"div\", {\n          className: \"btn-holder center-align\"\n        }, React.createElement(\"button\", {\n          className: \"btn btn-blue\",\n          type: \"submit\"\n        }, \"Activate\")), React.createElement(\"div\", {\n          className: \"text-block center-align\"\n        }, React.createElement(\"p\", null, \"If you need license codes, you can get them here: \", React.createElement(\"a\", {\n          href: \"#\",\n          className: \"waves-effect waves-light btn-small btn-blue\"\n        }, \"Purchase Licenses\"))), React.createElement(\"div\", {\n          className: \"text-block\"\n        }, React.createElement(\"p\", null, \"*Note: \"), React.createElement(\"p\", null, \"We o\\uFB00er discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.\"))))));\n      }), this.renderCurrentPage());\n    }\n  }]);\n\n  return IndividualStudentPage;\n}(React.Component);\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired\n};\nexport default IndividualStudentPage;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/IndividualStudentPage/index.js"],"names":["React","PropTypes","Sticky","AccountPage","DetailSummaryPage","DetailWorksheetPage","DetailLessonList","DetailTestList","LessonDetailAnswerSheet","StudentNavBar","ScoredTestListPage","IndividualStudentPage","props","setState","activationDropdownOpen","activePage","name","event","target","value","state","student","licenseCode","onRedirectToStudentPage","active","studentInformation","firstName","lastName","style","zIndex","onSetActivePage","onToggleActivationDropdown","display","opacity","onHandleDetailsChange","renderCurrentPage","Component","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Sticky } from 'react-sticky';\nimport AccountPage from '../AccountPage';\nimport DetailSummaryPage from '../DetailSummaryPage';\nimport DetailWorksheetPage from '../DetailWorksheetPage';\nimport DetailLessonList from '../DetailLessonList';\nimport DetailTestList from '../DetailTestList';\nimport LessonDetailAnswerSheet from '../LessonDetailAnswerSheet';\nimport StudentNavBar from '../components/StudentNavBar';\nimport ScoredTestListPage from '../ScoredTestListPage';\n\nclass IndividualStudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage: 'summary',\n      activationDropdownOpen: false,\n      licenseCode: '',\n    };\n  }\n  onToggleActivationDropdown = () => this.setState(({ activationDropdownOpen }) => ({ activationDropdownOpen: !activationDropdownOpen }))\n\n  onSetActivePage = (activePage) => this.setState({ activePage })\n\n  onHandleDetailsChange = (name, event) => this.setState({ [name]: event.target.value })\n\n  renderCurrentPage = () => {\n    const { activePage } = this.state;\n    const { student } = this.props\n    if (activePage === 'summary') {\n      return <DetailSummaryPage user={student} />;\n    }\n    if (activePage === 'account') {\n      return <AccountPage user={student} />;\n    }\n    if (activePage === 'lessons') {\n      return <DetailLessonList user={student} />;\n    }\n    if (activePage === 'worksheets') {\n      return <DetailWorksheetPage user={student} />;\n    }\n    if (activePage === 'answer-sheet') {\n      return <LessonDetailAnswerSheet />;\n    }\n    if (activePage === 'test') {\n      return <DetailTestList user={student} />;\n    }\n    if (activePage === 'scored-tests') {\n      return <ScoredTestListPage />\n    }\n    return null;\n  }\n  render() {\n    const { onRedirectToStudentPage, student: { active, studentInformation: { firstName, lastName } } } = this.props\n    const { activePage, activationDropdownOpen, licenseCode } = this.state;\n    return (\n      <React.Fragment>\n        <Sticky>\n          {({ style }) => (\n            <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n              <div className=\"mobile-header\">\n                <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n              </div>\n              <nav className=\"breadcrumb-holder\">\n                <div className=\"nav-wrapper \">\n                  <a\n                    href=\"#!\"\n                    className=\"breadcrumb\"\n                    onClick={onRedirectToStudentPage}\n                  >\n                    &lt;  Students\n              </a>\n                </div>\n              </nav>\n              <h2 className=\"h1 white-text\">\n                <span className=\"heading-holder\">\n                  <i className=\"icon-student\"></i>\n                  <span className=\"heading-block\">{firstName} {lastName}</span>\n                </span>\n              </h2>\n              <StudentNavBar\n                activePage={activePage}\n                onSetActivePage={this.onSetActivePage}\n              />\n              <div className=\"activate-block\">\n                <Choose>\n                  <When condition={active}>\n                    <a\n                      href=\"#\"\n                      className=\"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n                    >\n                      <b className=\"btn-text visible-lg\">Account Activated</b> <i className=\"icon-unlock\"></i>\n                    </a>\n                  </When>\n                  <Otherwise>\n                    <a\n                      href=\"#\"\n                      onClick={this.onToggleActivationDropdown}\n                      className=\"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\"\n                      data-target=\"dropdown_activate\"\n                    >\n                      <b className=\"btn-text visible-lg\">Activate Account</b> <i className=\"icon-key\"></i>\n                    </a>\n                  </Otherwise>\n                </Choose>\n                <div id=\"dropdown_activate\" className=\"dropdown-content\" style={activationDropdownOpen ? { display: 'block', opacity: '1' } : {}}>\n                  <div className=\"card-panel\">\n                    <div className=\"title-block\">\n                      <div className=\"h3\">Ready to begin your course?</div>\n                      <div className=\"subtitle\">Please enter a valid license code below.</div>\n                    </div>\n                    <div className=\"input-field\">\n                      <input\n                        type=\"text\"\n                        value={licenseCode}\n                        id=\"license-code\"\n                        onChange={(event) => this.onHandleDetailsChange('licenseCode', event)}\n                      />\n                      <label className=\"label\" htmlFor=\"license_code\">License Code</label>\n                    </div>\n                    <div className=\"btn-holder center-align\">\n                      <button className=\"btn btn-blue\" type=\"submit\">Activate</button>\n                    </div>\n                    <div className=\"text-block center-align\">\n                      <p>If you need license codes, you can get them here: <a href=\"#\" className=\"waves-effect waves-light btn-small btn-blue\">Purchase Licenses</a></p>\n                    </div>\n                    <div className=\"text-block\">\n                      <p>*Note: </p>\n                      <p>We oﬀer discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Sticky>\n        {this.renderCurrentPage()}\n      </React.Fragment>\n    );\n  }\n}\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired,\n}\nexport default IndividualStudentPage;"]},"metadata":{},"sourceType":"module"}