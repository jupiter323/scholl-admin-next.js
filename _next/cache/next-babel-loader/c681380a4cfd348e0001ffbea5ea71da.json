{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/IndividualStudentPage/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Sticky } from 'react-sticky';\nimport AccountPage from '../AccountPage';\nimport DetailSummaryPage from '../DetailSummaryPage';\nimport DetailWorksheetPage from '../DetailWorksheetPage';\nimport DetailLessonList from '../DetailLessonList';\nimport DetailTestList from '../DetailTestList';\nimport LessonDetailAnswerSheet from '../LessonDetailAnswerSheet';\nimport StudentNavBar from '../components/StudentNavBar';\nimport SessionCalendar from '../Calendar';\nimport { makeSelectAssignLessonsModalOpen, makeSelectAssignWorkSheetsModalOpen, makeSelectIsVisibleTopBar } from '../index/selectors';\nimport { setIsVisibleTopBar, setFetchStudentTestsStatus } from '../index/actions';\nimport { updateStudentActivationApi } from '../index/api';\n\nvar IndividualStudentPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IndividualStudentPage, _React$Component);\n\n  function IndividualStudentPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndividualStudentPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndividualStudentPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function _callee() {\n      var _this$props, onSetIsVisibleTopBar, isVisibleTopBar;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, onSetIsVisibleTopBar = _this$props.onSetIsVisibleTopBar, isVisibleTopBar = _this$props.isVisibleTopBar;\n\n              if (!isVisibleTopBar) {\n                onSetIsVisibleTopBar(true);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleActivationDropdown\", function () {\n      return _this.setState(function (_ref) {\n        var activationDropdownOpen = _ref.activationDropdownOpen;\n        return {\n          activationDropdownOpen: !activationDropdownOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetActivePage\", function (activePage) {\n      return _this.setState({\n        activePage: activePage\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleDetailsChange\", function (name, event) {\n      return _this.setState(_defineProperty({}, name, event.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentPage\", function () {\n      var activePage = _this.state.activePage; // The  data is not enough for now,so we are using dummy data for selected student detail\n\n      var student = _this.props.student; // const student = sampleSelectedStudent;\n\n      if (activePage === 'summary') {\n        return __jsx(DetailSummaryPage, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'account') {\n        return __jsx(AccountPage, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'lessons') {\n        return __jsx(DetailLessonList, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'worksheets') {\n        return __jsx(DetailWorksheetPage, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'answer-sheet') {\n        return __jsx(LessonDetailAnswerSheet, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'test') {\n        return __jsx(DetailTestList, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'calendar') {\n        return __jsx(SessionCalendar, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleActivateButton\", function _callee2() {\n      var student, payload, result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              student = _this.props.student;\n              payload = {\n                user_id: student.id,\n                code: _this.state.licenseCode,\n                activate: true\n              };\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(updateStudentActivationApi(payload));\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.toString().split('')[0] !== '2')) {\n                _context2.next = 7;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", null);\n\n            case 7:\n              // Set status of student to active true\n              _this.props.updateStudentStatus();\n\n              _this.onToggleActivationDropdown();\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRedirectToStudentPage\", function (event) {\n      var _this$props2 = _this.props,\n          onRedirectToStudentPage = _this$props2.onRedirectToStudentPage,\n          onSetFetchStudentTestsStatus = _this$props2.onSetFetchStudentTestsStatus;\n      onRedirectToStudentPage(event);\n      onSetFetchStudentTestsStatus(false);\n    });\n\n    _this.state = {\n      activePage: 'summary',\n      activationDropdownOpen: false,\n      licenseCode: '',\n      currentTestSection: {},\n      tests: []\n    };\n    return _this;\n  }\n\n  _createClass(IndividualStudentPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$student = this.props.student,\n          active = _this$props$student.active,\n          _this$props$student$s = _this$props$student.studentInformation,\n          firstName = _this$props$student$s.firstName,\n          lastName = _this$props$student$s.lastName;\n      var _this$state = this.state,\n          activePage = _this$state.activePage,\n          activationDropdownOpen = _this$state.activationDropdownOpen,\n          licenseCode = _this$state.licenseCode;\n      var _this$props3 = this.props,\n          assignLessonsModalOpen = _this$props3.assignLessonsModalOpen,\n          assignWorkSheetsModalOpen = _this$props3.assignWorkSheetsModalOpen,\n          isVisibleTopBar = _this$props3.isVisibleTopBar;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, !assignLessonsModalOpen && !assignWorkSheetsModalOpen && isVisibleTopBar ? __jsx(Sticky, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, function (_ref2) {\n        var style = _ref2.style;\n        return __jsx(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread({}, style, {\n            zIndex: 1999\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"mobile-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"menu\"))), __jsx(\"nav\", {\n          className: \"breadcrumb-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"nav-wrapper \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          href: \"#!\",\n          className: \"breadcrumb\",\n          onClick: function onClick(e) {\n            return _this2.onRedirectToStudentPage(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"< Students\"))), __jsx(\"h2\", {\n          className: \"h1 white-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"heading-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"icon-student\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), __jsx(\"span\", {\n          className: \"heading-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, firstName, \" \", lastName))), __jsx(StudentNavBar, {\n          activePage: activePage,\n          onSetActivePage: _this2.onSetActivePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          className: \"activate-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, active ? __jsx(\"a\", {\n          href: \"#\",\n          className: \"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, __jsx(\"b\", {\n          className: \"btn-text visible-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Account Activated\"), ' ', __jsx(\"i\", {\n          className: \"icon-unlock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        })) : __jsx(\"a\", {\n          href: \"#\",\n          onClick: _this2.onToggleActivationDropdown,\n          className: \"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\",\n          \"data-target\": \"dropdown_activate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, __jsx(\"b\", {\n          className: \"btn-text visible-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Activate Account\"), ' ', __jsx(\"i\", {\n          className: \"icon-key\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        })), __jsx(\"div\", {\n          id: \"dropdown_activate\",\n          className: \"dropdown-content\",\n          style: activationDropdownOpen ? {\n            display: 'block',\n            opacity: '1'\n          } : {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"card-panel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"title-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"h3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Ready to begin your course?\"), __jsx(\"div\", {\n          className: \"subtitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Please enter a valid license code below.\")), __jsx(\"div\", {\n          className: \"input-field\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"text\",\n          value: licenseCode,\n          id: \"license-code\",\n          onChange: function onChange(event) {\n            return _this2.onHandleDetailsChange('licenseCode', event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          className: \"label\",\n          htmlFor: \"license_code\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"License Code\")), __jsx(\"div\", {\n          className: \"btn-holder center-align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, __jsx(\"button\", {\n          className: \"btn btn-blue\",\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this2.handleActivateButton();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Activate\")), __jsx(\"div\", {\n          className: \"text-block center-align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"If you need license codes, you can get them here:\", ' ', __jsx(\"a\", {\n          href: \"#\",\n          className: \"waves-effect waves-light btn-small btn-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Purchase Licenses\"))), __jsx(\"div\", {\n          className: \"text-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"*Note: \"), __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, \"We o\\uFB00er discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.\"))))));\n      }) : null, this.renderCurrentPage());\n    }\n  }]);\n\n  return IndividualStudentPage;\n}(React.Component);\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired,\n  isVisibleTopBar: PropTypes.bool,\n  onSetIsVisibleTopBar: PropTypes.func.isRequired\n};\nvar mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen: makeSelectAssignWorkSheetsModalOpen(),\n  isVisibleTopBar: makeSelectIsVisibleTopBar()\n});\n\nfunction maptDispatchToProps(dispatch) {\n  return {\n    onSetIsVisibleTopBar: function onSetIsVisibleTopBar(value) {\n      return dispatch(setIsVisibleTopBar(value));\n    },\n    onSetFetchStudentTestsStatus: function onSetFetchStudentTestsStatus(status) {\n      return dispatch(setFetchStudentTestsStatus(status));\n    }\n  };\n}\n\nvar withConnect = connect(mapStateToProps, maptDispatchToProps);\nexport default compose(withConnect)(IndividualStudentPage);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/IndividualStudentPage/index.js"],"names":["React","PropTypes","createStructuredSelector","connect","compose","Sticky","AccountPage","DetailSummaryPage","DetailWorksheetPage","DetailLessonList","DetailTestList","LessonDetailAnswerSheet","StudentNavBar","SessionCalendar","makeSelectAssignLessonsModalOpen","makeSelectAssignWorkSheetsModalOpen","makeSelectIsVisibleTopBar","setIsVisibleTopBar","setFetchStudentTestsStatus","updateStudentActivationApi","IndividualStudentPage","props","onSetIsVisibleTopBar","isVisibleTopBar","setState","activationDropdownOpen","activePage","name","event","target","value","state","student","payload","user_id","id","code","licenseCode","activate","result","toString","split","updateStudentStatus","onToggleActivationDropdown","onRedirectToStudentPage","onSetFetchStudentTestsStatus","currentTestSection","tests","active","studentInformation","firstName","lastName","assignLessonsModalOpen","assignWorkSheetsModalOpen","style","zIndex","e","onSetActivePage","display","opacity","onHandleDetailsChange","handleActivateButton","renderCurrentPage","Component","propTypes","object","isRequired","func","bool","mapStateToProps","maptDispatchToProps","dispatch","status","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Sticky } from 'react-sticky';\nimport AccountPage from '../AccountPage';\nimport DetailSummaryPage from '../DetailSummaryPage';\nimport DetailWorksheetPage from '../DetailWorksheetPage';\nimport DetailLessonList from '../DetailLessonList';\nimport DetailTestList from '../DetailTestList';\nimport LessonDetailAnswerSheet from '../LessonDetailAnswerSheet';\nimport StudentNavBar from '../components/StudentNavBar';\nimport SessionCalendar from '../Calendar';\n\nimport {\n  makeSelectAssignLessonsModalOpen,\n  makeSelectAssignWorkSheetsModalOpen,\n  makeSelectIsVisibleTopBar,\n} from '../index/selectors';\n\nimport { setIsVisibleTopBar, setFetchStudentTestsStatus } from '../index/actions';\n\nimport { updateStudentActivationApi } from '../index/api';\n\nclass IndividualStudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage: 'summary',\n      activationDropdownOpen: false,\n      licenseCode: '',\n      currentTestSection: {},\n      tests: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    const { onSetIsVisibleTopBar, isVisibleTopBar } = this.props;\n    if (!isVisibleTopBar) {\n      onSetIsVisibleTopBar(true);\n    }\n  };\n\n  onToggleActivationDropdown = () =>\n    this.setState(({ activationDropdownOpen }) => ({\n      activationDropdownOpen: !activationDropdownOpen,\n    }));\n\n  onSetActivePage = activePage => this.setState({ activePage });\n\n  onHandleDetailsChange = (name, event) => this.setState({ [name]: event.target.value });\n\n  renderCurrentPage = () => {\n    const { activePage } = this.state;\n    // The  data is not enough for now,so we are using dummy data for selected student detail\n    const { student } = this.props;\n    // const student = sampleSelectedStudent;\n    if (activePage === 'summary') {\n      return <DetailSummaryPage user={student} />;\n    }\n    if (activePage === 'account') {\n      return <AccountPage user={student} />;\n    }\n    if (activePage === 'lessons') {\n      return <DetailLessonList user={student} />;\n    }\n    if (activePage === 'worksheets') {\n      return <DetailWorksheetPage user={student} />;\n    }\n    if (activePage === 'answer-sheet') {\n      return <LessonDetailAnswerSheet />;\n    }\n    if (activePage === 'test') {\n      return <DetailTestList user={student} />;\n    }\n    if (activePage === 'calendar') {\n      return <SessionCalendar user={student} />;\n    }\n    return null;\n  };\n\n  handleActivateButton = async () => {\n    const { student } = this.props;\n    const payload = {\n      user_id: student.id,\n      code: this.state.licenseCode,\n      activate: true,\n    };\n    const result = await updateStudentActivationApi(payload);\n    // Check status code for 200 response\n    if (result.toString().split('')[0] !== '2') return null;\n    // Set status of student to active true\n    this.props.updateStudentStatus();\n    this.onToggleActivationDropdown();\n  };\n\n  onRedirectToStudentPage = event => {\n    const { onRedirectToStudentPage, onSetFetchStudentTestsStatus } = this.props;\n    onRedirectToStudentPage(event);\n    onSetFetchStudentTestsStatus(false);\n  };\n\n  render() {\n    const { student: { active, studentInformation: { firstName, lastName } } } = this.props;\n    const { activePage, activationDropdownOpen, licenseCode } = this.state;\n    const { assignLessonsModalOpen, assignWorkSheetsModalOpen, isVisibleTopBar } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When\n            condition={!assignLessonsModalOpen && !assignWorkSheetsModalOpen && isVisibleTopBar}\n          >\n            <Sticky>\n              {({ style }) =>\n                (<div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n                  <div className=\"mobile-header\">\n                    <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\n                      <i className=\"material-icons\">menu</i>\n                    </a>\n                  </div>\n                  <nav className=\"breadcrumb-holder\">\n                    <div className=\"nav-wrapper \">\n                      <a\n                        href=\"#!\"\n                        className=\"breadcrumb\"\n                        onClick={e => this.onRedirectToStudentPage(e)}\n                      >\n                        &lt; Students\n                      </a>\n                    </div>\n                  </nav>\n                  <h2 className=\"h1 white-text\">\n                    <span className=\"heading-holder\">\n                      <i className=\"icon-student\" />\n                      <span className=\"heading-block\">\n                        {firstName} {lastName}\n                      </span>\n                    </span>\n                  </h2>\n                  <StudentNavBar activePage={activePage} onSetActivePage={this.onSetActivePage} />\n                  <div className=\"activate-block\">\n                    <Choose>\n                      <When condition={active}>\n                        <a\n                          href=\"#\"\n                          className=\"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n                        >\n                          <b className=\"btn-text visible-lg\">Account Activated</b>{' '}\n                          <i className=\"icon-unlock\" />\n                        </a>\n                      </When>\n                      <Otherwise>\n                        <a\n                          href=\"#\"\n                          onClick={this.onToggleActivationDropdown}\n                          className=\"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\"\n                          data-target=\"dropdown_activate\"\n                        >\n                          <b className=\"btn-text visible-lg\">Activate Account</b>{' '}\n                          <i className=\"icon-key\" />\n                        </a>\n                      </Otherwise>\n                    </Choose>\n                    <div\n                      id=\"dropdown_activate\"\n                      className=\"dropdown-content\"\n                      style={activationDropdownOpen ? { display: 'block', opacity: '1' } : {}}\n                    >\n                      <div className=\"card-panel\">\n                        <div className=\"title-block\">\n                          <div className=\"h3\">Ready to begin your course?</div>\n                          <div className=\"subtitle\">Please enter a valid license code below.</div>\n                        </div>\n                        <div className=\"input-field\">\n                          <input\n                            type=\"text\"\n                            value={licenseCode}\n                            id=\"license-code\"\n                            onChange={event => this.onHandleDetailsChange('licenseCode', event)}\n                          />\n                          <label className=\"label\" htmlFor=\"license_code\">\n                            License Code\n                          </label>\n                        </div>\n                        <div className=\"btn-holder center-align\">\n                          <button\n                            className=\"btn btn-blue\"\n                            type=\"submit\"\n                            onClick={() => this.handleActivateButton()}\n                          >\n                            Activate\n                          </button>\n                        </div>\n                        <div className=\"text-block center-align\">\n                          <p>\n                            If you need license codes, you can get them here:{' '}\n                            <a href=\"#\" className=\"waves-effect waves-light btn-small btn-blue\">\n                              Purchase Licenses\n                            </a>\n                          </p>\n                        </div>\n                        <div className=\"text-block\">\n                          <p>*Note: </p>\n                          <p>\n                            We oﬀer discounted account licenses for students enrolled in courses\n                            with 5 or more students in a class or group format (as opposed to\n                            individual instruction). These licenses provide the features necessary\n                            to conduct a customized course for the class as a whole, rather than for\n                            individual students.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>)}\n            </Sticky>\n          </When>\n        </Choose>\n        {this.renderCurrentPage()}\n      </React.Fragment>\n    );\n  }\n}\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired,\n  isVisibleTopBar: PropTypes.bool,\n  onSetIsVisibleTopBar: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen: makeSelectAssignWorkSheetsModalOpen(),\n  isVisibleTopBar: makeSelectIsVisibleTopBar(),\n});\n\nfunction maptDispatchToProps(dispatch) {\n  return {\n    onSetIsVisibleTopBar: value => dispatch(setIsVisibleTopBar(value)),\n    onSetFetchStudentTestsStatus: status => dispatch(setFetchStudentTestsStatus(status)),\n  };\n}\n\nconst withConnect = connect(mapStateToProps, maptDispatchToProps);\n\nexport default compose(withConnect)(IndividualStudentPage);\n"]},"metadata":{},"sourceType":"module"}