{"version":3,"file":"static/development/pages/classes.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Class/DetailSummaryPage/components/ClassAverages/index.js","webpack:///./components/Class/DetailSummaryPage/components/ClassAverages/utils/index.js","webpack:///./components/Class/DetailSummaryPage/components/ScoreImprovement/index.js","webpack:///./components/Class/DetailSummaryPage/components/StrengthsAndWeaknesses/index.js","webpack:///./components/Class/DetailSummaryPage/components/StrengthsAndWeaknesses/utils/index.js","webpack:///./components/Class/DetailSummaryPage/components/StudentsWhoHave/index.js","webpack:///./components/Class/DetailSummaryPage/index.js","webpack:///./components/Class/DetailWorksheetPage/components/FilterSection/index.js","webpack:///./components/Class/DetailWorksheetPage/components/FullView/index.js","webpack:///./components/Class/DetailWorksheetPage/components/ListView/components/TableHeader/index.js","webpack:///./components/Class/DetailWorksheetPage/components/ListView/index.js","webpack:///./components/Class/DetailWorksheetPage/index.js","webpack:///./components/Class/DetailWorksheetPage/utils/sampleWorksheets.js","webpack:///./components/Class/DetailWorksheetPage/utils/statusColorMap.js","webpack:///./components/Class/TestSectionsPage/components/FilterSection/index.js","webpack:///./components/Class/TestSectionsPage/components/TestSectionCard/index.js","webpack:///./components/Class/TestSectionsPage/index.js","webpack:///./components/Class/components/ClassNavBar/index.js","webpack:///./components/Class/utils/sampleClass.js","webpack:///./components/Class/utils/sampleTestSections.js","webpack:///./components/Class/utils/sortOptions.js","webpack:///./components/Class/utils/testSectionCardUtils.js","webpack:///./components/FormComponents/Dropdown/index.js","webpack:///./components/FormComponents/Dropdown/styles/ControlComponent.js","webpack:///./components/FormComponents/Dropdown/styles/dropdownStyles.js","webpack:///./components/FormComponents/Dropdown/styles/index.js","webpack:///./components/utils/getValueFromState.js","webpack:///./components/utils/sampleTopics.js","webpack:///./components/utils/sortFunctions.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./pages/classes.js","webpack:///./utils/formatTimeEstimate.js","webpack:///./utils/worksheetSortOptions.js","webpack:///external \"core-js/library/fn/array/is-array\"","webpack:///external \"core-js/library/fn/get-iterator\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"immutability-helper\"","webpack:///external \"moment\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-chartjs-2\"","webpack:///external \"react-select\"","webpack:///external \"react-sticky\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatTimeLoggedIn, formatVideoWatched } from './utils';\n\nconst ClassAverages = ({ state: { questionsAnswered, flaggedProblems, timeLoggedIn, videoWatched, notesTaken, onTimePercentage } }) => (\n  <div className=\"card-block\">\n    <h2>Class Averages</h2>\n    <ul className=\"alerts-list list-three-columns\">\n      <li className=\"card card-alert\">\n        <span className=\"icon-box purple darken-3\"><i className=\"icon-pencil2\"></i></span>\n        <div className=\"alert-text purple-text text-darken-3\">\n          <p><b>Questions Answered</b></p>\n          <div className=\"value\"><b className=\"text-large\">{questionsAnswered}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box icon-box pink darken-3\"><i className=\"icon-flag\"></i></span>\n        <div className=\"alert-text pink-text text-darken-3\">\n          <p><b>Flagged Problems</b></p>\n          <div className=\"value\"><b className=\"text-large\">{flaggedProblems}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box icon-box green darken-3\"><i className=\"icon-clock\"></i></span>\n        <div className=\"alert-text green-text text-darken-3\">\n          <p><b>Time Logged In</b></p>\n          <div className=\"value\">\n            {formatTimeLoggedIn(timeLoggedIn)}\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert alert-blue-dark\">\n        <span className=\"icon-box cyan darken-2\"><i className=\"icon-videocam\"></i></span>\n        <div className=\"alert-text cyan-text text-darken-2\">\n          <p><b>Video Watched</b></p>\n          <div className=\"value\">\n            {formatVideoWatched(videoWatched)}\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box orange darken-2\"><i className=\"icon-note\"></i></span>\n        <div className=\"alert-text orange-text text-darken-2\">\n          <p><b>Notes Taken</b></p>\n          <div className=\"value\"><b className=\"text-large\">{notesTaken}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box red\"><i className=\"icon-bell\"></i></span>\n        <div className=\"alert-text red-text\">\n          <p><b>On-Time Percentage</b></p>\n          <div className=\"value\"><b className=\"text-large\">{onTimePercentage}%</b></div>\n        </div>\n      </li>\n    </ul>\n  </div>\n);\n\nClassAverages.propTypes = {\n  state: PropTypes.object.isRequired,\n}\n\nexport default ClassAverages;\n","import React from 'react';\n\nexport const formatTimeLoggedIn = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport const formatVideoWatched = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ScoreImprovement = ({ state: { points, readingAndWriting, math, noGain, from0To50, from50To99, from100To149, from150To199, from200Plus } }) => (\n  <div className=\"card-block\">\n    <h2>Score Improvement</h2>\n    <div className=\"two-columns-sameheight row mb-0\">\n      <div className=\"col s12 xl6\">\n        <div className=\"card-main-full card\">\n          <div className=\"card-content\">\n            <ul className=\"points-list-custom\">\n              <li className=\"point-custom-xlarge style-aqua\">\n                <span className=\"badge-circle\">{points} <span className=\"badge-text\">points</span></span>\n              </li>\n              <li>\n                <ul>\n                  <li className=\"point-custom-114 style-green-light\">\n                    <span className=\"badge-circle\">+{readingAndWriting} <span className=\"badge-text\">Reading &amp; Writing</span></span>\n                  </li>\n                  <li className=\"point-custom-114 style-blue-lightdark\">\n                    <span className=\"badge-circle\">{math} <span className=\"badge-text\">Math</span></span>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"col s12 xl6\">\n        <div className=\"card-main-full card\">\n          <div className=\"card-content\">\n            <ul className=\"vertical-graphs-container\">\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{noGain}%</span>\n                    <span className=\"vertical-graph-box red darken-1\" style={{ height: `${noGain}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">no gain</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from0To50}%</span>\n                    <span className=\"vertical-graph-box pink darken-3\" style={{ height: `${from0To50}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">0 to 50 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from50To99}%</span>\n                    <span className=\"vertical-graph-box purple accent-4\" style={{ height: `${from50To99}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">50 to 99 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from100To149}%</span>\n                    <span className=\"vertical-graph-box purple darken-3\" style={{ height: `${from100To149}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">100-149 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from150To199}%</span>\n                    <span className=\"vertical-graph-box  deep-purple accent-4\" style={{ height: `${from150To199}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">150-199 <br />points</span>\n                </div>\n              </li>\n              <li className=\"vertical-graph-block\">\n                <div className=\"vertical-graph-frame\">\n                  <span className=\"vertical-graph\">\n                    <span className=\"graph-value\">{from200Plus}%</span>\n                    <span className=\"vertical-graph-box  indigo accent-4\" style={{ height: `${from200Plus}%` }}></span>\n                  </span>\n                  <span className=\"graph-legend\">200+ <br />points</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nScoreImprovement.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default ScoreImprovement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getIndicatorStatus } from './utils';\n\nclass StrengthsAndWeaknesses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openSection: 'reading',\n    };\n  }\n\n  onSetOpenSection = (event, openSection) => {\n    event.preventDefault();\n    this.setState({ openSection })\n  }\n\n  render() {\n    const { openSection } = this.state;\n    // eslint-disable-next-line no-unused-vars\n    const { state: { reading, writing, math } } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h2 className=\"h1\">Strengths &amp; Weaknesses</h2>\n        <div className=\"card-main-full card\">\n          <div className=\"tabs-container\">\n            <div className=\"card-panel light-blue accent-2 white-text\">\n              <ul className=\"tabs row\">\n                <li className=\"tab col s4 l4\" style={{ margin: '0' }}>\n                  <a\n                    href=\"#\"\n                    className={openSection === 'reading' ? 'active' : ''}\n                    onClick={(event) => this.onSetOpenSection(event, 'reading')}\n                  >\n                    Reading\n                  </a>\n                </li>\n                <li className=\"tab col s4 l4\" style={{ margin: '0' }}>\n                  <a\n                    href=\"#\"\n                    className={openSection === 'writing' ? 'active' : ''}\n                    onClick={(event) => this.onSetOpenSection(event, 'writing')}\n                  >\n                    Writing\n                  </a>\n                </li>\n                <li className=\"tab col s4 l4\" style={{ margin: '0' }}>\n                  <a\n                    href=\"#\"\n                    className={openSection === 'math' ? 'active' : ''}\n                    onClick={(event) => this.onSetOpenSection(event, 'math')}\n                  >\n                    Math\n                  </a>\n                </li>\n                <li className=\"indicator\" style={getIndicatorStatus(openSection)}></li>\n              </ul>\n            </div>\n            <div className=\"card-content tabs-content\">\n              <div id=\"tabs_tab01\" className={openSection === 'reading' ? '' : 'tab-content'}>\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 l5 xl4 chart-column\">\n                    <div className=\"chart-block chart-block-large\">\n                      <div className=\"js-donut-chart js-donut-large\" data-stroke-width=\"32\" data-source='./inc/score-data-reading.json'></div>\n                      <div className=\"chart-text\">\n                        <span className=\"title\">Reading</span>\n                        <span className=\"value\">{reading.correctAnswers}</span>\n                        <span className=\"description\">out of <b>{reading.totalAnswers}</b></span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s12 l7 xl8\">\n                    <ul className=\"collapsible expandable collapsible-explain\">\n                      <li>\n                        <div className=\"collapsible-header\"><b>Explain This Graph</b></div>\n                        <div className=\"collapsible-body\">\n                          <div className=\"row mb-0\">\n                            <div className=\"col l6\">\n                              <ul className=\"legend-list\">\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box red darken-2\"></span>\n                                    <strong className=\"text h3\">Focus Here!</strong>\n                                  </div>\n                                  <p>Most people with your score would get these correct, but you got them wrong. Work on these and you can pick up some easy points!</p>\n                                </li>\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box red lighten-5\"></span>\n                                    <strong className=\"text h3\">Tough Gains</strong>\n                                  </div>\n                                  <p>You missed these, but so did most others with a similar score. You’ll likely ﬁnd easier gains elsewhere.</p>\n                                </li>\n                              </ul>\n                            </div>\n                            <div className=\"col l6\">\n                              <ul className=\"legend-list\">\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box light-green darken-2\"></span>\n                                    <strong className=\"text h3\">Well Done!</strong>\n                                  </div>\n                                  <p>You’re overachiving in this category compared to other with your score. Keep up the good work!</p>\n                                </li>\n                                <li>\n                                  <div className=\"legend-frame\">\n                                    <span className=\"box  light-green lighten-4\"></span>\n                                    <strong className=\"text h3\">Piece o’ Cake</strong>\n                                  </div>\n                                  <p>You answered these correctly like others with a similar score.</p>\n                                </li>\n                              </ul>\n                            </div>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div className=\"graphs-section\">\n                  <div className=\"graphs-block\">\n                    <div className=\"graph-row graph-row-title\">\n                      <div className=\"graph-col text-column\">\n                        <h3 className=\"graph-title\">Passage Type</h3>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '100%' }}>\n                              <div className=\"part-red\" style={{ width: '80%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '80%'}}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">Science</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '85%' }}>\n                              <div className=\"part-red\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '100%' }}>\n                              <div className=\"part-green\" style={{ width: '70%' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">Informational Graphic Passage</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '75%' }}>\n                              <div className=\"part-red\" style={{ width: '70%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '70%' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">History/Social Science</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '85%' }}>\n                              <div className=\"part-red\" style={{ width: '5%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '15%' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">US &amp; World Literature</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '45%' }}>\n                              <div className=\"part-red\" style={{ width: '85%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '0' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row\">\n                      <div className=\"graph-col text-column\">\n                        <strong className=\"graph-subtitle\">Paired Passages</strong>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '35%' }}>\n                              <div className=\"part-red\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '60%' }}>\n                              <div className=\"part-green\" style={{ width: '10%' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"graphs-block\">\n                    <div className=\"graph-row graph-row-title\">\n                      <div className=\"graph-col text-column\">\n                        <h3 className=\"graph-title\">Question Type</h3>\n                      </div>\n                      <div className=\"graph-col graph-container\">\n                        <div className=\"graph-linear\">\n                          <div className=\"part-left\">\n                            <div className=\"part-green-light\" style={{ width: '85%' }}>\n                              <div className=\"part-red\" style={{ width: '12%' }}></div>\n                            </div>\n                          </div>\n                          <div className=\"part-right\">\n                            <div className=\"part-red-light\" style={{ width: '95%' }}>\n                              <div className=\"part-green\" style={{ width: '0' }}></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"graph-col graph-info\">\n                        <span className=\"text-large\">12</span>\n                        <span className=\"text-small\">out of</span>\n                        <span className=\"text-large\">18</span>\n                      </div>\n                    </div>\n                    <div className=\"graph-row-block\">\n                      <div className=\"graph-row graph-row-subtitle\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Citing Textual Evidence</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '55%' }}>\n                                <div className=\"part-red\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '70%' }}>\n                                <div className=\"part-green\" style={{ width: '12%' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Cite Text as Evidence</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '20%' }}>\n                                <div className=\"part-red\" style={{ width: '85%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '70%' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Author’s Intention and Method</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '55%' }}>\n                                <div className=\"part-red\" style={{ width: '7%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '15%' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Support / Refute a Claim</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '47%' }}>\n                                <div className=\"part-red\" style={{ width: '12%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '0' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"graph-row-block\">\n                      <div className=\"graph-row graph-row-subtitle\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Reading Closely</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '12%' }}>\n                                <div className=\"part-red\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '55%' }}>\n                                <div className=\"part-green\" style={{ width: '10%' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Detail Question</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '100%' }}>\n                                <div className=\"part-red\" style={{ width: '8%' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '95%' }}>\n                                <div className=\"part-green\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                      <div className=\"graph-row graph-row-inner\">\n                        <div className=\"graph-col text-column\">\n                          <strong className=\"graph-subtitle\">Support / Refute a Claim</strong>\n                        </div>\n                        <div className=\"graph-col graph-container\">\n                          <div className=\"graph-linear\">\n                            <div className=\"part-left\">\n                              <div className=\"part-green-light\" style={{ width: '75%' }}>\n                                <div className=\"part-red\" style={{ width: '0' }}></div>\n                              </div>\n                            </div>\n                            <div className=\"part-right\">\n                              <div className=\"part-red-light\" style={{ width: '100%' }}>\n                                <div className=\"part-green\" style={{ width: '70%' }}></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"graph-col graph-info\">\n                          <span className=\"text-large\">12</span>\n                          <span className=\"text-small\">out of</span>\n                          <span className=\"text-large\">18</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div id=\"tabs_tab02\" className={openSection === 'writing' ? '' : 'tab-content'}>\n                <h3>Tab 02 content</h3>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore quasi inventore expedita maxime, vero magnam architecto eius laudantium corrupti! Ut fuga sit corrupti, vitae cum temporibus sed dolore labore! Fugit.</p>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Maxime dolorem nihil minus, quasi, dicta cupiditate aut magni ea veniam natus provident eveniet tempore iure minima placeat distinctio ducimus quo cum.</p>\n              </div>\n              <div id=\"tabs_tab03\" className={openSection === 'math' ? '' : 'tab-content'}>\n                <h3>Tab 03 content</h3>\n                <p>Expedita quibusdam sed, temporibus quasi dolorem iure non inventore quaerat sit mollitia dolores minima illo perspiciatis omnis delectus, recusandae quos, incidunt ratione.</p>\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quisquam, enim? Itaque reprehenderit, id eos quasi optio est. Soluta alias, minima consequuntur obcaecati odio maiores, molestiae, vel ipsum modi delectus enim!</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nStrengthsAndWeaknesses.propTypes = {\n  state: PropTypes.object.isRequired,\n}\n\nexport default StrengthsAndWeaknesses;\n","export const getIndicatorStatus = (activeSection) => {\n  switch (activeSection) {\n    case 'reading':\n      return {\n        left: '0',\n        right: '66%',\n      }\n    case 'writing':\n      return {\n        left: '33%',\n        right: '33%',\n      }\n    case 'math':\n      return {\n        left: '66%',\n        right: '0',\n      }\n    default:\n      return null;\n  }\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StudentsWhoHave = ({ state: { overdueCoursework, flaggedProblems, fewerThan2PracticeTests } }) => {\n  const [ overdueSectionOpen, setOverdueSectionOpen ] = useState(false);\n  const [ flaggedSectionOpen, setFlaggedSectionOpen ] = useState(false);\n  const [ fewerThan2PracticeTestsOpen, setFewerThan2PracticeTestsOpen ] = useState(false);\n    return (\n      <div className=\"card-block\">\n      <h2>Student Who Have...</h2>\n      <div className=\"row\">\n        <div className=\"card-main-col col s12 m8 l7 xl4\">\n          <ul className=\"card-detail card-main-full card collapsible expandable\">\n            <li className={overdueSectionOpen ? \"pink-darken-2 pink-text text-darken-2 active\" : \"pink-darken-2 pink-text text-darken-2\"}>\n              <div\n                onClick={() => setOverdueSectionOpen(!overdueSectionOpen)}\n                className=\"card card-alert collapsible-header\"\n              >\n                <span className=\"icon-box pink darken-2\"><i className=\"icon-exclamation-mark\"></i></span>\n                <div className=\"alert-text\">\n                  <p><b>Overdue Coursework</b></p>\n                  <div className=\"value\"><b className=\"text-large\">{overdueCoursework.length}</b></div>\n                </div>\n                <span className=\"collapsible-opener\">\n                  <i className=\"custom-icon-traingle-down\"></i>\n                </span>\n              </div>\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: overdueSectionOpen ? 'block' : '' }}\n              >\n                <table className=\"card-detail-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Name <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Overdue <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {overdueCoursework.map(student => (\n                      <tr key={student.name}>\n                        <td>{student.name}</td>\n                        <td>{student.overdueAssignments}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"card-main-col col s12 m8 l7 xl4\">\n          <ul className=\"card-detail card-main-full card collapsible expandable\">\n            <li className={flaggedSectionOpen ? \"pink-darken-3 pink-text text-darken-3 active\" : \"pink-darken-3 pink-text text-darken-3\"}>\n              <div\n                onClick={() => setFlaggedSectionOpen(!flaggedSectionOpen)}\n                className=\"card card-alert collapsible-header\"\n              >\n                <span className=\"icon-box pink darken-3\"><i className=\"icon-exclamation-mark\"></i></span>\n                <div className=\"alert-text\">\n                  <p><b>Flagged Problems</b></p>\n                  <div className=\"value\"><b className=\"text-large\">{flaggedProblems.length}</b></div>\n                </div>\n                <span className=\"collapsible-opener\">\n                  <i className=\"custom-icon-traingle-down\"></i>\n                </span>\n              </div>\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: flaggedSectionOpen ? 'block' : '' }}\n              >\n                <table className=\"card-detail-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Name <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Flags<i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {flaggedProblems.map(student => (\n                      <tr key={student.name}>\n                        <td>{student.name}</td>\n                        <td>{student.flaggedProblems}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div className=\"card-main-col col s12 m8 l7 xl4\">\n          <ul className=\"card-detail card-main-full card collapsible expandable\">\n            <li className={fewerThan2PracticeTestsOpen ? \"pink-darken-4 pink-text text-darken-4 active\" : \"pink-darken-4 pink-text text-darken-4\"}>\n              <div\n                onClick={() => setFewerThan2PracticeTestsOpen(!fewerThan2PracticeTestsOpen)}\n                className=\"card card-alert collapsible-header\"\n              >\n                <span className=\"icon-box pink darken-4\"><i className=\"icon-exclamation-mark\"></i></span>\n                <div className=\"alert-text\">\n                  <p><b>Fewer than 2  Practice Tests</b></p>\n                  <div className=\"value\"><b className=\"text-large\">{fewerThan2PracticeTests.length}</b></div>\n                </div>\n                <span className=\"collapsible-opener\">\n                  <i className=\"custom-icon-traingle-down\"></i>\n                </span>\n              </div>\n              <div\n                className=\"card-content collapsible-body\"\n                style={{ display: fewerThan2PracticeTestsOpen ? 'block' : '' }}\n              >\n                <table className=\"card-detail-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Name <i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                      <th>\n                        <a href=\"#\"><span className=\"sort-holder\">Tests<i className=\"sort-icon custom-icon-traingle-down\"></i></span></a>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {fewerThan2PracticeTests.map(student => (\n                      <tr key={student.name}>\n                        <td>{student.name}</td>\n                        <td>{student.fewerThan2PracticeTests}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nStudentsWhoHave.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default StudentsWhoHave;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ClassAverages from './components/ClassAverages';\nimport ScoreImprovement from './components/ScoreImprovement';\nimport StudentsWhoHave from './components/StudentsWhoHave';\nimport StrengthsAndWeaknesses from './components/StrengthsAndWeaknesses';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DetailSummaryPage extends React.Component {\n  render() {\n    const { currentClass: { classAverages, scoreImprovement, studentsWhoHave, strengthsAndWeaknesses } } = this.props;\n    return (\n      <div className=\"content-section\">\n        <div className=\"content-section-holder\">\n          <div className=\"container\">\n            <div className=\"cards-section\">\n              <div className=\"dashboard-section\">\n                <ClassAverages state={classAverages} />\n                <ScoreImprovement state={scoreImprovement} />\n                <StudentsWhoHave state={studentsWhoHave} />\n                <StrengthsAndWeaknesses state={strengthsAndWeaknesses} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetailSummaryPage.propTypes = {\n  currentClass: PropTypes.object.isRequired,\n};\n\nexport default DetailSummaryPage;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: {},\n      sort: {},\n      activeFilters: [],\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  handleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredTopicState, onUnsetFilteredTopicState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'topic') {\n      if (event === '') {\n        return onUnsetFilteredTopicState();\n      }\n      return onSetFilteredTopicState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { worksheetName } = this.state;\n    if (worksheetName === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  render() {\n    const { open, activeFilters, worksheetName, topic, sort } = this.state;\n    const { currentView, onChangeView } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      checked={activeFilters.indexOf('reading') !== -1}\n                      onChange={() => this.handleFilterClick('reading')}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      checked={activeFilters.indexOf('writing') !== -1}\n                      onChange={() => this.handleFilterClick('writing')}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      checked={activeFilters.indexOf('math') !== -1}\n                      onChange={() => this.handleFilterClick('math')}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"beginning\"\n                      checked={activeFilters.indexOf('beginning') !== -1}\n                      onChange={() => this.handleFilterClick('beginning')}\n                    />\n                    <label htmlFor=\"beginning\">Beginning</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"developing\"\n                      checked={activeFilters.indexOf('developing') !== -1}\n                      onChange={() => this.handleFilterClick('developing')}\n                    />\n                    <label htmlFor=\"developing\">Developing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"accomplished\"\n                      checked={activeFilters.indexOf('accomplished') !== -1}\n                      onChange={() => this.handleFilterClick('accomplished')}\n                    />\n                    <label htmlFor=\"accomplished\">Accomplished</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"exemplary\"\n                      checked={activeFilters.indexOf('exemplary') !== -1}\n                      onChange={() => this.handleFilterClick('exemplary')}\n                    />\n                    <label htmlFor=\"exemplary\">Exemplary</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unassigned\"\n                      checked={activeFilters.indexOf('unassigned') !== -1}\n                      onChange={() => this.handleFilterClick('unassigned')}\n                    />\n                    <label htmlFor=\"unassigned\">Unassigned</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      checked={activeFilters.indexOf('complete') !== -1}\n                      onChange={() => this.handleFilterClick('complete')}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"incomplete\"\n                      checked={activeFilters.indexOf('incomplete') !== -1}\n                      onChange={() => this.handleFilterClick('incomplete')}\n                    />\n                    <label htmlFor=\"incomplete\">Incomplete</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      checked={activeFilters.indexOf('hasReviewFlags') !== -1}\n                      onChange={() => this.handleFilterClick('hasReviewFlags')}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      checked={activeFilters.indexOf('dueToday') !== -1}\n                      onChange={() => this.handleFilterClick('dueToday')}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      checked={activeFilters.indexOf('dueNextSession') !== -1}\n                      onChange={() => this.handleFilterClick('dueNextSession')}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      checked={activeFilters.indexOf('dueThisWeek') !== -1}\n                      onChange={() => this.handleFilterClick('dueThisWeek')}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      checked={activeFilters.indexOf('overdue') !== -1}\n                      onChange={() => this.handleFilterClick('overdue')}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"some-class\"\n                      checked={activeFilters.indexOf('class') !== -1}\n                      onChange={() => this.handleFilterClick('class')}\n                    />\n                    <label htmlFor=\"some-class\">Some Class</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"tutoring\"\n                      checked={activeFilters.indexOf('tutoring') !== -1}\n                      onChange={() => this.handleFilterClick('tutoring')}\n                    />\n                    <label htmlFor=\"tutoring\">Tutoring</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      value={worksheetName}\n                      className=\"input-control validate\"\n                      onChange={(event) => this.handleFilterChange(event, 'worksheetName')}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    >\n                      <i className=\"icon-search\"></i>\n                    </button>\n                    <label className={worksheetName.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                      value={getValueFromState(topic, sampleTopics)}\n                      onChange={(event) => this.handleFilterChange(event, 'topic')}\n                      options={sampleTopics}\n                      label=\"Topic\"\n                      stateKey=\"topic\"\n                      dropdownKey=\"topic\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, worksheetSortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={worksheetSortOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li\n                      data-view=\"view-full\"\n                      className={currentView === 'full' ? 'active' : ''}\n                      onClick={() => onChangeView('full')}\n                    >\n                      <a href=\"#\">Full View</a>\n                    </li>\n                    <li\n                      data-view=\"view-list\"\n                      className={currentView === 'list' ? 'active' : ''}\n                      onClick={() => onChangeView('list')}\n                    >\n                      <a href=\"#\">List View</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap, { chartColorMap } from '../../utils/statusColorMap';\n\nconst data = (percentage, status) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      chartColorMap[status],\n      '#eaeaea',\n    ],\n  }],\n});\n\nclass FullView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    }\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetCards = () => {\n    const { worksheets, onToggleDetailModalOpen } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { disabled, worksheetName, worksheetSource, subject, problemType, difficulty, score, status, problems, timeEstimate, availableDate, dueDate, classifications, flags, late } = worksheet;\n      return (\n        <div className=\"card-main-col col s12 m8 l7 xl5\" key={worksheet.id}>\n          <div className={disabled ? 'card-main work-card card-disabled card' : 'card-main work-card card'}>\n            <div className=\"card-panel panel-border\">\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-sheets-w\"></i>\n                  </span>\n                </div>\n                <div className=\"col s8\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small truncate\">Worksheet ({subject})</div>\n                    <div className=\"text-large truncate\">{worksheetName}</div>\n                  </div>\n                </div>\n                <div className=\"position-top right-align\">\n                  <div className=\"icons-row\">\n                    {flags.length > 0 && (\n                      <span className=\"badge-rounded-xs badge red darken-2 white-text\">\n                        <b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i>\n                      </span>\n                    )}\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        data-target='dropdown01'\n                        className='dropdown-trigger btn'\n                        onClick={(event) => this.handleDropdownClick(event, index)}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                          <li>\n                            <a\n                              href=\"#\"\n                              className=\"modal-trigger link-block\"\n                              onClick={() => onToggleDetailModalOpen(index)}\n                            >\n                              View Details\n                            </a>\n                          </li>\n                          <li><a href=\"#!\">Dismiss Flags</a></li>\n                          <li><a href=\"#!\">Reset</a></li>\n                          <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-top-block\">\n                <div className=\"d-flex row mb-0\">\n                  <div className=\"left-col col s7\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problem Type:</dt>\n                      <dd>{problemType}</dd>\n                    </dl>\n                  </div>\n                  <div className=\"right-col col s5 right-align\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Diﬃculty:</dt>\n                      <dd>{difficulty}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"d-flex sameheight-all row mb-0\">\n                <div className=\"col s6\">\n                  <div className=\"chart-container\">\n                    <div className=\"chart-holder\">\n                      <Doughnut\n                        data={() => data(score, status)}\n                        options={{\n                          circumference: 1 * Math.PI,\n                          rotation: 1 * Math.PI,\n                          cutoutPercentage: 60,\n                          tooltips: false,\n                        }}\n                      />\n                      <span className=\"chart-value\" style={{ backgroundColor: chartColorMap[status] }}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span><span className=\"percentage\">{score && `${score}%`}</span></span>\n                    </div>\n                    <div className=\"chart-row\">\n                      <div className=\"chart-col chart-start\">&nbsp;</div>\n                      <div className=\"chart-col chart-end\">\n                        <span className=\"amount\" style={{ color: chartColorMap[status] }}>{problems}</span>\n                      </div>\n                    </div>\n                    <div className=\"chart-description\">\n                      <dl className=\"dl-horizontal\">\n                        <dt>Time Est:</dt>\n                        <dd>{formatTimeEstimate(timeEstimate)}</dd>\n                      </dl>\n                      <dl className=\"dl-horizontal\">\n                        <dt>Problems:</dt>\n                        <dd>{problems}</dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s6 right-align justify-end\">\n                  <div className=\"chart-description\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Available:</dt>\n                      <dd><time dateTime={availableDate}>{availableDate}</time></dd>\n                    </dl>\n                    <dl className={late ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal'}>\n                      <Choose>\n                        <When condition={disabled}>\n                          <dt>No Due Date</dt>\n                        </When>\n                        <Otherwise>\n                          <dt>Due:</dt>\n                          <dd><time dateTime={dueDate}>{dueDate}</time></dd>\n                        </Otherwise>\n                      </Choose>\n                    </dl>\n                  </div>\n                  <div className=\"align-self-end\">\n                    <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-text\">\n                <dl className=\"dl-horizontal\">\n                  <dt>Worksheet Source:</dt>\n                  <dd>{worksheetSource}</dd>\n                </dl>\n              </div>\n              <div className=\"card-inner-row\">\n                <div className=\"row-holder\">\n                  <ul className=\"classification-list\">\n                    {classifications.map(classification => (\n                      <li className=\"class-box\" key={classification}>\n                        {classification}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <div className=\"content-section\">\n          <div className=\"result-row center-align\">\n            <b className=\"result\"> - {worksheets.length} results -</b>\n          </div>\n          <div className=\"row d-flex-content card-width-272\">\n            {this.mapWorksheetCards()}\n          </div>\n        </div>\n    )\n  }\n}\n\nFullView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired,\n};\n\nexport default FullView;\n","import React from 'react';\n\nconst TableHeader = () => (\n  <div className=\"list-table-header\">\n    <div className=\"list-table-row\">\n      <div className=\"list-table-cell icon-cell\">&nbsp;</div>\n      <div className=\"list-table-cell name-cell\"><b>Worksheet</b></div>\n      <div className=\"list-table-cell graph-cell\"><b>Score</b></div>\n      <div className=\"list-table-cell description-cell\"><b>Problems</b></div>\n      <div className=\"list-table-cell time-cell\"><b>Time Est</b></div>\n      <div className=\"list-table-cell date-cell\"><b>Assign</b></div>\n      <div className=\"list-table-cell date-cell\"><b>Due</b></div>\n      <div className=\"list-table-cell completed-cell\"><b>Completed</b></div>\n      <div className=\"list-table-cell flags-cell\"><b>Flags</b></div>\n      <div className=\"list-table-cell status-cell\"><b>Status</b></div>\n      <div className=\"list-table-cell drop-cell\">&nbsp;</div>\n    </div>\n  </div>\n);\n\nexport default TableHeader;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableHeader from './components/TableHeader';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap from '../../utils/statusColorMap';\n\nclass ListView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    };\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetRows = () => {\n    const { worksheets, onToggleDetailModalOpen } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { disabled, worksheetName, score, status, problems, timeEstimate, assignDate, dueDate, completed, flags } = worksheet;\n      return (\n        <div className={disabled ? 'card card-disabled list-table-row' : 'card list-table-row'} key={worksheet.id}>\n          <div className=\"list-table-cell icon-cell\">\n            <span className=\"block-icon\">\n              <i className=\"icon-sheets-w\"></i>\n            </span>\n          </div>\n          <div className=\"list-table-cell name-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\">{worksheetName}</div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\">\n            {score && (\n              <span className={`chart-bar ${statusColorMap[status]} white-text`}>{score}%</span>\n            )}\n          </div>\n          <div className=\"list-table-cell description-cell\">{problems}</div>\n          <div className=\"list-table-cell time-cell\">{formatTimeEstimate(timeEstimate)}</div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{assignDate}</time></div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{dueDate}</time></div>\n          <div className=\"list-table-cell completed-cell\">\n            {completed && (\n              <React.Fragment>\n                {completed} of {problems}\n              </React.Fragment>\n            )}\n          </div>\n          <div className=\"list-table-cell flags-cell\">\n            {flags.length > 0 && (\n              <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n          <div className=\"list-table-cell status-cell\">\n            <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n          </div>\n          <div className=\"list-table-cell drop-cell\">\n            <div className=\"dropdown-block\">\n              <a\n                href='#'\n                data-target='dropdown01'\n                className='dropdown-trigger btn'\n                onClick={(event) => this.handleDropdownClick(event, index)}\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  <li>\n                    <a\n                      href=\"#\"\n                      className=\"modal-trigger link-block\"\n                      onClick={() => onToggleDetailModalOpen(index)}\n                    >\n                      View Details\n                    </a>\n                  </li>\n                  <li><a href=\"#!\">Dismiss Flags</a></li>\n                  <li><a href=\"#!\">Reset</a></li>\n                  <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"content-section\">\n          <div className=\"container-md\">\n            <div className=\"result-row center-align\">\n              <b className=\"result\"> - {worksheets.length} results -</b>\n            </div>\n            <div className=\"list-view-section\">\n              <div className=\"list-table\">\n                <TableHeader />\n                <div className=\"list-table-body\">\n                  {this.mapWorksheetRows()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nListView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired,\n}\n\nexport default ListView;\n","import React from 'react';\n\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport FilterSection from './components/FilterSection';\n\nimport sampleWorksheets from './utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../../utils/sortFunctions';\n\nclass DetailWorksheetPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      assignWorksheetDropdownOpen: false,\n      worksheets: sampleWorksheets,\n      detailModalOpen: false,\n      activeWorksheet: null,\n    };\n  }\n\n  onToggleAssignWorksheetDropdown = (event) => {\n    event.preventDefault();\n    this.setState(({ assignWorksheetDropdownOpen }) => ({ assignWorksheetDropdownOpen: !assignWorksheetDropdownOpen }))\n  }\n\n  onToggleDetailModalOpen = (worksheetIndex) => this.setState(({ detailModalOpen, worksheets }) => ({ detailModalOpen: !detailModalOpen, activeWorksheet: worksheets[worksheetIndex] }))\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view });\n\n  onSetFilteredState = (filterName) => this.setState({ worksheetsAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ worksheetsAreFiltered: false, filterName: '' })\n\n  onSetFilteredTopicState = (filterTopic) => this.setState({ worksheetsAreFiltered: true, filterTopic })\n  onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onAssignWorksheet = (assignType) => {\n    console.warn('Stubbed out assign worksheet click', assignType);\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { accountInfo: { lastName, firstName } } = currentWorksheet;\n      const worksheetString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'dueDate':\n        return worksheets.sort(dueDate);\n      case 'assignDate':\n        return worksheets.sort(assignDate);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'completed':\n        return worksheets.sort(completed);\n      case 'flags':\n        return worksheets.sort(flags);\n      case 'score':\n        return worksheets.sort(score);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  getMappableWorksheets = () => {\n    const { filterName, filterTopic, worksheets: allWorksheets, sort } = this.state;\n    let worksheets;\n    if (filterName.length && !filterTopic.length) {\n      worksheets = this.onFilterByName();\n    } else if (!filterName.length && filterTopic.length) {\n      worksheets = this.onFilterByTopic();\n    } else if (filterName.length && filterTopic.length) {\n      const filteredByName = this.onFilterByName();\n      worksheets = this.onFilterByTopic(filteredByName);\n    } else {\n      worksheets = allWorksheets;\n    }\n    if (sort) {\n      return this.onSortWorksheets(worksheets);\n    }\n    return worksheets;\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterTopic } = this.state;\n    if (!filterName.length && !filterTopic.length) {\n      this.setState({ worksheetsAreFiltered: false });\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  renderWorksheetView = () => {\n    const { currentView } = this.state;\n    switch (currentView) {\n      case 'list':\n        return <ListView onToggleDetailModalOpen={this.onToggleDetailModalOpen} worksheets={this.getMappableWorksheets()} />\n      case 'full':\n        return <FullView onToggleDetailModalOpen={this.onToggleDetailModalOpen} worksheets={this.getMappableWorksheets()} />\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { currentView, assignWorksheetDropdownOpen } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"main-holder grey lighten-5 switcher-section\">\n          <FilterSection\n            currentView={currentView}\n            onChangeView={this.onChangeView}\n            onSetSort={this.onSetSort}\n            onSetFilteredState={this.onSetFilteredState}\n            onUnsetFilteredState={this.onUnsetFilteredState}\n            onSetFilteredTopicState={this.onSetFilteredTopicState}\n            onUnsetFilteredTopicState={this.onUnsetFilteredTopicState}\n          />\n          {this.renderWorksheetView()}\n        </div>\n        <div className=\"add-btn-block\">\n          <a\n            href=\"#\"\n            data-target='dropdown_assign_selected'\n            onClick={this.onToggleAssignWorksheetDropdown}\n            className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n          >\n            <i className=\"material-icons\">add</i> Assign Worksheet\n          </a>\n          <ul\n            id='dropdown_assign_selected'\n            className='dropdown-content dropdown-small'\n            style={{ display: assignWorksheetDropdownOpen ? 'block' : '0', opacity: assignWorksheetDropdownOpen ? '1' : '0' }}\n          >\n            <li><a href=\"#\" onClick={() => this.onAssignWorksheet('fromSaved')}>From Saved</a></li>\n            <li><a href=\"#\" onClick={() => this.onAssignWorksheet('createNew')}>Create New</a></li>\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DetailWorksheetPage;\n\n","export default [\n  {\n    id: 1,\n    worksheetName: 'Some SAT Problems about Triangles',\n    subject: 'Math',\n    score: '',\n    problems: 15,\n    problemType: 'Skill Builder',\n    difficulty: 'Beginner',\n    timeEstimate: '14',\n    assignDate: '1/27/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/27/19',\n    dueDate: '2/10/19',\n    dueTime: '9:32 AM',\n    completionDate: '3/12/19',\n    completionTime: '2:53 PM',\n    completedProblems: '',\n    completionLevel: 'Complete',\n    unit: 'Reading Unit #4',\n    passage: '214',\n    type: 'challenge + practice',\n    flags: [],\n    status: 'Assigned',\n    disabled: true,\n    late: false,\n    topic: 'specialRightTriangles',\n    worksheetSource: 'Admin Created',\n    classifications: ['Right Triangles', 'More Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '77',\n    totalVideoMinutesAllMissedProblems: '214',\n  },\n  {\n    id: 2,\n    worksheetName: 'Worksheet 2',\n    subject: 'Reading',\n    score: '',\n    problems: 18,\n    problemType: 'Skill Builder',\n    difficulty: 'Beginner',\n    timeEstimate: '30',\n    assignDate: '1/19/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/19/19',\n    dueDate: '2/02/19',\n    dueTime: '9:32 AM',\n    completionDate: '',\n    completionTime: '',\n    completedProblems: 0,\n    completionLevel: 'Not Started',\n    unit: 'Reading Unit #4',\n    passage: '51',\n    type: 'challenge + practice',\n    flags: [{ title: 'one', status: 'reviewed' }, { title: 'two', status: 'reviewed' }, { title: 'three', status: 'toReview' }],\n    status: 'Assigned',\n    disabled: false,\n    late: true,\n    topic: 'topic2',\n    worksheetSource: 'User Created',\n    classifications: ['Math', 'More Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '77',\n    totalVideoMinutesAllMissedProblems: '214',\n  },\n  {\n    id: 3,\n    worksheetName: 'Worksheet 3',\n    subject: 'Science',\n    score: '81',\n    problems: 16,\n    problemType: 'SAT Style',\n    difficulty: 'Advanced',\n    timeEstimate: '24',\n    assignDate: '1/11/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/11/19',\n    dueDate: '2/12/19',\n    dueTime: '9:32 AM',\n    completionDate: '3/12/19',\n    completionTime: '2:53 PM',\n    completedProblems: 10,\n    completionLevel: 'Complete',\n    unit: 'Reading Unit #4',\n    passage: '121',\n    type: 'challenge + practice',\n    flags: [],\n    status: 'Accomplished',\n    disabled: false,\n    late: false,\n    topic: 'topic2',\n    worksheetSource: 'Admin Created',\n    classifications: ['Right Triangles', 'Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '124',\n    totalVideoMinutesAllMissedProblems: '312',\n  },\n  {\n    id: 4,\n    worksheetName: 'Worksheet 4',\n    subject: 'Science',\n    score: '32',\n    problems: 14,\n    problemType: 'SAT Style',\n    difficulty: 'Mixed',\n    timeEstimate: '31',\n    assignDate: '1/24/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/24/19',\n    dueDate: '2/27/19',\n    dueTime: '9:32 AM',\n    completionDate: '',\n    completionTime: '',\n    completedProblems: 4,\n    completionLevel: 'Started',\n    unit: 'Reading Unit #4',\n    passage: '128',\n    type: 'challenge + practice',\n    flags: [{ title: 'one', status: 'reviewed' }, { title: 'two', status: 'reviewed' }, { title: 'three', status: 'toReview' }, { title: 'four', status: 'toReview' }],\n    status: 'Beginning',\n    disabled: false,\n    late: true,\n    topic: 'topic3',\n    worksheetSource: 'User Created',\n    classifications: ['Trigonometry', 'More Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '311',\n    totalVideoMinutesAllMissedProblems: '401',\n  },\n  {\n    id: 5,\n    worksheetName: 'Worksheet 5',\n    subject: 'Reading',\n    score: '93',\n    problems: 21,\n    problemType: 'Mixed',\n    difficulty: 'Mixed',\n    timeEstimate: '23',\n    assignDate: '1/12/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/12/19',\n    dueDate: '2/03/19',\n    dueTime: '9:32 AM',\n    completionDate: '3/12/19',\n    completionTime: '2:53 PM',\n    completedProblems: 6,\n    completionLevel: 'Instructor Editing',\n    unit: 'Reading Unit #4',\n    passage: '73',\n    type: 'challenge + practice',\n    flags: [{ title: 'one', status: 'toReview' }, { title: 'two', status: 'toReview' }],\n    status: 'Developing',\n    disabled: false,\n    late: false,\n    topic: 'topic3',\n    worksheetSource: 'Admin Created',\n    classifications: ['Trigonometry', 'Math', \"Lots Of Math\"],\n    totalVideoMinutesWatched: '51',\n    totalVideoMinutesAllMissedProblems: '200',\n  },\n  {\n    id: 6,\n    worksheetName: 'Worksheet 6',\n    subject: 'Math',\n    score: '64',\n    problems: 30,\n    problemType: 'Mixed',\n    difficulty: 'Advanced',\n    timeEstimate: '65',\n    assignDate: '1/09/19',\n    assignTime: '3:01 PM',\n    availableDate: '1/09/19',\n    dueDate: '2/12/19',\n    dueTime: '9:32 AM',\n    completionDate: '',\n    completionTime: '',\n    completedProblems: 5,\n    completionLevel: 'Not Started',\n    unit: 'Reading Unit #4',\n    passage: '153',\n    type: 'challenge + practice',\n    flags: [],\n    status: 'Developing',\n    disabled: false,\n    late: false,\n    topic: 'topic4',\n    worksheetSource: 'User Created',\n    classifications: ['Right Triangles', 'Trigonometry', 'More Math'],\n    totalVideoMinutesWatched: '83',\n    totalVideoMinutesAllMissedProblems: '305',\n  },\n];\n","const statusColorMap = {\n  Assigned: 'grey darken-4',\n  Accomplished: 'purple darken-3',\n  Beginning: 'red darken-3',\n  Exemplary: 'blue accent-4',\n  Developing: 'purple',\n};\n\nexport const chartColorMap = {\n  Assigned: '#333',\n  Accomplished: '#7327cc',\n  Beginning: '#ed1c24',\n  Exemplary: 'rgb(0, 100, 244)',\n  Developing: '#c10078',\n}\n\nexport default statusColorMap;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sortByOptions from '../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      testVersionFilter: '',\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onClearFilters = () => this.setState({ testVersionFilter: '' }, this.props.onClearFilters)\n\n  handleSearchChange = ({ target }) => this.setState({ testVersionFilter: target.value })\n\n  submitSearchFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { testVersionFilter } =  this.state;\n    if (testVersionFilter === '') {\n      onUnsetFilteredState();\n    }\n    const transformedTitle = testVersionFilter.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedTitle);\n  }\n\n  render() {\n    const { open, testVersionFilter } = this.state;\n    const { handleFilterClick, sort, onSetSort, subjectFilters, flagFilter, availableDateFilters, dueDateFilters } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\" style={{ minHeight: '0' }}>\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      name=\"reading\"\n                      checked={subjectFilters.indexOf('reading') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      name=\"writing\"\n                      checked={subjectFilters.indexOf('writing') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      name=\"math\"\n                      checked={subjectFilters.indexOf('math') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"future\"\n                      name=\"future\"\n                      checked={availableDateFilters.indexOf('future') !== -1}\n                      onChange={({ target }) => handleFilterClick('availableDate', target.name)}\n                    />\n                    <label htmlFor=\"future\">Future</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"available\"\n                      name=\"available\"\n                      checked={availableDateFilters.indexOf('available') !== -1}\n                      onChange={({ target }) => handleFilterClick('availableDate', target.name)}\n                    />\n                    <label htmlFor=\"available\">Available</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      name=\"complete\"\n                      checked={availableDateFilters.indexOf('complete') !== -1}\n                      onChange={({ target }) => handleFilterClick('availableDate', target.name)}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      name=\"hasReviewFlags\"\n                      checked={flagFilter}\n                      onChange={({ target }) => handleFilterClick('hasFlags', target.name)}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      name=\"dueToday\"\n                      checked={dueDateFilters.indexOf('dueToday') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      name=\"dueNextSession\"\n                      checked={dueDateFilters.indexOf('dueNextSession') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      name=\"dueThisWeek\"\n                      checked={dueDateFilters.indexOf('dueThisWeek') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      name=\"overdue\"\n                      checked={dueDateFilters.indexOf('overdue') !== -1}\n                      onChange={({ target }) => handleFilterClick('dueDate', target.name)}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m4\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"test_version_search\"\n                      className=\"input-control validate\"\n                      value={testVersionFilter}\n                      onChange={this.handleSearchChange}\n                    />\n                    <button type=\"submit\" onClick={this.submitSearchFilter} className=\"search-button\"><i className=\"icon-search\"></i></button>\n                    <label className=\"label\" htmlFor=\"test_version_search\">Test Version</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\" style={{ marginBottom: '10px', marginTop: '0' }}>\n                      <Dropdown\n                        value={getValueFromState(sort, sortByOptions)}\n                        onChange={onSetSort}\n                        options={sortByOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 hide-on-med-and-down show-on-large\">&nbsp;</div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                    <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  sort: PropTypes.string.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  flagFilter: PropTypes.bool.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  dueDateFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  availableDateFilters: PropTypes.array.isRequired,\n}\n\nexport default FilterSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport { data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nclass TestSectionCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n    }\n  }\n\n  viewTestSectionDetails = () => console.warn('Pending implementation of view test section details functionality')\n  dismissFlags = () => console.warn('Pending implementation of dismiss flags functionality')\n  resetTestSection = () => console.warn('Pending implementation of reset test section functionality')\n  deleteTestSection = () => console.warn('Pending implementation of delete test section functionality')\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  renderFlags = () => {\n    const { testSection: { flags } } = this.props;\n    if (flags.length) {\n      return (\n        <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n      )\n    }\n    return null;\n  }\n\n  render() {\n    const { testSection, dropdownIsOpen, dropdownIndex, index } = this.props;\n    const { subject, timeEstimate, version, availableDate, dueDate, problems, disabled, status, percentageComplete } = testSection;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className={disabled ? 'card-main test-card card-disabled card' : 'card-main test-card card'}>\n          <div className=\"card-panel panel-border\">\n            <div className=\"card-panel-row row\">\n              <div className=\"icon-col col s2\">\n                <span className=\"block-icon\">\n                  <i className=\"icon-assign-section\"></i>\n                  <span className=\"text-icon\">Assigned <br />Test Section</span>\n                </span>\n              </div>\n              <div className=\"col s8\">\n                <div className=\"card-panel-text\">\n                  <div className=\"text-large truncate\">{subjectMap[subject]} Section</div>\n                  <div className=\"text-small truncate\">Version: {version}</div>\n                </div>\n              </div>\n              <div className=\"position-top right-align\">\n                <div className=\"icons-row\">\n                  {this.renderFlags()}\n                  <div className=\"dropdown-block col\">\n                    <a\n                      href='#'\n                      data-target='dropdown01'\n                      className='dropdown-trigger btn'\n                      onClick={this.handleDropdownClick}\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen && dropdownIndex === index}>\n                      <ul\n                        id='dropdown01'\n                        className='dropdown-content dropdown-wide'\n                        style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                      >\n                        <li><a href=\"#\" onClick={this.viewTestSectionDetails} className=\"modal-trigger link-block\">View Details</a></li>\n                        <li><a href=\"#\" onClick={this.dismissFlags}>Dismiss Flags</a></li>\n                        <li><a href=\"#\" onClick={this.resetTestSection}>Reset</a></li>\n                        <li><a href=\"#\" onClick={this.deleteTestSection} className=\"link-delete\">Delete</a></li>\n                      </ul>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"d-flex sameheight-all row mb-0\">\n              <div className=\"col s6\">\n                <div className=\"chart-container\">\n                  <div className=\"chart-holder\">\n                    <Doughnut\n                      data={() => data(percentageComplete, status)}\n                      options={{\n                        circumference: 1 * Math.PI,\n                        rotation: 1 * Math.PI,\n                        cutoutPercentage: 60,\n                        tooltips: false,\n                      }}\n                    />\n                    <span className=\"chart-value\" style={{ backgroundColor: graphColorMap[status] }}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span><span className=\"percentage\">{percentageComplete}%</span></span>\n                  </div>\n                  <div className=\"chart-row\">\n                    <div className=\"chart-col chart-start\">&nbsp;</div>\n                    <div className=\"chart-col chart-end\">\n                      <span className=\"amount\" style={{ color: graphColorMap[status] }}>{problems}</span>\n                    </div>\n                  </div>\n                  <div className=\"chart-description\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Time Est:</dt>\n                      <dd>{timeEstimate} min</dd>\n                    </dl>\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problems:</dt>\n                      <dd>{problems}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s6 right-align justify-end\">\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Available:</dt>\n                    <dd><time dateTime=\"2018-12-15\">{availableDate}</time></dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Due:</dt>\n                    <dd><time dateTime=\"2018-12-15\">{dueDate}</time></dd>\n                  </dl>\n                </div>\n                <div className=\"align-self-end\">\n                  <span className={testSectionCardColorMap[status]}>{status}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTestSectionCard.propTypes = {\n  dropdownIndex: PropTypes.number,\n  index: PropTypes.number.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  testSection: PropTypes.object.isRequired,\n}\n\nexport default TestSectionCard;\n","import React from 'react';\nimport update from 'immutability-helper';\nimport moment from 'moment';\n\nimport FilterSection from './components/FilterSection';\nimport TestSectionCard from './components/TestSectionCard';\n\nimport { availableDateSort, dueDateSort, statusSort, flagsSort, problemSort, timeEstimateSort, subjectSort, percentageCompleteSort } from '../utils/sortOptions';\nimport { testSectionSubjectMap } from '../utils/testSectionCardUtils';\nimport sampleTestSections from '../utils/sampleTestSections';\n\nclass TestSectionsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      testVersionFilter: '',\n      subjectFilters: [],\n      flagFilter: false,\n      availableDateFilters: [],\n      dueDateFilters: [],\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      testSections: sampleTestSections,\n    };\n  }\n\n  onSetSort = (sort) => this.setState({ sort })\n\n  onClearFilters = () => this.setState({ sort: '', testVersionFilter: '', subjectFilters: [], flagFilter: false, availableDateFilters: [], dueDateFilters: [] })\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  onSetFilteredState = (value) => this.setState({ testVersionFilter: value })\n  onUnsetFilteredState = () => this.setState({ testVersionFilter: '' })\n\n  // eslint-disable-next-line consistent-return\n  onSortTestSections = (testSections) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'flags':\n        return testSections.sort(flagsSort);\n      case 'dueDate':\n        return testSections.sort(dueDateSort);\n      case 'availableDate':\n        return testSections.sort(availableDateSort);\n      case 'status':\n        return testSections.sort(statusSort);\n      case 'problems':\n        return testSections.sort(problemSort);\n      case 'timeEstimate':\n        return testSections.sort(timeEstimateSort);\n      case 'subject':\n        return testSections.sort(subjectSort);\n      case 'percentageComplete':\n        return testSections.sort(percentageCompleteSort);\n      default:\n        break;\n    }\n  }\n\n  onFilterByTestVersion = () => {\n    const { testSections, testVersionFilter } = this.state;\n    return testSections.reduce((finalArr, currentTestSection) => {\n      const { version } = currentTestSection;\n      const testSectionString = version.replace(/\\s/g, \"\").toLowerCase();\n      if (testSectionString.indexOf(testVersionFilter) !== -1 && finalArr.indexOf(currentTestSection) === -1) {\n        finalArr.push(currentTestSection);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByDate = (incomingSections, dateType) => {\n    const { dueDateFilters, availableDateFilters } = this.state;\n    let dateFilters;\n    let testSections = incomingSections;\n\n    const currentDate = moment().format('MM/DD/YY');\n    const currentDateIndex = new Date().getDay();\n    const endOfWeekIndex = 6 - currentDateIndex;\n    const endOfWeekDate = moment().add(endOfWeekIndex, 'days').format('MM/DD/YY')\n    if (dateType === 'dueDate') {\n      dateFilters = dueDateFilters;\n      if (dateFilters.indexOf('dueToday') !== -1) {\n        testSections = testSections.filter(testSection => testSection.dueDate === currentDate);\n      }\n      if (dateFilters.indexOf('dueNextSession') !== -1) {\n        console.warn('Pending decision on how next session date is calculated');\n      }\n      if (dateFilters.indexOf('overdue') !== -1) {\n        testSections = testSections.filter(testSection => testSection.dueDate < currentDate);\n      }\n      if (dateFilters.indexOf('dueThisWeek') !== -1) {\n        testSections = testSections.filter(testSection => testSection.dueDate >= currentDate && testSection.dueDate <= endOfWeekDate);\n      }\n    } else {\n      dateFilters = availableDateFilters;\n      if (dateFilters.indexOf('future') !== -1) {\n        testSections = testSections.filter(testSection => testSection.availableDate > currentDate);\n      }\n      if (dateFilters.indexOf('available') !== -1) {\n        testSections = testSections.filter(testSection => testSection.availableDate <= currentDate);\n      }\n      if (dateFilters.indexOf('complete') !== -1) {\n        testSections = testSections.filter(testSection => testSection.percentageComplete === '100');\n      }\n    }\n    return testSections;\n  }\n\n  onFilterTestSections = () => {\n    const { subjectFilters, dueDateFilters, availableDateFilters, flagFilter, testSections: allTestSections } = this.state;\n    let testSections = allTestSections;\n    if (subjectFilters.length) {\n      testSections = testSections.filter(testSection => subjectFilters.indexOf(testSectionSubjectMap[testSection.subject]) !== -1);\n    }\n    if (dueDateFilters.length) {\n      testSections = this.onFilterByDate(testSections, 'dueDate');\n    }\n    if (availableDateFilters.length) {\n      testSections = this.onFilterByDate(testSections, 'availableDate');\n    }\n    if (flagFilter) {\n      testSections = testSections.filter(testSection => testSection.flags.length);\n    }\n    return testSections;\n  }\n\n  getMappableTestSections = () => {\n    const { subjectFilters, dueDateFilters, availableDateFilters, flagFilter, sort, testVersionFilter, testSections } = this.state;\n    let mappableTestSections = testSections;\n    if (testVersionFilter.length) {\n      mappableTestSections = this.onFilterByTestVersion();\n    }\n    if (subjectFilters.length || dueDateFilters.length || availableDateFilters.length || flagFilter) {\n      mappableTestSections = this.onFilterTestSections();\n    }\n    if (sort) {\n      return this.onSortTestSections(mappableTestSections);\n    }\n    return mappableTestSections;\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterClick = (filterType, filter) => {\n    const { availableDateFilters: currentAvailableDateFilters, dueDateFilters: currentDueDateFilters,\n      subjectFilters: currentSubjectFilters, flagFilter } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'dueDate':\n        modifiedFilterCurrentState = currentDueDateFilters;\n        modifiedFilterName = 'dueDateFilters';\n        break;\n      case 'availableDate':\n        modifiedFilterCurrentState = currentAvailableDateFilters;\n        modifiedFilterName = 'availableDateFilters';\n        break;\n      case 'hasFlags':\n        return this.setState({ flagFilter: !flagFilter });\n      default:\n        break;\n    }\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  mapTestSections = () => this.getMappableTestSections().map((testSection, index) => (\n    <TestSectionCard\n      index={index}\n      key={testSection.id}\n      testSection={testSection}\n      onSetDropdown={this.onSetDropdown}\n      onCloseDropdown={this.onCloseDropdown}\n      dropdownIndex={this.state.dropdownIndex}\n      dropdownIsOpen={this.state.dropdownIsOpen}\n    />\n  ))\n\n  render() {\n    const { testSections } = this.state;\n    return (\n      <React.Fragment>\n        <FilterSection\n          sort={this.state.sort}\n          onSetSort={this.onSetSort}\n          flagFilter={this.state.flagFilter}\n          onClearFilters={this.onClearFilters}\n          handleFilterClick={this.handleFilterClick}\n          subjectFilters={this.state.subjectFilters}\n          dueDateFilters={this.state.dueDateFilters}\n          availableDateFilters={this.state.availableDateFilters}\n          onSetFilteredState={this.onSetFilteredState}\n          onUnsetFilteredState={this.onUnsetFilteredState}\n        />\n        <div className=\"content-section\">\n          <div className=\"result-row center-align\">\n            <b className=\"result\"> - {testSections.length} results -</b>\n          </div>\n          <div className=\"row d-flex-content card-width-272\">\n            {this.mapTestSections()}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TestSectionsPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ClassNavBar = ({ active, onSetActivePage }) => (\n  <nav className=\"nav-additional\">\n    <ul className=\"menu-additional js-flex-nav\" data-more-text=\"More\">\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('summary')}\n          className={active === 'summary' ? 'active' : ''}\n        >\n          Summary\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('calendar')}\n          className={active === 'calendar' ? 'active' : ''}\n        >\n          Calendar\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('lessons')}\n          className={active === 'lessons' ? 'active' : ''}\n        >\n          Lessons\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('worksheets')}\n          className={active === 'worksheets' ? 'active' : ''}\n        >\n          Worksheets\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('testSections')}\n          className={active === 'testSections' ? 'active' : ''}\n        >\n          Test Sections\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#\"\n          onClick={() => onSetActivePage('account')}\n          className={active === 'account' ? 'active' : ''}\n        >\n          Account\n        </a>\n      </li>\n    </ul>\n  </nav>\n);\n\nClassNavBar.propTypes = {\n  active: PropTypes.string.isRequired,\n  onSetActivePage: PropTypes.func.isRequired,\n}\n\nexport default ClassNavBar;","const sampleClass = {\n  id: '1232',\n  active: true,\n  classAverages: {\n    questionsAnswered: '721',\n    flaggedProblems: '52.9',\n    timeLoggedIn: '273',\n    videoWatched: '443',\n    notesTaken: '57',\n    onTimePercentage: '75',\n  },\n  scoreImprovement: {\n    points: '201',\n    readingAndWriting: '82',\n    math: '119',\n    noGain: '32',\n    from0To50: '19',\n    from50To99: '60',\n    from100To149: '77',\n    from150To199: '62',\n    from200Plus: '91',\n  },\n  studentsWhoHave: {\n    overdueCoursework: [\n      {\n        name: 'Bob Smith',\n        overdueAssignments: '13',\n      },\n      {\n        name: 'John Joe',\n        overdueAssignments: '5',\n      },\n      {\n        name: 'Tim Bob',\n        overdueAssignments: '11',\n      },\n      {\n        name: 'Chris Smith',\n        overdueAssignments: '33',\n      },\n      {\n        name: 'Arnold Jackson',\n        overdueAssignments: '7',\n      },\n      {\n        name: 'Alfred Fredson',\n        overdueAssignments: '2',\n      },\n      {\n        name: 'Fred Hampton',\n        overdueAssignments: '8',\n      },\n      {\n        name: 'Jeff Smith',\n        overdueAssignments: '3',\n      },\n    ],\n    flaggedProblems: [\n      {\n        name: 'Tim Bob',\n        flaggedProblems: '11',\n      },\n      {\n        name: 'Chris Smith',\n        flaggedProblems: '33',\n      },\n      {\n        name: 'Arnold Jackson',\n        flaggedProblems: '7',\n      },\n      {\n        name: 'Alfred Fredson',\n        flaggedProblems: '2',\n      },\n    ],\n    fewerThan2PracticeTests: [\n      {\n        name: 'Alfred Fredson',\n        fewerThan2PracticeTests: '2',\n      },\n      {\n        name: 'Fred Hampton',\n        fewerThan2PracticeTests: '8',\n      },\n      {\n        name: 'Jeff Smith',\n        fewerThan2PracticeTests: '3',\n      },\n    ],\n  },\n  strengthsAndWeaknesses: {\n    reading: {\n      correctAnswers: '32',\n      totalAnswers: '52',\n    },\n    writing: {\n      correctAnswers: '35',\n      totalAnswers: '52',\n    },\n    math: {\n      correctAnswers: '37',\n      totalAnswers: '52',\n    },\n  },\n};\n\nexport default sampleClass;\n","export default [\n  {\n    id: 1,\n    subject: 'Math',\n    version: 'SAT Practice #2',\n    availableDate: '12/15/19',\n    dueDate: '12/17/19',\n    status: 'Exemplary',\n    problems: 15,\n    timeEstimate: '23',\n    percentageComplete: '100',\n    flags: [{}, {}, {}],\n    disabled: false,\n  },\n  {\n    id: 2,\n    subject: 'Writing',\n    version: 'SAT Practice #4',\n    availableDate: '03/21/19',\n    dueDate: '05/31/19',\n    status: 'Developing',\n    problems: 21,\n    timeEstimate: '41',\n    percentageComplete: '86',\n    flags: [],\n    disabled: false,\n  },\n  {\n    id: 3,\n    subject: 'Reading',\n    version: 'SAT Practice #1',\n    availableDate: '04/01/19',\n    dueDate: '06/12/19',\n    status: 'Assigned',\n    problems: 42,\n    timeEstimate: '57',\n    percentageComplete: '0',\n    flags: [],\n    disabled: true,\n  },\n  {\n    id: 4,\n    subject: 'Writing',\n    version: 'SAT Practice #6',\n    availableDate: '07/11/19',\n    dueDate: '07/13/19',\n    status: 'Developing',\n    problems: 17,\n    timeEstimate: '21',\n    percentageComplete: '72',\n    flags: [{}],\n    disabled: false,\n  },\n  {\n    id: 5,\n    subject: 'Math',\n    version: 'SAT Practice #5',\n    availableDate: '04/02/19',\n    dueDate: '04/16/19',\n    status: 'Exemplary',\n    problems: 16,\n    timeEstimate: '41',\n    percentageComplete: '47',\n    flags: [],\n    disabled: false,\n  },\n];\n","const sortByOptions = [\n  {\n    label: 'Available On Date',\n    value: 'availableDate',\n  },\n  {\n    label: 'Due Date',\n    value: 'dueDate',\n  },\n  {\n    label: 'Problems',\n    value: 'problems',\n  },\n  {\n    label: 'Time Estimate',\n    value: 'timeEstimate',\n  },\n  {\n    label: 'Status',\n    value: 'status',\n  },\n  {\n    label: 'Subject',\n    value: 'subject',\n  },\n  {\n    label: 'Flags',\n    value: 'flags',\n  },\n  {\n    label: 'Percentage Complete',\n    value: 'percentageComplete',\n  },\n];\n\nexport const availableDateSort = ({ availableDate: availableDateA }, { availableDate: availableDateB }) => {\n  if (availableDateA > availableDateB) { return -1; }\n  return 0;\n}\n\nexport const dueDateSort = ({ dueDate: dueDateA }, { dueDate: dueDateB }) => {\n  if (dueDateA > dueDateB) { return -1; }\n  return 0;\n}\n\nexport const statusSort = ({ status: statusA }, { status: statusB }) => {\n  if (statusA > statusB) { return -1; }\n  return 0;\n}\n\nexport const flagsSort = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA > flagsB) { return -1; }\n  return 0;\n}\n\nexport const problemSort = ({ problems: problemCountA }, { problems: problemCountB }) => {\n  if (problemCountA > problemCountB) { return -1; }\n  return 0;\n}\n\nexport const timeEstimateSort = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA > timeEstimateB) { return -1; }\n  return 0;\n}\n\nexport const subjectSort = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA > subjectB) { return -1; }\n  return 0;\n}\n\nexport const percentageCompleteSort = ({ percentageComplete: percentageCompleteA }, { percentageComplete: percentageCompleteB }) => {\n  if (percentageCompleteA > percentageCompleteB) { return -1; }\n  return 0;\n}\n\nexport default sortByOptions;\n","export const data = (percentage, status) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      graphColorMap[status],\n      '#eaeaea',\n    ],\n  }],\n});\n\nexport const subjectMap = {\n  'Math': 'Math (calculator)',\n  'Writing': 'Writing',\n  'Reading': 'Reading',\n};\n\nexport const testSectionCardColorMap = {\n  'Developing': 'badge badge-rounded-md purple white-text',\n  'Assigned': 'badge badge-rounded-md purple white-text',\n  'Exemplary': 'badge badge-rounded-md blue accent-4 white-text',\n}\n\nexport const graphColorMap = {\n  'Developing': '#c10078',\n  'Assigned': '#c10078',\n  'Exemplary': '#0064f4',\n}\n\nexport const testSectionSubjectMap = {\n  'Reading': 'reading',\n  'Writing': 'writing',\n  'Math': 'math',\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n\nimport ControlComponent from './styles/ControlComponent';\nimport { DropdownStyles } from './styles/dropdownStyles';\nimport DropdownWrapper from './styles';\n\nconst Dropdown = ({ value, label, dropdownKey, stateKey = null, onChange, options, valid = true, padRight, className }) => (\n  <DropdownWrapper className={className} valid={(valid) || (!valid && value === {})} padRight={padRight}>\n    <Select\n      options={options}\n      onChange={(event) => onChange(event.value, dropdownKey, stateKey)}\n      components={{ Control: ControlComponent }}\n      name=\"categoryOptions\"\n      classNamePrefix={dropdownKey === 'difficulty' ? 'expanded-select' : 'select'}\n      placeholder={label}\n      styles={DropdownStyles}\n      isClearable={false}\n      isSearchable={false}\n      value={value}\n      instanceId=\"dropdown-select\"\n    />\n  </DropdownWrapper>\n);\n\nDropdown.propTypes = {\n  value: PropTypes.any,\n  valid: PropTypes.bool,\n  padRight: PropTypes.bool,\n  stateKey: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  dropdownKey: PropTypes.string.isRequired,\n};\n\nexport default Dropdown;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { components } from 'react-select';\n\nimport { ControlWrapper } from './';\nimport { DropdownStyles } from '../styles/dropdownStyles';\n\nconst ControlComponent = (props) => {\n  const { selectProps: { placeholder, label, className } } = props;\n  const categoryCheck = label === 'Categories';\n  return (\n    <ControlWrapper invalid={className} categoryCheck={categoryCheck}>\n      <div style={DropdownStyles}>\n        {<p>{categoryCheck ? 'Categories' : placeholder}</p>}\n        <components.Control {...props} />\n      </div>\n    </ControlWrapper>\n  );\n};\n\nControlComponent.propTypes = {\n  selectProps: PropTypes.object.isRequired,\n};\n\nexport default ControlComponent;\n","// Keeping unused styling for now so I know what element they target\nexport default {\n  multiValueLabel: (styles) => ({\n    ...styles,\n    color: 'white',\n    borderRadius: 'inherit',\n    fontSize: 'inherit',\n    overflow: 'inherit',\n    padding: 'inherit',\n    paddingLeft: 'inherit',\n    textOverflow: 'inherit',\n    whiteSpace: 'inherit',\n    boxSizing: 'inherit',\n    // backgroundColor: 'red!important',\n  }),\n  menuList: (styles) => ({\n    ...styles,\n    // backgroundColor: 'red',\n  }),\n  dropdownIndicator: (styles) => ({\n    ...styles,\n    display: 'none',\n  }),\n  multiValue: (styles) => ({\n    ...styles,\n    background: 'none',\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    // padding: '20px',\n    // background: 'red',\n    // height: '200px',\n  }),\n  input: (styles) => ({\n    ...styles,\n    paddingTop: '9px',\n  }),\n  groupHeading: (styles) => ({\n    ...styles,\n    // backgroundColor: '#19493F',\n    // color: 'white',\n    // padding: '10px',\n  }),\n  control: (styles, { isFocused }) => ({\n    ...styles,\n    boxShadow: 'none',\n    borderColor: isFocused ? '#26a69a!important' : '#b6b6b6!important',\n  }),\n};\n\nexport const DropdownStyles = {\n  container: (base, state) => ({\n    ...base,\n    opacity: state.isDisabled ? \".5\" : \"1\",\n    backgroundColor: \"transparent\",\n    zIndex: \"999\",\n  }),\n  option: (styles, { isFocused }) => ({\n    ...styles,\n    backgroundColor: isFocused ? '#dad8d8' : 'white',\n    color: isFocused ? '#a80303' : '#333',\n    clear: 'both',\n    lineHeight: '22px',\n    width: '100%',\n    textAlign: 'left',\n    fontWeight: '500',\n    padding: '3px 10px 3px 19px',\n    fontSize: '15px',\n  }),\n  control: (styles, { isFocused }) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '1px solid',\n    borderColor: isFocused ? '#26a69a!important' : '#b6b6b6!important',\n    backgroundColor: 'transparent',\n    borderRadius: '0',\n    outline: 'none',\n    boxShadow: 'none',\n  }),\n};\n","import styled from 'styled-components';\n\nconst DropdownWrapper = styled.div`\n  padding: 5px 0;\n  padding-right: ${({ padRight }) => padRight ? '20px' : ''};\n  ${({ valid }) => !valid ?\n    `div.select__control, div.expanded-select__control, div.multi-select__control { \n        border-color: #F44336!important; \n        &:focus {\n          border-color: inherit;\n      }\n    }`\n    : ''};\n  &.flex-50 {\n    flex-basis: 50%!important;\n  }\n`;\n\nexport const ControlWrapper = styled.div`\n  p {\n    padding-left: ${({ categoryCheck }) => categoryCheck ? '10px' : ''};\n    margin-bottom: 5px;\n    color: #959595;\n    margin-top: ${({ categoryCheck }) => categoryCheck ? '20px' : ''};\n  }\n  ${({ invalid }) => invalid ?\n    `div.multi-select__control {\n      border-color: #F44336!important;\n    }` : ''};\n`;\n\nexport default DropdownWrapper;\n","// This function pulls the matching value objects from state for each Dropdown component if an existing value exists - otherwise, returns empty object\nconst getValueFromState = (valueKey, state) => {\n  let obj = {};\n  // eslint-disable-next-line array-callback-return\n  state.map(option => {\n    if (option.value === valueKey) {\n      obj = option;\n    }\n  });\n  return obj;\n};\n\nexport default getValueFromState;\n","export default [\n  {\n    label: 'Right Triangles',\n    value: 'rightTriangles',\n  },\n  {\n    label: 'Trigonometry',\n    value: 'trigonometry',\n  },\n  {\n    label: 'Topic 3',\n    value: 'topic3',\n  },\n  {\n    label: 'Topic 4',\n    value: 'topic4',\n  },\n  {\n    label: 'Topic 5',\n    value: 'topic5',\n  },\n];\n","export const firstNameAscending = ({ accountInfo: { firstName: firstNameA } }, { accountInfo: { firstName: firstNameB } }) => {\n  if (firstNameA < firstNameB) { return -1; }\n  return 0;\n};\n\nexport const firstNameDescending = ({ accountInfo: { firstName: firstNameA } }, { accountInfo: { firstName: firstNameB } }) => {\n  if (firstNameA > firstNameB) { return -1; }\n  return 0;\n};\n\nexport const lastNameAscending = ({ accountInfo: { lastName: lastNameA } }, { accountInfo: { lastName: lastNameB } }) => {\n  if (lastNameA < lastNameB) { return -1; }\n  return 0;\n};\n\nexport const lastNameDescending = ({ accountInfo: { lastName: lastNameA } }, { accountInfo: { lastName: lastNameB } }) => {\n  if (lastNameA > lastNameB) { return -1; }\n  return 0;\n};\n\nexport const dueDate = ({ dueDate: dueDateA }, { dueDate: dueDateB }) => {\n  if (dueDateA > dueDateB) { return -1; }\n  return 0;\n}\n\nexport const assignDate = ({ assignDate: assignDateA }, { assignDate: assignDateB }) => {\n  if (assignDateA > assignDateB) { return -1; }\n  return 0;\n}\n\nexport const problems = ({ problems: problemsA }, { problems: problemsB }) => {\n  if (problemsA > problemsB) { return -1; }\n  return 0;\n}\n\nexport const completed = ({ completed: completedA, problems: problemsA }, { completed: completedB, problems: problemsB }) => {\n  if (completedA / problemsA > completedB / problemsB) { return -1; }\n  return 0;\n}\n\nexport const flags = ({ flags: flagsA }, { flags: flagsB }) => {\n  if (flagsA > flagsB) { return -1; }\n  return 0;\n}\n\nexport const score = ({ score: scoreA }, { score: scoreB }) => {\n  if (scoreA > scoreB) { return -1; }\n  return 0;\n}\n\nexport const timeEstimate = ({ timeEstimate: timeEstimateA }, { timeEstimate: timeEstimateB }) => {\n  if (timeEstimateA > timeEstimateB) { return -1; }\n  return 0;\n}\n\nexport const subjectAscending = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA < subjectB) { return -1; }\n  return 0;\n}\n\nexport const subjectDescending = ({ subject: subjectA }, { subject: subjectB }) => {\n  if (subjectA > subjectB) { return -1; }\n  return 0;\n}\n","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import React, { Component } from 'react';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport ClassNavBar from '../components/Class/components/ClassNavBar';\nimport TestSectionsPage from '../components/Class/TestSectionsPage';\nimport DetailSummaryPage from '../components/Class/DetailSummaryPage';\nimport DetailWorksheetPage from '../components/Class/DetailWorksheetPage';\n\nimport sampleClass from '../components/Class/utils/sampleClass';\n\nclass Classes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'summary',\n    }\n  }\n\n  onSetActivePage = (active) => this.setState({ active })\n\n  renderCurrentPage = () => {\n    const { active } = this.state;\n    if (active === 'summary') {\n      return <DetailSummaryPage currentClass={sampleClass} />\n    }\n    if (active === 'testSections') {\n      return <TestSectionsPage />;\n    }\n    if (active === 'worksheets') {\n      return <DetailWorksheetPage />;\n    }\n    return null;\n  }\n\n  render() {\n    const { active } = this.state;\n    return (\n      <React.Fragment>\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-5 switcher-section\">\n            <StickyContainer>\n            <Sticky>\n        {({ style }) => (\n          <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n              <div className=\"mobile-header\">\n                <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n              </div>\n              <nav className=\"breadcrumb-holder\">\n                <div className=\"nav-wrapper \">\n                  <a href=\"#!\" className=\"breadcrumb\">&lt; Classes</a>\n                </div>\n              </nav>\n              <h2 className=\"h1 white-text\">\n                <span className=\"heading-holder\">\n                  <i className=\"icon-members\"></i>\n                  <span className=\"heading-block\">Some Class in June</span>\n                </span>\n              </h2>\n              <ClassNavBar onSetActivePage={this.onSetActivePage} active={active} />\n            </div>\n        )}\n            </Sticky>\n            {this.renderCurrentPage()}\n          <div className=\"add-btn-block dropdown-small\">\n            <a href=\"#\" className=\"dropdown-trigger waves-effect waves-teal btn add-btn\" data-target='dropdown_assign_selected'><i className=\"material-icons\">add</i> Assign Test Section</a>\n            <ul id='dropdown_assign_selected' className='dropdown-content dropdown-small'>\n              <li><a href=\"#\">From Saved</a></li>\n              <li><a href=\"#\">Create New</a></li>\n            </ul>\n            </div>\n            </StickyContainer>\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Classes;\n","const formatTimeEstimate = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  const hourString = hours !== 0 ? `${hours} hrs` : '';\n  const minuteString = minutes !== 0 ? `${minutes} mins` : '';\n  return `${hourString} ${minuteString}`\n}\n\nexport default formatTimeEstimate;\n","export default [\n  {\n    label: 'Due Date',\n    value: 'dueDate',\n  },\n  {\n    label: 'Assign Date',\n    value: 'assignDate',\n  },\n  {\n    label: 'Problems',\n    value: 'problems',\n  },\n  {\n    label: 'Completed',\n    value: 'completed',\n  },\n  {\n    label: 'Flags',\n    value: 'flags',\n  },\n  {\n    label: 'Score',\n    value: 'score',\n  },\n  {\n    label: 'Time Estimate',\n    value: 'timeEstimate',\n  },\n];\n","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"immutability-helper\");","module.exports = require(\"moment\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-chartjs-2\");","module.exports = require(\"react-select\");","module.exports = require(\"react-sticky\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AA/CA;AACA;AAqDA;AACA;AADA;AAIA;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAKA;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA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CA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA9DA;AAgEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAhBA;AAkBA;AACA;AArFA;AAsFA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAxGA;AAyGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/GA;AAiHA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAQA;AACA;AA1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAYA;AACA;;;AAgHA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlKA;AACA;AAoKA;;;;;;;;;;;;AC9KA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;;;;;;;;;;;AC5JA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAUA;AAAA;AAAA;AAAA;AACA;AAXA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAcA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AArBA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAUA;;;;AA7MA;AACA;AA+MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrOA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AAAA;AACA;AARA;AAQA;AAAA;AACA;AATA;AASA;AAAA;AACA;AAVA;AAUA;AAAA;AACA;AAXA;AAYA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApBA;AAqBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AA5BA;AACA;AADA;AAFA;AAKA;AACA;;;AAyvIA;AACA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAeA;AAAA;AAAA;AAAA;AACA;AAhBA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlBA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAoBA;AAAA;AAAA;AAAA;AACA;AArBA;AAsBA;AAAA;AAAA;AAAA;AACA;AAvBA;AAuBA;AAAA;AAAA;AAAA;AACA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAlBA;AAoBA;AACA;AAjDA;AAkDA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA7DA;AA8DA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAnGA;AAoGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AArHA;AAsHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApIA;AAsIA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAhBA;AACA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AA1KA;AA2KA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AACA;AA1KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAaA;AACA;;;AAyKA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;;;;AAlNA;AACA;AAoNA;;;;;;;;;;;;AChOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAjDA;AACA;AA4DA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;ACrEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AA9DA;AAoEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AA1FA;AA0GA;;;;;;;;;;;;AC1GA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAAA;AAUA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAFA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAaA;AAAA;AAAA;AAIA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAAA;AAMA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAAA;AAMA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AA1CA;AAiDA;AACA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAYA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAnBA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAMA;;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;ACjjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AARA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AApBA;AACA;AADA;AAFA;AAKA;AACA;;;AAiBA;AAAA;AACA;AADA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAhBA;AAqBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;;;;AAjEA;AACA;AAmEA;;;;;;;;;;;;AC7EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}