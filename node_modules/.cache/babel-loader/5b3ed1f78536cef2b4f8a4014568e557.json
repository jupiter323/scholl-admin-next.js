{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Actions = function Actions(_ref) {\n  var _ref$state = _ref.state,\n      ccAdmin = _ref$state.ccAdmin,\n      requireUserToChange = _ref$state.requireUserToChange,\n      password = _ref$state.password,\n      confirmPassword = _ref$state.confirmPassword,\n      handleActionsChange = _ref.handleActionsChange,\n      onResetPassword = _ref.onResetPassword,\n      onSendWelcomeEmail = _ref.onSendWelcomeEmail,\n      onSendPasswordResetEmail = _ref.onSendPasswordResetEmail;\n  return React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h2\", null, \"Actions\"), React.createElement(\"div\", {\n    className: \"row mb-0 d-flex-content large sameheight\"\n  }, React.createElement(\"div\", {\n    className: \"col s12 l5\"\n  }, React.createElement(\"div\", {\n    className: \"card\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"account-block\"\n  }, React.createElement(\"h3\", null, \"Welcome Email\"), React.createElement(\"p\", null, \"Use this feature to send (or resend) a welcome email to the student. The welcome email contains login instruction and a temporary password that the student can use to login for the \\uFB01rst time. Keep in mind that sending this email will automatically set a new, randomly generated password which may be confusing to the student if he or she has already received a welcome email or has already set a permanent password.\"), React.createElement(\"p\", null, React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light bg-blue\",\n    name: \"action\",\n    onClick: onSendWelcomeEmail\n  }, \"(Re)send Welcome Email\")), React.createElement(\"label\", null, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    name: \"ccAdmin\",\n    id: \"cc-admin\",\n    value: ccAdmin,\n    onChange: function onChange() {\n      return handleActionsChange({}, 'ccAdmin', true);\n    }\n  }), React.createElement(\"span\", {\n    className: \"large-label\"\n  }, \"cc me at:  this_is_me@gmail.com\"))), React.createElement(\"div\", {\n    className: \"account-block\"\n  }, React.createElement(\"h3\", null, \"Password Reset Email\"), React.createElement(\"p\", null, \"The student will receive an email with a new temporary password. Keep in mind, the student's current password will no longer be valid..\"), React.createElement(\"p\", null, React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light bg-blue\",\n    name: \"action\",\n    onClick: onSendPasswordResetEmail\n  }, \"Send Password Reset Email\")))))), React.createElement(\"div\", {\n    className: \"col s12 l5\"\n  }, React.createElement(\"div\", {\n    className: \"card\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"account-block\"\n  }, React.createElement(\"h3\", null, \"Reset Password\"), React.createElement(\"p\", null, \"The student will receive an email with a new temporary password. Keep in mind, the student's current password will no longer be valid.\"), React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"input-field col s12 focus-blue\"\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: function onChange(event) {\n      return handleActionsChange(event, 'password');\n    }\n  }), React.createElement(\"label\", {\n    className: password.length ? 'label active' : 'label',\n    htmlFor: \"password\"\n  }, \"Password\"), React.createElement(\"span\", {\n    className: \"note\"\n  }, \"6 to 20 characters\"))), React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"input-field col s12 focus-blue\"\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    id: \"confirm-password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: function onChange(event) {\n      return handleActionsChange(event, 'confirmPassword');\n    }\n  }), React.createElement(\"label\", {\n    className: confirmPassword.length ? 'label active' : 'label',\n    htmlFor: \"confirm-password\"\n  }, \"Confirm Password\"))), React.createElement(\"p\", null, React.createElement(\"label\", null, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    id: \"require-user-to-change\",\n    name: \"requireUserToChange\",\n    value: requireUserToChange,\n    onChange: function onChange() {\n      return handleActionsChange({}, 'ccAdmin', true);\n    }\n  }), React.createElement(\"span\", {\n    className: \"large-label\"\n  }, \"Require user to change\"))), React.createElement(\"p\", null, React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light bg-blue\",\n    name: \"action\",\n    onClick: onResetPassword\n  }, \"Set Password\"))))))));\n};\n\nexport default Actions;","map":null,"metadata":{},"sourceType":"module"}