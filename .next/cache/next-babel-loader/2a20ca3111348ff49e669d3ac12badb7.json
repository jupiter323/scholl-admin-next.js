{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      topic: ''\n    }, this.props.onClearFilters));\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onSetFilteredTopicState,\n        onUnsetFilteredTopicState,\n        onSetSort\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'topic') {\n        if (event === '') {\n          return onUnsetFilteredTopicState();\n        }\n\n        return onSetFilteredTopicState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        worksheetName\n      } = this.state;\n\n      if (worksheetName === '') {\n        onUnsetFilteredState();\n      }\n\n      const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: '',\n      sort: {}\n    };\n  }\n\n  render() {\n    const {\n      open,\n      worksheetName,\n      topic,\n      sort\n    } = this.state;\n    const {\n      currentView,\n      onChangeView,\n      handleFilterClick,\n      subjectFilters,\n      difficultyFilters,\n      typeFilters,\n      sourceFilters\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"reading\",\n      id: \"reading\",\n      checked: subjectFilters.indexOf('reading') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"reading\"\n    }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"writing\",\n      id: \"writing\",\n      checked: subjectFilters.indexOf('writing') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"writing\"\n    }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"math\",\n      id: \"math\",\n      checked: subjectFilters.indexOf('math') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"math\"\n    }, \"Math\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"mixedSubject\",\n      id: \"mixedSubject\",\n      checked: subjectFilters.indexOf('mixedSubject') !== -1,\n      onChange: () => handleFilterClick('subject', 'mixedSubject')\n    }), __jsx(\"label\", {\n      htmlFor: \"mixedSubject\"\n    }, \"Mixed\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"basic\",\n      id: \"basic\",\n      checked: difficultyFilters.indexOf('basic') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"basic\"\n    }, \"Basic\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"medium\",\n      id: \"medium\",\n      checked: difficultyFilters.indexOf('medium') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"medium\"\n    }, \"Medium\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"advanced\",\n      id: \"advanced\",\n      checked: difficultyFilters.indexOf('advanced') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"advanced\"\n    }, \"Advanced\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      name: \"mixedDifficulty\",\n      id: \"mixedDifficulty\",\n      checked: difficultyFilters.indexOf('mixedDifficulty') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"mixedDifficulty\"\n    }, \"Mixed\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"skillBuilders\",\n      name: \"skillBuilders\",\n      checked: typeFilters.indexOf('skillBuilders') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('type', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"skillBuilders\"\n    }, \"Skill Builders\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"satPractice\",\n      name: \"satPractice\",\n      checked: typeFilters.indexOf('satPractice') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('type', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"satPractice\"\n    }, \"SAT Practice\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"mixedType\",\n      name: \"mixedType\",\n      checked: typeFilters.indexOf('mixedType') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('type', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"mixedType\"\n    }, \"Mixed\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"builtIn\",\n      name: \"builtIn\",\n      checked: sourceFilters.indexOf('builtIn') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('source', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"builtIn\"\n    }, \"Built-In\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"userCreated\",\n      name: \"userCreated\",\n      checked: sourceFilters.indexOf('userCreated') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('source', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"userCreated\"\n    }, \"User Created\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\"\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      value: worksheetName,\n      className: \"input-control validate\",\n      onChange: event => this.handleFilterChange(event, 'worksheetName')\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: worksheetName.length ? 'label active' : 'label',\n      htmlFor: \"name_search\"\n    }, \"Search\"))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(topic, sampleTopics),\n      onChange: event => this.handleFilterChange(event, 'topic'),\n      options: sampleTopics,\n      label: \"Topic\",\n      stateKey: \"topic\",\n      dropdownKey: \"topic\"\n    }))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 xl7\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, worksheetSortOptions),\n      onChange: event => this.handleFilterChange(event, 'sort'),\n      options: worksheetSortOptions,\n      label: \"Sort By\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), __jsx(\"div\", {\n      className: \"switcher-block col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"view-switcher\"\n    }, __jsx(\"ul\", {\n      className: \"switcher center-align\"\n    }, __jsx(\"li\", {\n      \"data-view\": \"view-full\",\n      className: currentView === 'full' ? 'active' : '',\n      onClick: () => onChangeView('full')\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"Full View\")), __jsx(\"li\", {\n      \"data-view\": \"view-list\",\n      className: currentView === 'list' ? 'active' : '',\n      onClick: () => onChangeView('list')\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"List View\"))))), __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\"\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}