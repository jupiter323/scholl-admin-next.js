{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport InstructorDetailsModal from '../InstructorDetailsModal';\nimport Modal from '../../../../Modal';\n\nvar _data = function data(value, total) {\n  return {\n    datasets: [{\n      data: [value, total - value],\n      backgroundColor: ['#62b771', '#eaeaea']\n    }]\n  };\n};\n\nvar InstructorCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorCard, _React$Component);\n\n  function InstructorCard(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorDetailsModal\", function () {\n      _this.props.onCloseDropdown();\n\n      _this.setState({\n        instructorDetailsModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorDetailsModal\", function () {\n      return _this.setState({\n        instructorDetailsModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneInstructor\", function () {\n      return _this.props.onCloneInstructor(_this.props.instructor);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDeleteModal\", function () {\n      return _this.setState({\n        deleteModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDeleteModal\", function () {\n      return _this.setState({\n        deleteModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onConfirmDeleteInstructor\", function () {\n      var _this$props = _this.props,\n          onDeleteInstructor = _this$props.onDeleteInstructor,\n          instructor = _this$props.instructor,\n          onCloseDropdown = _this$props.onCloseDropdown;\n      onDeleteInstructor(instructor);\n      onCloseDropdown();\n\n      _this.onCloseDeleteModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props2 = _this.props,\n          onSetDropdown = _this$props2.onSetDropdown,\n          onCloseDropdown = _this$props2.onCloseDropdown,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          index = _this$props2.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _this.state = {\n      instructorDetailsModalOpen: false,\n      deleteModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(InstructorCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          deleteModalOpen = _this$state.deleteModalOpen,\n          instructorDetailsModalOpen = _this$state.instructorDetailsModalOpen;\n      var _this$props3 = this.props,\n          dropdownIsOpen = _this$props3.dropdownIsOpen,\n          dropdownIndex = _this$props3.dropdownIndex,\n          index = _this$props3.index,\n          instructor = _this$props3.instructor,\n          onSaveInstructorChanges = _this$props3.onSaveInstructorChanges;\n      var _instructor$accountIn = instructor.accountInfo;\n      _instructor$accountIn = _instructor$accountIn === void 0 ? {} : _instructor$accountIn;\n      var lastName = _instructor$accountIn.lastName,\n          firstName = _instructor$accountIn.firstName,\n          email = _instructor$accountIn.email,\n          _instructor$basicInfo = instructor.basicInfo;\n      _instructor$basicInfo = _instructor$basicInfo === void 0 ? {} : _instructor$basicInfo;\n      var activeStudents = _instructor$basicInfo.activeStudents,\n          pastStudents = _instructor$basicInfo.pastStudents,\n          unactivatedStudents = _instructor$basicInfo.unactivatedStudents,\n          averageImprovement = _instructor$basicInfo.averageImprovement,\n          averageInitialScore = _instructor$basicInfo.averageInitialScore,\n          averageFinalScore = _instructor$basicInfo.averageFinalScore,\n          studentsAchievingTargetScore = _instructor$basicInfo.studentsAchievingTargetScore;\n      return React.createElement(React.Fragment, null, React.createElement(InstructorDetailsModal, {\n        instructor: instructor,\n        open: instructorDetailsModalOpen,\n        onClose: this.onCloseInstructorDetailsModal,\n        onSaveInstructorChanges: onSaveInstructorChanges,\n        onOpenDeleteModal: this.onOpenDeleteModal,\n        deleteModalOpen: deleteModalOpen\n      }), React.createElement(Modal, {\n        open: deleteModalOpen,\n        onConfirm: this.onConfirmDeleteInstructor,\n        onClose: this.onCloseDeleteModal,\n        header: \"Are You Sure?\",\n        body: \"Deleting this instructor will be permanent\"\n      }), React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: \"card-main card-location card card-large\"\n      }, React.createElement(\"div\", {\n        className: \"owner-box card-panel\",\n        style: {\n          backgroundColor: '#31837a',\n          color: '#fff'\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"user-block\"\n      }, React.createElement(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: '#18b5e9',\n          color: '#fff'\n        }\n      }, React.createElement(\"span\", {\n        className: \"initials\"\n      }, \"NT\")), React.createElement(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: '#fff'\n        }\n      }, React.createElement(\"h4\", {\n        className: \"h3\"\n      }, lastName, \", \", firstName), React.createElement(\"a\", {\n        href: \"mailto:\".concat(email)\n      }, email)))), React.createElement(\"div\", {\n        className: \"col s3 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"col right-align\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-user\"\n      }), React.createElement(\"span\", {\n        className: \"text-icon\"\n      }, \"Instructor\"))), React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.handleDropdownClick,\n        className: \"dropdown-trigger btn\",\n        \"data-target\": \"dropdown05\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown05\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          width: '103.991px',\n          left: '116.974px',\n          top: '7.99716px',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenInstructorDetailsModal,\n        className: \"modal-trigger link-block\"\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onCloneInstructor\n      }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Impersonate\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenDeleteModal\n      }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex align-items-center mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m5\"\n      }, React.createElement(\"div\", {\n        className: \"chart-container\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, React.createElement(Doughnut, {\n        data: function data() {\n          return _data(activeStudents, activeStudents - 10);\n        },\n        height: 110,\n        width: 110,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 55,\n          tooltips: false\n        }\n      }), React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: '#31837a',\n          marginBottom: '-15px'\n        }\n      }, Math.floor(studentsAchievingTargetScore / activeStudents * 100), \"%\")), React.createElement(\"div\", {\n        className: \"chart-description\",\n        style: {\n          color: '#31837a',\n          marginTop: '45px'\n        }\n      }, \"Students Who Achieved Target Score\"))), React.createElement(\"div\", {\n        className: \"col s12 m7\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list\"\n      }, React.createElement(\"li\", {\n        className: \"style-red-darken\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, activeStudents), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"active students\")), React.createElement(\"li\", {\n        className: \"style-pink-darken\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, pastStudents), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"past students\")), React.createElement(\"li\", null, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, unactivatedStudents), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"unactivated students\")), React.createElement(\"li\", {\n        className: \"style-blue-light\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, \"+\", averageImprovement), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average improvement\")), React.createElement(\"li\", {\n        className: \"style-blue\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, averageInitialScore), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average initial score\")), React.createElement(\"li\", {\n        className: \"style-blue-dark\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, averageFinalScore), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average final score\"))))), React.createElement(\"div\", {\n        className: \"card-footer\"\n      }, React.createElement(\"div\", {\n        className: \"meta-info\"\n      }, React.createElement(\"p\", {\n        className: \"truncate\"\n      }, \"First Location,  Second Location, Possible Additional Truncated More Locatioa...\")))))));\n    }\n  }]);\n\n  return InstructorCard;\n}(React.Component);\n\nInstructorCard.propTypes = {\n  instructor: PropTypes.object.isRequired,\n  onSaveInstructorChanges: PropTypes.func.isRequired,\n  onDeleteInstructor: PropTypes.func.isRequired,\n  onCloneInstructor: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number\n};\nexport default InstructorCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/ListPage/components/InstructorCard/index.js"],"names":["React","PropTypes","Doughnut","InstructorDetailsModal","Modal","data","value","total","datasets","backgroundColor","InstructorCard","props","onCloseDropdown","setState","instructorDetailsModalOpen","onCloneInstructor","instructor","deleteModalOpen","onDeleteInstructor","onCloseDeleteModal","event","onSetDropdown","dropdownIsOpen","index","preventDefault","state","dropdownIndex","onSaveInstructorChanges","accountInfo","lastName","firstName","email","basicInfo","activeStudents","pastStudents","unactivatedStudents","averageImprovement","averageInitialScore","averageFinalScore","studentsAchievingTargetScore","onCloseInstructorDetailsModal","onOpenDeleteModal","onConfirmDeleteInstructor","color","handleDropdownClick","display","width","left","top","transformOrigin","opacity","transform","onOpenInstructorDetailsModal","circumference","Math","PI","rotation","cutoutPercentage","tooltips","marginBottom","floor","marginTop","Component","propTypes","object","isRequired","func","bool","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport InstructorDetailsModal from '../InstructorDetailsModal';\n\nimport Modal from '../../../../Modal';\n\nconst data = (value, total) => ({\n  datasets: [{\n    data: [ value, total-value ],\n    backgroundColor: [\n      '#62b771',\n      '#eaeaea',\n    ],\n  }],\n})\n\nclass InstructorCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instructorDetailsModalOpen: false,\n      deleteModalOpen: false,\n    };\n  }\n\n  onOpenInstructorDetailsModal = () => {\n    this.props.onCloseDropdown();\n    this.setState({ instructorDetailsModalOpen: true });\n  };\n\n  onCloseInstructorDetailsModal = () => this.setState({ instructorDetailsModalOpen: false });\n\n  onCloneInstructor = () => this.props.onCloneInstructor(this.props.instructor)\n\n  onOpenDeleteModal = () => this.setState({ deleteModalOpen: true });\n  onCloseDeleteModal = () => this.setState({ deleteModalOpen: false });\n\n  onConfirmDeleteInstructor = () => {\n    const { onDeleteInstructor, instructor, onCloseDropdown } = this.props;\n    onDeleteInstructor(instructor);\n    onCloseDropdown();\n    this.onCloseDeleteModal();\n  }\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  render() {\n    const { deleteModalOpen, instructorDetailsModalOpen } = this.state;\n    const {\n      dropdownIsOpen, dropdownIndex, index, instructor, onSaveInstructorChanges } = this.props;\n    const {\n      accountInfo: { lastName, firstName, email } = {},\n      basicInfo: { activeStudents, pastStudents, unactivatedStudents, averageImprovement, averageInitialScore, averageFinalScore,studentsAchievingTargetScore } = {},\n    } = instructor;\n    return (\n      <React.Fragment>\n        <InstructorDetailsModal\n          instructor={instructor}\n          open={instructorDetailsModalOpen}\n          onClose={this.onCloseInstructorDetailsModal}\n          onSaveInstructorChanges={onSaveInstructorChanges}\n          onOpenDeleteModal={this.onOpenDeleteModal}\n          deleteModalOpen={deleteModalOpen}\n        />\n        <Modal\n          open={deleteModalOpen}\n          onConfirm={this.onConfirmDeleteInstructor}\n          onClose={this.onCloseDeleteModal}\n          header=\"Are You Sure?\"\n          body=\"Deleting this instructor will be permanent\"\n        />\n        <div className=\"card-main-col col s12 m8 l7 xl5\">\n          <div className=\"card-main card-location card card-large\">\n            <div className=\"owner-box card-panel\" style={{ backgroundColor: '#31837a', color: '#fff' }}>\n              <div className=\"card-panel-row row\">\n                <div className=\"col s9\">\n                  <div className=\"user-block\">\n                    <div className=\"user-circle\" style={{ backgroundColor: '#18b5e9', color: '#fff' }}>\n                      <span className=\"initials\">NT</span>\n                    </div>\n                    <div className=\"user-text\" style={{ color: '#fff' }}>\n                      <h4 className=\"h3\">{lastName}, {firstName}</h4>\n                      <a href={`mailto:${email}`}>{email}</a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s3 right-align\">\n                  <div className=\"row icons-row\">\n                    <div className=\"col right-align\">\n                      <span className=\"block-icon\">\n                        <i className=\"icon-user\"></i>\n                        <span className=\"text-icon\">Instructor</span>\n                      </span>\n                    </div>\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href=\"#\"\n                        onClick={this.handleDropdownClick}\n                        className=\"dropdown-trigger btn\"\n                        data-target=\"dropdown05\"\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id=\"dropdown05\"\n                          className=\"dropdown-content dropdown-wide\"\n                          style={{ display: 'block', width: '103.991px', left: '116.974px', top: '7.99716px', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li>\n                            <a\n                              href=\"#\"\n                              onClick={this.onOpenInstructorDetailsModal}\n                              className=\"modal-trigger link-block\"\n                            >\n                              Edit\n                            </a>\n                          </li>\n                          <li>\n                            <a\n                              href=\"#\"\n                              onClick={this.onCloneInstructor}\n                            >\n                              Clone\n                            </a>\n                          </li>\n                          <li><a href=\"#!\">Impersonate</a></li>\n                          <li>\n                            <a\n                              href=\"#\"\n                              onClick={this.onOpenDeleteModal}\n                            >\n                              Delete\n                            </a>\n                          </li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"row d-flex align-items-center mb-0\">\n                <div className=\"col s12 m5\">\n                  <div className=\"chart-container\">\n                    <div className=\"chart-holder\">\n                      <Doughnut\n                          data={() => data(activeStudents, activeStudents-10)}\n                          height={110}\n                          width={110}\n                          options={{\n                            circumference: 1.45 * Math.PI,\n                                rotation: -3.85,\n                                cutoutPercentage: 55,\n                                tooltips: false,\n                          }}\n                        />\n                      <span className=\"chart-value\" style={{ backgroundColor: '#31837a',marginBottom: '-15px' }}>{Math.floor(studentsAchievingTargetScore / activeStudents * 100)}%</span>\n                    </div>\n                    <div className=\"chart-description\" style={{ color: '#31837a',marginTop: '45px' }}>Students Who Achieved Target Score</div>\n                  </div>\n                </div>\n                <div className=\"col s12 m7\">\n                  <ul className=\"points-list\">\n                    <li className=\"style-red-darken\">\n                      <span className=\"badge-circle\">{activeStudents}</span>\n                      <span className=\"point-text\">active students</span>\n                    </li>\n                    <li className=\"style-pink-darken\">\n                      <span className=\"badge-circle\">{pastStudents}</span>\n                      <span className=\"point-text\">past students</span>\n                    </li>\n                    <li>\n                      <span className=\"badge-circle\">{unactivatedStudents}</span>\n                      <span className=\"point-text\">unactivated students</span>\n                    </li>\n                    <li className=\"style-blue-light\">\n                      <span className=\"badge-circle\">+{averageImprovement}</span>\n                      <span className=\"point-text\">average improvement</span>\n                    </li>\n                    <li className=\"style-blue\">\n                      <span className=\"badge-circle\">{averageInitialScore}</span>\n                      <span className=\"point-text\">average initial score</span>\n                    </li>\n                    <li className=\"style-blue-dark\">\n                      <span className=\"badge-circle\">{averageFinalScore}</span>\n                      <span className=\"point-text\">average final score</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"card-footer\">\n                <div className=\"meta-info\">\n                  <p className=\"truncate\">First Location,  Second Location, Possible Additional Truncated More Locatioa...</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nInstructorCard.propTypes = {\n  instructor: PropTypes.object.isRequired,\n  onSaveInstructorChanges: PropTypes.func.isRequired,\n  onDeleteInstructor: PropTypes.func.isRequired,\n  onCloneInstructor: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  dropdownIndex: PropTypes.number,\n};\n\nexport default InstructorCard;\n"]},"metadata":{},"sourceType":"module"}