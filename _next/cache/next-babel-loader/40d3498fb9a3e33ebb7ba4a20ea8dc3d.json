{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/IndividualStudentPage/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Sticky } from 'react-sticky';\nimport AccountPage from '../AccountPage';\nimport DetailSummaryPage from '../DetailSummaryPage';\nimport DetailWorksheetPage from '../DetailWorksheetPage';\nimport DetailLessonList from '../DetailLessonList';\nimport DetailTestList from '../DetailTestList';\nimport LessonDetailAnswerSheet from '../LessonDetailAnswerSheet';\nimport StudentNavBar from '../components/StudentNavBar';\nimport SessionCalendar from '../Calendar';\nimport { makeSelectAssignLessonsModalOpen, makeSelectAssignWorkSheetsModalOpen, makeSelectIsVisibleTopBar } from '../index/selectors';\nimport { setIsVisibleTopBar, setFetchStudentTestsStatus } from '../index/actions';\nimport { updateStudentActivationApi } from '../index/api';\n\nclass IndividualStudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const {\n        onSetIsVisibleTopBar,\n        isVisibleTopBar\n      } = this.props;\n\n      if (!isVisibleTopBar) {\n        onSetIsVisibleTopBar(true);\n      }\n    });\n\n    _defineProperty(this, \"onToggleActivationDropdown\", () => this.setState(({\n      activationDropdownOpen\n    }) => ({\n      activationDropdownOpen: !activationDropdownOpen\n    })));\n\n    _defineProperty(this, \"onSetActivePage\", activePage => this.setState({\n      activePage\n    }));\n\n    _defineProperty(this, \"onHandleDetailsChange\", (name, event) => this.setState({\n      [name]: event.target.value\n    }));\n\n    _defineProperty(this, \"renderCurrentPage\", () => {\n      const {\n        activePage\n      } = this.state; // The  data is not enough for now,so we are using dummy data for selected student detail\n\n      const {\n        student\n      } = this.props; // const student = sampleSelectedStudent;\n\n      if (activePage === 'summary') {\n        return __jsx(DetailSummaryPage, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'account') {\n        return __jsx(AccountPage, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'lessons') {\n        return __jsx(DetailLessonList, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'worksheets') {\n        return __jsx(DetailWorksheetPage, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'answer-sheet') {\n        return __jsx(LessonDetailAnswerSheet, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'test') {\n        return __jsx(DetailTestList, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n\n      if (activePage === 'calendar') {\n        return __jsx(SessionCalendar, {\n          user: student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"handleActivateButton\", async () => {\n      const {\n        student\n      } = this.props;\n      const payload = {\n        user_id: student.id,\n        code: this.state.licenseCode,\n        activate: true\n      };\n      const result = await updateStudentActivationApi(payload); // Check status code for 200 response\n\n      if (result.toString().split('')[0] !== '2') return null; // Set status of student to active true\n\n      this.props.updateStudentStatus();\n      this.onToggleActivationDropdown();\n    });\n\n    _defineProperty(this, \"onRedirectToStudentPage\", event => {\n      const {\n        onRedirectToStudentPage,\n        onSetFetchStudentTestsStatus\n      } = this.props;\n      onRedirectToStudentPage(event);\n      onSetFetchStudentTestsStatus(false);\n    });\n\n    this.state = {\n      activePage: 'summary',\n      activationDropdownOpen: false,\n      licenseCode: '',\n      currentTestSection: {},\n      tests: []\n    };\n  }\n\n  render() {\n    const {\n      student: {\n        active,\n        studentInformation: {\n          firstName,\n          lastName\n        }\n      }\n    } = this.props;\n    const {\n      activePage,\n      activationDropdownOpen,\n      licenseCode\n    } = this.state;\n    const {\n      assignLessonsModalOpen,\n      assignWorkSheetsModalOpen,\n      isVisibleTopBar\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, !assignLessonsModalOpen && !assignWorkSheetsModalOpen && isVisibleTopBar ? __jsx(Sticky, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, ({\n      style\n    }) => __jsx(\"div\", {\n      className: \"title-row card-panel\",\n      style: _objectSpread({}, style, {\n        zIndex: 1999\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"mobile-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"slide-out\",\n      className: \"sidenav-trigger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"menu\"))), __jsx(\"nav\", {\n      className: \"breadcrumb-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"nav-wrapper \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"breadcrumb\",\n      onClick: e => this.onRedirectToStudentPage(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"< Students\"))), __jsx(\"h2\", {\n      className: \"h1 white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"heading-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"heading-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, firstName, \" \", lastName))), __jsx(StudentNavBar, {\n      activePage: activePage,\n      onSetActivePage: this.onSetActivePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"activate-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, active ? __jsx(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      className: \"btn-text visible-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Account Activated\"), ' ', __jsx(\"i\", {\n      className: \"icon-unlock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })) : __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onToggleActivationDropdown,\n      className: \"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\",\n      \"data-target\": \"dropdown_activate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      className: \"btn-text visible-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Activate Account\"), ' ', __jsx(\"i\", {\n      className: \"icon-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      id: \"dropdown_activate\",\n      className: \"dropdown-content\",\n      style: activationDropdownOpen ? {\n        display: 'block',\n        opacity: '1'\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"title-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Ready to begin your course?\"), __jsx(\"div\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Please enter a valid license code below.\")), __jsx(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: licenseCode,\n      id: \"license-code\",\n      onChange: event => this.onHandleDetailsChange('licenseCode', event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      className: \"label\",\n      htmlFor: \"license_code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"License Code\")), __jsx(\"div\", {\n      className: \"btn-holder center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-blue\",\n      type: \"submit\",\n      onClick: () => this.handleActivateButton(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Activate\")), __jsx(\"div\", {\n      className: \"text-block center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"If you need license codes, you can get them here:\", ' ', __jsx(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-light btn-small btn-blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Purchase Licenses\"))), __jsx(\"div\", {\n      className: \"text-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"*Note: \"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"We o\\uFB00er discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.\"))))))) : null, this.renderCurrentPage());\n  }\n\n}\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired,\n  isVisibleTopBar: PropTypes.bool,\n  onSetIsVisibleTopBar: PropTypes.func.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen: makeSelectAssignWorkSheetsModalOpen(),\n  isVisibleTopBar: makeSelectIsVisibleTopBar()\n});\n\nfunction maptDispatchToProps(dispatch) {\n  return {\n    onSetIsVisibleTopBar: value => dispatch(setIsVisibleTopBar(value)),\n    onSetFetchStudentTestsStatus: status => dispatch(setFetchStudentTestsStatus(status))\n  };\n}\n\nconst withConnect = connect(mapStateToProps, maptDispatchToProps);\nexport default compose(withConnect)(IndividualStudentPage);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/IndividualStudentPage/index.js"],"names":["React","PropTypes","createStructuredSelector","connect","compose","Sticky","AccountPage","DetailSummaryPage","DetailWorksheetPage","DetailLessonList","DetailTestList","LessonDetailAnswerSheet","StudentNavBar","SessionCalendar","makeSelectAssignLessonsModalOpen","makeSelectAssignWorkSheetsModalOpen","makeSelectIsVisibleTopBar","setIsVisibleTopBar","setFetchStudentTestsStatus","updateStudentActivationApi","IndividualStudentPage","Component","constructor","props","onSetIsVisibleTopBar","isVisibleTopBar","setState","activationDropdownOpen","activePage","name","event","target","value","state","student","payload","user_id","id","code","licenseCode","activate","result","toString","split","updateStudentStatus","onToggleActivationDropdown","onRedirectToStudentPage","onSetFetchStudentTestsStatus","currentTestSection","tests","render","active","studentInformation","firstName","lastName","assignLessonsModalOpen","assignWorkSheetsModalOpen","style","zIndex","e","onSetActivePage","display","opacity","onHandleDetailsChange","handleActivateButton","renderCurrentPage","propTypes","object","isRequired","func","bool","mapStateToProps","maptDispatchToProps","dispatch","status","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Sticky } from 'react-sticky';\nimport AccountPage from '../AccountPage';\nimport DetailSummaryPage from '../DetailSummaryPage';\nimport DetailWorksheetPage from '../DetailWorksheetPage';\nimport DetailLessonList from '../DetailLessonList';\nimport DetailTestList from '../DetailTestList';\nimport LessonDetailAnswerSheet from '../LessonDetailAnswerSheet';\nimport StudentNavBar from '../components/StudentNavBar';\nimport SessionCalendar from '../Calendar';\n\nimport {\n  makeSelectAssignLessonsModalOpen,\n  makeSelectAssignWorkSheetsModalOpen,\n  makeSelectIsVisibleTopBar,\n} from '../index/selectors';\n\nimport { setIsVisibleTopBar, setFetchStudentTestsStatus } from '../index/actions';\n\nimport { updateStudentActivationApi } from '../index/api';\n\nclass IndividualStudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage: 'summary',\n      activationDropdownOpen: false,\n      licenseCode: '',\n      currentTestSection: {},\n      tests: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    const { onSetIsVisibleTopBar, isVisibleTopBar } = this.props;\n    if (!isVisibleTopBar) {\n      onSetIsVisibleTopBar(true);\n    }\n  };\n\n  onToggleActivationDropdown = () =>\n    this.setState(({ activationDropdownOpen }) => ({\n      activationDropdownOpen: !activationDropdownOpen,\n    }));\n\n  onSetActivePage = activePage => this.setState({ activePage });\n\n  onHandleDetailsChange = (name, event) => this.setState({ [name]: event.target.value });\n\n  renderCurrentPage = () => {\n    const { activePage } = this.state;\n    // The  data is not enough for now,so we are using dummy data for selected student detail\n    const { student } = this.props;\n    // const student = sampleSelectedStudent;\n    if (activePage === 'summary') {\n      return <DetailSummaryPage user={student} />;\n    }\n    if (activePage === 'account') {\n      return <AccountPage user={student} />;\n    }\n    if (activePage === 'lessons') {\n      return <DetailLessonList user={student} />;\n    }\n    if (activePage === 'worksheets') {\n      return <DetailWorksheetPage user={student} />;\n    }\n    if (activePage === 'answer-sheet') {\n      return <LessonDetailAnswerSheet />;\n    }\n    if (activePage === 'test') {\n      return <DetailTestList user={student} />;\n    }\n    if (activePage === 'calendar') {\n      return <SessionCalendar user={student} />;\n    }\n    return null;\n  };\n\n  handleActivateButton = async () => {\n    const { student } = this.props;\n    const payload = {\n      user_id: student.id,\n      code: this.state.licenseCode,\n      activate: true,\n    };\n    const result = await updateStudentActivationApi(payload);\n    // Check status code for 200 response\n    if (result.toString().split('')[0] !== '2') return null;\n    // Set status of student to active true\n    this.props.updateStudentStatus();\n    this.onToggleActivationDropdown();\n  };\n\n  onRedirectToStudentPage = event => {\n    const { onRedirectToStudentPage, onSetFetchStudentTestsStatus } = this.props;\n    onRedirectToStudentPage(event);\n    onSetFetchStudentTestsStatus(false);\n  };\n\n  render() {\n    const { student: { active, studentInformation: { firstName, lastName } } } = this.props;\n    const { activePage, activationDropdownOpen, licenseCode } = this.state;\n    const { assignLessonsModalOpen, assignWorkSheetsModalOpen, isVisibleTopBar } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When\n            condition={!assignLessonsModalOpen && !assignWorkSheetsModalOpen && isVisibleTopBar}\n          >\n            <Sticky>\n              {({ style }) =>\n                (<div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n                  <div className=\"mobile-header\">\n                    <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\n                      <i className=\"material-icons\">menu</i>\n                    </a>\n                  </div>\n                  <nav className=\"breadcrumb-holder\">\n                    <div className=\"nav-wrapper \">\n                      <a\n                        href=\"#!\"\n                        className=\"breadcrumb\"\n                        onClick={e => this.onRedirectToStudentPage(e)}\n                      >\n                        &lt; Students\n                      </a>\n                    </div>\n                  </nav>\n                  <h2 className=\"h1 white-text\">\n                    <span className=\"heading-holder\">\n                      <i className=\"icon-student\" />\n                      <span className=\"heading-block\">\n                        {firstName} {lastName}\n                      </span>\n                    </span>\n                  </h2>\n                  <StudentNavBar activePage={activePage} onSetActivePage={this.onSetActivePage} />\n                  <div className=\"activate-block\">\n                    <Choose>\n                      <When condition={active}>\n                        <a\n                          href=\"#\"\n                          className=\"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n                        >\n                          <b className=\"btn-text visible-lg\">Account Activated</b>{' '}\n                          <i className=\"icon-unlock\" />\n                        </a>\n                      </When>\n                      <Otherwise>\n                        <a\n                          href=\"#\"\n                          onClick={this.onToggleActivationDropdown}\n                          className=\"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\"\n                          data-target=\"dropdown_activate\"\n                        >\n                          <b className=\"btn-text visible-lg\">Activate Account</b>{' '}\n                          <i className=\"icon-key\" />\n                        </a>\n                      </Otherwise>\n                    </Choose>\n                    <div\n                      id=\"dropdown_activate\"\n                      className=\"dropdown-content\"\n                      style={activationDropdownOpen ? { display: 'block', opacity: '1' } : {}}\n                    >\n                      <div className=\"card-panel\">\n                        <div className=\"title-block\">\n                          <div className=\"h3\">Ready to begin your course?</div>\n                          <div className=\"subtitle\">Please enter a valid license code below.</div>\n                        </div>\n                        <div className=\"input-field\">\n                          <input\n                            type=\"text\"\n                            value={licenseCode}\n                            id=\"license-code\"\n                            onChange={event => this.onHandleDetailsChange('licenseCode', event)}\n                          />\n                          <label className=\"label\" htmlFor=\"license_code\">\n                            License Code\n                          </label>\n                        </div>\n                        <div className=\"btn-holder center-align\">\n                          <button\n                            className=\"btn btn-blue\"\n                            type=\"submit\"\n                            onClick={() => this.handleActivateButton()}\n                          >\n                            Activate\n                          </button>\n                        </div>\n                        <div className=\"text-block center-align\">\n                          <p>\n                            If you need license codes, you can get them here:{' '}\n                            <a href=\"#\" className=\"waves-effect waves-light btn-small btn-blue\">\n                              Purchase Licenses\n                            </a>\n                          </p>\n                        </div>\n                        <div className=\"text-block\">\n                          <p>*Note: </p>\n                          <p>\n                            We oﬀer discounted account licenses for students enrolled in courses\n                            with 5 or more students in a class or group format (as opposed to\n                            individual instruction). These licenses provide the features necessary\n                            to conduct a customized course for the class as a whole, rather than for\n                            individual students.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>)}\n            </Sticky>\n          </When>\n        </Choose>\n        {this.renderCurrentPage()}\n      </React.Fragment>\n    );\n  }\n}\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired,\n  isVisibleTopBar: PropTypes.bool,\n  onSetIsVisibleTopBar: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen: makeSelectAssignWorkSheetsModalOpen(),\n  isVisibleTopBar: makeSelectIsVisibleTopBar(),\n});\n\nfunction maptDispatchToProps(dispatch) {\n  return {\n    onSetIsVisibleTopBar: value => dispatch(setIsVisibleTopBar(value)),\n    onSetFetchStudentTestsStatus: status => dispatch(setFetchStudentTestsStatus(status)),\n  };\n}\n\nconst withConnect = connect(mapStateToProps, maptDispatchToProps);\n\nexport default compose(withConnect)(IndividualStudentPage);\n"]},"metadata":{},"sourceType":"module"}