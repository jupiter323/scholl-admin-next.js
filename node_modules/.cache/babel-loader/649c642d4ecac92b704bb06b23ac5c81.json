{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport { pageNumber, status, assignDate, dueDate, alerts } from '../../utils/sortFunctions';\n\nvar DetailLessonList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailLessonList, _React$Component);\n\n  function DetailLessonList(props) {\n    var _this;\n\n    _classCallCheck(this, DetailLessonList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailLessonList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (lesson) {\n      return _this.setState({\n        nameFilter: lesson\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({}, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortLessons\", function (lessons) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'pageNumber':\n          return lessons.sort(pageNumber);\n\n        case 'status/score':\n          return lessons.sort(status);\n\n        case 'assignmentDate':\n          return lessons.sort(assignDate);\n\n        case 'dueDate':\n          return lessons.sort(dueDate);\n\n        case 'flagCount':\n          return lessons.sort(alerts);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneLesson\", function (index) {\n      var lessons = _this.state.lessons;\n\n      _this.setState(function (prevState) {\n        prevState.lessons.push(lessons[index]);\n        return {\n          lessons: prevState.lessons\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteLesson\", function (index) {\n      var lessons = _this.state.lessons;\n\n      var newLessonsArray = _this.arrayItemRemover(lessons, lessons[index]);\n\n      _this.setState({\n        lessons: newLessonsArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableLessons\", function () {\n      var _this$state = _this.state,\n          sort = _this$state.sort,\n          lessons = _this$state.lessons;\n      var mappableLessons = lessons; // if (sort) {\n      //   return this.onSortLessons(mappableLessons)\n      // }\n\n      return mappableLessons;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (lesson) {\n        return lesson !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var active = _this.state.active;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          lessons: function lessons() {\n            return _this.getMappableLessons();\n          },\n          onDeleteLesson: _this.onDeleteLesson,\n          onCloneLesson: _this.onCloneLesson\n        });\n      }\n    });\n\n    _this.state = {\n      test: true,\n      lessons: _this.props.user.lessons,\n      currentView: 'full',\n      active: 'full',\n      activeFilters: [],\n      sort: \"\",\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(DetailLessonList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          currentView = _this$state2.currentView,\n          activeFilters = _this$state2.activeFilters;\n      return React.createElement(React.Fragment, null, React.createElement(FilterSection, {\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onHandleFilterClick: this.onHandleFilterClick,\n        activeFilters: activeFilters,\n        onClearFilters: this.onClearFilters,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetSort: this.onSetSort\n      }), this.renderCurrentView(), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Lesson\"));\n    }\n  }]);\n\n  return DetailLessonList;\n}(React.Component);\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default DetailLessonList;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailLessonList\\index.js"],"names":["React","PropTypes","update","FilterSection","FullView","pageNumber","status","assignDate","dueDate","alerts","DetailLessonList","props","setState","activeFilters","sort","lesson","nameFilter","filter","view","currentView","active","lessons","state","index","prevState","push","newLessonsArray","arrayItemRemover","currentActiveFilters","indexOf","$push","filterIndex","$splice","mappableLessons","array","value","getMappableLessons","onDeleteLesson","onCloneLesson","test","user","unitFilter","onChangeView","onHandleFilterClick","onClearFilters","onSetFilteredState","onUnsetFilteredState","onSetSort","renderCurrentView","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport { pageNumber, status, assignDate, dueDate, alerts} from '../../utils/sortFunctions';\n\nclass DetailLessonList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: true,\n      lessons: this.props.user.lessons,\n      currentView: 'full',\n      active: 'full',\n      activeFilters: [],\n      sort: \"\",\n      nameFilter: \"\",\n      unitFilter: \"\",\n    }\n  };\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n  onSetSort = (sort) => this.setState({sort})\n  onSetFilteredState = (lesson) => this.setState({nameFilter: lesson })\n  onUnsetFilteredState = (filter) => this.setState({[filter]: \"\" })\n  onChangeView = (view) => this.setState({currentView: view, active: view})\n\n  onSortLessons = (lessons) => {\n    const { sort } = this.state;\n    switch(sort) {\n      case 'pageNumber':\n        return lessons.sort(pageNumber);\n      case 'status/score':\n          return lessons.sort(status);\n      case 'assignmentDate':\n          return lessons.sort(assignDate);\n      case 'dueDate':\n        return lessons.sort(dueDate);\n      case 'flagCount':\n        return lessons.sort(alerts);\n      default:\n        break;  \n\n    }\n  }\n\n  onCloneLesson = (index) => {\n    const { lessons } = this.state;\n    this.setState(prevState => {\n      prevState.lessons.push(lessons[index]);\n      return { lessons: prevState.lessons}\n     })\n  }\n\n  onDeleteLesson = (index) => {\n    const { lessons } = this.state;\n    const newLessonsArray = this.arrayItemRemover(lessons, lessons[index])\n    this.setState({lessons: newLessonsArray})\n  }\n\n  onHandleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  getMappableLessons = () => {\n    const { sort, lessons} = this.state;\n    let mappableLessons = lessons;\n    // if (sort) {\n    //   return this.onSortLessons(mappableLessons)\n    // }\n    return mappableLessons\n  }\n  \n  arrayItemRemover = (array, value) => array.filter((lesson) => lesson !== value)\n\n  renderCurrentView = () => {\n    const {active } = this.state;\n    if (active === 'full') {\n      return <FullView lessons={() => this.getMappableLessons()} onDeleteLesson={this.onDeleteLesson} onCloneLesson={this.onCloneLesson}/>\n    }\n  }\n\n\n  render() {\n    const { currentView, activeFilters } = this.state;\n    return (\n      <React.Fragment>\n        <FilterSection\n        currentView={currentView}\n        onChangeView={this.onChangeView}\n        onHandleFilterClick={this.onHandleFilterClick}\n        activeFilters={activeFilters}\n        onClearFilters={this.onClearFilters}\n        onSetFilteredState={this.onSetFilteredState}\n        onUnsetFilteredState={this.onUnsetFilteredState}\n        onSetSort={this.onSetSort}\n        />\n        {this.renderCurrentView()}\n      <a href=\"#\" className=\"waves-effect waves-teal btn add-btn\"><i className=\"material-icons\">add</i>New Lesson</a>\n      </React.Fragment>\n    )\n  }\n}\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default DetailLessonList;\n"]},"metadata":{},"sourceType":"module"}