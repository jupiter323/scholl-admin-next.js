{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onHandleFilterClick\", filter => {\n      const {\n        activeFilters: currentActiveFilters\n      } = this.state;\n      let activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        const filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      this.setState({\n        activeFilters\n      });\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onSetFilteredLocationState,\n        onUnsetFilteredLocationState,\n        onSetSort\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        name\n      } = this.state;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      activeFilters: []\n    }));\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    this.state = {\n      open: false,\n      name: '',\n      activeFilters: [],\n      location: \"\",\n      sort: \"lastNameDescending\"\n    };\n  }\n\n  render() {\n    const {\n      open,\n      activeFilters,\n      location,\n      sort\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sessions_this_week\",\n      checked: activeFilters.indexOf(\"sessions_this_week\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"sessions_this_week\")\n    }), __jsx(\"label\", {\n      htmlFor: \"sessions_this_week\"\n    }, \"Sessions This Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"session_today\",\n      checked: activeFilters.indexOf(\"session_today\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"session_today\")\n    }), __jsx(\"label\", {\n      htmlFor: \"session_today\"\n    }, \"Session Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sessions_no\",\n      checked: activeFilters.indexOf(\"sessions_no\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"sessions_no\")\n    }), __jsx(\"label\", {\n      htmlFor: \"sessions_no\"\n    }, \"No Sessions Scheduled\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_no\",\n      checked: activeFilters.indexOf(\"gain_no\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_no\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_no\"\n    }, \"No Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_0_49\",\n      checked: activeFilters.indexOf(\"gain_0_49\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_0_49\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_0_49\"\n    }, \"Gain of 0-49\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_50_100\",\n      checked: activeFilters.indexOf(\"gain_50_100\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_50_100\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_50_100\"\n    }, \"Gain of 50-100\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_100_199\",\n      checked: activeFilters.indexOf(\"gain_100_199\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_100_199\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_100_199\"\n    }, \"Gain of 100-199\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_200\",\n      checked: activeFilters.indexOf(\"gain_200\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_200\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_200\"\n    }, \"Gain of 200+\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"current\",\n      checked: activeFilters.indexOf(\"current\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"current\")\n    }), __jsx(\"label\", {\n      htmlFor: \"current\"\n    }, \"Current\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"archived\",\n      checked: activeFilters.indexOf(\"archived\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"archived\")\n    }), __jsx(\"label\", {\n      htmlFor: \"archived\"\n    }, \"Archived\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(location, locationOptions),\n      onChange: event => this.handleFilterChange(event, 'location'),\n      options: locationOptions,\n      label: \"Location\",\n      stateKey: \"location\",\n      dropdownKey: \"location\"\n    }))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\",\n      style: {\n        marginTop: \"50px\"\n      }\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control  validate\"\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: \"label\",\n      htmlFor: \"name_search\"\n    }, \"Search\"))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 xl7\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, sortOptions),\n      onChange: event => this.handleFilterChange(event, 'sort'),\n      options: sortOptions,\n      label: \"Sort\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), __jsx(\"div\", {\n      className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n    }, \"\\xA0\"), __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\",\n      style: {\n        marginTop: \"50px\"\n      }\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? \"Hide Filters\" : \"Open Filters\")))))))));\n  }\n\n}\n\nFilterSection.propTyes = {\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetFilteredLocationState: PropTypes.func.isRequired,\n  onUnsetFilteredLocationState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}