{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2'; // import IndividualStudentPage from '../../IndividualStudentPage';\n// import Dropdown from '../../../FormComponents/Dropdown';\n// import updatedUser from '../../utils/sampleUser';\n\nvar _data = function data(current, target, initial) {\n  return {\n    datasets: [{\n      data: [current - initial, target - initial - (current - initial)],\n      backgroundColor: ['#0085ce', '#eaeaea']\n    }]\n  };\n};\n\nvar StudentCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StudentCard, _React$Component);\n\n  function StudentCard(props) {\n    var _this;\n\n    _classCallCheck(this, StudentCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIsOpen) {\n      return _this.setState({\n        dropdownIsOpen: !dropdownIsOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false\n      });\n    });\n\n    _this.state = {\n      dropdownIsOpen: false,\n      // active: false,\n      selected: false,\n      studentInfo: {},\n      studentEditModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false,\n      addStudentModalOpen: false,\n      newStudentInfo: {}\n    };\n    return _this;\n  } // onSelectStudent = (event) => {\n  //   console.log(\"clicked\")\n  //   this.setState({studentInfo: event.target.value})\n  //   console.log(this.state.studentInfo)\n  // }\n  // renderIndividualPage = () => {\n  //   // eslint-disable-next-line no-console\n  // const { student } = this.props;\n  // return <IndividualStudentPage student={student} />\n  // }\n\n\n  _createClass(StudentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { studentEditModalOpen, cloneModalOpen, showOwnerModalOpen, deleteModalOpen, addStudentModalOpen, newStudentInfo } = this.state;\n      var _this$props = this.props,\n          student = _this$props.student,\n          _this$props$student = _this$props.student,\n          id = _this$props$student.id,\n          active = _this$props$student.active,\n          _this$props$student$t = _this$props$student.testScores,\n          initialScore = _this$props$student$t.initialScore,\n          currentScore = _this$props$student$t.currentScore,\n          targetScore = _this$props$student.courseContext.targetScore,\n          _this$props$student$s = _this$props$student.studentInformation,\n          firstName = _this$props$student$s.firstName,\n          lastName = _this$props$student$s.lastName,\n          email = _this$props$student.emailAddress.email;\n      var dropdownIsOpen = this.state.dropdownIsOpen;\n      return (// <div className=\"cardholder\" role=\"button\" id={id} tabIndex={index}>\n        React.createElement(\"div\", {\n          className: \"card-main-col col s12 m8 l7 xl5\",\n          id: id\n        }, React.createElement(\"div\", {\n          className: active ? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"\n        }, React.createElement(\"div\", {\n          className: \"owner-box card-panel card-panel-panel card-panel-large\",\n          style: {\n            backgroundColor: active ? '#0085ce' : '#9b9b9b',\n            color: '#fff'\n          }\n        }, React.createElement(\"div\", {\n          className: \"card-panel-row row\"\n        }, React.createElement(\"div\", {\n          className: \"col s9\"\n        }, React.createElement(\"div\", {\n          className: \"user-block\"\n        }, React.createElement(\"div\", {\n          className: \"user-circle\",\n          style: {\n            backgroundColor: active ? '#14b14b' : '#808080',\n            color: '#fff',\n            height: '45px'\n          }\n        }, React.createElement(\"img\", {\n          src: \"#\",\n          alt: \"\"\n        })), React.createElement(\"div\", {\n          className: \"user-text\",\n          style: {\n            color: '#fff'\n          }\n        }, React.createElement(\"h4\", {\n          className: \"h3\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          value: student,\n          onClick: function onClick(event) {\n            return _this2.onSelectStudent(event);\n          }\n        }, lastName, \", \", firstName)), React.createElement(\"a\", {\n          href: \"mailto:\".concat(email)\n        }, email)))), React.createElement(\"div\", {\n          className: \"col s2 right-align\"\n        }, React.createElement(\"span\", {\n          className: \"block-icon\"\n        }, React.createElement(\"i\", {\n          className: \"icon-user\"\n        }), React.createElement(\"span\", {\n          className: \"text-icon\"\n        }, \"Student\"))), React.createElement(\"div\", {\n          className: \"col s1 right-align\"\n        }, React.createElement(\"div\", {\n          className: \"row icons-row\"\n        }, React.createElement(\"div\", {\n          className: \"dropdown-block col\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"dropdown-trigger btn\",\n          \"data-target\": \"dropdown01\",\n          onClick: this.onSetDropdown(dropdownIsOpen)\n        }, React.createElement(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen ? React.createElement(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: \"block\",\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_user_edit\",\n          className: \"modal-trigger link-block\"\n        }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Show Owner\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n          className: \"card-content\",\n          ref: this.studentCard\n        }, React.createElement(\"div\", {\n          className: \"row d-flex align-items-center mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"col s12 m6\"\n        }, React.createElement(\"div\", {\n          className: \"chart-container chart-container-large\"\n        }, React.createElement(\"div\", {\n          className: \"chart-holder\"\n        }, active ? React.createElement(Doughnut, {\n          data: function data() {\n            return _data(currentScore, targetScore, initialScore);\n          },\n          height: 210,\n          options: {\n            circumference: 1.45 * Math.PI,\n            rotation: -3.85,\n            cutoutPercentage: 60 // tooltips: false,\n\n          }\n        }) : null, React.createElement(\"span\", {\n          className: \"chart-value\",\n          style: {\n            backgroundColor: \"#0085ce\",\n            bottom: \"7px\"\n          }\n        }, React.createElement(\"span\", {\n          \"data-count-up\": true,\n          \"data-start-val\": initialScore,\n          \"data-end-val\": currentScore,\n          \"data-duration\": \"1\"\n        }, currentScore)), React.createElement(\"span\", {\n          className: \"txt\",\n          style: {\n            top: \"-56px\",\n            left: \"-16px\",\n            color: 'green'\n          }\n        }, currentScore - initialScore)), React.createElement(\"div\", {\n          className: \"chart-row\"\n        }, React.createElement(\"div\", {\n          className: \"chart-col chart-start\"\n        }, React.createElement(\"span\", {\n          className: \"amount\",\n          style: {\n            color: '#0085ce'\n          }\n        }, initialScore), React.createElement(\"span\", {\n          className: \"amount-text\"\n        }, \"\\xA0 initial\")), React.createElement(\"div\", {\n          className: \"chart-col chart-end\"\n        }, React.createElement(\"span\", {\n          className: \"amount\"\n        }, targetScore), React.createElement(\"span\", {\n          className: \"amount-text\"\n        }, \"\\xA0 target\"))))), React.createElement(\"div\", {\n          className: \"col s12 m6\"\n        }, React.createElement(\"ul\", {\n          className: \"points-list-bordered\"\n        }, React.createElement(\"li\", {\n          className: \"style-green\"\n        }, React.createElement(\"span\", {\n          className: \"badge-circle\"\n        }, \"61\"), React.createElement(\"span\", {\n          className: \"point-text\"\n        }, \"complete\")), React.createElement(\"li\", {\n          className: \"style-red\"\n        }, React.createElement(\"span\", {\n          className: \"badge-circle\"\n        }, \"7\"), React.createElement(\"span\", {\n          className: \"point-text\"\n        }, \"overdue\")), React.createElement(\"li\", {\n          className: \"style-orange\"\n        }, React.createElement(\"span\", {\n          className: \"badge-circle\"\n        }, \"3\"), React.createElement(\"span\", {\n          className: \"point-text\"\n        }, \"practice tests\")), React.createElement(\"li\", {\n          className: \"style-blue-lighter\"\n        }, React.createElement(\"span\", {\n          className: \"badge-circle\"\n        }, React.createElement(\"span\", null, \"17\"), \" \", React.createElement(\"span\", {\n          className: \"of\"\n        }, \"of 23\")), React.createElement(\"span\", {\n          className: \"point-text\"\n        }, \"sessions\"))))), React.createElement(\"div\", {\n          className: \"card-inner-row\"\n        }, React.createElement(\"div\", {\n          className: \"row-holder\"\n        }, React.createElement(\"ul\", {\n          className: \"category-list\"\n        }, React.createElement(\"li\", {\n          className: \"category-box\"\n        }, React.createElement(\"span\", {\n          className: \"category-badge badge-purple\"\n        }, \"TW\"), React.createElement(\"span\", {\n          className: \"category-text\"\n        }, \"Tutor Withalongername\")))))))) // </div>\n\n      );\n    }\n  }]);\n\n  return StudentCard;\n}(React.Component);\n\n;\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired // index: PropTypes.number.isRequired,\n  // onHandleStudentCard: PropTypes.func.isRequired,\n\n};\nexport default StudentCard;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\components\\StudentCard\\index.js"],"names":["React","PropTypes","Doughnut","data","current","target","initial","datasets","backgroundColor","StudentCard","props","dropdownIsOpen","setState","state","selected","studentInfo","studentEditModalOpen","cloneModalOpen","showOwnerModalOpen","deleteModalOpen","activateAccountModalOpen","assignInstructorModalOpen","addStudentModalOpen","newStudentInfo","student","id","active","testScores","initialScore","currentScore","targetScore","courseContext","studentInformation","firstName","lastName","email","emailAddress","color","height","event","onSelectStudent","onSetDropdown","display","opacity","transform","studentCard","circumference","Math","PI","rotation","cutoutPercentage","bottom","top","left","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CACA;AACA;AACA;;AACA,IAAMC,KAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAUC,MAAV,EAAkBC,OAAlB;AAAA,SAA+B;AAC1CC,IAAAA,QAAQ,EAAE,CAAC;AACTJ,MAAAA,IAAI,EAAE,CAACC,OAAO,GAACE,OAAT,EAAmBD,MAAM,GAACC,OAAR,IAAoBF,OAAO,GAACE,OAA5B,CAAlB,CADG;AAETE,MAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe;AAFR,KAAD;AADgC,GAA/B;AAAA,CAAb;;IASMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,oEA8BH,UAACC,cAAD;AAAA,aAAoB,MAAKC,QAAL,CAAc;AAACD,QAAAA,cAAc,EAAE,CAACA;AAAlB,OAAd,CAApB;AAAA,KA9BG;;AAAA,sEA+BD;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAED,QAAAA,cAAc,EAAE;AAAlB,OAAd,CAAN;AAAA,KA/BC;;AAGf,UAAKE,KAAL,GAAa;AACTF,MAAAA,cAAc,EAAE,KADP;AAET;AACAG,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,oBAAoB,EAAE,KALb;AAMTC,MAAAA,cAAc,EAAE,KANP;AAOTC,MAAAA,kBAAkB,EAAE,KAPX;AAQTC,MAAAA,eAAe,EAAE,KARR;AASTC,MAAAA,wBAAwB,EAAE,KATjB;AAUTC,MAAAA,yBAAyB,EAAE,KAVlB;AAWTC,MAAAA,mBAAmB,EAAE,KAXZ;AAYTC,MAAAA,cAAc,EAAE;AAZP,KAAb;AAHe;AAiBlB,G,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAKa;AAAA;;AACT;AADS,wBAGuB,KAAKb,KAH5B;AAAA,UAEDc,OAFC,eAEDA,OAFC;AAAA,4CAEQA,OAFR;AAAA,UAEkBC,EAFlB,uBAEkBA,EAFlB;AAAA,UAEsBC,MAFtB,uBAEsBA,MAFtB;AAAA,sDAE8BC,UAF9B;AAAA,UAE4CC,YAF5C,yBAE4CA,YAF5C;AAAA,UAE0DC,YAF1D,yBAE0DA,YAF1D;AAAA,UAE0FC,WAF1F,uBAE0EC,aAF1E,CAE0FD,WAF1F;AAAA,sDAEwGE,kBAFxG;AAAA,UAE8HC,SAF9H,yBAE8HA,SAF9H;AAAA,UAEyIC,QAFzI,yBAEyIA,QAFzI;AAAA,UAGWC,KAHX,uBAGLC,YAHK,CAGWD,KAHX;AAAA,UAIDxB,cAJC,GAIkB,KAAKE,KAJvB,CAIDF,cAJC;AAKT,aACE;AAEA;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAiD,UAAA,EAAE,EAAEc;AAArD,WACI;AAAK,UAAA,SAAS,EAAGC,MAAM,GAAE,yCAAF,GAA8C;AAArE,WAEF;AAAK,UAAA,SAAS,EAAC,wDAAf;AAAwE,UAAA,KAAK,EAAE;AAAElB,YAAAA,eAAe,EAAEkB,MAAM,GAAG,SAAH,GAAe,SAAxC;AAAmDW,YAAAA,KAAK,EAAE;AAA1D;AAA/E,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACA;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,KAAK,EAAE;AAAE7B,YAAAA,eAAe,EAAEkB,MAAM,GAAG,SAAH,GAAe,SAAxC;AAAmDW,YAAAA,KAAK,EAAE,MAA1D;AAAkEC,YAAAA,MAAM,EAAE;AAA1E;AAApC,WACE;AAAK,UAAA,GAAG,EAAC,GAAT;AAAa,UAAA,GAAG,EAAC;AAAjB,UADF,CADF,EAIE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT;AAAlC,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WAAmB;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,KAAK,EAAEb,OAAnB;AAA4B,UAAA,OAAO,EAAE,iBAACe,KAAD;AAAA,mBAAW,MAAI,CAACC,eAAL,CAAqBD,KAArB,CAAX;AAAA;AAArC,WAA8EL,QAA9E,QAA0FD,SAA1F,CAAnB,CADF,EAEE;AAAG,UAAA,IAAI,mBAAYE,KAAZ;AAAP,WAA6BA,KAA7B,CAFF,CAJF,CADF,CADA,EAYA;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACE;AAAG,UAAA,SAAS,EAAC;AAAb,UADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,qBAFF,CADF,CAZA,EAkBA;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WAOE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AACA,UAAA,IAAI,EAAC,GADL;AAEA,UAAA,SAAS,EAAC,sBAFV;AAGA,yBAAY,YAHZ;AAIA,UAAA,OAAO,EAAE,KAAKM,aAAL,CAAmB9B,cAAnB;AAJT,WAKA;AAAG,UAAA,SAAS,EAAC;AAAb,uBALA,CADF,EAQiBA,cARjB,GASE;AAAI,UAAA,EAAE,EAAC,YAAP;AAAoB,UAAA,SAAS,EAAC,gCAA9B;AAA+D,UAAA,KAAK,EAAE;AAAC+B,YAAAA,OAAO,EAAE,OAAV;AAAmBC,YAAAA,OAAO,EAAE,GAA5B;AAAiCC,YAAAA,SAAS,EAAE;AAA5C;AAAtE,WACE,gCACE;AAAG,UAAA,IAAI,EAAC,kBAAR;AAA2B,UAAA,SAAS,EAAC;AAArC,kBADF,CADF,EAIE,gCAAI;AAAG,UAAA,IAAI,EAAC;AAAR,mBAAJ,CAJF,EAKE,gCAAI;AAAG,UAAA,IAAI,EAAC;AAAR,wBAAJ,CALF,EAME,gCAAI;AAAG,UAAA,IAAI,EAAC;AAAR,oBAAJ,CANF,CATF,QAPF,CADF,CAlBA,CADF,CAFE,EAsDJ;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,GAAG,EAAE,KAAKC;AAAxC,WACI;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACiBnB,MADjB,GAEE,oBAAC,QAAD;AACA,UAAA,IAAI,EAAE;AAAA,mBAAMvB,KAAI,CAAC0B,YAAD,EAAeC,WAAf,EAA4BF,YAA5B,CAAV;AAAA,WADN;AAEA,UAAA,MAAM,EAAE,GAFR;AAGA,UAAA,OAAO,EAAE;AAEPkB,YAAAA,aAAa,EAAE,OAAOC,IAAI,CAACC,EAFpB;AAGPC,YAAAA,QAAQ,EAAE,CAAC,IAHJ;AAIPC,YAAAA,gBAAgB,EAAE,EAJX,CAKP;;AALO;AAHT,UAFF,SAcE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,KAAK,EAAE;AAAC1C,YAAAA,eAAe,EAAE,SAAlB;AAA6B2C,YAAAA,MAAM,EAAE;AAArC;AAArC,WAAkF;AAAM,+BAAN;AAAoB,4BAAgBvB,YAApC;AAAkD,0BAAcC,YAAhE;AAA8E,2BAAc;AAA5F,WAAiGA,YAAjG,CAAlF,CAdF,EAeE;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAsB,UAAA,KAAK,EAAE;AAACuB,YAAAA,GAAG,EAAE,OAAN;AAAeC,YAAAA,IAAI,EAAE,OAArB;AAA8BhB,YAAAA,KAAK,EAAE;AAArC;AAA7B,WAA8ER,YAAY,GAACD,YAA3F,CAfF,CADF,EAkBE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAyB,UAAA,KAAK,EAAE;AAACS,YAAAA,KAAK,EAAE;AAAR;AAAhC,WAAqDT,YAArD,CADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,0BAFF,CADF,EAKE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAA0BE,WAA1B,CADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,yBAFF,CALF,CAlBF,CADF,CADF,EAgCE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,gBADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,sBAFF,CADF,EAKE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,eADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,qBAFF,CALF,EASE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,eADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,4BAFF,CATF,EAaE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAA+B,uCAA/B,OAA+C;AAAM,UAAA,SAAS,EAAC;AAAhB,mBAA/C,CADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,sBAFF,CAbF,CADF,CAhCF,CADJ,EAsDI;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAI,UAAA,SAAS,EAAC;AAAd,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,gBADF,EAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,mCAFF,CADF,CADF,CADF,CAtDJ,CAtDI,CADJ,CAHF,CA6HE;;AA7HF;AA8HE;;;;EArKoB9B,KAAK,CAACsD,S;;AAqKzB;AAEL7C,WAAW,CAAC8C,SAAZ,GAAwB;AACtB/B,EAAAA,OAAO,EAAEvB,SAAS,CAACuD,MAAV,CAAiBC,UADJ,CAEtB;AACA;;AAHsB,CAAxB;AAMF,eAAehD,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n// import IndividualStudentPage from '../../IndividualStudentPage';\n// import Dropdown from '../../../FormComponents/Dropdown';\n// import updatedUser from '../../utils/sampleUser';\nconst data = (current, target, initial) => ({\n  datasets: [{\n    data: [current-initial, (target-initial) - (current-initial) ],\n    backgroundColor: [\n      '#0085ce',\n      '#eaeaea',\n    ],\n  }],\n})\nclass StudentCard extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dropdownIsOpen: false,\n            // active: false,\n            selected: false,\n            studentInfo: {},\n            studentEditModalOpen: false,\n            cloneModalOpen: false,\n            showOwnerModalOpen: false,\n            deleteModalOpen: false,\n            activateAccountModalOpen: false,\n            assignInstructorModalOpen: false,\n            addStudentModalOpen: false,\n            newStudentInfo: {},\n        }\n    }\n\n// onSelectStudent = (event) => {\n//   console.log(\"clicked\")\n//   this.setState({studentInfo: event.target.value})\n//   console.log(this.state.studentInfo)\n// }\n// renderIndividualPage = () => {\n//   // eslint-disable-next-line no-console\n// const { student } = this.props;\n// return <IndividualStudentPage student={student} />\n// }\n\n    onSetDropdown = (dropdownIsOpen) => this.setState({dropdownIsOpen: !dropdownIsOpen});\n    onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n    render() {\n    // const { studentEditModalOpen, cloneModalOpen, showOwnerModalOpen, deleteModalOpen, addStudentModalOpen, newStudentInfo } = this.state;\n    const { student, student: {id, active, testScores: { initialScore, currentScore }, courseContext: {targetScore}, studentInformation: { firstName, lastName },\n        emailAddress: { email }} }= this.props;\n    const { dropdownIsOpen } = this.state;\n    return (\n      // <div className=\"cardholder\" role=\"button\" id={id} tabIndex={index}>\n\n      <div className=\"card-main-col col s12 m8 l7 xl5\" id={id}>\n          <div className={ active? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"}>\n\n        <div className=\"owner-box card-panel card-panel-panel card-panel-large\" style={{ backgroundColor: active ? '#0085ce' : '#9b9b9b', color: '#fff' }}>\n          <div className=\"card-panel-row row\">\n          <div className=\"col s9\">\n            <div className=\"user-block\">\n              <div className=\"user-circle\" style={{ backgroundColor: active ? '#14b14b' : '#808080', color: '#fff', height: '45px' }}>\n                <img src=\"#\" alt=\"\" />\n              </div>\n              <div className=\"user-text\" style={{ color: '#fff' }}>\n                <h4 className=\"h3\"><a href=\"#\" value={student} onClick={(event) => this.onSelectStudent(event)}>{lastName}, {firstName}</a></h4>\n                <a href={`mailto:${email}`}>{email}</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s2 right-align\">\n            <span className=\"block-icon\">\n              <i className=\"icon-user\"></i>\n              <span className=\"text-icon\">Student</span>\n            </span>\n          </div>\n          <div className=\"col s1 right-align\">\n            <div className=\"row icons-row\">\n              {/* <Dropdown\n              options={\"Edit\",\"Clone\", \"Show Owner\", \"Delete\"}\n              stateKey=\"state\"\n              dropdownKey=\"state\"\n              id={`${id}-dropdown`}\n              /> */}\n              <div className=\"dropdown-block col\">\n                <a\n                href='#'\n                className='dropdown-trigger btn'\n                data-target='dropdown01'\n                onClick={this.onSetDropdown(dropdownIsOpen)}>\n                <i className=\"material-icons dots-icon\">more_vert</i>\n                </a>\n                <If condition={dropdownIsOpen}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{display: \"block\", opacity: '1', transform: 'scaleX(1) scaleY(1)'}}>\n                  <li>\n                    <a href=\"#modal_user_edit\" className=\"modal-trigger link-block\">Edit</a>\n                  </li>\n                  <li><a href=\"#!\">Clone</a></li>\n                  <li><a href=\"#!\">Show Owner</a></li>\n                  <li><a href=\"#!\">Delete</a></li>\n                </ul>\n                </If>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* card content */}\n      <div className=\"card-content\" ref={this.studentCard}>\n          <div className=\"row d-flex align-items-center mb-0\">\n            <div className=\"col s12 m6\">\n              <div className=\"chart-container chart-container-large\">\n                <div className=\"chart-holder\">\n                  <If condition={active}>\n                  <Doughnut\n                  data={() => data(currentScore, targetScore, initialScore)}\n                  height={210}\n                  options={{\n\n                    circumference: 1.45 * Math.PI,\n                    rotation: -3.85,\n                    cutoutPercentage: 60,\n                    // tooltips: false,\n                  }}\n                  />\n                  </If>\n                  <span className=\"chart-value\" style={{backgroundColor: \"#0085ce\", bottom: \"7px\"}}><span data-count-up data-start-val={initialScore} data-end-val={currentScore} data-duration=\"1\">{currentScore}</span></span>\n                  <span className=\"txt\" style={{top: \"-56px\", left: \"-16px\", color: 'green'}}>{(currentScore-initialScore)}</span>\n                </div>\n                <div className=\"chart-row\">\n                  <div className=\"chart-col chart-start\">\n                    <span className=\"amount\" style={{color: '#0085ce'}}>{initialScore}</span>\n                    <span className=\"amount-text\">&nbsp; initial</span>\n                  </div>\n                  <div className=\"chart-col chart-end\">\n                    <span className=\"amount\">{targetScore}</span>\n                    <span className=\"amount-text\">&nbsp; target</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col s12 m6\">\n              <ul className=\"points-list-bordered\">\n                <li className=\"style-green\">\n                  <span className=\"badge-circle\">61</span>\n                  <span className=\"point-text\">complete</span>\n                </li>\n                <li className=\"style-red\">\n                  <span className=\"badge-circle\">7</span>\n                  <span className=\"point-text\">overdue</span>\n                </li>\n                <li className=\"style-orange\">\n                  <span className=\"badge-circle\">3</span>\n                  <span className=\"point-text\">practice tests</span>\n                </li>\n                <li className=\"style-blue-lighter\">\n                  <span className=\"badge-circle\"><span>17</span> <span className=\"of\">of 23</span></span>\n                  <span className=\"point-text\">sessions</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"card-inner-row\">\n            <div className=\"row-holder\">\n              <ul className=\"category-list\">\n                <li className=\"category-box\">\n                  <span className=\"category-badge badge-purple\">TW</span>\n                  <span className=\"category-text\">Tutor Withalongername</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n      // </div>\n    )}};\n\n  StudentCard.propTypes = {\n    student: PropTypes.object.isRequired,\n    // index: PropTypes.number.isRequired,\n    // onHandleStudentCard: PropTypes.func.isRequired,\n  };\n\nexport default StudentCard;"]},"metadata":{},"sourceType":"module"}