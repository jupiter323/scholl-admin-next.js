{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListItem, _React$Component);\n\n  function ListItem(props) {\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItem).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDetailModal\", function () {\n      return _this.setState({\n        detailModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDetailModal\", function () {\n      return _this.setState({\n        detailModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLessonIcon\", function (subject) {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDropdownOptions\", function (status) {\n      if (status === \"Scheduled\" || status === 'Assigned') {\n        return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#\"\n        }, \"Reschedule\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Unassign\")));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\"\n      }, \"Reschedule\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Mark all Flags Reviewed\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Reset\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Unassign\")));\n    });\n\n    _this.state = {\n      detailModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$lesson = this.props.lesson,\n          lessonName = _this$props$lesson.lessonName,\n          score = _this$props$lesson.score,\n          scoreStatus = _this$props$lesson.scoreStatus,\n          passage = _this$props$lesson.passage,\n          reviewedAlerts = _this$props$lesson.reviewedAlerts,\n          overdue = _this$props$lesson.overdue,\n          subject = _this$props$lesson.subject,\n          status = _this$props$lesson.status,\n          completionDate = _this$props$lesson.completionDate,\n          problems = _this$props$lesson.problems,\n          type = _this$props$lesson.type,\n          availableDate = _this$props$lesson.availableDate,\n          dueDate = _this$props$lesson.dueDate,\n          flags = _this$props$lesson.flags;\n      var _this$props = this.props,\n          dropdownIndex = _this$props.dropdownIndex,\n          lesson = _this$props.lesson,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index,\n          user = _this$props.user,\n          handleDropdownClick = _this$props.handleDropdownClick;\n      return __jsx(React.Fragment, null, __jsx(LessonDetailAnswerSheet, {\n        onCloseDetailModal: this.onCloseDetailModal,\n        open: this.state.detailModalOpen,\n        user: user,\n        lesson: lesson\n      }), __jsx(\"div\", {\n        className: \"card list-table-row\",\n        key: index\n      }, __jsx(\"div\", {\n        className: \"list-table-cell icon-cell\"\n      }, __jsx(\"span\", {\n        className: \"block-icon\"\n      }, __jsx(\"i\", {\n        className: this.renderLessonIcon(subject)\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\"\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\"\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        id: \"lessonName\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenDetailModal\n      }, lessonName)))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\",\n        style: {\n          marginLeft: '50px'\n        }\n      }, scoreStatus && __jsx(\"span\", {\n        className: \"chart-bar \".concat(statusColorMap[scoreStatus], \" white-text\")\n      }, Math.floor(\"\".concat(score / problems * 100)), \"%\")), __jsx(\"div\", {\n        className: \"list-table-cell status-cell\"\n      }, scoreStatus !== \"\" ? __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[scoreStatus], \" white-text\")\n      }, scoreStatus) : __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\")\n      }, status)), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        style: {\n          marginLeft: '10px'\n        }\n      }, subject), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\"\n      }, \"p. \", passage), __jsx(\"div\", {\n        className: \"list-table-cell date-cell\"\n      }, __jsx(\"time\", {\n        dateTime: \"2019-01-27\"\n      }, availableDate)), __jsx(\"div\", {\n        className: \"list-table-cell dueDate-cell\",\n        style: {\n          color: overdue ? \"#db1b29\" : \"\"\n        }\n      }, __jsx(\"time\", {\n        dateTime: \"2019-01-27\"\n      }, dueDate)), __jsx(\"div\", {\n        className: \"list-table-cell completed-cell\"\n      }, completionDate), __jsx(\"div\", {\n        className: \"list-table-cell name-cell\"\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\"\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\"\n      }, type))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\"\n      }, reviewedAlerts.length > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge grey darken-1 white-text\"\n      }, __jsx(\"b\", {\n        className: \"badge-text\"\n      }, reviewedAlerts.length), \" \", __jsx(\"i\", {\n        className: \"icon-flag\"\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell flags-cell\"\n      }, flags.length > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge red darken-2 white-text\"\n      }, __jsx(\"b\", {\n        className: \"badge-text\"\n      }, flags.length), \" \", __jsx(\"i\", {\n        className: \"icon-flag\"\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell drop-cell\"\n      }, __jsx(\"div\", {\n        className: \"dropdown-block\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        className: \"dropdown-trigger btn\",\n        onClick: function onClick(event) {\n          return handleDropdownClick(event, index);\n        }\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, this.renderDropdownOptions(status)) : null))));\n    }\n  }]);\n\n  return ListItem;\n}(React.Component);\n\nListItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  dropdownIndex: PropTypes.number.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default ListItem;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/components/ListView/components/ListItem.js"],"names":["React","PropTypes","statusColorMap","LessonDetailAnswerSheet","ListItem","props","setState","detailModalOpen","subject","status","state","lesson","lessonName","score","scoreStatus","passage","reviewedAlerts","overdue","completionDate","problems","type","availableDate","dueDate","flags","dropdownIndex","dropdownIsOpen","index","user","handleDropdownClick","onCloseDetailModal","renderLessonIcon","onOpenDetailModal","marginLeft","Math","floor","color","length","event","display","opacity","transform","renderDropdownOptions","Component","propTypes","object","isRequired","number","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailModalOpen: false,\n    };\n  }\n\n  onOpenDetailModal = () => this.setState({detailModalOpen: true})\n  onCloseDetailModal = () => this.setState({detailModalOpen: false});\n\n\n   // eslint-disable-next-line consistent-return\n   renderLessonIcon = (subject) => {\n    switch (subject) {\n      case 'Reading':\n        return 'icon-books';\n      case 'Writing':\n        return 'icon-hands';\n      case 'Math':\n        return 'icon-calculator';\n      default:\n        break;\n    }\n  }\n\n  renderDropdownOptions = (status) => {\n    if (status === \"Scheduled\" || status === 'Assigned'){\n      return (\n        <React.Fragment>\n        <li><a href=\"#\">Reschedule</a></li>\n        <li><a href=\"#!\">Unassign</a></li>\n        </React.Fragment>\n      )\n    }\n      return (\n        <React.Fragment>\n        <li><a href=\"#\">Reschedule</a></li>\n        <li><a href=\"#!\" >Mark all Flags Reviewed</a></li>\n        <li><a href=\"#!\">Reset</a></li>\n        <li><a href=\"#!\">Unassign</a></li>\n        </React.Fragment>\n      )\n  }\n\n\n  render() {\n    const { lessonName, score, scoreStatus, passage, reviewedAlerts, overdue, subject, status, completionDate, problems, type, availableDate, dueDate, flags } = this.props.lesson;\n    const {dropdownIndex, lesson, dropdownIsOpen, index, user, handleDropdownClick} = this.props;\n    return (\n      <React.Fragment>\n       <LessonDetailAnswerSheet\n        onCloseDetailModal={this.onCloseDetailModal}\n        open={this.state.detailModalOpen}\n        user={user}\n        lesson={lesson}  />\n      <div className='card list-table-row' key={index}>\n        <div className=\"list-table-cell icon-cell\">\n          <span className=\"block-icon\">\n            <i className={this.renderLessonIcon(subject)}></i>\n          </span>\n        </div>\n        <div className=\"list-table-cell type-cell\">\n          <div className=\"card-panel-text truncate\">\n            <div className=\"text-large truncate\"  id='lessonName'><a href=\"#\" onClick={this.onOpenDetailModal}>{lessonName}</a></div>\n          </div>\n        </div>\n         <div className=\"list-table-cell graph-cell\" style={{marginLeft: '50px'}}>\n          {scoreStatus && (\n            <span className={`chart-bar ${statusColorMap[scoreStatus]} white-text`}>{Math.floor(`${score / problems * 100}`)}%</span>\n          )}\n          </div>\n          <div className=\"list-table-cell status-cell\" >\n        <Choose>\n          <When condition={scoreStatus !== \"\"}>\n          <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n          </When>\n          <Otherwise>\n          <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n          </Otherwise>\n        </Choose>\n        </div>\n        <div className=\"list-table-cell type-cell\" style={{marginLeft: '10px'}}>{subject}</div>\n        <div className=\"list-table-cell type-cell\">p. {passage}</div>\n        <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{availableDate}</time></div>\n        <div className=\"list-table-cell dueDate-cell\" style={{color: overdue ? \"#db1b29\" : \"\"}}><time dateTime=\"2019-01-27\">{dueDate}</time></div>\n        <div className=\"list-table-cell completed-cell\">{completionDate}\n          {/* {completed && (\n            <React.Fragment>\n              {completionDate}\n            </React.Fragment>\n          )} */}\n          </div>\n        <div className=\"list-table-cell name-cell\">\n          <div className=\"card-panel-text truncate\">\n            <div className=\"text-large truncate\">{type}</div>\n          </div>\n        </div>\n        <div className=\"list-table-cell graph-cell\">\n          {reviewedAlerts.length > 0 && (\n            <span className=\"badge-rounded-xs badge grey darken-1 white-text\"><b className=\"badge-text\">{reviewedAlerts.length}</b> <i className=\"icon-flag\"></i></span>\n          )}\n        </div>\n        <div className=\"list-table-cell flags-cell\">\n          {flags.length > 0 && (\n            <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n          )}\n        </div>\n\n        <div className=\"list-table-cell drop-cell\">\n          <div className=\"dropdown-block\">\n            <a\n              href='#'\n              data-target='dropdown01'\n              className='dropdown-trigger btn'\n              onClick={(event) => handleDropdownClick(event, index)}\n            >\n              <i className=\"material-icons dots-icon\">more_vert</i>\n            </a>\n            <If condition={dropdownIsOpen && dropdownIndex === index}>\n              <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n               {this.renderDropdownOptions(status)}\n              </ul>\n            </If>\n          </div>\n        </div>\n      </div>\n      </React.Fragment>\n    )\n\n  }\n}\n\nListItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  dropdownIndex: PropTypes.number.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n\n};\n\nexport default ListItem"]},"metadata":{},"sourceType":"module"}