{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport StudentCard from '../components/Student/components/StudentCard';\nimport sampleStudentList from '../components/Student/utils/sampleStudentList';\nimport FilterSection from '../components/Student/ListPage/Components/FilterSection'; // import FilterSection from '../components/Student/ListPage/Components/FilterSection';\n\nimport StudentModal from '../components/Student/components/StudentModal';\nimport IndividualStudentPage from '../components/Student/IndividualStudentPage';\nimport LocationModal from '../components/Location/components/LocationModal';\n\nvar Students =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Students, _Component);\n\n  function Students(props) {\n    var _this;\n\n    _classCallCheck(this, Students);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Students).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenStudentModal\", function () {\n      return _this.setState({\n        studentModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseStudentModal\", function () {\n      return _this.setState({\n        studentModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredLocationState\", function (location) {\n      return _this.setState({\n        location: location\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredLocationState\", function () {\n      return _this.setState({\n        location: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveNewStudent\", function () {\n      // eslint-disable-next-line no-console\n      console.warn('do something with the new student info');\n\n      _this.onCloseStudentModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteNewStudent\", function () {\n      var previousStudentState = _this.state.newStudent;\n      var newStudent = update(previousStudentState, {\n        $set: {\n          active: false,\n          studentInformation: {\n            firstName: '',\n            lastName: '',\n            gender: ''\n          },\n          contactInformation: {\n            phone: '',\n            addressLine1: '',\n            addressLine2: '',\n            city: '',\n            state: '',\n            zipCode: ''\n          },\n          emailAddress: {\n            email: ''\n          },\n          location: {\n            locations: []\n          }\n        }\n      });\n\n      _this.setState({\n        newStudent: newStudent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRemoveLocation\", function (index) {\n      var previousStudentState = _this.state.newStudent;\n      var locations = _this.state.newStudent.location.locations;\n\n      var newLocationsArray = _this.arrayItemRemover(locations, locations[index]);\n\n      var newStudent = update(previousStudentState, {\n        location: {\n          $set: {\n            locations: newLocationsArray\n          }\n        }\n      });\n\n      _this.setState({\n        newStudent: newStudent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          students = _this$state.students,\n          filterName = _this$state.filterName;\n      return students.reduce(function (finalArr, currentStudent) {\n        var lastName = currentStudent.lastName,\n            firstName = currentStudent.firstName;\n        var studentString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (studentString.indexOf(filterName) !== -1 && finalArr.indexOf(currentStudent) === -1) {\n          finalArr.push(currentStudent);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleStudentCard\", function (index) {\n      var students = _this.state.students;\n\n      _this.setState({\n        selectedStudent: students[index]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRedirectToStudentPage\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        selectedStudent: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteStudent\", function (index) {\n      var students = _this.state.students;\n\n      var newStudentArray = _this.arrayItemRemover(students, students[index]);\n\n      _this.setState({\n        students: newStudentArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneStudent\", function (index) {\n      var students = _this.state.students;\n\n      _this.setState(function (prevState) {\n        prevState.students.push(students[index]);\n        return {\n          students: prevState.students\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event, name, section) {\n      var previousStudentState = _this.state.newStudent;\n      var value = event.target ? event.target.value : event;\n      var updatedStudent = update(previousStudentState, _defineProperty({}, section, {\n        $merge: _defineProperty({}, name, value)\n      }));\n\n      _this.setState({\n        newStudent: updatedStudent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (student) {\n        return student !== value;\n      });\n    });\n\n    _this.state = {\n      selectedStudent: null,\n      students: sampleStudentList,\n      studentModalOpen: false,\n      locationModalOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      newStudent: {\n        active: false,\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: ''\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: ''\n        },\n        emailAddress: {\n          email: ''\n        },\n        location: {\n          locations: []\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Students, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          studentModalOpen = _this$state2.studentModalOpen,\n          students = _this$state2.students,\n          selectedStudent = _this$state2.selectedStudent;\n      return React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, !selectedStudent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-student\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"Students\")))), React.createElement(FilterSection, {\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredLocationState: this.onSetFilteredLocationState,\n        onUnsetFilteredLocationState: this.onUnsetFilteredLocationState,\n        handleFilterClick: this.handleFilterClick,\n        onFilterByName: this.onFilterByName\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content\"\n      }, students.map(function (student, index) {\n        return React.createElement(StudentCard, {\n          student: student,\n          index: index,\n          id: student.id,\n          key: student.id,\n          onHandleStudentCard: function onHandleStudentCard() {\n            return _this2.onHandleStudentCard(index);\n          },\n          onDeleteStudent: function onDeleteStudent() {\n            return _this2.onDeleteStudent(index);\n          },\n          onCloneStudent: function onCloneStudent() {\n            return _this2.onCloneStudent(index, student.id);\n          }\n        });\n      }))), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-teal btn add-btn modal-trigger\",\n        onClick: this.onOpenStudentModal\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Student\"), React.createElement(StudentModal, {\n        open: studentModalOpen,\n        onClose: this.onCloseStudentModal,\n        handleChange: this.handleChange,\n        state: this.state.newStudent,\n        onSave: this.onSaveNewStudent,\n        onOpenLocationModal: this.onOpenLocationModal,\n        onRemoveLocation: this.onRemoveLocation,\n        onDeleteNewStudent: this.onDeleteNewStudent\n      }), React.createElement(LocationModal, {\n        open: this.state.locationModalOpen,\n        onClose: this.onCloseLocationModal,\n        handleLocationsChange: function handleLocationsChange(selectedLocations) {\n          return _this2.handleChange(selectedLocations, 'locations', 'location');\n        }\n      })), selectedStudent && React.createElement(IndividualStudentPage, {\n        student: selectedStudent,\n        onRedirectToStudentPage: this.onRedirectToStudentPage\n      })));\n    }\n  }]);\n\n  return Students;\n}(Component);\n\nexport default Students;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/pages/students.js"],"names":["React","Component","update","StudentCard","sampleStudentList","FilterSection","StudentModal","IndividualStudentPage","LocationModal","Students","props","setState","studentModalOpen","locationModalOpen","sort","filterName","location","console","warn","onCloseStudentModal","previousStudentState","state","newStudent","$set","active","studentInformation","firstName","lastName","gender","contactInformation","phone","addressLine1","addressLine2","city","zipCode","emailAddress","email","locations","index","newLocationsArray","arrayItemRemover","students","reduce","finalArr","currentStudent","studentString","toLowerCase","indexOf","push","selectedStudent","event","preventDefault","newStudentArray","prevState","name","section","value","target","updatedStudent","$merge","array","filter","student","onSetSort","onSetFilteredState","onUnsetFilteredState","onSetFilteredLocationState","onUnsetFilteredLocationState","handleFilterClick","onFilterByName","map","id","onHandleStudentCard","onDeleteStudent","onCloneStudent","onOpenStudentModal","handleChange","onSaveNewStudent","onOpenLocationModal","onRemoveLocation","onDeleteNewStudent","onCloseLocationModal","selectedLocations","onRedirectToStudentPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport StudentCard from '../components/Student/components/StudentCard';\nimport sampleStudentList from '../components/Student/utils/sampleStudentList';\nimport FilterSection from '../components/Student/ListPage/Components/FilterSection';\n// import FilterSection from '../components/Student/ListPage/Components/FilterSection';\nimport StudentModal from '../components/Student/components/StudentModal';\nimport IndividualStudentPage from '../components/Student/IndividualStudentPage';\nimport LocationModal from '../components/Location/components/LocationModal';\n\nclass Students extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedStudent: null,\n      students: sampleStudentList,\n      studentModalOpen: false,\n      locationModalOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      newStudent: {\n        active: false,\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: '',\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: '',\n        },\n        emailAddress: {\n          email: '',\n        },\n        location: {\n          locations: [],\n        },\n     },\n    }\n  }\n  onOpenStudentModal = () => this.setState({ studentModalOpen: true });\n  onCloseStudentModal = () => this.setState({ studentModalOpen: false });\n  onOpenLocationModal = () => this.setState({locationModalOpen: true});\n  onCloseLocationModal = () => this.setState({locationModalOpen: false})\n\n\n  onSetSort = (sort) => this.setState({ sort });\n  onSetFilteredState = (filterName) => this.setState({ filterName });\n  onUnsetFilteredState = () => this.setState({ filterName: '' });\n\n  onSetFilteredLocationState = (location) => this.setState({ location });\n  onUnsetFilteredLocationState = () => this.setState({ location: '' });\n\n // TODO add a toas or some notification that a student has been saved\n  onSaveNewStudent = () => {\n    // eslint-disable-next-line no-console\n    console.warn('do something with the new student info')\n    this.onCloseStudentModal();\n  }\n\n  onDeleteNewStudent = () => {\n    const {newStudent: previousStudentState} = this.state;\n    const newStudent = update(previousStudentState, {\n      $set:\n       { active: false,\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: '',\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: '',\n        },\n        emailAddress: {\n          email: '',\n        },\n        location: {\n          locations: [],\n        },\n    }}\n    );\n    this.setState({newStudent})\n  }\n\n  onRemoveLocation = (index) => {\n    const {newStudent: previousStudentState} = this.state;\n    const {location: { locations } } = this.state.newStudent;\n    const newLocationsArray = this.arrayItemRemover(locations, locations[index]);\n    const newStudent = update(previousStudentState, {\n      location: { $set: {locations: newLocationsArray}},\n    })\n    this.setState({newStudent})\n  }\n\n  onFilterByName = () => {\n    const { students, filterName } = this.state;\n    return students.reduce((finalArr, currentStudent) => {\n      const { lastName, firstName } = currentStudent;\n      const studentString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (studentString.indexOf(filterName) !== -1 && finalArr.indexOf(currentStudent) === -1) {\n        finalArr.push(currentStudent);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onHandleStudentCard = (index) => {\n    const { students } = this.state;\n    this.setState({ selectedStudent: students[index] });\n  }\n\n  onRedirectToStudentPage = (event) => {\n    event.preventDefault();\n    this.setState({selectedStudent: null})\n  }\n\n  onDeleteStudent = (index) => {\n    const { students } = this.state;\n    const newStudentArray = this.arrayItemRemover(students, students[index])\n    this.setState({students: newStudentArray})\n  }\n\n  onCloneStudent = (index) => {\n    const { students } = this.state;\n    this.setState(prevState => {\n      prevState.students.push(students[index]);\n      return { students: prevState.students}\n    })\n  }\n\n  handleChange = (event, name, section) => {\n    const { newStudent: previousStudentState } = this.state;\n    const value = event.target ? event.target.value : event;\n    const updatedStudent = update(previousStudentState, {\n      [section]: { $merge: { [name]: value }},\n    })\n    this.setState({newStudent: updatedStudent})\n}\n\n\n  arrayItemRemover = (array, value) => array.filter((student) => student !== value)\n\n  render() {\n    const { studentModalOpen, students, selectedStudent } = this.state;\n    return (\n      <main id=\"main\" role=\"main\">\n        <div className=\"main-holder grey lighten-5\">\n          {!selectedStudent && (\n            <React.Fragment>\n              <div className=\"title-row card-panel\">\n                <div className=\"mobile-header\">\n                  <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                </div>\n                <h2 className=\"h1 white-text\">\n                  <span className=\"heading-holder\">\n                    <i className=\"icon-student\"></i>\n                    <span className=\"heading-block\">Students</span>\n                  </span>\n                </h2>\n              </div>\n              <FilterSection\n                onSetSort={this.onSetSort}\n                onSetFilteredState={this.onSetFilteredState}\n                onUnsetFilteredState={this.onUnsetFilteredState}\n                onSetFilteredLocationState={this.onSetFilteredLocationState}\n                onUnsetFilteredLocationState={this.onUnsetFilteredLocationState}\n                handleFilterClick={this.handleFilterClick}\n                onFilterByName={this.onFilterByName} />\n              <div className=\"content-section\">\n                <div className=\"row d-flex-content\">\n                  {students.map((student, index) => (\n                    <StudentCard\n                    student={student}\n                    index={index}\n                    id={student.id}\n                    key={student.id}\n                    onHandleStudentCard={() => this.onHandleStudentCard(index)}\n                    onDeleteStudent={() => this.onDeleteStudent(index)}\n                    onCloneStudent={() => this.onCloneStudent(index, student.id)}\n                    />\n                  ))}\n                </div>\n              </div>\n              <a href=\"#\" className=\"waves-effect waves-teal btn add-btn modal-trigger\" onClick={this.onOpenStudentModal}><i className=\"material-icons\">add</i>New Student</a>\n              <StudentModal\n                open={studentModalOpen}\n                onClose={this.onCloseStudentModal}\n                handleChange={this.handleChange}\n                state={this.state.newStudent}\n                onSave={this.onSaveNewStudent}\n                onOpenLocationModal={this.onOpenLocationModal}\n                onRemoveLocation={this.onRemoveLocation}\n                onDeleteNewStudent={this.onDeleteNewStudent}\n                />\n                <LocationModal\n                open={this.state.locationModalOpen}\n                onClose={this.onCloseLocationModal}\n                handleLocationsChange={(selectedLocations) => this.handleChange(selectedLocations, 'locations', 'location')}\n                />\n                </React.Fragment>\n          )}\n          {selectedStudent && (\n            <IndividualStudentPage student={selectedStudent} onRedirectToStudentPage={this.onRedirectToStudentPage} />\n          )}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}