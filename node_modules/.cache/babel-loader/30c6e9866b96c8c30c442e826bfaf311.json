{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n// TODO: change componentDidMount for when user comes though as props, profile pic change\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../components/FormComponents/Dropdown';\nimport getValueFromState from '../components/utils/getValueFromState';\nimport stateOptions from '../components/utils/stateOptions';\nimport { nestedEditFieldValidation } from '../components/utils/fieldValidation';\nimport sampleInstructors from \"../components/utils/sampleInstructors\";\nvar timeZoneOptions = [{\n  label: \"(UTC - 10:00) Hawaii Time Zone (US)\",\n  value: \"Hawaii\"\n}, {\n  label: \"(UTC - 9:00) Alaska Time Zone (US)\",\n  value: \"Alaska\"\n}, {\n  label: \"(UTC - 8:00) PaciÔ¨Åc/Yukon Time Zone (US & Canada)\",\n  value: \"Pacific\"\n}, {\n  label: \"(UTC - 7:00) Mountain Time Zone (US & Canada)\",\n  value: \"Mountain\"\n}, {\n  label: \"(UTC - 6:00) Central Time Zone (US & Canada)\",\n  value: \"Central\"\n}, {\n  label: \"(UTC - 5:00) Eastern Time Zone (US & Canada)\",\n  value: \"Eastern\"\n}, {\n  label: \"(UTC - 4:00) Atlantic Time Zone (Canada)\",\n  value: \"Atlantic\"\n}, {\n  label: \"(UTC - 3:30) Newfoundland Time Zone (Canada)\",\n  value: \"Newfoundland\"\n}];\n\nvar Account =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Account, _React$Component);\n\n  function Account(props) {\n    var _this;\n\n    _classCallCheck(this, Account);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Account).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetValidation\", function (validation, cb) {\n      return _this.setState({\n        validation: validation\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUpdateProfile\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedAccount, valid;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n\n                updatedAccount = _this.state.updatedAccount;\n                _context.next = 4;\n                return nestedEditFieldValidation(_this.state, _this.state.updatedAccount, _this.onSetValidation, function (validation) {\n                  return console.warn('validation', validation);\n                });\n\n              case 4:\n                valid = _context.sent;\n\n                if (!valid) {\n                  // return onSaveChangesError();\n                  console.warn('not valid');\n                }\n\n                _this.setState({\n                  originalAccount: updatedAccount\n                }); // return onSavePassageChanges(updatedUser);\n\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSendPasswordResetEmail\", function (event) {\n      event.preventDefault();\n      console.warn('Stubbed out password reset email');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetPassword\", function (event) {\n      event.preventDefault();\n      var _this$state$actions = _this.state.actions,\n          password = _this$state$actions.password,\n          confirmPassword = _this$state$actions.confirmPassword;\n\n      if (password !== confirmPassword) {\n        console.warn('Toast is broken, have a console log'); // return this.notify\n      }\n\n      if (!confirmPassword.length) {\n        console.warn('Toast is broken, have a console log'); // return this.notify()\n      }\n\n      return console.warn('stubbed out password reset');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (event, name) {\n      var previousAccountState = _this.state.updatedAccount;\n      var value = event.target ? event.target.value : event;\n      var updatedAccount = update(previousAccountState, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState({\n        updatedAccount: updatedAccount\n      });\n    });\n\n    _this.state = {\n      originalAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\"\n      },\n      updatedAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\"\n      },\n      actions: {\n        ccAdmin: false,\n        requireUserToChange: false,\n        password: '',\n        confirmPassword: ''\n      },\n      validation: {\n        firstName: true,\n        lastName: true,\n        email: true\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Account, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _sampleInstructors$ = sampleInstructors[0],\n          firstName = _sampleInstructors$.firstName,\n          lastName = _sampleInstructors$.lastName,\n          avatarURL = _sampleInstructors$.avatarURL,\n          addressLine1 = _sampleInstructors$.addressLine1,\n          city = _sampleInstructors$.city,\n          state = _sampleInstructors$.state,\n          zipCode = _sampleInstructors$.zipCode,\n          timeZone = _sampleInstructors$.timeZone,\n          _sampleInstructors$$e = _sampleInstructors$.email,\n          email = _sampleInstructors$$e === void 0 ? {} : _sampleInstructors$$e;\n      var updatedAccount = {\n        firstName: firstName,\n        lastName: lastName,\n        avatarURL: avatarURL,\n        addressLine1: addressLine1,\n        city: city,\n        state: state,\n        zipCode: zipCode,\n        timeZone: timeZone,\n        email: email\n      };\n      var originalAccountState = this.state.originalAccount;\n      var originalAccount = update(originalAccountState, {\n        $merge: updatedAccount\n      });\n      this.setState({\n        originalAccount: originalAccount,\n        updatedAccount: updatedAccount\n      }); // eslint-disable-line\n    } // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n    // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state$updatedAc = this.state.updatedAccount,\n          firstName = _this$state$updatedAc.firstName,\n          lastName = _this$state$updatedAc.lastName,\n          avatarURL = _this$state$updatedAc.avatarURL,\n          addressLine1 = _this$state$updatedAc.addressLine1,\n          city = _this$state$updatedAc.city,\n          state = _this$state$updatedAc.state,\n          zipCode = _this$state$updatedAc.zipCode,\n          timeZone = _this$state$updatedAc.timeZone,\n          _this$state$updatedAc2 = _this$state$updatedAc.email,\n          email = _this$state$updatedAc2 === void 0 ? {} : _this$state$updatedAc2;\n      return React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-student\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"My Account\")))), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"form\", {\n        action: \"#\",\n        className: \"custom-form\"\n      }, React.createElement(\"fieldset\", null, React.createElement(\"div\", {\n        className: \"container-xs container-align-left\"\n      }, React.createElement(\"div\", {\n        className: \"card-block\"\n      }, React.createElement(\"div\", {\n        className: \"card\"\n      }, React.createElement(\"div\", {\n        className: \"card-content card-account\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3 l5\"\n      }, React.createElement(\"div\", {\n        className: \"avatar\"\n      }, React.createElement(\"img\", {\n        src: avatarURL,\n        alt: \"\"\n      }), React.createElement(\"span\", {\n        className: \"btn-upload icon-photocam\"\n      }, React.createElement(\"input\", {\n        type: \"file\"\n      })))), React.createElement(\"div\", {\n        className: \"col s12 m9 l7\"\n      }, React.createElement(\"div\", {\n        className: \"input-field input-field-icon\"\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email Address\",\n        value: email,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"email\");\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-icon icon-letter2\"\n      })), React.createElement(\"div\", {\n        className: \"input-field input-field-icon\"\n      }, React.createElement(\"input\", {\n        style: {\n          width: '44%'\n        },\n        type: \"text\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"firstName\");\n        }\n      }), React.createElement(\"input\", {\n        style: {\n          width: '44%'\n        },\n        type: \"text\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"lastName\");\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-icon icon-user-line\"\n      })), React.createElement(\"div\", {\n        className: \"input-field input-field-icon\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Street Address\",\n        value: addressLine1,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"addressLine1\");\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-icon icon-search\"\n      })), React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        value: city,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"city\");\n        }\n      })), React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m6\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        style: {\n          zIndex: 1001\n        }\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(state, stateOptions),\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, 'state');\n        },\n        options: stateOptions,\n        label: \"State\",\n        stateKey: \"state\",\n        dropdownKey: \"state\"\n      }))), React.createElement(\"div\", {\n        className: \"col s12 m6\",\n        style: {\n          marginTop: '9%'\n        }\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Zip Code\",\n        value: zipCode,\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, \"zipCode\");\n        }\n      })))), React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(timeZone, timeZoneOptions),\n        options: timeZoneOptions,\n        stateKey: \"timeZone\",\n        dropdownKey: \"timeZone\",\n        label: \"Time Zone\",\n        onChange: function onChange(event) {\n          return _this2.handleDetailsChange(event, 'timeZone');\n        }\n      }))))))), React.createElement(\"div\", {\n        className: \"account_btn-holder\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onResetPassword\n      }, \"Reset Password\"), React.createElement(\"a\", {\n        className: \"btn\",\n        href: \"#\",\n        onClick: this.onUpdateProfile\n      }, \"Update Pro\\uFB01le\")))))))));\n    }\n  }]);\n\n  return Account;\n}(React.Component);\n\nexport default Account;","map":null,"metadata":{},"sourceType":"module"}