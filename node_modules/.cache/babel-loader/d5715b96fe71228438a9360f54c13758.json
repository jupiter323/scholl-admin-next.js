{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LessonCard from '../FullView/components/LessonCard';\n\nvar FullView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullView, _React$Component);\n\n  function FullView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FullView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FullView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapLessons\", function () {\n      var _this$props = _this.props,\n          lessons = _this$props.lessons,\n          _onCloneLesson = _this$props.onCloneLesson,\n          _onDeleteLesson = _this$props.onDeleteLesson;\n      return lessons.map(function (lesson, index) {\n        return React.createElement(LessonCard, {\n          key: index,\n          index: index,\n          lesson: lesson,\n          onCloneLesson: function onCloneLesson() {\n            return _onCloneLesson(index);\n          },\n          onDeleteLesson: function onDeleteLesson() {\n            return _onDeleteLesson(index);\n          }\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(FullView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-272\"\n      }, this.mapLessons()));\n    }\n  }]);\n\n  return FullView;\n}(React.Component);\n\nFullView.propTypes = {\n  lessons: PropTypes.array.isRequired,\n  onCloneLesson: PropTypes.func.isRequired,\n  onDeleteLesson: PropTypes.func.isRequired\n};\nexport default FullView;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailLessonList\\components\\FullView\\index.js"],"names":["React","PropTypes","LessonCard","FullView","props","lessons","onCloneLesson","onDeleteLesson","map","lesson","index","mapLessons","Component","propTypes","array","isRequired","func"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;IAEMC,Q;;;;;;;;;;;;;;;;;;iEACS,YAAM;AAAA,wBACkC,MAAKC,KADvC;AAAA,UACTC,OADS,eACTA,OADS;AAAA,UACAC,cADA,eACAA,aADA;AAAA,UACeC,eADf,eACeA,cADf;AAEjB,aAAOF,OAAO,CAACG,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,eACnB,oBAAC,UAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,MAAM,EAAED,MAHV;AAIE,UAAA,aAAa,EAAE;AAAA,mBAAMH,cAAa,CAACI,KAAD,CAAnB;AAAA,WAJjB;AAKE,UAAA,cAAc,EAAE;AAAA,mBAAMH,eAAc,CAACG,KAAD,CAApB;AAAA;AALlB,UADmB;AAAA,OAAZ,CAAP;AASA,K;;;;;;;6BAEM;AACN,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKC,UAAL,EADH,CADJ,CADF;AAOD;;;;EAtBoBX,KAAK,CAACY,S;;AAyB7BT,QAAQ,CAACU,SAAT,GAAqB;AACnBR,EAAAA,OAAO,EAAEJ,SAAS,CAACa,KAAV,CAAgBC,UADN;AAEnBT,EAAAA,aAAa,EAAEL,SAAS,CAACe,IAAV,CAAeD,UAFX;AAGnBR,EAAAA,cAAc,EAAEN,SAAS,CAACe,IAAV,CAAeD;AAHZ,CAArB;AAKA,eAAeZ,QAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LessonCard from '../FullView/components/LessonCard';\r\n\r\nclass FullView extends React.Component {\r\n  mapLessons = () => {\r\n    const { lessons, onCloneLesson, onDeleteLesson } = this.props;\r\n    return lessons.map((lesson, index) => (\r\n    <LessonCard\r\n      key={index}\r\n      index={index}\r\n      lesson={lesson}\r\n      onCloneLesson={() => onCloneLesson(index)}\r\n      onDeleteLesson={() => onDeleteLesson(index)}\r\n    />\r\n  )\r\n  )}\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"content-section\">\r\n          <div className=\"row d-flex-content card-width-272\">\r\n            {this.mapLessons()}\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nFullView.propTypes = {\r\n  lessons: PropTypes.array.isRequired,\r\n  onCloneLesson: PropTypes.func.isRequired,\r\n  onDeleteLesson: PropTypes.func.isRequired,\r\n}\r\nexport default FullView;"]},"metadata":{},"sourceType":"module"}