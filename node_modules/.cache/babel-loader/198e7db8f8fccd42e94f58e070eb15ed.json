{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport { passage, statusAscending, availableDate, dueDate, alerts } from '../../utils/sortFunctions';\n\nvar DetailLessonList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailLessonList, _React$Component);\n\n  function DetailLessonList(props) {\n    var _this;\n\n    _classCallCheck(this, DetailLessonList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailLessonList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (lesson) {\n      return _this.setState({\n        nameFilter: lesson\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({}, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortLessons\", function (lessons) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'passage':\n          return lessons.sort(passage);\n\n        case 'status':\n          return lessons.sort(statusAscending);\n\n        case 'availableDate':\n          return lessons.sort(availableDate);\n\n        case 'dueDate':\n          return lessons.sort(dueDate);\n\n        case 'alerts':\n          return lessons.sort(alerts);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneLesson\", function (index) {\n      var lessons = _this.state.lessons;\n\n      _this.setState(function (prevState) {\n        prevState.lessons.push(lessons[index]);\n        return {\n          lessons: prevState.lessons\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteLesson\", function (index) {\n      var lessons = _this.state.lessons;\n\n      var newLessonsArray = _this.arrayItemRemover(lessons, lessons[index]);\n\n      _this.setState({\n        lessons: newLessonsArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterLessons\", function () {\n      var _this$state = _this.state,\n          unitFilter = _this$state.unitFilter,\n          statusFilters = _this$state.statusFilters,\n          subjectFilters = _this$state.subjectFilters,\n          classTypeFilters = _this$state.classTypeFilters,\n          completeFilters = _this$state.completeFilters,\n          flagFilters = _this$state.flagFilters,\n          allLessons = _this$state.lessons;\n      var lessons = allLessons;\n\n      if (statusFilters.length && statusFilters.indexOf(\"all\") === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return statusFilters.indexOf(lesson.status) !== -1;\n        });\n      }\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return subjectFilters.indexOf(lesson.subject) !== -1;\n        });\n      }\n\n      if (completeFilters.length && completeFilters.indexOf('all') === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return completeFilters.indexOf(lesson.completionDate) !== -1;\n        });\n      }\n\n      if (flagFilters.length && flagFilters.indexOf('all') === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return flagFilters.indexOf(lesson.alerts) !== -1;\n        });\n      }\n\n      if (unitFilter.length && unitFilter.indexOf(\"all\") === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return unitFilter.indexOf(lesson.topic) !== -1;\n        });\n      }\n\n      if (classTypeFilters.length && classTypeFilters.indexOf(\"all\") === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return classTypeFilters.indexOf(lesson.topic) !== -1;\n        });\n      }\n\n      return lessons;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableLessons\", function () {\n      var _this$state2 = _this.state,\n          sort = _this$state2.sort,\n          lessons = _this$state2.lessons,\n          unitFilters = _this$state2.unitFilters,\n          statusFilters = _this$state2.statusFilters,\n          subjectFilters = _this$state2.subjectFilters,\n          classTypeFilters = _this$state2.classTypeFilters,\n          completeFilters = _this$state2.completeFilters,\n          flagFilters = _this$state2.flagFilters;\n      var mappableLessons = lessons;\n\n      if (unitFilters.length || statusFilters.length || subjectFilters.length || classTypeFilters.length || completeFilters.length || flagFilters.length) {\n        mappableLessons = _this.onFilterLessons();\n      }\n\n      if (sort) {\n        return _this.onSortLessons(mappableLessons);\n      }\n\n      return mappableLessons;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (lesson) {\n        return lesson !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var active = _this.state.active;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          lessons: _this.getMappableLessons(),\n          onDeleteLesson: _this.onDeleteLesson,\n          onCloneLesson: _this.onCloneLesson\n        });\n      }\n    });\n\n    _this.state = {\n      test: true,\n      lessons: _this.props.user.lessons,\n      currentView: 'full',\n      active: 'full',\n      statusFilters: [],\n      subjectFilters: [],\n      completeFilters: [],\n      flagFilters: [],\n      classTypeFilters: [],\n      sort: \"\",\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(DetailLessonList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          currentView = _this$state3.currentView,\n          activeFilters = _this$state3.activeFilters;\n      return React.createElement(React.Fragment, null, React.createElement(FilterSection, {\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onHandleFilterClick: this.onHandleFilterClick,\n        activeFilters: activeFilters,\n        onClearFilters: this.onClearFilters,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetSort: this.onSetSort\n      }), this.renderCurrentView(), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Lesson\"));\n    }\n  }]);\n\n  return DetailLessonList;\n}(React.Component);\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default DetailLessonList;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailLessonList\\index.js"],"names":["React","PropTypes","update","FilterSection","FullView","passage","statusAscending","availableDate","dueDate","alerts","DetailLessonList","props","setState","activeFilters","sort","lesson","nameFilter","filter","view","currentView","active","lessons","state","index","prevState","push","newLessonsArray","arrayItemRemover","currentActiveFilters","indexOf","$push","filterIndex","$splice","unitFilter","statusFilters","subjectFilters","classTypeFilters","completeFilters","flagFilters","allLessons","length","status","subject","completionDate","topic","unitFilters","mappableLessons","onFilterLessons","onSortLessons","array","value","getMappableLessons","onDeleteLesson","onCloneLesson","test","user","onChangeView","onHandleFilterClick","onClearFilters","onSetFilteredState","onUnsetFilteredState","onSetSort","renderCurrentView","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport { passage, statusAscending, availableDate, dueDate, alerts} from '../../utils/sortFunctions';\n\nclass DetailLessonList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: true,\n      lessons: this.props.user.lessons,\n      currentView: 'full',\n      active: 'full',\n      statusFilters: [],\n      subjectFilters: [],\n      completeFilters: [],\n      flagFilters: [],\n      classTypeFilters: [],\n      sort: \"\",\n      nameFilter: \"\",\n      unitFilter: \"\",\n    }\n  };\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n  onSetSort = (sort) => this.setState({sort})\n  onSetFilteredState = (lesson) => this.setState({nameFilter: lesson })\n  onUnsetFilteredState = (filter) => this.setState({[filter]: \"\" })\n  onChangeView = (view) => this.setState({currentView: view, active: view})\n\n  onSortLessons = (lessons) => {\n    const { sort } = this.state;\n    switch(sort) {\n      case 'passage':\n        return lessons.sort(passage);\n      case 'status':\n          return lessons.sort(statusAscending);\n      case 'availableDate':\n          return lessons.sort(availableDate);\n      case 'dueDate':\n        return lessons.sort(dueDate);\n      case 'alerts':\n        return lessons.sort(alerts);\n      default:\n        break;  \n\n    }\n  }\n\n  onCloneLesson = (index) => {\n    const { lessons } = this.state;\n    this.setState(prevState => {\n      prevState.lessons.push(lessons[index]);\n      return { lessons: prevState.lessons}\n     })\n  }\n\n  onDeleteLesson = (index) => {\n    const { lessons } = this.state;\n    const newLessonsArray = this.arrayItemRemover(lessons, lessons[index])\n    this.setState({lessons: newLessonsArray})\n  }\n\n  onHandleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  onFilterLessons = () => {\n    const { unitFilter, statusFilters, subjectFilters, classTypeFilters, completeFilters, flagFilters, lessons: allLessons } = this.state;\n    let lessons = allLessons;\n    if (statusFilters.length && statusFilters.indexOf(\"all\") === -1) {\n      lessons = lessons.filter(lesson => statusFilters.indexOf(lesson.status) !== -1);\n    }\n    if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n      lessons = lessons.filter(lesson => subjectFilters.indexOf(lesson.subject) !== -1)\n    }\n    if (completeFilters.length && completeFilters.indexOf('all') === -1) {\n      lessons = lessons.filter(lesson => completeFilters.indexOf(lesson.completionDate) !== -1)\n    }\n    if (flagFilters.length && flagFilters.indexOf('all') === -1) {\n      lessons = lessons.filter(lesson => flagFilters.indexOf(lesson.alerts) !== -1)\n    }\n    if (unitFilter.length && unitFilter.indexOf(\"all\") === -1) {\n      lessons = lessons.filter(lesson => unitFilter.indexOf(lesson.topic) !== -1)\n    }\n    if (classTypeFilters.length && classTypeFilters.indexOf(\"all\") === -1) {\n      lessons = lessons.filter(lesson => classTypeFilters.indexOf(lesson.topic) !== -1)\n    }\n    return lessons;\n  }\n\n  getMappableLessons = () => {\n    const { sort, lessons, unitFilters, statusFilters, subjectFilters, classTypeFilters, completeFilters, flagFilters} = this.state;\n    let mappableLessons = lessons;\n    if (unitFilters.length || statusFilters.length || subjectFilters.length || classTypeFilters.length || completeFilters.length || flagFilters.length) {\n      mappableLessons = this.onFilterLessons();\n    }\n    if (sort) {\n      return this.onSortLessons(mappableLessons)\n    }\n    return mappableLessons\n  }\n  \n  arrayItemRemover = (array, value) => array.filter((lesson) => lesson !== value)\n\n  renderCurrentView = () => {\n    const {active } = this.state;\n    if (active === 'full') {\n      return <FullView lessons={this.getMappableLessons()} onDeleteLesson={this.onDeleteLesson} onCloneLesson={this.onCloneLesson}/>\n    }\n  }\n\n\n  render() {\n    const { currentView, activeFilters } = this.state;\n    return (\n      <React.Fragment>\n        <FilterSection\n        currentView={currentView}\n        onChangeView={this.onChangeView}\n        onHandleFilterClick={this.onHandleFilterClick}\n        activeFilters={activeFilters}\n        onClearFilters={this.onClearFilters}\n        onSetFilteredState={this.onSetFilteredState}\n        onUnsetFilteredState={this.onUnsetFilteredState}\n        onSetSort={this.onSetSort}\n        />\n        {this.renderCurrentView()}\n      <a href=\"#\" className=\"waves-effect waves-teal btn add-btn\"><i className=\"material-icons\">add</i>New Lesson</a>\n      </React.Fragment>\n    )\n  }\n}\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default DetailLessonList;\n"]},"metadata":{},"sourceType":"module"}