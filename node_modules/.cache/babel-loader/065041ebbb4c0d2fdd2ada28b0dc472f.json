{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\n\n/* eslint-disable array-callback-return */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Portal from '../../../Portal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\nimport OwnerSection from '../SharedModalComponents/OwnerSection';\nimport LocationContactInfo from '../SharedModalComponents/LocationContactInfo';\nimport LocationEmailSettings from '../SharedModalComponents/LocationEmailSettings';\nimport LocationBranding from '../SharedModalComponents/LocationBranding';\nimport sampleOwners from '../NewLocationModal/utils/sampleOwners';\nimport { nestedEditFieldValidation } from '../../../utils/fieldValidation'; // TODO: Render only one instance of this modal\n\nvar LocationDetailsModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LocationDetailsModal, _React$Component);\n\n  function LocationDetailsModal(props) {\n    var _this;\n\n    _classCallCheck(this, LocationDetailsModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocationDetailsModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (!_this.state.originalLocation || nextProps.location.id !== _this.state.originalLocation.id) {\n        var _nextProps$location = nextProps.location;\n        _nextProps$location = _nextProps$location === void 0 ? {} : _nextProps$location;\n        var owner = _nextProps$location.owner,\n            id = _nextProps$location.id,\n            locationContactInfo = _nextProps$location.locationContactInfo,\n            locationEmailSettings = _nextProps$location.locationEmailSettings,\n            locationBranding = _nextProps$location.locationBranding;\n        var updatedLocation = {\n          owner: owner,\n          id: id,\n          locationContactInfo: locationContactInfo,\n          locationEmailSettings: locationEmailSettings,\n          locationBranding: locationBranding\n        };\n        var originalLocationState = _this.state.originalLocation;\n        var originalLocation = update(originalLocationState, {\n          $merge: nextProps.location\n        });\n\n        _this.setState({\n          originalLocation: originalLocation,\n          updatedLocation: updatedLocation\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenUserListModal\", function () {\n      return _this.setState({\n        userListModalOpen: true,\n        changeModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseUserListModal\", function () {\n      return _this.setState({\n        userListModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenChangeModal\", function () {\n      return _this.setState({\n        changeModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseChangeModal\", function () {\n      return _this.setState({\n        changeModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetValidation\", function (validation, cb) {\n      return _this.setState({\n        validation: validation\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedLocation, _this$props, onSaveLocationChanges, onSaveLocationError, onClose, valid;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                updatedLocation = _this.state.updatedLocation;\n                _this$props = _this.props, onSaveLocationChanges = _this$props.onSaveLocationChanges, onSaveLocationError = _this$props.onSaveLocationError, onClose = _this$props.onClose; // const valid = true;\n\n                _context.next = 5;\n                return nestedEditFieldValidation(_this.state, _this.state.updatedLocation, _this.onSetValidation, _this.props.onSetLocationValidation);\n\n              case 5:\n                valid = _context.sent;\n\n                if (valid) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", onSaveLocationError());\n\n              case 8:\n                onSaveLocationChanges(updatedLocation);\n                return _context.abrupt(\"return\", onClose());\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"initialLocationMount\", function () {\n      return _this.state.originalLocation.id !== _this.props.location.id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (event, name, stateKey) {\n      var previousLocationState = _this.state.updatedLocation;\n      var value;\n\n      if (event.hex) {\n        value = event.hex;\n      } else if (event.target) {\n        value = event.target.value;\n      } else {\n        value = event;\n      }\n\n      var updatedLocation;\n\n      if (name === 'owner') {\n        updatedLocation = update(previousLocationState, {\n          owner: {\n            $set: event\n          }\n        });\n      } else {\n        updatedLocation = update(previousLocationState, _defineProperty({}, stateKey, {\n          $merge: _defineProperty({}, name, value)\n        }));\n      }\n\n      _this.setState({\n        updatedLocation: updatedLocation\n      });\n    });\n\n    _this.state = {\n      owner: null,\n      userListModalOpen: false,\n      changeModalOpen: false,\n      originalLocation: {\n        id: '',\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhoneNumber: '',\n          website: '',\n          locationStreetAddress: '',\n          locationCity: '',\n          locationState: '',\n          locationZip: ''\n        },\n        locationEmailSettings: {\n          automatedEmailOrigin: '',\n          automatedEmailSalutation: ''\n        },\n        locationBranding: {\n          locationUrl: '',\n          headerColor1: '',\n          headerColor2: '',\n          headerLogoBackgroundColor: '',\n          headerLogoBackgroundAlpha: '',\n          horizontalLogoVariation: '',\n          squareLogoVariation: '',\n          backgroundImage: '',\n          backgroundBlur: '',\n          backgroundOverlayAlpha: '',\n          studentWelcomeVideo: '',\n          instructorWelcomeVideo: ''\n        }\n      },\n      updatedLocation: {\n        id: '',\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhoneNumber: '',\n          website: '',\n          locationStreetAddress: '',\n          locationCity: '',\n          locationState: '',\n          locationZip: ''\n        },\n        locationEmailSettings: {\n          automatedEmailOrigin: '',\n          automatedEmailSalutation: ''\n        },\n        locationBranding: {\n          locationUrl: '',\n          headerColor1: '',\n          headerColor2: '',\n          headerLogoBackgroundColor: '',\n          headerLogoBackgroundAlpha: '',\n          horizontalLogoVariation: '',\n          squareLogoVariation: '',\n          backgroundImage: '',\n          backgroundBlur: '',\n          backgroundOverlayAlpha: '',\n          studentWelcomeVideo: '',\n          instructorWelcomeVideo: ''\n        }\n      },\n      validation: {\n        locationContactInfo: {\n          locationName: true,\n          locationNickname: true,\n          locationEmail: true\n        },\n        locationEmailSettings: {\n          automatedEmailOrigin: true,\n          automatedEmailSalutation: true\n        },\n        locationBranding: {\n          locationUrl: true,\n          headerColor1: true,\n          headerColor2: true,\n          headerLogoBackgroundColor: true,\n          headerLogoBackgroundAlpha: true,\n          horizontalLogoVariation: true,\n          squareLogoVariation: true,\n          backgroundImage: true,\n          backgroundBlur: true,\n          backgroundOverlayAlpha: true\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LocationDetailsModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$location = this.props.location;\n      _this$props$location = _this$props$location === void 0 ? {} : _this$props$location;\n      var owner = _this$props$location.owner,\n          id = _this$props$location.id,\n          locationContactInfo = _this$props$location.locationContactInfo,\n          locationEmailSettings = _this$props$location.locationEmailSettings,\n          locationBranding = _this$props$location.locationBranding;\n      var updatedLocation = {\n        owner: owner,\n        id: id,\n        locationContactInfo: locationContactInfo,\n        locationEmailSettings: locationEmailSettings,\n        locationBranding: locationBranding\n      };\n      var originalLocationState = this.state.originalLocation;\n      var originalLocation = update(originalLocationState, {\n        $merge: updatedLocation\n      });\n      this.setState({\n        originalLocation: originalLocation,\n        updatedLocation: updatedLocation\n      }); // eslint-disable-line\n    } // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the user edit page\n    // This resets the component state to reflect the details of the next user the user clicks on\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          onClose = _this$props2.onClose,\n          location = _this$props2.location;\n      var owner = location.owner,\n          locationContactInfo = location.locationContactInfo,\n          locationEmailSettings = location.locationEmailSettings,\n          locationBranding = location.locationBranding;\n      var _this$state = this.state,\n          _this$state$updatedLo = _this$state.updatedLocation,\n          updatedOwner = _this$state$updatedLo.owner,\n          updatedLocationContactInfo = _this$state$updatedLo.locationContactInfo,\n          updatedLocationEmailSettings = _this$state$updatedLo.locationEmailSettings,\n          updatedLocationBranding = _this$state$updatedLo.locationBranding,\n          _this$state$validatio = _this$state.validation,\n          locationContactInfoValidation = _this$state$validatio.locationContactInfo,\n          locationEmailSettingsValidation = _this$state$validatio.locationEmailSettings,\n          locationBrandingValidation = _this$state$validatio.locationBranding,\n          userListModalOpen = _this$state.userListModalOpen,\n          changeModalOpen = _this$state.changeModalOpen;\n      return React.createElement(Portal, {\n        selector: \"#modal\"\n      }, open && React.createElement(\"form\", {\n        className: \"jsx-1456167890\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"overlay\"\n      }, React.createElement(ClickOffComponentWrapper, {\n        nestedModals: userListModalOpen || changeModalOpen,\n        onOuterClick: onClose\n      }, React.createElement(\"div\", {\n        id: \"modal_location_create\",\n        className: \"jsx-1456167890\" + \" \" + \"modal modal-custom modal-custom-large modal-gray\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"card-modal card-main card grey lighten-3\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"card-panel card-panel-title green lighten-1 white-text\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"col\"\n      }, React.createElement(\"h3\", {\n        className: \"jsx-1456167890\" + \" \" + \"h2\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-1456167890\" + \" \" + \"heading-holder\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-1456167890\" + \" \" + \"heading-block\"\n      }, \"Edit Location\")))), React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        className: \"jsx-1456167890\" + \" \" + \"col\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-1456167890\" + \" \" + \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-1456167890\" + \" \" + \"icon-location\"\n      }), React.createElement(\"span\", {\n        className: \"jsx-1456167890\" + \" \" + \"text-icon\"\n      }, \"Location\"))))), React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"col s12 l6\"\n      }, React.createElement(OwnerSection, {\n        owner: this.initialLocationMount() ? owner : updatedOwner,\n        userList: sampleOwners,\n        handleDetailsChange: this.handleDetailsChange,\n        userListModalOpen: userListModalOpen,\n        changeModalOpen: changeModalOpen,\n        onOpenUserListModal: this.onOpenUserListModal,\n        onCloseUserListModal: this.onCloseUserListModal,\n        onOpenChangeModal: this.onOpenChangeModal,\n        onCloseChangeModal: this.onCloseChangeModal\n      }), React.createElement(LocationContactInfo, {\n        state: this.initialLocationMount() ? locationContactInfo : updatedLocationContactInfo,\n        handleDetailsChange: this.handleDetailsChange,\n        validation: locationContactInfoValidation,\n        noColumn: true\n      }), React.createElement(LocationEmailSettings, {\n        state: this.initialLocationMount() ? locationEmailSettings : updatedLocationEmailSettings,\n        handleDetailsChange: this.handleDetailsChange,\n        validation: locationEmailSettingsValidation,\n        noColumn: true\n      })), React.createElement(LocationBranding, {\n        state: this.initialLocationMount() ? locationBranding : updatedLocationBranding,\n        handleDetailsChange: this.handleDetailsChange,\n        validation: locationBrandingValidation\n      }))), React.createElement(\"div\", {\n        className: \"jsx-1456167890\" + \" \" + \"modal-footer\"\n      }, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: onClose,\n        className: \"jsx-1456167890\" + \" \" + \"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n      }, \"Cancel\"), React.createElement(\"a\", {\n        href: \"#\",\n        style: {\n          color: 'white'\n        },\n        onClick: this.onSubmit,\n        className: \"jsx-1456167890\" + \" \" + \"btn\"\n      }, \"Save\")))))))), React.createElement(_JSXStyle, {\n        id: \"1456167890\"\n      }, [\"h4.jsx-1456167890{font-size:2.28rem;line-height:110%;margin:1.52rem 0 .912rem 0;margin-top:0;}\", \"p.jsx-1456167890{font-size:16px;color:#343434;}\", \"p.passage.jsx-1456167890{font-size:14px;}\", \"a.jsx-1456167890{color:#343434;}\", \".overlay.jsx-1456167890{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:999;}\", \".modal.jsx-1456167890{display:block;background-color:transparent;position:absolute;top:10%;right:10%;left:10%;box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);}\", \".modal-footer.jsx-1456167890{background-color:white;}\", \".modal-custom.jsx-1456167890{opacity:1;visibility:visible;}\", \".modal-full-size.jsx-1456167890{z-index:999;width:100%;left:0;top:0;right:0;bottom:0;}\"]));\n    }\n  }]);\n\n  return LocationDetailsModal;\n}(React.Component);\n\nexport default LocationDetailsModal;","map":null,"metadata":{},"sourceType":"module"}