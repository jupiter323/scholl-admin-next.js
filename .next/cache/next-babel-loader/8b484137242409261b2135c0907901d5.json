{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nvar areaColorMap = {\n  maroon: '#ce237a',\n  blue: '#1aa3ef',\n  purple: '#752189',\n  green: '#3a8745',\n  orange: '#e28100'\n};\n\nvar _data = function data(percentage, color) {\n  return {\n    datasets: [{\n      data: [100, 100 - percentage],\n      backgroundColor: [areaColorMap[color], 'rgb(234, 234, 234)']\n    }]\n  };\n}; // TODO: Implement doughnut charts\n\n\nvar CourseProgress = function CourseProgress(_ref) {\n  var _ref$state = _ref.state,\n      startDate = _ref$state.startDate,\n      testDate = _ref$state.testDate,\n      progress = _ref$state.progress,\n      improvement = _ref$state.improvement,\n      lessons = _ref$state.lessons,\n      instruction = _ref$state.instruction,\n      practiceTests = _ref$state.practiceTests,\n      active = _ref.active;\n  return __jsx(\"div\", {\n    className: \"col s12 l7 card-width-747\"\n  }, __jsx(\"div\", {\n    className: \"card-main card card-chart\"\n  }, __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"h2\", null, \"Course Progress\"), __jsx(\"div\", {\n    className: \"progress-block\"\n  }, __jsx(\"div\", {\n    className: \"progress-legend\"\n  }, active ? [__jsx(\"div\", {\n    className: \"legend-block\",\n    key: \"0\"\n  }, __jsx(\"span\", {\n    className: \"small-text\"\n  }, \"Start Date\"), __jsx(\"time\", {\n    dateTime: \"2018-06-13\",\n    className: \"large-text\"\n  }, startDate)), __jsx(\"div\", {\n    className: \"legend-block\",\n    key: \"1\"\n  }, __jsx(\"span\", {\n    className: \"small-text\"\n  }, \"Test Date\"), __jsx(\"time\", {\n    dateTime: \"2018-10-06\",\n    className: \"large-text\"\n  }, \"Oct SAT (\", testDate, \")\"))] : __jsx(\"span\", {\n    className: \"text-frame\"\n  }, \"Once the course begins, check here to be sure the student is on track.\")), __jsx(\"div\", {\n    className: \"progress\"\n  }, __jsx(\"div\", {\n    className: \"determinate\",\n    style: {\n      width: active ? \"\".concat(progress, \"%\") : '0%'\n    }\n  }, active && __jsx(\"span\", {\n    className: \"progress-label\"\n  }, progress, \"%\")))), __jsx(\"div\", {\n    className: \"charts-container\"\n  }, __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"chart-block\"\n  }, active ? __jsx(Doughnut, {\n    data: function data() {\n      return _data(improvement, 'maroon');\n    },\n    width: 156,\n    height: 156,\n    options: {\n      cutoutPercentage: 75\n    }\n  }) : __jsx(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-improvement.json\"\n  }), __jsx(\"div\", {\n    className: \"chart-text\"\n  }, __jsx(\"span\", {\n    className: \"title\"\n  }, \"Improvement\"), active ? [__jsx(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, improvement, \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs target score\")] : __jsx(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Yet\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"chart-block\"\n  }, active ? __jsx(Doughnut, {\n    data: function data() {\n      return _data(lessons, 'purple');\n    },\n    width: 156,\n    height: 156,\n    options: {\n      cutoutPercentage: 75\n    }\n  }) : __jsx(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-improvement.json\"\n  }), __jsx(\"div\", {\n    className: \"chart-text\"\n  }, __jsx(\"span\", {\n    className: \"title\"\n  }, \"Lessons\"), active ? [__jsx(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, lessons, \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs scheduled lessons\")] : __jsx(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Scheduled\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"chart-block\"\n  }, active ? __jsx(Doughnut, {\n    data: function data() {\n      return _data(instruction, 'orange');\n    },\n    width: 156,\n    height: 156,\n    options: {\n      cutoutPercentage: 75\n    }\n  }) : __jsx(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-improvement.json\"\n  }), __jsx(\"div\", {\n    className: \"chart-text\"\n  }, __jsx(\"span\", {\n    className: \"title\"\n  }, \"Instruction\"), active ? [__jsx(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, instruction, \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs scheduled instruction\")] : __jsx(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Scheduled\")))), __jsx(\"div\", {\n    className: \"col\"\n  }, __jsx(\"div\", {\n    className: \"chart-block\"\n  }, active ? __jsx(Doughnut, {\n    data: function data() {\n      return _data(practiceTests, 'blue');\n    },\n    width: 156,\n    height: 156,\n    options: {\n      cutoutPercentage: 75\n    }\n  }) : __jsx(\"div\", {\n    className: \"js-donut-chart js-donut-middle\",\n    \"data-stroke-width\": \"20\",\n    \"data-source\": \"./inc/score-data-improvement.json\"\n  }), __jsx(\"div\", {\n    className: \"chart-text\"\n  }, __jsx(\"span\", {\n    className: \"title\"\n  }, \"Practice Tests\"), active ? [__jsx(\"span\", {\n    className: \"value\",\n    key: \"0\"\n  }, practiceTests, \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    key: \"1\"\n  }, \"vs scheduled tests\")] : __jsx(\"span\", {\n    className: \"inactive-text\"\n  }, \"None Scheduled\"))))), active ? __jsx(\"div\", {\n    className: \"chart-legend\"\n  }, __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"col legend-frame\"\n  }, __jsx(\"span\", {\n    className: \"box complete\"\n  }), __jsx(\"span\", {\n    className: \"text\"\n  }, \"Complete\")), __jsx(\"div\", {\n    className: \"col legend-frame\"\n  }, __jsx(\"span\", {\n    className: \"box behind\"\n  }), __jsx(\"span\", {\n    className: \"text\"\n  }, \"Behind Schedule\")))) : null))));\n};\n\nCourseProgress.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired\n};\nexport default CourseProgress;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailSummaryPage/components/CourseProgress/index.js"],"names":["React","PropTypes","Doughnut","areaColorMap","maroon","blue","purple","green","orange","data","percentage","color","datasets","backgroundColor","CourseProgress","state","startDate","testDate","progress","improvement","lessons","instruction","practiceTests","active","width","cutoutPercentage","propTypes","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst areaColorMap = {\n  maroon: '#ce237a',\n  blue: '#1aa3ef',\n  purple: '#752189',\n  green: '#3a8745',\n  orange: '#e28100',\n};\n\nconst data = (percentage, color) => ({\n  datasets: [{\n    data: [100, 100-percentage],\n    backgroundColor: [\n      areaColorMap[color],\n      'rgb(234, 234, 234)',\n    ],\n  }],\n})\n\n  // TODO: Implement doughnut charts\n  const CourseProgress = ({ state: { startDate, testDate, progress, improvement, lessons, instruction, practiceTests }, active }) => (\n  <div className=\"col s12 l7 card-width-747\">\n    <div className=\"card-main card card-chart\">\n      <div className=\"card-content\">\n        <h2>Course Progress</h2>\n        <div className=\"progress-block\">\n          <div className=\"progress-legend\">\n            <Choose>\n              <When condition={active}>\n                <div className=\"legend-block\">\n                  <span className=\"small-text\">Start Date</span>\n                  <time dateTime=\"2018-06-13\" className=\"large-text\">{startDate}</time>\n                </div>\n                <div className=\"legend-block\">\n                  <span className=\"small-text\">Test Date</span>\n                  <time dateTime=\"2018-10-06\" className=\"large-text\">Oct SAT ({testDate})</time>\n                </div>\n              </When>\n              <Otherwise>\n                <span className=\"text-frame\">Once the course begins, check here to be sure the student is on track.</span>\n              </Otherwise>\n            </Choose>\n          </div>\n          <div className=\"progress\">\n            <div className=\"determinate\" style={{ width: active ? `${progress}%` : '0%'}}>\n                {active && <span className=\"progress-label\">{progress}%</span>}\n              </div>\n          </div>\n        </div>\n        <div className=\"charts-container\">\n          <div className=\"row mb-0\">\n            <div className=\"col\">\n              <div className=\"chart-block\">\n              <Choose>\n                <When condition={active}>\n                <Doughnut\n                  data={() => data(improvement, 'maroon')}\n                  width={156}\n                  height={156}\n                  options={{\n                    cutoutPercentage: 75,\n                  }}\n                />\n                </When>\n                <Otherwise>\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-improvement.json'></div>\n                </Otherwise>\n              </Choose>\n                <div className=\"chart-text\">\n                  <span className=\"title\">Improvement</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{improvement}%</span>\n                      <span className=\"description\">vs target score</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Yet</span>\n                    </Otherwise>\n                  </Choose>\n\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"chart-block\">\n              <Choose>\n                <When condition={active}>\n                <Doughnut\n                  data={() => data(lessons, 'purple')}\n                  width={156}\n                  height={156}\n                  options={{\n                    cutoutPercentage: 75,\n                  }}\n                />\n                </When>\n                <Otherwise>\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-improvement.json'></div>\n                </Otherwise>\n              </Choose>\n                 <div className=\"chart-text\">\n                  <span className=\"title\">Lessons</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{lessons}%</span>\n                      <span className=\"description\">vs scheduled lessons</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Scheduled</span>\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"chart-block\">\n              <Choose>\n                <When condition={active}>\n                <Doughnut\n                  data={() => data(instruction, 'orange')}\n                  width={156}\n                  height={156}\n                  options={{\n                    cutoutPercentage: 75,\n                  }}\n                />\n                </When>\n                <Otherwise>\n                <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-improvement.json'></div>\n                </Otherwise>\n              </Choose>\n                <div className=\"chart-text\">\n                  <span className=\"title\">Instruction</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{instruction}%</span>\n                      <span className=\"description\">vs scheduled instruction</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Scheduled</span>\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"chart-block\">\n              <Choose>\n                <When condition={active}>\n                  <Doughnut\n                    data={() => data(practiceTests, 'blue')}\n                    width={156}\n                    height={156}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                </When>\n                <Otherwise>\n                  <div className=\"js-donut-chart js-donut-middle\" data-stroke-width=\"20\" data-source='./inc/score-data-improvement.json'></div>\n                </Otherwise>\n              </Choose>\n                 <div className=\"chart-text\">\n                  <span className=\"title\">Practice Tests</span>\n                  <Choose>\n                    <When condition={active}>\n                      <span className=\"value\">{practiceTests}%</span>\n                      <span className=\"description\">vs scheduled tests</span>\n                    </When>\n                    <Otherwise>\n                      <span className=\"inactive-text\">None Scheduled</span>\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n          </div>\n          <If condition={active}>\n            <div className=\"chart-legend\">\n              <div className=\"row mb-0\">\n                <div className=\"col legend-frame\">\n                  <span className=\"box complete\"></span>\n                  <span className=\"text\">Complete</span>\n                </div>\n                <div className=\"col legend-frame\">\n                  <span className=\"box behind\"></span>\n                  <span className=\"text\">Behind Schedule</span>\n                </div>\n              </div>\n            </div>\n          </If>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCourseProgress.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default CourseProgress;\n"]},"metadata":{},"sourceType":"module"}