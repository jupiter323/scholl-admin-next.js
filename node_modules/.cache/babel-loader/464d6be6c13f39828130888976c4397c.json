{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport DetailPage from '../components/Worksheet/DetailPage';\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView';\nimport ListView from '../components/Worksheets/components/ListView'; // import WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\n// import WorksheetListItem from '../components/Worksheets/components/WorksheetListItem';\n\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, worksheetName, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar Worksheets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Worksheets, _Component);\n\n  function Worksheets(props) {\n    var _this;\n\n    _classCallCheck(this, Worksheets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Worksheets).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        filterName: \"\",\n        filterTopic: \"\",\n        subjectFilters: [],\n        difficultyFilters: [],\n        problemTypeFilters: [],\n        sourceFilter: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({\n        worksheetsAreFiltered: false\n      }, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (filterTopic) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterTopic: filterTopic\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredTopicState\", function () {\n      return _this.setState({\n        filterTopic: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortWorksheets\", function (worksheets) {\n      var sort = _this.setState.sort;\n\n      switch (sort) {\n        case \"problemType\":\n          return worksheets.sort(problemType);\n\n        case 'subject':\n          return worksheets.sort(subject);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'difficulty':\n          return worksheets.sort(difficulty);\n\n        case 'name':\n          return worksheets.sort(worksheetName);\n\n        case 'source':\n          return worksheets.sort(source);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          worksheets = _this$state.worksheets,\n          filterName = _this$state.filterName;\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var newWorksheetName = currentWorksheet.newWorksheetName;\n        var worksheetString = newWorksheetName.replace(/\\s/g, \"\").toLowerCase();\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByTopic\", function () {\n      var preFilteredWorksheets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allWorksheets = _this$state2.worksheets,\n          filterTopic = _this$state2.filterTopic;\n      var worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var topic = currentWorksheet.topic;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      var newArray = _this.arrayItemRemover(worksheets, worksheets[index]);\n\n      _this.setState({\n        worksheets: newArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      _this.setState(function (prevState) {\n        prevState.worksheets.push(worksheets[index]);\n        return {\n          students: prevState.students\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterWorksheets\", function () {\n      var _this$state3 = _this.state,\n          problemTypeFilters = _this$state3.problemTypeFilters,\n          subjectFilters = _this$state3.subjectFilters,\n          problemsFilters = _this$state3.problemsFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          sourceFilters = _this$state3.sourceFilters,\n          timeEstimateFilters = _this$state3.timeEstimateFilters,\n          allWorksheets = _this$state3.worksheets;\n      var worksheets = allWorksheets;\n\n      if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return problemTypeFilters.indexOf(worksheet.problemType) !== -1;\n        });\n      }\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return subjectFilters.indexOf(worksheet.subject) !== -1;\n        });\n      }\n\n      if (problemsFilters.length && problemsFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return problemsFilters.indexOf(worksheet.problems) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return difficultyFilters.indexOf(worksheet.difficulty) !== -1;\n        });\n      }\n\n      if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return sourceFilters.indexOf(worksheet.worksheetSource) !== -1;\n        });\n      }\n\n      if (timeEstimateFilters.length && timeEstimateFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return timeEstimateFilters.indexOf(worksheet.timeEstimate) !== -1;\n        });\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableWorksheets\", function () {\n      var _this$state4 = _this.state,\n          problemTypeFilters = _this$state4.problemTypeFilters,\n          subjectFilters = _this$state4.subjectFilters,\n          difficultyFilters = _this$state4.difficultyFilters,\n          sourceFilters = _this$state4.sourceFilters,\n          allWorksheets = _this$state4.worksheets,\n          filterName = _this$state4.filterName,\n          sort = _this$state4.sort,\n          filterTopic = _this$state4.filterTopic;\n      var mappableWorksheets;\n\n      if (filterName.length && !filterTopic.length) {\n        mappableWorksheets = _this.onFilterByName();\n      } // else if (!filterName.length && filterTopic.length){\n      //   mappableWorksheets = this.onFilterbyTopic();\n      // }\n      // else if (filterName.length && filterTopic.length) {\n      //   const filteredByName = this.onFilterByName();\n      //   mappableWorksheets = this.onFilterByTopic(filteredByName)\n      // }\n      // if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length){\n      //   mappableWorksheets = this.onFilterWorksheets();\n      // }\n      else {\n          mappableWorksheets = allWorksheets;\n        }\n\n      if (sort) {\n        return _this.onSortWorksheets(mappableWorksheets);\n      }\n\n      return mappableWorksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'filterName') {\n        if (event === '') {\n          return _this.onUnsetFilteredState();\n        }\n\n        return _this.onSetFilteredState(event);\n      }\n\n      if (name === 'filterTopic') {\n        if (event === \"\") {\n          return _this.onUnsetFilteredState();\n        }\n\n        return _this.onSetFilteredState(event);\n      } else if (name === 'sort') {\n        return _this.onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (worksheet) {\n        return worksheet !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var active = _this.state.active;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          worksheets: _this.getMappableWorksheets(),\n          mapWorksheets: _this.getMappableWorksheets,\n          onDeleteWorksheet: _this.onDeleteWorksheet,\n          onCloneWorksheet: _this.onCloneWorksheet\n        });\n      }\n\n      if (active === 'list') {\n        return React.createElement(ListView, {\n          worksheets: _this.getMappableWorksheets(),\n          mapWorksheets: _this.getMappableWorksheets,\n          onDeleteWorksheet: _this.onDeleteWorksheet\n        });\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      timeEstimateFilters: [],\n      problemsFilters: [],\n      sourceFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(Worksheets, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state5 = this.state,\n          dropdownIsOpen = _this$state5.dropdownIsOpen,\n          currentView = _this$state5.currentView;\n      return React.createElement(\"div\", {\n        className: \"worksheets-page\"\n      }, React.createElement(\"div\", {\n        className: \"wrapper\"\n      }, React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(WorksheetHeading, null), React.createElement(FilterSection, {\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        onUnsetFilteredTopicState: this.onUnsetFilteredTopicState\n      }), this.renderCurrentView()), React.createElement(\"div\", {\n        className: \"add-btn-block dropdown-small\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetDropdown(event, dropdownIsOpen);\n        },\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n        \"data-target\": \"dropdown_assign_selected\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"Custom Worksheet\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign_selected\",\n        className: \"dropdown-content dropdown-small\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Create New\")))))));\n    }\n  }]);\n\n  return Worksheets;\n}(Component);\n\nexport default Worksheets;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\pages\\worksheets.js"],"names":["React","Component","update","DetailPage","WorksheetHeading","FullView","ListView","sampleWorksheets","FilterSection","problemType","subject","problems","difficulty","worksheetName","source","timeEstimate","Worksheets","props","setState","filterName","filterTopic","subjectFilters","difficultyFilters","problemTypeFilters","sourceFilter","sort","view","currentView","active","worksheetsAreFiltered","filter","checkForFilteredState","worksheets","state","reduce","finalArr","currentWorksheet","newWorksheetName","worksheetString","replace","toLowerCase","indexOf","push","preFilteredWorksheets","allWorksheets","length","topic","index","newArray","arrayItemRemover","prevState","students","problemsFilters","sourceFilters","timeEstimateFilters","worksheet","worksheetSource","mappableWorksheets","onFilterByName","onSortWorksheets","event","name","value","target","updatedState","$merge","onUnsetFilteredState","onSetFilteredState","onSetSort","array","getMappableWorksheets","onDeleteWorksheet","onCloneWorksheet","modalOpen","dropdownIsOpen","onChangeView","onSetFilteredTopicState","onUnsetFilteredTopicState","renderCurrentView","onSetDropdown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport DetailPage from '../components/Worksheet/DetailPage';\n\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView'\nimport ListView from '../components/Worksheets/components/ListView';\n// import WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\n// import WorksheetListItem from '../components/Worksheets/components/WorksheetListItem';\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, worksheetName, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Worksheets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      timeEstimateFilters: [],\n      problemsFilters: [],\n      sourceFilters: [],\n    };\n  }\n  onClearFilters = () => this.setState({ filterName: \"\", filterTopic: \"\", subjectFilters: [], difficultyFilters: [], problemTypeFilters: [], sourceFilter: \"\" })\n\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view, active: view });\n\n  onSetFilteredState = (filterName) => this.setState({ worksheetsAreFiltered: true, filterName })\n  onUnsetFilteredState = (filter) => this.setState({ worksheetsAreFiltered: false, [filter]: \"\" })\n\n  onSetFilteredTopicState = (filterTopic) => this.setState({ worksheetsAreFiltered: true, filterTopic })\n  onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.setState;\n    switch (sort) {\n      case \"problemType\":\n        return worksheets.sort(problemType);\n      case 'subject':\n        return worksheets.sort(subject);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'difficulty':\n        return worksheets.sort(difficulty);\n      case 'name':\n        return worksheets.sort(worksheetName);\n      case 'source':\n        return worksheets.sort(source);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { newWorksheetName } = currentWorksheet;\n      const worksheetString = newWorksheetName.replace(/\\s/g, \"\").toLowerCase();\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onDeleteWorksheet = (index) => {\n    const { worksheets } = this.state;\n    const newArray = this.arrayItemRemover(worksheets, worksheets[index])\n    this.setState({ worksheets: newArray })\n  }\n\n  onCloneWorksheet = (index) => {\n    const { worksheets } = this.state;\n    this.setState(prevState => {\n      prevState.worksheets.push(worksheets[index]);\n      return { students: prevState.students }\n    })\n  }\n\n  onFilterWorksheets = () => {\n    const { problemTypeFilters, subjectFilters, problemsFilters, difficultyFilters, sourceFilters, timeEstimateFilters, worksheets: allWorksheets } = this.state;\n    let worksheets = allWorksheets;\n    if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n      worksheets = worksheets.filter(worksheet => problemTypeFilters.indexOf(worksheet.problemType) !== -1);\n    }\n    if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => subjectFilters.indexOf(worksheet.subject) !== -1)\n    }\n    if (problemsFilters.length && problemsFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => problemsFilters.indexOf(worksheet.problems) !== -1)\n    }\n    if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => difficultyFilters.indexOf(worksheet.difficulty) !== -1)\n    }\n    if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => sourceFilters.indexOf(worksheet.worksheetSource) !== -1)\n    }\n    if (timeEstimateFilters.length && timeEstimateFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => timeEstimateFilters.indexOf(worksheet.timeEstimate) !== -1)\n    }\n\n    return worksheets;\n  }\n\n  getMappableWorksheets = () => {\n\n    const { problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets: allWorksheets, filterName, sort, filterTopic } = this.state;\n    let mappableWorksheets;\n    if (filterName.length && !filterTopic.length) {\n      mappableWorksheets = this.onFilterByName();\n    }\n    // else if (!filterName.length && filterTopic.length){\n    //   mappableWorksheets = this.onFilterbyTopic();\n    // }\n    // else if (filterName.length && filterTopic.length) {\n    //   const filteredByName = this.onFilterByName();\n    //   mappableWorksheets = this.onFilterByTopic(filteredByName)\n    // }\n    // if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length){\n    //   mappableWorksheets = this.onFilterWorksheets();\n    // }\n    else {\n      mappableWorksheets = allWorksheets;\n    }\n    if (sort) {\n      return this.onSortWorksheets(mappableWorksheets)\n    }\n    return mappableWorksheets;\n  }\n\n  handleFilterChange = (event, name) => {\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'filterName') {\n      if (event === '') {\n        return this.onUnsetFilteredState();\n      }\n      return this.onSetFilteredState(event);\n    }\n    if (name === 'filterTopic') {\n      if (event === \"\") {\n        return this.onUnsetFilteredState();\n      }\n      return this.onSetFilteredState(event);\n    } else if (name === 'sort') {\n      return this.onSetSort(event);\n    }\n  }\n\n\narrayItemRemover = (array, value) => array.filter((worksheet) => worksheet !== value)\n\n// TODO get mappable worksheets before rendering view\nrenderCurrentView = () => {\n  const { active } = this.state;\n  if (active === 'full') {\n    return <FullView worksheets={this.getMappableWorksheets()} mapWorksheets={this.getMappableWorksheets} onDeleteWorksheet={this.onDeleteWorksheet} onCloneWorksheet={this.onCloneWorksheet} />;\n  }\n  if (active === 'list') {\n    return <ListView worksheets={this.getMappableWorksheets()} mapWorksheets={this.getMappableWorksheets} onDeleteWorksheet={this.onDeleteWorksheet} />;\n  }\n  return null;\n}\n\nrender() {\n  const { dropdownIsOpen, currentView } = this.state;\n  return (\n    <div className=\"worksheets-page\">\n      <div className=\"wrapper\">\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-5\">\n            <WorksheetHeading />\n            <FilterSection\n              currentView={currentView}\n              onChangeView={this.onChangeView}\n              onSetSort={this.onSetSort}\n              onSetFilteredState={this.onSetFilteredState}\n              onUnsetFilteredState={this.onUnsetFilteredState}\n              onSetFilteredTopicState={this.onSetFilteredTopicState}\n              onUnsetFilteredTopicState={this.onUnsetFilteredTopicState}\n            />\n           {this.renderCurrentView()}\n            </div>\n          <div className=\"add-btn-block dropdown-small\">\n            <a\n              href=\"#\"\n              onClick={(event) => this.onSetDropdown(event, dropdownIsOpen)}\n              className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n              data-target='dropdown_assign_selected'>\n              <i className=\"material-icons\">add</i>\n              Custom Worksheet\n                </a>\n            <ul id='dropdown_assign_selected' className='dropdown-content dropdown-small'>\n              <li><a href=\"#\">From Saved</a></li>\n              <li><a href=\"#\">Create New</a></li>\n            </ul>\n          </div>\n        </main>\n      </div>\n    </div>\n\n  );\n}\n}\n\nexport default Worksheets;"]},"metadata":{},"sourceType":"module"}