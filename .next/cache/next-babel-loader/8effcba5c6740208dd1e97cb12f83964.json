{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport FilterSection from './components/FilterSection';\nimport sampleWorksheets from './utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../../utils/sortFunctions';\nimport LessonWorksheetTestSection from '../LessonWorksheetTestSection';\n\nclass DetailWorksheetPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleAssignWorksheetDropdown\", event => {\n      event.preventDefault();\n      this.setState(({\n        assignWorksheetDropdownOpen\n      }) => ({\n        assignWorksheetDropdownOpen: !assignWorksheetDropdownOpen\n      }));\n    });\n\n    _defineProperty(this, \"onToggleDetailModalOpen\", worksheetIndex => this.setState(({\n      detailModalOpen,\n      worksheets\n    }) => ({\n      detailModalOpen: !detailModalOpen,\n      activeWorksheet: worksheets[worksheetIndex]\n    })));\n\n    _defineProperty(this, \"onSetSort\", sort => this.setState({\n      sort\n    }));\n\n    _defineProperty(this, \"onChangeView\", view => this.setState({\n      currentView: view\n    }));\n\n    _defineProperty(this, \"onSetFilteredState\", filterName => this.setState({\n      worksheetsAreFiltered: true,\n      filterName\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredState\", () => this.setState({\n      worksheetsAreFiltered: false,\n      filterName: ''\n    }));\n\n    _defineProperty(this, \"onSetFilteredTopicState\", filterTopic => this.setState({\n      worksheetsAreFiltered: true,\n      filterTopic\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredTopicState\", () => this.setState({\n      filterTopic: ''\n    }, this.checkForFilteredState));\n\n    _defineProperty(this, \"onAssignWorksheet\", assignType => {\n      console.warn('Stubbed out assign worksheet click', assignType);\n    });\n\n    _defineProperty(this, \"onFilterByName\", () => {\n      const {\n        worksheets,\n        filterName\n      } = this.state;\n      return worksheets.reduce((finalArr, currentWorksheet) => {\n        const {\n          accountInfo: {\n            lastName,\n            firstName\n          }\n        } = currentWorksheet;\n        const worksheetString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onFilterByTopic\", (preFilteredWorksheets = []) => {\n      const {\n        worksheets: allWorksheets,\n        filterTopic\n      } = this.state;\n      let worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce((finalArr, currentWorksheet) => {\n        const {\n          topic\n        } = currentWorksheet;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onSortWorksheets\", worksheets => {\n      const {\n        sort\n      } = this.state;\n\n      switch (sort) {\n        case 'dueDate':\n          return worksheets.sort(dueDate);\n\n        case 'assignDate':\n          return worksheets.sort(assignDate);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'completed':\n          return worksheets.sort(completed);\n\n        case 'flags':\n          return worksheets.sort(flags);\n\n        case 'score':\n          return worksheets.sort(score);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"getMappableWorksheets\", () => {\n      const {\n        filterName,\n        filterTopic,\n        worksheets: allWorksheets,\n        sort\n      } = this.state;\n      let worksheets;\n\n      if (filterName.length && !filterTopic.length) {\n        worksheets = this.onFilterByName();\n      } else if (!filterName.length && filterTopic.length) {\n        worksheets = this.onFilterByTopic();\n      } else if (filterName.length && filterTopic.length) {\n        const filteredByName = this.onFilterByName();\n        worksheets = this.onFilterByTopic(filteredByName);\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      if (sort) {\n        return this.onSortWorksheets(worksheets);\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(this, \"checkForFilteredState\", () => {\n      const {\n        filterName,\n        filterTopic\n      } = this.state;\n\n      if (!filterName.length && !filterTopic.length) {\n        this.setState({\n          worksheetsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"renderWorksheetView\", () => {\n      const {\n        currentView\n      } = this.state;\n\n      switch (currentView) {\n        case 'list':\n          return React.createElement(ListView, {\n            onToggleDetailModalOpen: this.onToggleDetailModalOpen,\n            worksheets: this.getMappableWorksheets()\n          });\n\n        case 'full':\n          return React.createElement(FullView, {\n            onToggleDetailModalOpen: this.onToggleDetailModalOpen,\n            worksheets: this.getMappableWorksheets()\n          });\n\n        default:\n          break;\n      }\n    });\n\n    this.state = {\n      sort: '',\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      assignWorksheetDropdownOpen: false,\n      worksheets: sampleWorksheets,\n      detailModalOpen: false,\n      activeWorksheet: null\n    };\n  }\n\n  render() {\n    const {\n      currentView,\n      assignWorksheetDropdownOpen,\n      detailModalOpen,\n      activeWorksheet\n    } = this.state;\n    const {\n      user\n    } = this.props;\n    return React.createElement(React.Fragment, null, detailModalOpen ? React.createElement(LessonWorksheetTestSection, {\n      onClose: this.onToggleDetailModalOpen,\n      worksheet: activeWorksheet,\n      user: user\n    }) : [React.createElement(\"div\", {\n      className: \"main-holder grey lighten-5 switcher-section\",\n      key: \"0\"\n    }, React.createElement(FilterSection, {\n      currentView: currentView,\n      onChangeView: this.onChangeView,\n      onSetSort: this.onSetSort,\n      onSetFilteredState: this.onSetFilteredState,\n      onUnsetFilteredState: this.onUnsetFilteredState,\n      onSetFilteredTopicState: this.onSetFilteredTopicState,\n      onUnsetFilteredTopicState: this.onUnsetFilteredTopicState\n    }), this.renderWorksheetView()), React.createElement(\"div\", {\n      className: \"add-btn-block\",\n      key: \"1\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown_assign_selected\",\n      onClick: this.onToggleAssignWorksheetDropdown,\n      className: \"dropdown-trigger waves-effect waves-teal btn add-btn\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons\"\n    }, \"add\"), \" Assign Worksheet\"), React.createElement(\"ul\", {\n      id: \"dropdown_assign_selected\",\n      className: \"dropdown-content dropdown-small\",\n      style: {\n        display: assignWorksheetDropdownOpen ? 'block' : '0',\n        opacity: assignWorksheetDropdownOpen ? '1' : '0'\n      }\n    }, React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAssignWorksheet('fromSaved')\n    }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAssignWorksheet('createNew')\n    }, \"Create New\"))))]);\n  }\n\n}\n\nexport default DetailWorksheetPage;","map":null,"metadata":{},"sourceType":"module"}