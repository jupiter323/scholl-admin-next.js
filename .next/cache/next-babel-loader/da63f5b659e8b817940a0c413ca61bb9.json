{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport Dropdown from '../../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../../utils/getValueFromState';\nconst sortByOptions = [{\n  label: 'Difficulty',\n  value: 'difficulty'\n}, {\n  label: 'Problems',\n  value: 'problems'\n}, {\n  label: 'Time Estimate',\n  value: 'timeEstimate'\n}, {\n  label: 'Subject',\n  value: 'subject'\n}];\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      titleFilter: '',\n      unitFilter: ''\n    }, this.props.onClearFilters));\n\n    _defineProperty(this, \"handleSearchChange\", ({\n      target\n    }) => this.setState({\n      [target.name]: target.value\n    }));\n\n    _defineProperty(this, \"submitSearchFilter\", searchType => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n\n      if (this.state[searchType] === '') {\n        onUnsetFilteredState(searchType);\n      }\n\n      const transformedTitle = this.state[searchType].replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(searchType, transformedTitle);\n    });\n\n    this.state = {\n      open: false,\n      titleFilter: '',\n      unitFilter: ''\n    };\n  }\n\n  render() {\n    const {\n      handleFilterClick,\n      subjectFilters,\n      typeFilters,\n      sourceFilters,\n      difficultyFilters,\n      sort,\n      onSetSort\n    } = this.props;\n    const {\n      open,\n      titleFilter,\n      unitFilter\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\",\n      style: {\n        minHeight: '0'\n      }\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"readingSubject\",\n      name: \"readingSubject\",\n      checked: subjectFilters.indexOf('readingSubject') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"readingSubject\"\n    }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"writingSubject\",\n      name: \"writingSubject\",\n      checked: subjectFilters.indexOf('writingSubject') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"writingSubject\"\n    }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"mathSubject\",\n      name: \"mathSubject\",\n      checked: subjectFilters.indexOf('mathSubject') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"mathSubject\"\n    }, \"Math\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"mixedDifficulty\",\n      name: \"mixedDifficulty\",\n      checked: subjectFilters.indexOf('mixedDifficulty') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('subject', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"mixedDifficulty\"\n    }, \"Mixed\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"satPractice\",\n      name: \"satPractice\",\n      checked: typeFilters.indexOf('satPractice') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('type', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"satPractice\"\n    }, \"SAT Practice\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"skillBuilders\",\n      name: \"skillBuilders\",\n      checked: typeFilters.indexOf('skillBuilders') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('type', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"skillBuilders\"\n    }, \"Skill Builders\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"mixedType\",\n      name: \"mixedType\",\n      checked: typeFilters.indexOf('mixedType') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('type', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"mixedType\"\n    }, \"Mixed\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"builtIn\",\n      name: \"builtIn\",\n      checked: sourceFilters.indexOf('builtIn') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('source', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"builtIn\"\n    }, \"Built-In\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"userCreated\",\n      name: \"userCreated\",\n      checked: sourceFilters.indexOf('userCreated') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('source', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"userCreated\"\n    }, \"User Created\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"easy\",\n      name: \"easy\",\n      checked: difficultyFilters.indexOf('easy') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"easy\"\n    }, \"Easy\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"medium\",\n      name: \"medium\",\n      checked: difficultyFilters.indexOf('medium') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"medium\"\n    }, \"Medium\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"difficult\",\n      name: \"difficult\",\n      checked: difficultyFilters.indexOf('difficult') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"difficult\"\n    }, \"Di\\uFB03cult\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"mixedDifficulty\",\n      name: \"mixedDifficulty\",\n      checked: difficultyFilters.indexOf('mixedDifficulty') !== -1,\n      onChange: ({\n        target\n      }) => handleFilterClick('difficulty', target.name)\n    }), __jsx(\"label\", {\n      htmlFor: \"mixedDifficulty\"\n    }, \"Mixed\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\"\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"titleFilter\",\n      name: \"titleFilter\",\n      className: \"input-control validate\",\n      value: titleFilter,\n      onChange: this.handleSearchChange\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: () => this.submitSearchFilter('titleFilter'),\n      className: \"search-button\"\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: titleFilter.length ? 'label active' : 'label',\n      htmlFor: \"titleFilter\"\n    }, \"Search By Title\"))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\"\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"unitFilter\",\n      name: \"unitFilter\",\n      className: \"input-control validate\",\n      value: unitFilter,\n      onChange: this.handleSearchChange\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      onClick: () => this.submitSearchFilter('unitFilter'),\n      className: \"search-button\"\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: unitFilter.length ? 'label active' : 'label',\n      htmlFor: \"unitFilter\"\n    }, \"Search By Unit\"))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m6\"\n    }, __jsx(\"div\", {\n      className: \"input-field\",\n      style: {\n        marginBottom: '0',\n        marginTop: '0'\n      }\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, sortByOptions),\n      onChange: onSetSort,\n      options: sortByOptions,\n      label: \"Sort By\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), __jsx(\"div\", {\n      className: \"switcher-block col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"view-switcher\"\n    }, __jsx(\"ul\", {\n      className: \"switcher center-align\"\n    }, __jsx(\"li\", {\n      className: \"active\",\n      \"data-view\": \"view-full\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"Month View\")), __jsx(\"li\", {\n      \"data-view\": \"view-list\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, \"Day View\"))))), __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\"\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}