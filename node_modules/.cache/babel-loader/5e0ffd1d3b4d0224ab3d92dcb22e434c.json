{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar formatTimeLoggedIn = function formatTimeLoggedIn(totalMinutes) {\n  var hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  var minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return React.createElement(React.Fragment, null, hours !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, hours), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"hrs \")), minutes !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, minutes), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"min\")));\n};\n\nvar formatVideoWatched = function formatVideoWatched(totalMinutes) {\n  var hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  var minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return React.createElement(React.Fragment, null, hours !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, hours), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"hrs \")), minutes !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, minutes), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"min\")));\n};\n\nvar SummaryCards = function SummaryCards(_ref) {\n  var _ref$state = _ref.state,\n      questionsAnswered = _ref$state.questionsAnswered,\n      videoWatched = _ref$state.videoWatched,\n      notesTaken = _ref$state.notesTaken,\n      totalTimeLoggedIn = _ref$state.totalTimeLoggedIn,\n      lastLogIn = _ref$state.lastLogIn,\n      loginTimeCode = _ref$state.loginTimeCode,\n      onTimePercentage = _ref$state.onTimePercentage;\n  return React.createElement(\"div\", {\n    className: \"col s12 l5 card-width-366\"\n  }, React.createElement(\"ul\", {\n    className: \"alerts-list\"\n  }, React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: \"icon-box purple darken-3\"\n  }, React.createElement(\"i\", {\n    className: \"icon-pencil2\"\n  })), React.createElement(\"div\", {\n    className: \"alert-text purple-text text-darken-3\"\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Questions Answered\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, questionsAnswered)))), React.createElement(\"li\", {\n    className: \"card card-alert alert-blue-dark\"\n  }, React.createElement(\"span\", {\n    className: \"icon-box cyan darken-2\"\n  }, React.createElement(\"i\", {\n    className: \"icon-videocam\"\n  })), React.createElement(\"div\", {\n    className: \"alert-text cyan-text text-darken-2\"\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Video Watched\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, formatVideoWatched(videoWatched)))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: \"icon-box pink darken-2\"\n  }, React.createElement(\"i\", {\n    className: \"icon-note\"\n  })), React.createElement(\"div\", {\n    className: \"alert-text pink-text text-darken-2\"\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Notes Taken\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, notesTaken)))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: \"icon-box green darken-3\"\n  }, React.createElement(\"i\", {\n    className: \"icon-clock\"\n  })), React.createElement(\"div\", {\n    className: \"alert-text green-text text-darken-3\"\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Total Time Logged In\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, formatTimeLoggedIn(totalTimeLoggedIn)))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: \"icon-box orange darken-2\"\n  }, React.createElement(\"i\", {\n    className: \"icon-arrow-right\"\n  })), React.createElement(\"div\", {\n    className: \"alert-text orange-text text-darken-2\"\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Last Log In\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, React.createElement(\"span\", {\n    className: \"text-large\"\n  }, lastLogIn), \" \", React.createElement(\"span\", {\n    className: \"text-small\"\n  }, loginTimeCode)))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: \"icon-box red\"\n  }, React.createElement(\"i\", {\n    className: \"icon-bell\"\n  })), React.createElement(\"div\", {\n    className: \"alert-text red-text\"\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"On-Time Percentage\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, onTimePercentage, \"%\"))))));\n};\n\nSummaryCards.propTypes = {\n  state: PropTypes.object.isRequired\n};\nexport default SummaryCards;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailSummaryPage\\components\\SummaryCards\\index.js"],"names":["React","PropTypes","formatTimeLoggedIn","totalMinutes","hours","Math","floor","minutes","formatVideoWatched","SummaryCards","state","questionsAnswered","videoWatched","notesTaken","totalTimeLoggedIn","lastLogIn","loginTimeCode","onTimePercentage","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst formatTimeLoggedIn = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst formatVideoWatched = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst SummaryCards = ({ state: { questionsAnswered, videoWatched, notesTaken, totalTimeLoggedIn, lastLogIn, loginTimeCode, onTimePercentage} }) => (\n  <div className=\"col s12 l5 card-width-366\">\n    <ul className=\"alerts-list\">\n      <li className=\"card card-alert\">\n        <span className=\"icon-box purple darken-3\"><i className=\"icon-pencil2\"></i></span>\n        <div className=\"alert-text purple-text text-darken-3\">\n          <p><b>Questions Answered</b></p>\n          <div className=\"value\"><b className=\"text-large\">{questionsAnswered}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert alert-blue-dark\">\n        <span className=\"icon-box cyan darken-2\"><i className=\"icon-videocam\"></i></span>\n        <div className=\"alert-text cyan-text text-darken-2\">\n          <p><b>Video Watched</b></p>\n          <div className=\"value\">\n            {formatVideoWatched(videoWatched)}\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box pink darken-2\"><i className=\"icon-note\"></i></span>\n        <div className=\"alert-text pink-text text-darken-2\">\n          <p><b>Notes Taken</b></p>\n          <div className=\"value\"><b className=\"text-large\">{notesTaken}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box green darken-3\"><i className=\"icon-clock\"></i></span>\n        <div className=\"alert-text green-text text-darken-3\">\n          <p><b>Total Time Logged In</b></p>\n          <div className=\"value\">\n            {formatTimeLoggedIn(totalTimeLoggedIn)}\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box orange darken-2\"><i className=\"icon-arrow-right\"></i></span>\n        <div className=\"alert-text orange-text text-darken-2\">\n          <p><b>Last Log In</b></p>\n          <div className=\"value\">\n            <span className=\"text-large\">{lastLogIn}</span> <span className=\"text-small\">{loginTimeCode}</span>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className=\"icon-box red\"><i className=\"icon-bell\"></i></span>\n        <div className=\"alert-text red-text\">\n          <p><b>On-Time Percentage</b></p>\n          <div className=\"value\"><b className=\"text-large\">{onTimePercentage}%</b></div>\n        </div>\n      </li>\n    </ul>\n  </div>\n);\n\nSummaryCards.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default SummaryCards;\n"]},"metadata":{},"sourceType":"module"}