{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\n\nclass LessonListItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderLessonIcon\", subject => {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n  }\n\n  render() {\n    const {\n      checkedLessons,\n      selectAll,\n      handleCheckbox,\n      index,\n      lesson,\n      lesson: {\n        id,\n        lessonName,\n        status,\n        assigned,\n        score,\n        scoreStatus,\n        reviewedAlerts,\n        subject,\n        unit,\n        passage,\n        timeEstimate,\n        problems,\n        lessonType,\n        flags\n      }\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"card list-table-row\",\n      key: id,\n      style: {\n        opacity: assigned ? .5 : 1\n      }\n    }, __jsx(\"div\", {\n      className: \"list-table-cell icon-cell\"\n    }, __jsx(\"label\", {\n      htmlFor: index\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: index,\n      checked: !selectAll ? checkedLessons.indexOf(lesson) > -1 : true,\n      onChange: () => handleCheckbox(lesson),\n      className: \"filled-in\"\n    }), __jsx(\"span\", null, __jsx(\"b\", null, \"\\xA0\")))), __jsx(\"div\", {\n      className: \"list-table-cell icon-cell\"\n    }, __jsx(\"span\", {\n      className: \"block-icon\"\n    }, __jsx(\"i\", {\n      className: this.renderLessonIcon(subject)\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell name-cell\",\n      style: {\n        width: '140px'\n      }\n    }, __jsx(\"div\", {\n      className: \"card-panel-text truncate\"\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\",\n      id: \"lessonName\"\n    }, unit, \" \", lessonName))), __jsx(\"div\", {\n      className: \"list-table-cell graph-cell\",\n      style: {\n        marginLeft: '50px'\n      }\n    }, scoreStatus && __jsx(\"span\", {\n      className: `chart-bar ${statusColorMap[scoreStatus]} white-text`\n    }, Math.floor(`${score / problems * 100}`), \"%\")), __jsx(\"div\", {\n      className: \"list-table-cell status-cell\"\n    }, scoreStatus !== \"\" ? __jsx(\"span\", {\n      className: `badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`\n    }, scoreStatus) : __jsx(\"span\", {\n      className: `badge badge-rounded-md ${statusColorMap[status]} white-text`\n    }, status)), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\",\n      style: {\n        marginLeft: '10px'\n      }\n    }, subject), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\"\n    }, \"p. \", passage), __jsx(\"div\", {\n      className: \"list-table-cell date-cell\"\n    }, timeEstimate), __jsx(\"div\", {\n      className: \"list-table-cell date-cell\",\n      style: {\n        paddingLeft: '50px'\n      }\n    }, problems), __jsx(\"div\", {\n      className: \"list-table-cell name-cell\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-text truncate\"\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\",\n      style: {\n        paddingLeft: '70px'\n      }\n    }, lessonType))), __jsx(\"div\", {\n      className: \"list-table-cell graph-cell\"\n    }, reviewedAlerts.length > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge grey darken-1 white-text\"\n    }, __jsx(\"b\", {\n      className: \"badge-text\"\n    }, reviewedAlerts.length), \" \", __jsx(\"i\", {\n      className: \"icon-flag\"\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell flags-cell\"\n    }, flags.length > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge red darken-2 white-text\"\n    }, __jsx(\"b\", {\n      className: \"badge-text\"\n    }, flags.length), \" \", __jsx(\"i\", {\n      className: \"icon-flag\"\n    }))));\n  }\n\n}\n\nLessonListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  lesson: PropTypes.object.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  checkedLessons: PropTypes.array.isRequired\n};\nexport default LessonListItem;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/components/AssignLessonModal/components/LessonListItem.js"],"names":["React","PropTypes","statusColorMap","LessonListItem","Component","subject","render","checkedLessons","selectAll","handleCheckbox","index","lesson","id","lessonName","status","assigned","score","scoreStatus","reviewedAlerts","unit","passage","timeEstimate","problems","lessonType","flags","props","opacity","indexOf","renderLessonIcon","width","marginLeft","Math","floor","paddingLeft","length","propTypes","number","isRequired","object","bool","func","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\n\nclass LessonListItem extends React.Component {\n\n  // eslint-disable-next-line consistent-return\n  renderLessonIcon = (subject) => {\n    switch (subject) {\n      case 'Reading':\n        return 'icon-books';\n      case 'Writing':\n        return 'icon-hands';\n      case 'Math':\n        return 'icon-calculator';\n      default:\n        break;\n    }\n  }\n\n  render(){\n    const { checkedLessons, selectAll, handleCheckbox, index, lesson, lesson: { id, lessonName, status, assigned, score, scoreStatus, reviewedAlerts, subject, unit, passage, timeEstimate, problems, lessonType, flags}  } = this.props\n    return(\n      <div className='card list-table-row' key={id} style={{opacity: assigned ? .5 : 1}}>\n      <div className=\"list-table-cell icon-cell\">\n      <label htmlFor={index}>\n      <input\n        type=\"checkbox\"\n        id={index}\n        checked={!selectAll? checkedLessons.indexOf(lesson) > -1 : true}\n        onChange={() => handleCheckbox(lesson)}\n        className=\"filled-in\"\n      />\n   <span><b>&nbsp;</b></span>\n   </label>\n      </div>\n      <div className=\"list-table-cell icon-cell\">\n        <span className=\"block-icon\">\n          <i className={this.renderLessonIcon(subject)}></i>\n        </span>\n      </div>\n      <div className=\"list-table-cell name-cell\" style={{width: '140px'}}>\n        <div className=\"card-panel-text truncate\">\n          <div className=\"text-large truncate\" id='lessonName'>{unit} {lessonName}</div>\n        </div>\n      </div>\n      <div className=\"list-table-cell graph-cell\" style={{ marginLeft: '50px' }}>\n        {scoreStatus && (\n          <span className={`chart-bar ${statusColorMap[scoreStatus]} white-text`}>{Math.floor(`${score / problems * 100}`)}%</span>\n        )}\n      </div>\n      <div className=\"list-table-cell status-cell\" >\n        <Choose>\n          <When condition={scoreStatus !== \"\"}>\n            <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n          </When>\n          <Otherwise>\n            <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n          </Otherwise>\n        </Choose>\n      </div>\n      <div className=\"list-table-cell type-cell\" style={{ marginLeft: '10px' }}>{subject}</div>\n      <div className=\"list-table-cell type-cell\">p. {passage}</div>\n      <div className=\"list-table-cell date-cell\">{timeEstimate}</div>\n      <div className=\"list-table-cell date-cell\"style={{paddingLeft: '50px'}}>{problems}</div>\n\n      <div className=\"list-table-cell name-cell\">\n        <div className=\"card-panel-text truncate\">\n          <div className=\"text-large truncate\" style={{paddingLeft: '70px'}}>{lessonType}</div>\n        </div>\n      </div>\n      <div className=\"list-table-cell graph-cell\">\n        {reviewedAlerts.length > 0 && (\n          <span className=\"badge-rounded-xs badge grey darken-1 white-text\"><b className=\"badge-text\">{reviewedAlerts.length}</b> <i className=\"icon-flag\"></i></span>\n        )}\n      </div>\n      <div className=\"list-table-cell flags-cell\">\n        {flags.length > 0 && (\n          <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n        )}\n      </div>\n    </div>\n    )\n  }\n}\n\nLessonListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  lesson: PropTypes.object.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  checkedLessons: PropTypes.array.isRequired,\n}\n\nexport default LessonListItem;"]},"metadata":{},"sourceType":"module"}