{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/jsx-indent */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChromePicker } from 'react-color';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nclass LocationBranding extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetColorPicker\", colorPickerField => this.setState({\n      colorPickerOpen: true,\n      colorPickerField\n    }));\n\n    _defineProperty(this, \"onCloseColorPicker\", () => this.setState({\n      colorPickerOpen: false,\n      colorPickerField: ''\n    }));\n\n    this.state = {\n      colorPickerOpen: false,\n      colorPickerField: ''\n    };\n  }\n\n  render() {\n    const {\n      state: {\n        locationUrl,\n        headerColor1,\n        headerColor2,\n        headerLogoBackgroundColor,\n        headerLogoBackgroundAlpha,\n        horizontalLogoVariation,\n        squareLogoVariation,\n        backgroundImage,\n        backgroundBlur,\n        backgroundOverlayAlpha,\n        studentWelcomeVideo,\n        instructorWelcomeVideo\n      },\n      handleDetailsChange\n    } = this.props;\n    const {\n      colorPickerField,\n      colorPickerOpen\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"col s12 l6\"\n    }, React.createElement(\"div\", {\n      className: \"card-block\"\n    }, React.createElement(\"h3\", null, \"Location Branding\"), React.createElement(\"div\", {\n      className: \"card-main card\"\n    }, React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"location-url\",\n      name: \"locationUrl\",\n      value: locationUrl,\n      onChange: event => handleDetailsChange(event, 'locationUrl', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: locationUrl.length ? 'label active' : 'label',\n      htmlFor: \"location-url\"\n    }, \"Location Url*\"))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"input-field js-spectrum custom-colorpicker col s12 m6\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"js-spectrum-input\",\n      id: \"header-color-1\",\n      name: \"headerColor1\",\n      value: headerColor1,\n      onClick: () => this.onSetColorPicker('headerColor1'),\n      onChange: event => handleDetailsChange(event, 'headerColor1', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: headerColor1.length ? 'label active' : 'label',\n      htmlFor: \"header-color-1\"\n    }, \"Header Color 1*\"), colorPickerOpen && colorPickerField === 'headerColor1' ? React.createElement(ClickOffComponentWrapper, {\n      onOuterClick: this.onCloseColorPicker\n    }, React.createElement(ChromePicker, {\n      color: headerColor1,\n      onChange: color => handleDetailsChange(color, 'headerColor1', 'locationBranding')\n    })) : null), React.createElement(\"div\", {\n      className: \"input-field js-spectrum custom-colorpicker col s12 m6\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"js-spectrum-input\",\n      id: \"header-color-2\",\n      name: \"headerColor2\",\n      value: headerColor2,\n      onClick: () => this.onSetColorPicker('headerColor2'),\n      onChange: event => handleDetailsChange(event, 'headerColor2', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: headerColor2.length ? 'label active' : 'label',\n      htmlFor: \"header-color-2\"\n    }, \"Header Color 2*\"), colorPickerOpen && colorPickerField === 'headerColor2' ? React.createElement(ClickOffComponentWrapper, {\n      onOuterClick: this.onCloseColorPicker\n    }, React.createElement(ChromePicker, {\n      color: headerColor2,\n      onChange: color => handleDetailsChange(color, 'headerColor2', 'locationBranding')\n    })) : null)), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"input-field js-spectrum custom-colorpicker col s12 m6\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"js-spectrum-input\",\n      id: \"header-logo-background-color\",\n      name: \"headerLogoBackgroundColor\",\n      value: headerLogoBackgroundColor,\n      onClick: () => this.onSetColorPicker('headerLogoBackgroundColor'),\n      onChange: event => handleDetailsChange(event, 'headerLogoBackgroundColor', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: headerLogoBackgroundColor.length ? 'label active' : 'label',\n      htmlFor: \"header-logo-background-color\"\n    }, \"Header Logo Background Color*\"), colorPickerOpen && colorPickerField === 'headerLogoBackgroundColor' ? React.createElement(ClickOffComponentWrapper, {\n      onOuterClick: this.onCloseColorPicker\n    }, React.createElement(ChromePicker, {\n      color: headerLogoBackgroundColor,\n      onChange: color => handleDetailsChange(color, 'headerLogoBackgroundColor', 'locationBranding')\n    })) : null), React.createElement(\"div\", {\n      className: \"input-field col s12 m6\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"header-logo-background-alpha\",\n      name: \"headerLogoBackgroundAlpha\",\n      value: headerLogoBackgroundAlpha,\n      onChange: event => handleDetailsChange(event, 'headerLogoBackgroundAlpha', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: headerLogoBackgroundAlpha.length ? 'label active' : 'label',\n      htmlFor: \"header-logo-background-alpha\"\n    }, \"Header Logo Background Alpha*\"))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"file-input-custom file-field input-field col s12\"\n    }, React.createElement(\"div\", {\n      className: \"file-path-wrapper\"\n    }, React.createElement(\"input\", {\n      className: \"file-path\",\n      type: \"text\",\n      id: \"horizontal-logo-variation\",\n      name: \"horizontalLogoVariation\",\n      value: horizontalLogoVariation,\n      onChange: event => handleDetailsChange(event, 'horizontalLogoVariation', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: horizontalLogoVariation.length ? 'label active' : 'label',\n      htmlFor: \"horizontal-logo-variation\"\n    }, \"Horizontal Logo Variation*\")), React.createElement(\"span\", {\n      className: \"btn-upload\"\n    }, React.createElement(\"span\", {\n      className: \"holder-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-upload-file\"\n    })), React.createElement(\"input\", {\n      type: \"file\"\n    })))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"file-input-custom file-field input-field col s12\"\n    }, React.createElement(\"div\", {\n      className: \"file-path-wrapper\"\n    }, React.createElement(\"input\", {\n      className: \"file-path\",\n      type: \"text\",\n      id: \"square-logo-variation\",\n      name: \"squareLogoVariation\",\n      value: squareLogoVariation,\n      onChange: event => handleDetailsChange(event, 'squareLogoVariation', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: squareLogoVariation.length ? 'label active' : 'label',\n      htmlFor: \"square-logo-variation\"\n    }, \"Square Logo Variation*\")), React.createElement(\"span\", {\n      className: \"btn-upload\"\n    }, React.createElement(\"span\", {\n      className: \"holder-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-upload-file\"\n    })), React.createElement(\"input\", {\n      type: \"file\"\n    })))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"file-input-custom file-field input-field col s12\"\n    }, React.createElement(\"div\", {\n      className: \"file-path-wrapper\"\n    }, React.createElement(\"input\", {\n      className: \"file-path\",\n      type: \"text\",\n      id: \"background-image\",\n      name: \"backgroundImage\",\n      value: backgroundImage,\n      onChange: event => handleDetailsChange(event, 'backgroundImage', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: backgroundImage.length ? 'label active' : 'label',\n      htmlFor: \"background-image\"\n    }, \"Background Image*\")), React.createElement(\"span\", {\n      className: \"btn-upload\"\n    }, React.createElement(\"span\", {\n      className: \"holder-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-upload-file\"\n    })), React.createElement(\"input\", {\n      type: \"file\"\n    })))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m6\"\n    }, React.createElement(\"div\", {\n      className: \"input-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"background-blur\",\n      name: \"backgroundBlur\",\n      value: backgroundBlur,\n      onChange: event => handleDetailsChange(event, 'backgroundBlur', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: backgroundBlur.length ? 'label active' : 'label',\n      htmlFor: \"background-blur\"\n    }, \"Background Blur*\"))), React.createElement(\"div\", {\n      className: \"col s12 m6\"\n    }, React.createElement(\"div\", {\n      className: \"input-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"background-overlay-alpha\",\n      name: \"backgroundOverlayAlpha\",\n      value: backgroundOverlayAlpha,\n      onChange: event => handleDetailsChange(event, 'backgroundOverlayAlpha', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: backgroundOverlayAlpha.length ? 'label active' : 'label',\n      htmlFor: \"background-overlay-alpha\"\n    }, \"Background Overlay Alpha*\")))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"file-input-custom file-field input-field col s12\"\n    }, React.createElement(\"div\", {\n      className: \"file-path-wrapper\"\n    }, React.createElement(\"input\", {\n      className: \"file-path\",\n      type: \"text\",\n      id: \"student-welcome-video\",\n      name: \"studentWelcomeVideo\",\n      value: studentWelcomeVideo,\n      onChange: event => handleDetailsChange(event, 'studentWelcomeVideo', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: studentWelcomeVideo.length ? 'label active' : 'label',\n      htmlFor: \"student-welcome-video\"\n    }, \"Student Welcome Video (optional)\")), React.createElement(\"span\", {\n      className: \"btn-upload\"\n    }, React.createElement(\"span\", {\n      className: \"holder-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-upload-file\"\n    })), React.createElement(\"input\", {\n      type: \"file\"\n    })))), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"file-input-custom file-field input-field col s12\"\n    }, React.createElement(\"div\", {\n      className: \"file-path-wrapper\"\n    }, React.createElement(\"input\", {\n      className: \"file-path\",\n      type: \"text\",\n      id: \"instructor-welcome-video\",\n      name: \"instructorWelcomeVideo\",\n      value: instructorWelcomeVideo,\n      onChange: event => handleDetailsChange(event, 'instructorWelcomeVideo', 'locationBranding')\n    }), React.createElement(\"label\", {\n      className: instructorWelcomeVideo.length ? 'label active' : 'label',\n      htmlFor: \"instructor-welcome-video\"\n    }, \"Instructor Welcome Video (optional)\")), React.createElement(\"span\", {\n      className: \"btn-upload\"\n    }, React.createElement(\"span\", {\n      className: \"holder-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-upload-file\"\n    })), React.createElement(\"input\", {\n      type: \"file\"\n    }))))))));\n  }\n\n}\n\nLocationBranding.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default LocationBranding;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Location/components/SharedModalComponents/LocationBranding/index.js"],"names":["React","PropTypes","ChromePicker","ClickOffComponentWrapper","LocationBranding","Component","constructor","props","colorPickerField","setState","colorPickerOpen","state","render","locationUrl","headerColor1","headerColor2","headerLogoBackgroundColor","headerLogoBackgroundAlpha","horizontalLogoVariation","squareLogoVariation","backgroundImage","backgroundBlur","backgroundOverlayAlpha","studentWelcomeVideo","instructorWelcomeVideo","handleDetailsChange","event","length","onSetColorPicker","onCloseColorPicker","color","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-indent */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChromePicker } from 'react-color';\n\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nclass LocationBranding extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colorPickerOpen: false,\n      colorPickerField: '',\n    };\n  }\n\n  onSetColorPicker = (colorPickerField) => this.setState({ colorPickerOpen: true, colorPickerField });\n  onCloseColorPicker = () => this.setState({ colorPickerOpen: false, colorPickerField: '' });\n\n  render() {\n    const { state: { locationUrl, headerColor1, headerColor2, headerLogoBackgroundColor, headerLogoBackgroundAlpha,\n      horizontalLogoVariation, squareLogoVariation, backgroundImage, backgroundBlur, backgroundOverlayAlpha, studentWelcomeVideo,\n      instructorWelcomeVideo }, handleDetailsChange } = this.props;\n    const { colorPickerField, colorPickerOpen } = this.state;\n    return (\n      <div className=\"col s12 l6\">\n        <div className=\"card-block\">\n          <h3>Location Branding</h3>\n          <div className=\"card-main card\">\n            <div className=\"card-content\">\n              <div className=\"row mb-0\">\n                <div className=\"input-field col s12\">\n                  <input\n                    type=\"text\"\n                    id=\"location-url\"\n                    name=\"locationUrl\"\n                    value={locationUrl}\n                    onChange={(event) => handleDetailsChange(event, 'locationUrl', 'locationBranding')}\n                  />\n                  <label className={locationUrl.length ? 'label active' : 'label'} htmlFor=\"location-url\">Location Url*</label>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"input-field js-spectrum custom-colorpicker col s12 m6\">\n                  <input\n                    type=\"text\"\n                    className=\"js-spectrum-input\"\n                    id=\"header-color-1\"\n                    name=\"headerColor1\"\n                    value={headerColor1}\n                    onClick={() => this.onSetColorPicker('headerColor1')}\n                    onChange={(event) => handleDetailsChange(event, 'headerColor1', 'locationBranding')}\n                  />\n                  <label className={headerColor1.length ? 'label active' : 'label'} htmlFor=\"header-color-1\">Header Color 1*</label>\n                  <If condition={colorPickerOpen && colorPickerField === 'headerColor1'}>\n                    <ClickOffComponentWrapper onOuterClick={this.onCloseColorPicker}>\n                      <ChromePicker\n                        color={headerColor1}\n                        onChange={(color) => handleDetailsChange(color, 'headerColor1', 'locationBranding')}\n                      />\n                    </ClickOffComponentWrapper>\n                  </If>\n                </div>\n                <div className=\"input-field js-spectrum custom-colorpicker col s12 m6\">\n                  <input\n                    type=\"text\"\n                    className=\"js-spectrum-input\"\n                    id=\"header-color-2\"\n                    name=\"headerColor2\"\n                    value={headerColor2}\n                    onClick={() => this.onSetColorPicker('headerColor2')}\n                    onChange={(event) => handleDetailsChange(event, 'headerColor2', 'locationBranding')}\n                  />\n                  <label className={headerColor2.length ? 'label active' : 'label'} htmlFor=\"header-color-2\">Header Color 2*</label>\n                  <If condition={colorPickerOpen && colorPickerField === 'headerColor2'}>\n                    <ClickOffComponentWrapper onOuterClick={this.onCloseColorPicker}>\n                      <ChromePicker\n                        color={headerColor2}\n                        onChange={(color) => handleDetailsChange(color, 'headerColor2', 'locationBranding')}\n                      />\n                    </ClickOffComponentWrapper>\n                  </If>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"input-field js-spectrum custom-colorpicker col s12 m6\">\n                  <input\n                    type=\"text\"\n                    className=\"js-spectrum-input\"\n                    id=\"header-logo-background-color\"\n                    name=\"headerLogoBackgroundColor\"\n                    value={headerLogoBackgroundColor}\n                    onClick={() => this.onSetColorPicker('headerLogoBackgroundColor')}\n                    onChange={(event) => handleDetailsChange(event, 'headerLogoBackgroundColor', 'locationBranding')}\n                  />\n                  <label className={headerLogoBackgroundColor.length ? 'label active' : 'label'} htmlFor=\"header-logo-background-color\">Header Logo Background Color*</label>\n                  <If condition={colorPickerOpen && colorPickerField === 'headerLogoBackgroundColor'}>\n                    <ClickOffComponentWrapper onOuterClick={this.onCloseColorPicker}>\n                      <ChromePicker\n                        color={headerLogoBackgroundColor}\n                        onChange={(color) => handleDetailsChange(color, 'headerLogoBackgroundColor', 'locationBranding')}\n                      />\n                    </ClickOffComponentWrapper>\n                  </If>\n                </div>\n                <div className=\"input-field col s12 m6\">\n                  <input\n                    type=\"text\"\n                    id=\"header-logo-background-alpha\"\n                    name=\"headerLogoBackgroundAlpha\"\n                    value={headerLogoBackgroundAlpha}\n                    onChange={(event) => handleDetailsChange(event, 'headerLogoBackgroundAlpha', 'locationBranding')}\n                  />\n                  <label className={headerLogoBackgroundAlpha.length ? 'label active' : 'label'} htmlFor=\"header-logo-background-alpha\">Header Logo Background Alpha*</label>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"horizontal-logo-variation\"\n                      name=\"horizontalLogoVariation\"\n                      value={horizontalLogoVariation}\n                      onChange={(event) => handleDetailsChange(event, 'horizontalLogoVariation', 'locationBranding')}\n                    />\n                    <label className={horizontalLogoVariation.length ? 'label active' : 'label'} htmlFor=\"horizontal-logo-variation\">Horizontal Logo Variation*</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"square-logo-variation\"\n                      name=\"squareLogoVariation\"\n                      value={squareLogoVariation}\n                      onChange={(event) => handleDetailsChange(event, 'squareLogoVariation', 'locationBranding')}\n                    />\n                    <label className={squareLogoVariation.length ? 'label active' : 'label'} htmlFor=\"square-logo-variation\">Square Logo Variation*</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"background-image\"\n                      name=\"backgroundImage\"\n                      value={backgroundImage}\n                      onChange={(event) => handleDetailsChange(event, 'backgroundImage', 'locationBranding')}\n                    />\n                    <label className={backgroundImage.length ? 'label active' : 'label'} htmlFor=\"background-image\">Background Image*</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"col s12 m6\">\n                  <div className=\"input-field\">\n                    <input\n                      type=\"text\"\n                      id=\"background-blur\"\n                      name=\"backgroundBlur\"\n                      value={backgroundBlur}\n                      onChange={(event) => handleDetailsChange(event, 'backgroundBlur', 'locationBranding')}\n                    />\n                    <label className={backgroundBlur.length ? 'label active' : 'label'} htmlFor=\"background-blur\">Background Blur*</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m6\">\n                  <div className=\"input-field\">\n                    <input\n                      type=\"text\"\n                      id=\"background-overlay-alpha\"\n                      name=\"backgroundOverlayAlpha\"\n                      value={backgroundOverlayAlpha}\n                      onChange={(event) => handleDetailsChange(event, 'backgroundOverlayAlpha', 'locationBranding')}\n                    />\n                    <label className={backgroundOverlayAlpha.length ? 'label active' : 'label'} htmlFor=\"background-overlay-alpha\">Background Overlay Alpha*</label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"student-welcome-video\"\n                      name=\"studentWelcomeVideo\"\n                      value={studentWelcomeVideo}\n                      onChange={(event) => handleDetailsChange(event, 'studentWelcomeVideo', 'locationBranding')}\n                    />\n                    <label className={studentWelcomeVideo.length ? 'label active' : 'label'} htmlFor=\"student-welcome-video\">Student Welcome Video (optional)</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n              <div className=\"row mb-0\">\n                <div className=\"file-input-custom file-field input-field col s12\">\n                  <div className=\"file-path-wrapper\">\n                    <input\n                      className=\"file-path\"\n                      type=\"text\"\n                      id=\"instructor-welcome-video\"\n                      name=\"instructorWelcomeVideo\"\n                      value={instructorWelcomeVideo}\n                      onChange={(event) => handleDetailsChange(event, 'instructorWelcomeVideo', 'locationBranding')}\n                    />\n                    <label className={instructorWelcomeVideo.length ? 'label active' : 'label'} htmlFor=\"instructor-welcome-video\">Instructor Welcome Video (optional)</label>\n                  </div>\n                  <span className=\"btn-upload\">\n                    <span className=\"holder-icon\"><i className=\"icon-upload-file\"></i></span>\n                    <input type=\"file\" />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLocationBranding.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationBranding;\n"]},"metadata":{},"sourceType":"module"}