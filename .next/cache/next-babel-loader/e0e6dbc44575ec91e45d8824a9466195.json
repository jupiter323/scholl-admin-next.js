{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\n\nvar LessonListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LessonListItem, _React$Component);\n\n  function LessonListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LessonListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LessonListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLessonIcon\", function (subject) {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(LessonListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          checkedLessons = _this$props.checkedLessons,\n          selectAll = _this$props.selectAll,\n          handleCheckbox = _this$props.handleCheckbox,\n          index = _this$props.index,\n          lesson = _this$props.lesson,\n          _this$props$lesson = _this$props.lesson,\n          id = _this$props$lesson.id,\n          lessonName = _this$props$lesson.lessonName,\n          status = _this$props$lesson.status,\n          assigned = _this$props$lesson.assigned,\n          score = _this$props$lesson.score,\n          scoreStatus = _this$props$lesson.scoreStatus,\n          reviewedAlerts = _this$props$lesson.reviewedAlerts,\n          subject = _this$props$lesson.subject,\n          unit = _this$props$lesson.unit,\n          passage = _this$props$lesson.passage,\n          timeEstimate = _this$props$lesson.timeEstimate,\n          problems = _this$props$lesson.problems,\n          lessonType = _this$props$lesson.lessonType,\n          flags = _this$props$lesson.flags;\n      return __jsx(\"div\", {\n        className: \"card list-table-row\",\n        key: id,\n        style: {\n          opacity: assigned ? .5 : 1\n        }\n      }, __jsx(\"div\", {\n        className: \"list-table-cell icon-cell\"\n      }, __jsx(\"label\", {\n        htmlFor: index\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: index,\n        checked: !selectAll ? checkedLessons.indexOf(lesson) > -1 : true,\n        onChange: function onChange() {\n          return handleCheckbox(lesson);\n        },\n        className: \"filled-in\"\n      }), __jsx(\"span\", null, __jsx(\"b\", null, \"\\xA0\")))), __jsx(\"div\", {\n        className: \"list-table-cell icon-cell\"\n      }, __jsx(\"span\", {\n        className: \"block-icon\"\n      }, __jsx(\"i\", {\n        className: this.renderLessonIcon(subject)\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell name-cell\",\n        style: {\n          width: '140px'\n        }\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\"\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        id: \"lessonName\"\n      }, unit, \" \", lessonName))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\",\n        style: {\n          marginLeft: '50px'\n        }\n      }, scoreStatus && __jsx(\"span\", {\n        className: \"chart-bar \".concat(statusColorMap[scoreStatus], \" white-text\")\n      }, Math.floor(\"\".concat(score / problems * 100)), \"%\")), __jsx(\"div\", {\n        className: \"list-table-cell status-cell\"\n      }, scoreStatus !== \"\" ? __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[scoreStatus], \" white-text\")\n      }, scoreStatus) : __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\")\n      }, status)), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        style: {\n          marginLeft: '10px'\n        }\n      }, subject), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\"\n      }, \"p. \", passage), __jsx(\"div\", {\n        className: \"list-table-cell date-cell\"\n      }, timeEstimate), __jsx(\"div\", {\n        className: \"list-table-cell date-cell\",\n        style: {\n          paddingLeft: '50px'\n        }\n      }, problems), __jsx(\"div\", {\n        className: \"list-table-cell name-cell\"\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\"\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        style: {\n          paddingLeft: '70px'\n        }\n      }, lessonType))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\"\n      }, reviewedAlerts.length > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge grey darken-1 white-text\"\n      }, __jsx(\"b\", {\n        className: \"badge-text\"\n      }, reviewedAlerts.length), \" \", __jsx(\"i\", {\n        className: \"icon-flag\"\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell flags-cell\"\n      }, flags.length > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge red darken-2 white-text\"\n      }, __jsx(\"b\", {\n        className: \"badge-text\"\n      }, flags.length), \" \", __jsx(\"i\", {\n        className: \"icon-flag\"\n      }))));\n    }\n  }]);\n\n  return LessonListItem;\n}(React.Component);\n\nLessonListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  lesson: PropTypes.object.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  checkedLessons: PropTypes.array.isRequired\n};\nexport default LessonListItem;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/components/AssignLessonModal/components/LessonListItem.js"],"names":["React","PropTypes","statusColorMap","LessonListItem","subject","props","checkedLessons","selectAll","handleCheckbox","index","lesson","id","lessonName","status","assigned","score","scoreStatus","reviewedAlerts","unit","passage","timeEstimate","problems","lessonType","flags","opacity","indexOf","renderLessonIcon","width","marginLeft","Math","floor","paddingLeft","length","Component","propTypes","number","isRequired","object","bool","func","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\n\nclass LessonListItem extends React.Component {\n\n  // eslint-disable-next-line consistent-return\n  renderLessonIcon = (subject) => {\n    switch (subject) {\n      case 'Reading':\n        return 'icon-books';\n      case 'Writing':\n        return 'icon-hands';\n      case 'Math':\n        return 'icon-calculator';\n      default:\n        break;\n    }\n  }\n\n  render(){\n    const { checkedLessons, selectAll, handleCheckbox, index, lesson, lesson: { id, lessonName, status, assigned, score, scoreStatus, reviewedAlerts, subject, unit, passage, timeEstimate, problems, lessonType, flags}  } = this.props\n    return(\n      <div className='card list-table-row' key={id} style={{opacity: assigned ? .5 : 1}}>\n      <div className=\"list-table-cell icon-cell\">\n      <label htmlFor={index}>\n      <input\n        type=\"checkbox\"\n        id={index}\n        checked={!selectAll? checkedLessons.indexOf(lesson) > -1 : true}\n        onChange={() => handleCheckbox(lesson)}\n        className=\"filled-in\"\n      />\n   <span><b>&nbsp;</b></span>\n   </label>\n      </div>\n      <div className=\"list-table-cell icon-cell\">\n        <span className=\"block-icon\">\n          <i className={this.renderLessonIcon(subject)}></i>\n        </span>\n      </div>\n      <div className=\"list-table-cell name-cell\" style={{width: '140px'}}>\n        <div className=\"card-panel-text truncate\">\n          <div className=\"text-large truncate\" id='lessonName'>{unit} {lessonName}</div>\n        </div>\n      </div>\n      <div className=\"list-table-cell graph-cell\" style={{ marginLeft: '50px' }}>\n        {scoreStatus && (\n          <span className={`chart-bar ${statusColorMap[scoreStatus]} white-text`}>{Math.floor(`${score / problems * 100}`)}%</span>\n        )}\n      </div>\n      <div className=\"list-table-cell status-cell\" >\n        <Choose>\n          <When condition={scoreStatus !== \"\"}>\n            <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n          </When>\n          <Otherwise>\n            <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n          </Otherwise>\n        </Choose>\n      </div>\n      <div className=\"list-table-cell type-cell\" style={{ marginLeft: '10px' }}>{subject}</div>\n      <div className=\"list-table-cell type-cell\">p. {passage}</div>\n      <div className=\"list-table-cell date-cell\">{timeEstimate}</div>\n      <div className=\"list-table-cell date-cell\"style={{paddingLeft: '50px'}}>{problems}</div>\n\n      <div className=\"list-table-cell name-cell\">\n        <div className=\"card-panel-text truncate\">\n          <div className=\"text-large truncate\" style={{paddingLeft: '70px'}}>{lessonType}</div>\n        </div>\n      </div>\n      <div className=\"list-table-cell graph-cell\">\n        {reviewedAlerts.length > 0 && (\n          <span className=\"badge-rounded-xs badge grey darken-1 white-text\"><b className=\"badge-text\">{reviewedAlerts.length}</b> <i className=\"icon-flag\"></i></span>\n        )}\n      </div>\n      <div className=\"list-table-cell flags-cell\">\n        {flags.length > 0 && (\n          <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n        )}\n      </div>\n    </div>\n    )\n  }\n}\n\nLessonListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  lesson: PropTypes.object.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  checkedLessons: PropTypes.array.isRequired,\n}\n\nexport default LessonListItem;"]},"metadata":{},"sourceType":"module"}