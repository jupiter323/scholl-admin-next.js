{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\nimport modalSortOptions from '../../utils/modalSortOptions';\n\nclass ModalFilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"handleSortChange\", event => {\n      const {\n        onSetSort\n      } = this.props;\n      this.setState({\n        sort: event\n      });\n      onSetSort(event);\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        nameFilter\n      } = this.state;\n\n      if (nameFilter === '') {\n        onUnsetFilteredState(nameFilter);\n      }\n\n      const transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(this, \"handleUnitChange\", event => {\n      const {\n        onSetUnitFilter\n      } = this.props;\n      this.setState({\n        unitFilter: event\n      });\n      onSetUnitFilter(event);\n    });\n\n    _defineProperty(this, \"clearAllFilters\", () => {\n      const {\n        onClearFilters\n      } = this.props;\n      this.setState({\n        sort: {},\n        nameFilter: \"\",\n        unitFilter: \"\"\n      });\n      onClearFilters();\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onUnsetFilteredState,\n        onSetFilteredState,\n        onSetUnitFilter\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'nameFilter') {\n        if (event === '') {\n          return onUnsetFilteredState();\n        }\n\n        return onSetFilteredState(event);\n      }\n\n      if (name === 'unitFilter') {\n        if (event === \"\") {\n          return onUnsetFilteredState();\n        }\n\n        return onSetUnitFilter(event);\n      }\n    });\n\n    this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n  }\n\n  render() {\n    const {\n      open,\n      sort,\n      nameFilter,\n      unitFilter\n    } = this.state;\n    const {\n      subjectFilters,\n      statusFilters,\n      lessonTypeFilters,\n      handleFilterClick\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"filter-form-holder\"\n    }, React.createElement(\"ul\", {\n      className: \"collapsible expandable\"\n    }, React.createElement(\"li\", null, React.createElement(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, React.createElement(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"assignedModal\",\n      checked: statusFilters.indexOf('Assigned') !== -1,\n      onChange: () => handleFilterClick('status', 'Assigned')\n    }), React.createElement(\"label\", {\n      htmlFor: \"assignedModal\"\n    }, \"Assigned\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"unassigned\",\n      checked: statusFilters.indexOf('Unassigned') !== -1,\n      onChange: () => handleFilterClick('status', 'Unassigned')\n    }), React.createElement(\"label\", {\n      htmlFor: \"unassigned\"\n    }, \"Unassigned\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"readingModal\",\n      checked: subjectFilters.indexOf('Reading') !== -1,\n      onChange: () => handleFilterClick('subject', 'Reading')\n    }), React.createElement(\"label\", {\n      htmlFor: \"readingModal\"\n    }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"writingModal\",\n      checked: subjectFilters.indexOf('Writing') !== -1,\n      onChange: () => handleFilterClick('subject', 'Writing')\n    }), React.createElement(\"label\", {\n      htmlFor: \"writingModal\"\n    }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"mathModal\",\n      checked: subjectFilters.indexOf('Math') !== -1,\n      onChange: () => handleFilterClick('subject', 'Math')\n    }), React.createElement(\"label\", {\n      htmlFor: \"mathModal\"\n    }, \"Math\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"challengePractice\",\n      checked: lessonTypeFilters.indexOf('Challenge + Practice') !== -1,\n      onChange: () => handleFilterClick('lessonType', 'Challenge + Practice')\n    }), React.createElement(\"label\", {\n      htmlFor: \"challengePractice\"\n    }, \"Challenge + Practice\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"homeworkDrill\",\n      checked: lessonTypeFilters.indexOf('Homework Drill') !== -1,\n      onChange: () => handleFilterClick('lessonType', 'Homework Drill')\n    }), React.createElement(\"label\", {\n      htmlFor: \"homeworkDrill\"\n    }, \"Homework Drill\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"readingFromWorkbook\",\n      checked: lessonTypeFilters.indexOf('Read from the Book') !== -1,\n      onChange: () => handleFilterClick('lessonType', 'Read from the Book')\n    }), React.createElement(\"label\", {\n      htmlFor: \"readingFromWorkbook\"\n    }, \"Reading from Workbook\")))), React.createElement(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m3\"\n    }, React.createElement(\"div\", {\n      className: \"search-field input-field\",\n      style: {\n        marginTop: '30px'\n      }\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control  validate\",\n      name: \"nameFilter\",\n      value: nameFilter,\n      onChange: event => this.handleFilterChange(event, 'nameFilter')\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, React.createElement(\"i\", {\n      className: \"icon-search\"\n    })), React.createElement(\"label\", {\n      className: nameFilter.length ? \"label active\" : \"label\",\n      htmlFor: \"name_search\"\n    }, \"Search\"))), React.createElement(\"div\", {\n      className: \"col s12 m3\"\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      style: {\n        marginTop: '-7px'\n      }\n    }, React.createElement(Dropdown, {\n      value: getValueFromState(unitFilter, unitOptions),\n      onChange: event => this.handleUnitChange(event),\n      options: unitOptions,\n      label: \"Unit Number\",\n      stateKey: \"unit\",\n      dropdownKey: \"unit\"\n    }))))), React.createElement(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 l4\"\n    }, React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 14\"\n    }, React.createElement(\"div\", {\n      className: \"input-field\"\n    }, React.createElement(Dropdown, {\n      value: getValueFromState(sort, modalSortOptions),\n      onChange: event => this.handleSortChange(event),\n      options: modalSortOptions,\n      label: \"Sort by\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), React.createElement(\"div\", {\n      className: \"col s12 l4 offset-s12\"\n    }, React.createElement(\"div\", {\n      className: \"option-filters\"\n    }, React.createElement(\"div\", {\n      className: \"option-item clear\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.clearAllFilters\n    }, \"Clear Filters\")), React.createElement(\"div\", {\n      className: \"option-item\"\n    }, React.createElement(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, React.createElement(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nexport default ModalFilterSection;","map":null,"metadata":{},"sourceType":"module"}