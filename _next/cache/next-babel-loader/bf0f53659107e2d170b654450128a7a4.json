{"ast":null,"code":"var _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/SubjectsCard/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar readingData = function readingData(totalScore, totalPossible) {\n  return {\n    datasets: [{\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#35a6af', 'rgb(234, 234, 234)']\n    }]\n  };\n};\n\nvar writingData = function writingData(totalScore, totalPossible) {\n  return {\n    datasets: [{\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#389b7d', 'rgb(234, 234, 234)']\n    }]\n  };\n};\n\nvar mathData = function mathData(totalScore, totalPossible) {\n  return {\n    datasets: [{\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#4785f4', 'rgb(234, 234, 234)']\n    }]\n  };\n};\n\nvar SubjectsCard = function SubjectsCard(_ref) {\n  var readingScores = _ref.readingScores,\n      writingScores = _ref.writingScores,\n      mathScores = _ref.mathScores;\n  return __jsx(\"div\", {\n    className: \"col s12 l8 card-width-772\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Subjects\"), __jsx(\"div\", {\n    className: \"card-main-full card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"several-charts-row row mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col s4 center-align\",\n    id: \"analysisReadingCicleImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, readingScores && __jsx(\"div\", {\n    className: \"chart-block chart-block-182\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Doughnut, {\n    data: function data() {\n      return readingData(readingScores.score.correct, readingScores.score.total);\n    },\n    width: 200,\n    height: 200,\n    options: {\n      cutoutPercentage: 75\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"chart-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Reading\"), __jsx(\"span\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, readingScores.score.percent_correct.toFixed(0), \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, readingScores.score.correct), \" of \", __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, readingScores.score.total))))), __jsx(\"div\", {\n    className: \"col s4 center-align\",\n    id: \"analysisWritingCircleImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, writingScores && __jsx(\"div\", {\n    className: \"chart-block chart-block-182\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Doughnut, {\n    data: function data() {\n      return writingData(writingScores.score.correct, writingScores.score.total);\n    },\n    width: 200,\n    height: 200,\n    options: {\n      cutoutPercentage: 75\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"chart-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Writing\"), __jsx(\"span\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, writingScores.score.percent_correct.toFixed(0), \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, writingScores.score.correct), \" of \", __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, writingScores.score.total))))), __jsx(\"div\", {\n    className: \"col s4 center-align\",\n    id: \"analysisMathCircleImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, mathScores && __jsx(\"div\", {\n    className: \"chart-block chart-block-182\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Doughnut, {\n    data: function data() {\n      return mathData(mathScores.score.correct, mathScores.score.total);\n    },\n    width: 200,\n    height: 200,\n    options: {\n      cutoutPercentage: 75\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"chart-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Math\"), __jsx(\"span\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, mathScores.score.percent_correct.toFixed(0), \"%\"), __jsx(\"span\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, mathScores.score.correct), \" of \", __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, mathScores.score.total))))))))));\n};\n\nSubjectsCard.propTypes = {};\nexport default SubjectsCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/SubjectsCard/index.js"],"names":["React","PropTypes","Doughnut","readingData","totalScore","totalPossible","datasets","data","backgroundColor","writingData","mathData","SubjectsCard","readingScores","writingScores","mathScores","score","correct","total","cutoutPercentage","percent_correct","toFixed","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst readingData = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#35a6af', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\nconst writingData = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#389b7d', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\nconst mathData = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#4785f4', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\n\nconst SubjectsCard = ({ readingScores, writingScores, mathScores }) =>\n  (<div className=\"col s12 l8 card-width-772\">\n    <div className=\"card-block\">\n      <h2>Subjects</h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content\">\n          <div className=\"several-charts-row row mb-0\">\n            <div className=\"col s4 center-align\" id=\"analysisReadingCicleImg\">\n              {readingScores &&\n                <div className=\"chart-block chart-block-182\">\n                  <Doughnut\n                    data={() => readingData(readingScores.score.correct, readingScores.score.total)}\n                    width={200}\n                    height={200}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                  <div className=\"chart-text\">\n                    <span className=\"title\">Reading</span>\n                    <span className=\"value\">\n                      {(readingScores.score.percent_correct).toFixed(0)}%\n                    </span>\n                    <span className=\"description\">\n                      <b>{readingScores.score.correct}</b> of <b>{readingScores.score.total}</b>\n                    </span>\n                  </div>\n                </div>}\n            </div>\n\n            <div className=\"col s4 center-align\" id=\"analysisWritingCircleImg\">\n              {writingScores &&\n                <div className=\"chart-block chart-block-182\">\n                  <Doughnut\n                    data={() => writingData(writingScores.score.correct, writingScores.score.total)}\n                    width={200}\n                    height={200}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                  <div className=\"chart-text\">\n                    <span className=\"title\">Writing</span>\n                    <span className=\"value\">\n                      {(writingScores.score.percent_correct).toFixed(0)}%\n                    </span>\n                    <span className=\"description\">\n                      <b>{writingScores.score.correct}</b> of <b>{writingScores.score.total}</b>\n                    </span>\n                  </div>\n                </div>}\n            </div>\n\n            <div className=\"col s4 center-align\" id=\"analysisMathCircleImg\">\n              {mathScores &&\n                <div className=\"chart-block chart-block-182\">\n                  <Doughnut\n                    data={() => mathData(mathScores.score.correct, mathScores.score.total)}\n                    width={200}\n                    height={200}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                  <div className=\"chart-text\">\n                    <span className=\"title\">Math</span>\n                    <span className=\"value\">\n                      {(mathScores.score.percent_correct).toFixed(0)}%\n                    </span>\n                    <span className=\"description\">\n                      <b>{mathScores.score.correct}</b> of <b>{mathScores.score.total}</b>\n                    </span>\n                  </div>\n                </div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>);\n\nSubjectsCard.propTypes = {};\n\nexport default SubjectsCard;\n"]},"metadata":{},"sourceType":"module"}