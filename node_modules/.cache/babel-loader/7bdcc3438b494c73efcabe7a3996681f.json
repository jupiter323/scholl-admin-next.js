{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\n\nvar ListView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListView, _React$Component);\n\n  function ListView(props) {\n    var _this;\n\n    _classCallCheck(this, ListView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event, index) {\n      var dropdownIsOpen = _this.state.dropdownIsOpen;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return _this.onCloseDropdown();\n      }\n\n      return _this.onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapWorksheetRows\", function () {\n      var _this$props = _this.props,\n          worksheets = _this$props.worksheets,\n          onSetActiveWorksheet = _this$props.onSetActiveWorksheet;\n      var _this$state = _this.state,\n          dropdownIndex = _this$state.dropdownIndex,\n          dropdownIsOpen = _this$state.dropdownIsOpen;\n      return worksheets.map(function (worksheet, index) {\n        var worksheetSource = worksheet.worksheetSource,\n            worksheetName = worksheet.worksheetName,\n            problems = worksheet.problems,\n            timeEstimate = worksheet.timeEstimate;\n        return React.createElement(\"div\", {\n          className: \"card list-table-row\",\n          key: worksheet.id\n        }, React.createElement(\"div\", {\n          className: \"list-table-cell icon-cell\"\n        }, React.createElement(\"span\", {\n          className: \"block-icon\"\n        }, React.createElement(\"i\", {\n          className: \"icon-sheets-w\"\n        }))), React.createElement(\"div\", {\n          className: \"list-table-cell name-cell\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel-text truncate\"\n        }, React.createElement(\"div\", {\n          className: \"text-large truncate\"\n        }, worksheetName))), React.createElement(\"div\", {\n          className: \"list-table-cell description-cell\"\n        }, problems.length), React.createElement(\"div\", {\n          className: \"list-table-cell time-cell\"\n        }, formatTimeEstimate(timeEstimate)), React.createElement(\"div\", {\n          className: \"list-table-cell completed-cell\"\n        }, worksheetSource), React.createElement(\"div\", {\n          className: \"list-table-cell empty-cell\"\n        }, React.createElement(\"b\", null, \"\\xA0\")), React.createElement(\"div\", {\n          className: \"list-table-cell drop-cell\"\n        }, React.createElement(\"div\", {\n          className: \"dropdown-block\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown01\",\n          className: \"dropdown-trigger btn\",\n          onClick: function onClick(event) {\n            return _this.handleDropdownClick(event, index);\n          }\n        }, React.createElement(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: 'block',\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"modal-trigger link-block\",\n          onClick: function onClick() {\n            return onSetActiveWorksheet(worksheet);\n          }\n        }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\"\n        }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"link-delete\"\n        }, \"Delete\"))) : null)));\n      });\n    });\n\n    _this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(ListView, [{\n    key: \"render\",\n    value: function render() {\n      var worksheets = this.props.worksheets;\n      return React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"container-md\"\n      }, React.createElement(\"div\", {\n        className: \"result-row center-align\"\n      }, React.createElement(\"b\", {\n        className: \"result\"\n      }, \" - \", worksheets.length, \" results -\")), React.createElement(\"div\", {\n        className: \"list-view-section\"\n      }, React.createElement(\"div\", {\n        className: \"list-table six-columns\"\n      }, React.createElement(\"div\", {\n        className: \"list-table-header\"\n      }, React.createElement(\"div\", {\n        className: \"list-table-row\"\n      }, React.createElement(\"div\", {\n        className: \"list-table-cell icon-cell\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"list-table-cell name-cell\"\n      }, React.createElement(\"b\", null, \"Worksheet\")), React.createElement(\"div\", {\n        className: \"list-table-cell description-cell\"\n      }, React.createElement(\"b\", null, \"Problems\")), React.createElement(\"div\", {\n        className: \"list-table-cell time-cell\"\n      }, React.createElement(\"b\", null, \"Time Est\")), React.createElement(\"div\", {\n        className: \"list-table-cell completed-cell\"\n      }, React.createElement(\"b\", null, \"Source\")), React.createElement(\"div\", {\n        className: \"list-table-cell empty-cell\"\n      }, React.createElement(\"b\", null, \"\\xA0\")), React.createElement(\"div\", {\n        className: \"list-table-cell drop-cell\"\n      }, \"\\xA0\"))), React.createElement(\"div\", {\n        className: \"list-table-body\"\n      }, this.mapWorksheetRows())))));\n    }\n  }]);\n\n  return ListView;\n}(React.Component);\n\nListView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onSetActiveWorksheet: PropTypes.func.isRequired\n};\nexport default ListView;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Worksheet/ListPage/components/ListView/index.js"],"names":["React","PropTypes","formatTimeEstimate","ListView","props","dropdownIndex","setState","dropdownIsOpen","event","index","state","preventDefault","onCloseDropdown","onSetDropdown","worksheets","onSetActiveWorksheet","map","worksheet","worksheetSource","worksheetName","problems","timeEstimate","id","length","handleDropdownClick","display","opacity","transform","mapWorksheetRows","Component","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\n\nclass ListView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    };\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetRows = () => {\n    const { worksheets, onSetActiveWorksheet } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { worksheetSource, worksheetName, problems, timeEstimate } = worksheet;\n      return (\n        <div className=\"card list-table-row\" key={worksheet.id}>\n          <div className=\"list-table-cell icon-cell\">\n            <span className=\"block-icon\">\n              <i className=\"icon-sheets-w\"></i>\n            </span>\n          </div>\n          <div className=\"list-table-cell name-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\">{worksheetName}</div>\n            </div>\n          </div>\n          <div className=\"list-table-cell description-cell\">{problems.length}</div>\n          <div className=\"list-table-cell time-cell\">{formatTimeEstimate(timeEstimate)}</div>\n          <div className=\"list-table-cell completed-cell\">{worksheetSource}</div>\n          <div className=\"list-table-cell empty-cell\"><b>&nbsp;</b></div>\n          <div className=\"list-table-cell drop-cell\">\n            <div className=\"dropdown-block\">\n              <a\n                href='#'\n                data-target='dropdown01'\n                className='dropdown-trigger btn'\n                onClick={(event) => this.handleDropdownClick(event, index)}\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  <li>\n                    <a\n                      href=\"#\"\n                      className=\"modal-trigger link-block\"\n                      onClick={() => onSetActiveWorksheet(worksheet)}\n                    >\n                      Edit\n                    </a>\n                  </li>\n                  <li><a href=\"#\">Clone</a></li>\n                  <li><a href=\"#\" className=\"link-delete\">Delete</a></li>\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      );\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <div className=\"content-section\">\n        <div className=\"container-md\">\n          <div className=\"result-row center-align\">\n            <b className=\"result\"> - {worksheets.length} results -</b>\n          </div>\n          <div className=\"list-view-section\">\n            <div className=\"list-table six-columns\">\n              <div className=\"list-table-header\">\n                <div className=\"list-table-row\">\n                  <div className=\"list-table-cell icon-cell\">&nbsp;</div>\n                  <div className=\"list-table-cell name-cell\"><b>Worksheet</b></div>\n                  <div className=\"list-table-cell description-cell\"><b>Problems</b></div>\n                  <div className=\"list-table-cell time-cell\"><b>Time Est</b></div>\n                  <div className=\"list-table-cell completed-cell\"><b>Source</b></div>\n                  <div className=\"list-table-cell empty-cell\"><b>&nbsp;</b></div>\n                  <div className=\"list-table-cell drop-cell\">&nbsp;</div>\n                </div>\n              </div>\n              <div className=\"list-table-body\">\n                {this.mapWorksheetRows()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nListView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onSetActiveWorksheet: PropTypes.func.isRequired,\n}\n\nexport default ListView;\n"]},"metadata":{},"sourceType":"module"}