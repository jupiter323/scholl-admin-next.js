{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var name = _this.state.name;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props2 = _this.props,\n          onSetFilteredLocationState = _this$props2.onSetFilteredLocationState,\n          onUnsetFilteredLocationState = _this$props2.onUnsetFilteredLocationState,\n          onSetSort = _this$props2.onSetSort;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _this.state = {\n      open: false,\n      name: '',\n      location: {},\n      sort: {},\n      activeFilters: []\n    };\n    return _this;\n  } // eslint-disable-next-line consistent-return\n\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // eslint-disable-next-line no-unused-vars\n      var _this$state = this.state,\n          name = _this$state.name,\n          location = _this$state.location,\n          sort = _this$state.sort,\n          open = _this$state.open,\n          activeFilters = _this$state.activeFilters;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"activated\",\n        checked: activeFilters.indexOf(\"activated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('activated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"activated\"\n      }, \"Activated\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unactivated\",\n        checked: activeFilters.indexOf(\"unactivated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unactivated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unactivated\"\n      }, \"Unactivated\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"expired\",\n        checked: activeFilters.indexOf(\"expired\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('expired');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"expired\"\n      }, \"Expired\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"current\",\n        checked: activeFilters.indexOf(\"current\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('current');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"current\"\n      }, \"Current\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"archived\",\n        checked: activeFilters.indexOf(\"archived\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('archived');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"archived\"\n      }, \"Archived\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-gain\",\n        checked: activeFilters.indexOf(\"no-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-gain');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-gain\"\n      }, \"No Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"some-gain\",\n        checked: activeFilters.indexOf(\"some-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('some-gain');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"some-gain\"\n      }, \"Some Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-100+\",\n        checked: activeFilters.indexOf(\"gain-100+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-100+');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain-100+\"\n      }, \"Gain of 100+\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-200+\",\n        checked: activeFilters.indexOf(\"gain-200+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-200+');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain-200+\"\n      }, \"Gain of 200+\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hit-target-score\",\n        checked: activeFilters.indexOf(\"hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hit-target-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hit-target-score\"\n      }, \"Hit Target Score\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hasnt-hit-target-score\",\n        checked: activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hasnt-hit-target-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hasnt-hit-target-score\"\n      }, \"Hasn\\u2019t Hit Target Score\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-tests\",\n        checked: activeFilters.indexOf(\"no-tests\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('tests');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-tests\"\n      }, \"No Tests\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"1-test\",\n        checked: activeFilters.indexOf(\"1-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('1-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"1-test\"\n      }, \"1 Test\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"2-test\",\n        checked: activeFilters.indexOf(\"2-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('2-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"2-test\"\n      }, \"2 Tests\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"3-test\",\n        checked: activeFilters.indexOf(\"3-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('3-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"3-test\"\n      }, \"3+ Tests\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"has-overdue-work\",\n        checked: activeFilters.indexOf(\"has-overdue-work\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('has-overdue-work');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"has-overdue-work\"\n      }, \"Has Overdue Work\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unreviewed-flags\",\n        checked: activeFilters.indexOf(\"unreviewed-flags\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unreviewed-flags');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unreviewed-flags\"\n      }, \"Unreviewed Flags\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions-this-week\",\n        checked: activeFilters.indexOf(\"sessions-this-week\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('sessions-this-week');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"sessions-this-week\"\n      }, \"Sessions This Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"session-today\",\n        checked: activeFilters.indexOf(\"session-today\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('session-today');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"session-today\"\n      }, \"Session Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-sessions\",\n        checked: activeFilters.indexOf(\"no-sessions\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-sessions');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-sessions\"\n      }, \"No Sessions Scheduled\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"entered-actual-score\",\n        checked: activeFilters.indexOf(\"entered-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('entered-actual-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"entered-actual-score\"\n      }, \"Entered Actual Score\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-actual-score\",\n        checked: activeFilters.indexOf(\"no-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-actual-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-actual-score\"\n      }, \"No Actual Score\"))))), React.createElement(\"div\", {\n        className: \"filter-inputs-holder\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-flex-end\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 18\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control validate\",\n        name: \"name\",\n        value: name,\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'name');\n        }\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.onFilterByName\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: name.length ? 'label active' : 'label',\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(location, locationOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'location');\n        },\n        options: locationOptions,\n        label: \"Location\",\n        stateKey: \"location\",\n        dropdownKey: \"location\"\n      }))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(sort, sortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'sort');\n        },\n        options: sortOptions,\n        label: \"Sort\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))), React.createElement(\"div\", {\n        className: \"col s12 14\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters'))))))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nFilterSection.propTypes = {\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetFilteredLocationState: PropTypes.func.isRequired,\n  onUnsetFilteredLocationState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\ListPage\\Components\\FilterSection\\index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","locationOptions","sortOptions","FilterSection","props","setState","open","filter","currentActiveFilters","state","activeFilters","indexOf","$push","filterIndex","$splice","onSetFilteredState","onUnsetFilteredState","name","transformedName","replace","toLowerCase","event","onSetFilteredLocationState","onUnsetFilteredLocationState","onSetSort","value","target","updatedState","$merge","location","sort","display","onHandleFilterClick","handleFilterChange","onFilterByName","length","onClearFilters","onToggleShowFilters","Component","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      name: '',\n      location: {},\n      sort: {},\n      activeFilters: [],\n    };\n  }\n\n  // eslint-disable-next-line consistent-return\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onHandleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[filterIndex, 1]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { name } = this.state;\n    if (name === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredLocationState, onUnsetFilteredLocationState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'location') {\n      if (event === '') {\n        return onUnsetFilteredLocationState();\n      }\n      return onSetFilteredLocationState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const { name, location, sort, open, activeFilters } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"activated\"\n                      checked={activeFilters.indexOf(\"activated\") !== -1}\n                      onChange={() => this.onHandleFilterClick('activated')}\n                    />\n                    <label htmlFor=\"activated\">Activated</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unactivated\"\n                      checked={activeFilters.indexOf(\"unactivated\") !== -1}\n                      onChange={() => this.onHandleFilterClick('unactivated')}\n                    />\n                    <label htmlFor=\"unactivated\">Unactivated</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"expired\"\n                      checked={activeFilters.indexOf(\"expired\") !== -1}\n                      onChange={() => this.onHandleFilterClick('expired')}\n                    />\n                    <label htmlFor=\"expired\">Expired</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"current\"\n                      checked={activeFilters.indexOf(\"current\") !== -1}\n                      onChange={() => this.onHandleFilterClick('current')}\n                    />\n                    <label htmlFor=\"current\">Current</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"archived\"\n                      checked={activeFilters.indexOf(\"archived\") !== -1}\n                      onChange={() => this.onHandleFilterClick('archived')}\n                    />\n                    <label htmlFor=\"archived\">Archived</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-gain\"\n                      checked={activeFilters.indexOf(\"no-gain\") !== -1}\n                      onChange={() => this.onHandleFilterClick('no-gain')}\n                    />\n                    <label htmlFor=\"no-gain\">No Gain</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"some-gain\"\n                      checked={activeFilters.indexOf(\"some-gain\") !== -1}\n                      onChange={() => this.onHandleFilterClick('some-gain')}\n                    />\n                    <label htmlFor=\"some-gain\">Some Gain</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gain-100+\"\n                      checked={activeFilters.indexOf(\"gain-100+\") !== -1}\n                      onChange={() => this.onHandleFilterClick('gain-100+')}\n                    />\n                    <label htmlFor=\"gain-100+\">Gain of 100+</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gain-200+\"\n                      checked={activeFilters.indexOf(\"gain-200+\") !== -1}\n                      onChange={() => this.onHandleFilterClick('gain-200+')}\n                    />\n                    <label htmlFor=\"gain-200+\">Gain of 200+</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hit-target-score\"\n                      checked={activeFilters.indexOf(\"hit-target-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('hit-target-score')}\n                    />\n                    <label htmlFor=\"hit-target-score\">Hit Target Score</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasnt-hit-target-score\"\n                      checked={activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('hasnt-hit-target-score')}\n                    />\n                    <label htmlFor=\"hasnt-hit-target-score\">Hasn’t Hit Target Score</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-tests\"\n                      checked={activeFilters.indexOf(\"no-tests\") !== -1}\n                      onChange={() => this.onHandleFilterClick('tests')}\n                    />\n                    <label htmlFor=\"no-tests\">No Tests</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"1-test\"\n                      checked={activeFilters.indexOf(\"1-test\") !== -1}\n                      onChange={() => this.onHandleFilterClick('1-test')}\n                    />\n                    <label htmlFor=\"1-test\">1 Test</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"2-test\"\n                      checked={activeFilters.indexOf(\"2-test\") !== -1}\n                      onChange={() => this.onHandleFilterClick('2-test')}\n                    />\n                    <label htmlFor=\"2-test\">2 Tests</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"3-test\"\n                      checked={activeFilters.indexOf(\"3-test\") !== -1}\n                      onChange={() => this.onHandleFilterClick('3-test')}\n                    />\n                    <label htmlFor=\"3-test\">3+ Tests</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"has-overdue-work\"\n                      checked={activeFilters.indexOf(\"has-overdue-work\") !== -1}\n                      onChange={() => this.onHandleFilterClick('has-overdue-work')}\n                    />\n                    <label htmlFor=\"has-overdue-work\">Has Overdue Work</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unreviewed-flags\"\n                      checked={activeFilters.indexOf(\"unreviewed-flags\") !== -1}\n                      onChange={() => this.onHandleFilterClick('unreviewed-flags')}\n                    />\n                    <label htmlFor=\"unreviewed-flags\">Unreviewed Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"sessions-this-week\"\n                      checked={activeFilters.indexOf(\"sessions-this-week\") !== -1}\n                      onChange={() => this.onHandleFilterClick('sessions-this-week')}\n                    />\n                    <label htmlFor=\"sessions-this-week\">Sessions This Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"session-today\"\n                      checked={activeFilters.indexOf(\"session-today\") !== -1}\n                      onChange={() => this.onHandleFilterClick('session-today')}\n                    />\n                    <label htmlFor=\"session-today\">Session Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-sessions\"\n                      checked={activeFilters.indexOf(\"no-sessions\") !== -1}\n                      onChange={() => this.onHandleFilterClick('no-sessions')}\n                    />\n                    <label htmlFor=\"no-sessions\">No Sessions Scheduled</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"entered-actual-score\"\n                      checked={activeFilters.indexOf(\"entered-actual-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('entered-actual-score')}\n                    />\n                    <label htmlFor=\"entered-actual-score\">Entered Actual Score</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-actual-score\"\n                      checked={activeFilters.indexOf(\"no-actual-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('no-actual-score')}\n                    />\n                    <label htmlFor=\"no-actual-score\">No Actual Score</label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"filter-inputs-holder\">\n              <div className=\"row mb-0 d-flex align-items-flex-end\">\n                <div className=\"col s12 18\">\n                  <div className=\"row mb-0\">\n                    <div className=\"col s12 m3\">\n                      <div className=\"search-field input-field\">\n                        <input\n                          type=\"search\"\n                          id=\"name_search\"\n                          className=\"input-control validate\"\n                          name=\"name\"\n                          value={name}\n                          onChange={(event) => this.handleFilterChange(event, 'name')}\n                        />\n                        <button\n                          type=\"submit\"\n                          className=\"search-button\"\n                          onClick={this.onFilterByName}\n                        >\n                          <i className=\"icon-search\"></i>\n                        </button>\n                        <label className={name.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n                      </div>\n                    </div>\n                    <div className=\"col s12 m3\">\n                      <div className=\"input-field\">\n                        <Dropdown\n                          value={getValueFromState(location, locationOptions)}\n                          onChange={(event) => this.handleFilterChange(event, 'location')}\n                          options={locationOptions}\n                          label=\"Location\"\n                          stateKey=\"location\"\n                          dropdownKey=\"location\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col s12 m3\">\n                      <div className=\"input-field\">\n                        <Dropdown\n                          value={getValueFromState(sort, sortOptions)}\n                          onChange={(event) => this.handleFilterChange(event, 'sort')}\n                          options={sortOptions}\n                          label=\"Sort\"\n                          stateKey=\"sort\"\n                          dropdownKey=\"sort\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col s12 14\">\n                      <div className=\"option-filters\">\n                        <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                        <div className=\"option-item\">\n                          {/*  eslint-disable-next-line jsx-a11y/no-static-element-interactions  */}\n                          <span className=\"collapsible-header\" onClick={this.onToggleShowFilters}>\n                            <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetFilteredLocationState: PropTypes.func.isRequired,\n  onUnsetFilteredLocationState: PropTypes.func.isRequired,\n};\n\nexport default FilterSection;"]},"metadata":{},"sourceType":"module"}