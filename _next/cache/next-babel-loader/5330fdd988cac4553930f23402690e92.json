{"ast":null,"code":"var _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/SubjectsCard/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst readingData = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalScore, totalPossible - totalScore],\n    backgroundColor: ['#35a6af', 'rgb(234, 234, 234)']\n  }]\n});\n\nconst writingData = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalScore, totalPossible - totalScore],\n    backgroundColor: ['#389b7d', 'rgb(234, 234, 234)']\n  }]\n});\n\nconst mathData = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalScore, totalPossible - totalScore],\n    backgroundColor: ['#4785f4', 'rgb(234, 234, 234)']\n  }]\n});\n\nconst SubjectsCard = ({\n  readingScores,\n  writingScores,\n  mathScores\n}) => __jsx(\"div\", {\n  className: \"col s12 l8 card-width-772\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \"Subjects\"), __jsx(\"div\", {\n  className: \"card-main-full card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"several-charts-row row mb-0\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"col s4 center-align\",\n  id: \"analysisReadingCicleImg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, readingScores && __jsx(\"div\", {\n  className: \"chart-block chart-block-182\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, __jsx(Doughnut, {\n  data: () => readingData(readingScores.score.correct, readingScores.score.total),\n  width: 200,\n  height: 200,\n  options: {\n    cutoutPercentage: 75\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"chart-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, __jsx(\"span\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"Reading\"), __jsx(\"span\", {\n  className: \"value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, readingScores.score.percent_correct.toFixed(0), \"%\"), __jsx(\"span\", {\n  className: \"description\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, readingScores.score.correct), \" of \", __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, readingScores.score.total))))), __jsx(\"div\", {\n  className: \"col s4 center-align\",\n  id: \"analysisWritingCircleImg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, writingScores && __jsx(\"div\", {\n  className: \"chart-block chart-block-182\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, __jsx(Doughnut, {\n  data: () => writingData(writingScores.score.correct, writingScores.score.total),\n  width: 200,\n  height: 200,\n  options: {\n    cutoutPercentage: 75\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"chart-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, __jsx(\"span\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"Writing\"), __jsx(\"span\", {\n  className: \"value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, writingScores.score.percent_correct.toFixed(0), \"%\"), __jsx(\"span\", {\n  className: \"description\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, writingScores.score.correct), \" of \", __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, writingScores.score.total))))), __jsx(\"div\", {\n  className: \"col s4 center-align\",\n  id: \"analysisMathCircleImg\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, mathScores && __jsx(\"div\", {\n  className: \"chart-block chart-block-182\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, __jsx(Doughnut, {\n  data: () => mathData(mathScores.score.correct, mathScores.score.total),\n  width: 200,\n  height: 200,\n  options: {\n    cutoutPercentage: 75\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"chart-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, __jsx(\"span\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, \"Math\"), __jsx(\"span\", {\n  className: \"value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, mathScores.score.percent_correct.toFixed(0), \"%\"), __jsx(\"span\", {\n  className: \"description\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, mathScores.score.correct), \" of \", __jsx(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, mathScores.score.total))))))))));\n\nSubjectsCard.propTypes = {};\nexport default SubjectsCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/SubjectsCard/index.js"],"names":["React","PropTypes","Doughnut","readingData","totalScore","totalPossible","datasets","data","backgroundColor","writingData","mathData","SubjectsCard","readingScores","writingScores","mathScores","score","correct","total","cutoutPercentage","percent_correct","toFixed","propTypes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,UAAD,EAAaC,aAAb,MAAgC;AAClDC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,CAACH,UAAD,EAAaC,aAAa,GAAGD,UAA7B,CADR;AAEEI,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,oBAAZ;AAFnB,GADQ;AADwC,CAAhC,CAApB;;AAQA,MAAMC,WAAW,GAAG,CAACL,UAAD,EAAaC,aAAb,MAAgC;AAClDC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,CAACH,UAAD,EAAaC,aAAa,GAAGD,UAA7B,CADR;AAEEI,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,oBAAZ;AAFnB,GADQ;AADwC,CAAhC,CAApB;;AAQA,MAAME,QAAQ,GAAG,CAACN,UAAD,EAAaC,aAAb,MAAgC;AAC/CC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,IAAI,EAAE,CAACH,UAAD,EAAaC,aAAa,GAAGD,UAA7B,CADR;AAEEI,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,oBAAZ;AAFnB,GADQ;AADqC,CAAhC,CAAjB;;AASA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA;AAAhC,CAAD,KAClB;AAAK,EAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAqC,EAAA,EAAE,EAAC,yBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,aAAa,IACZ;AAAK,EAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,QAAD;AACE,EAAA,IAAI,EAAE,MAAMT,WAAW,CAACS,aAAa,CAACG,KAAd,CAAoBC,OAArB,EAA8BJ,aAAa,CAACG,KAAd,CAAoBE,KAAlD,CADzB;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,EAAE;AADX,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EASE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIN,aAAa,CAACG,KAAd,CAAoBI,eAArB,CAAsCC,OAAtC,CAA8C,CAA9C,CADH,MAFF,EAKE;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIR,aAAa,CAACG,KAAd,CAAoBC,OAAxB,CADF,UAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIJ,aAAa,CAACG,KAAd,CAAoBE,KAAxB,CAD1C,CALF,CATF,CAFJ,CADF,EAwBE;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAqC,EAAA,EAAE,EAAC,0BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGJ,aAAa,IACZ;AAAK,EAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,QAAD;AACE,EAAA,IAAI,EAAE,MAAMJ,WAAW,CAACI,aAAa,CAACE,KAAd,CAAoBC,OAArB,EAA8BH,aAAa,CAACE,KAAd,CAAoBE,KAAlD,CADzB;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,EAAE;AADX,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EASE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIL,aAAa,CAACE,KAAd,CAAoBI,eAArB,CAAsCC,OAAtC,CAA8C,CAA9C,CADH,MAFF,EAKE;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIP,aAAa,CAACE,KAAd,CAAoBC,OAAxB,CADF,UAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIH,aAAa,CAACE,KAAd,CAAoBE,KAAxB,CAD1C,CALF,CATF,CAFJ,CAxBF,EA+CE;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAqC,EAAA,EAAE,EAAC,uBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,UAAU,IACT;AAAK,EAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,QAAD;AACE,EAAA,IAAI,EAAE,MAAMJ,QAAQ,CAACI,UAAU,CAACC,KAAX,CAAiBC,OAAlB,EAA2BF,UAAU,CAACC,KAAX,CAAiBE,KAA5C,CADtB;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,EAAE;AADX,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EASE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAM,EAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIJ,UAAU,CAACC,KAAX,CAAiBI,eAAlB,CAAmCC,OAAnC,CAA2C,CAA3C,CADH,MAFF,EAKE;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIN,UAAU,CAACC,KAAX,CAAiBC,OAArB,CADF,UACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,UAAU,CAACC,KAAX,CAAiBE,KAArB,CADvC,CALF,CATF,CAFJ,CA/CF,CADF,CADF,CAFF,CADD,CADH;;AAiFAN,YAAY,CAACU,SAAb,GAAyB,EAAzB;AAEA,eAAeV,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst readingData = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#35a6af', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\nconst writingData = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#389b7d', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\nconst mathData = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#4785f4', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\n\nconst SubjectsCard = ({ readingScores, writingScores, mathScores }) =>\n  (<div className=\"col s12 l8 card-width-772\">\n    <div className=\"card-block\">\n      <h2>Subjects</h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content\">\n          <div className=\"several-charts-row row mb-0\">\n            <div className=\"col s4 center-align\" id=\"analysisReadingCicleImg\">\n              {readingScores &&\n                <div className=\"chart-block chart-block-182\">\n                  <Doughnut\n                    data={() => readingData(readingScores.score.correct, readingScores.score.total)}\n                    width={200}\n                    height={200}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                  <div className=\"chart-text\">\n                    <span className=\"title\">Reading</span>\n                    <span className=\"value\">\n                      {(readingScores.score.percent_correct).toFixed(0)}%\n                    </span>\n                    <span className=\"description\">\n                      <b>{readingScores.score.correct}</b> of <b>{readingScores.score.total}</b>\n                    </span>\n                  </div>\n                </div>}\n            </div>\n\n            <div className=\"col s4 center-align\" id=\"analysisWritingCircleImg\">\n              {writingScores &&\n                <div className=\"chart-block chart-block-182\">\n                  <Doughnut\n                    data={() => writingData(writingScores.score.correct, writingScores.score.total)}\n                    width={200}\n                    height={200}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                  <div className=\"chart-text\">\n                    <span className=\"title\">Writing</span>\n                    <span className=\"value\">\n                      {(writingScores.score.percent_correct).toFixed(0)}%\n                    </span>\n                    <span className=\"description\">\n                      <b>{writingScores.score.correct}</b> of <b>{writingScores.score.total}</b>\n                    </span>\n                  </div>\n                </div>}\n            </div>\n\n            <div className=\"col s4 center-align\" id=\"analysisMathCircleImg\">\n              {mathScores &&\n                <div className=\"chart-block chart-block-182\">\n                  <Doughnut\n                    data={() => mathData(mathScores.score.correct, mathScores.score.total)}\n                    width={200}\n                    height={200}\n                    options={{\n                      cutoutPercentage: 75,\n                    }}\n                  />\n                  <div className=\"chart-text\">\n                    <span className=\"title\">Math</span>\n                    <span className=\"value\">\n                      {(mathScores.score.percent_correct).toFixed(0)}%\n                    </span>\n                    <span className=\"description\">\n                      <b>{mathScores.score.correct}</b> of <b>{mathScores.score.total}</b>\n                    </span>\n                  </div>\n                </div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>);\n\nSubjectsCard.propTypes = {};\n\nexport default SubjectsCard;\n"]},"metadata":{},"sourceType":"module"}