{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalPossible, totalPossible - totalScore],\n    backgroundColor: ['#f5883f', 'rgb(234, 234, 234)']\n  }]\n});\n\nconst SectionScoreCard = ({\n  sectionScores: {\n    readingAndWriting,\n    math,\n    totalPossible\n  }\n}) => React.createElement(\"div\", {\n  className: \"col s12 l6 card-width-546\"\n}, React.createElement(\"div\", {\n  className: \"card-block\"\n}, React.createElement(\"h2\", null, \"Section Scores \", React.createElement(\"span\", {\n  className: \"separator\"\n}, \"|\"), \" \", React.createElement(\"span\", {\n  className: \"quantity\"\n}, \"200 to 800\")), React.createElement(\"div\", {\n  className: \"card-main-full card\"\n}, React.createElement(\"div\", {\n  className: \"card-content\"\n}, React.createElement(\"div\", {\n  className: \"several-charts-row row mb-0\"\n}, React.createElement(\"div\", {\n  className: \"col s6 center-align\"\n}, React.createElement(\"div\", {\n  className: \"chart-block chart-block-218\"\n}, React.createElement(Doughnut, {\n  data: () => data(readingAndWriting, totalPossible),\n  width: 215,\n  height: 215,\n  options: {\n    cutoutPercentage: 80\n  }\n}), React.createElement(\"div\", {\n  className: \"chart-text\"\n}, React.createElement(\"span\", {\n  className: \"title\"\n}, \"Reading & Writing\"), React.createElement(\"span\", {\n  className: \"value\"\n}, readingAndWriting), React.createElement(\"span\", {\n  className: \"description\"\n}, \"(+80)\")))), React.createElement(\"div\", {\n  className: \"col s6 center-align\"\n}, React.createElement(\"div\", {\n  className: \"chart-block chart-block-218\"\n}, React.createElement(Doughnut, {\n  data: () => data(math, totalPossible),\n  width: 215,\n  height: 215,\n  options: {\n    cutoutPercentage: 80\n  }\n}), React.createElement(\"div\", {\n  className: \"chart-text\"\n}, React.createElement(\"span\", {\n  className: \"title\"\n}, \"Math\"), React.createElement(\"span\", {\n  className: \"value\"\n}, math), React.createElement(\"span\", {\n  className: \"description\"\n}, \"(+80)\"))))), React.createElement(\"p\", null, \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore.\")))));\n\nSectionScoreCard.propTypes = {\n  sectionScores: PropTypes.object.isRequired\n};\nexport default SectionScoreCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestScorePage/components/SectionScoreCard/index.js"],"names":["React","PropTypes","Doughnut","data","totalScore","totalPossible","datasets","backgroundColor","SectionScoreCard","sectionScores","readingAndWriting","math","cutoutPercentage","propTypes","object","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAA0B,OAAOC,SAAP,MAAsB,YAAtB;AAC1B,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,IAAI,GAAG,CAACC,UAAD,EAAaC,aAAb,MAAgC;AAC3CC,EAAAA,QAAQ,EAAE,CAAC;AACTH,IAAAA,IAAI,EAAE,CAACE,aAAD,EAAgBA,aAAa,GAACD,UAA9B,CADG;AAETG,IAAAA,eAAe,EAAE,CACf,SADe,EAEf,oBAFe;AAFR,GAAD;AADiC,CAAhC,CAAb;;AAWA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,aAAa,EAAE;AAACC,IAAAA,iBAAD;AAAoBC,IAAAA,IAApB;AAA0BN,IAAAA;AAA1B;AAAhB,CAAD,KACvB;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE,mDAAmB;AAAM,EAAA,SAAS,EAAC;AAAhB,OAAnB,OAAwD;AAAM,EAAA,SAAS,EAAC;AAAhB,gBAAxD,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACA,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE,MAAMF,IAAI,CAACO,iBAAD,EAAoBL,aAApB,CADlB;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAE;AACPO,IAAAA,gBAAgB,EAAE;AADX;AAJX,EADA,EAQE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAM,EAAA,SAAS,EAAC;AAAhB,uBADF,EAEE;AAAM,EAAA,SAAS,EAAC;AAAhB,GAAyBF,iBAAzB,CAFF,EAGE;AAAM,EAAA,SAAS,EAAC;AAAhB,WAHF,CARF,CADF,CADF,EAiBE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACA,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE,MAAMP,IAAI,CAACQ,IAAD,EAAON,aAAP,CADlB;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAE;AACPO,IAAAA,gBAAgB,EAAE;AADX;AAJX,EADA,EAQE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAM,EAAA,SAAS,EAAC;AAAhB,UADF,EAEE;AAAM,EAAA,SAAS,EAAC;AAAhB,GAAyBD,IAAzB,CAFF,EAGE;AAAM,EAAA,SAAS,EAAC;AAAhB,WAHF,CARF,CADF,CAjBF,CADF,EAmCE,sJAnCF,CADF,CAFF,CADF,CADF;;AA+CAH,gBAAgB,CAACK,SAAjB,GAA6B;AAC3BJ,EAAAA,aAAa,EAAER,SAAS,CAACa,MAAV,CAAiBC;AADL,CAA7B;AAGA,eAAeP,gBAAf","sourcesContent":["import React from 'react';import PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (totalScore, totalPossible) => ({\n  datasets: [{\n    data: [totalPossible, totalPossible-totalScore],\n    backgroundColor: [\n      '#f5883f',\n      'rgb(234, 234, 234)',\n    ],\n  }],\n});\n\n\nconst SectionScoreCard = ({sectionScores: {readingAndWriting, math, totalPossible }}) => (\n  <div className=\"col s12 l6 card-width-546\">\n    <div className=\"card-block\">\n      <h2>Section Scores <span className=\"separator\">|</span> <span className=\"quantity\">200 to 800</span></h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content\">\n          <div className=\"several-charts-row row mb-0\">\n            <div className=\"col s6 center-align\">\n              <div className=\"chart-block chart-block-218\">\n              <Doughnut\n                data={() => data(readingAndWriting, totalPossible)}\n                width={215}\n                height={215}\n                options={{\n                  cutoutPercentage: 80,\n                }} />\n                <div className=\"chart-text\">\n                  <span className=\"title\">Reading &amp; Writing</span>\n                  <span className=\"value\">{readingAndWriting}</span>\n                  <span className=\"description\">(+80)</span>\n              </div>\n              </div>\n            </div>\n            <div className=\"col s6 center-align\">\n              <div className=\"chart-block chart-block-218\">\n              <Doughnut\n                data={() => data(math, totalPossible )}\n                width={215}\n                height={215}\n                options={{\n                  cutoutPercentage: 80,\n                }} />\n                <div className=\"chart-text\">\n                  <span className=\"title\">Math</span>\n                  <span className=\"value\">{math}</span>\n                  <span className=\"description\">(+80)</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nSectionScoreCard.propTypes = {\n  sectionScores: PropTypes.object.isRequired,\n}\nexport default SectionScoreCard;"]},"metadata":{},"sourceType":"module"}