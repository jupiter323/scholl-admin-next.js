{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\nimport modalSortOptions from '../../utils/modalSortOptions';\n\nvar ModalFilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalFilterSection, _React$Component);\n\n  function ModalFilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, ModalFilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalFilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSortChange\", function (event) {\n      var onSetSort = _this.props.onSetSort;\n\n      _this.setState({\n        sort: event\n      });\n\n      onSetSort(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var nameFilter = _this.state.nameFilter;\n\n      if (nameFilter === '') {\n        onUnsetFilteredState(nameFilter);\n      }\n\n      var transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUnitChange\", function (event) {\n      var onSetUnitFilter = _this.props.onSetUnitFilter;\n\n      _this.setState({\n        unitFilter: event\n      });\n\n      onSetUnitFilter(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAllFilters\", function () {\n      var onClearFilters = _this.props.onClearFilters;\n\n      _this.setState({\n        sort: {},\n        nameFilter: \"\",\n        unitFilter: \"\"\n      });\n\n      onClearFilters();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props2 = _this.props,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onSetUnitFilter = _this$props2.onSetUnitFilter;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'nameFilter') {\n        if (event === '') {\n          return onUnsetFilteredState();\n        }\n\n        return onSetFilteredState(event);\n      }\n\n      if (name === 'unitFilter') {\n        if (event === \"\") {\n          return onUnsetFilteredState();\n        }\n\n        return onSetUnitFilter(event);\n      }\n    });\n\n    _this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ModalFilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          sort = _this$state.sort,\n          nameFilter = _this$state.nameFilter,\n          unitFilter = _this$state.unitFilter;\n      var _this$props3 = this.props,\n          subjectFilters = _this$props3.subjectFilters,\n          statusFilters = _this$props3.statusFilters,\n          lessonTypeFilters = _this$props3.lessonTypeFilters,\n          handleFilterClick = _this$props3.handleFilterClick;\n      return __jsx(\"div\", {\n        className: \"filter-form-holder\"\n      }, __jsx(\"ul\", {\n        className: \"collapsible expandable\"\n      }, __jsx(\"li\", null, __jsx(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, __jsx(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"assignedModal\",\n        checked: statusFilters.indexOf('Assigned') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Assigned');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"assignedModal\"\n      }, \"Assigned\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"unassigned\",\n        checked: statusFilters.indexOf('Unassigned') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('status', 'Unassigned');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"unassigned\"\n      }, \"Unassigned\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"readingModal\",\n        checked: subjectFilters.indexOf('Reading') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'Reading');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"readingModal\"\n      }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"writingModal\",\n        checked: subjectFilters.indexOf('Writing') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'Writing');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"writingModal\"\n      }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"mathModal\",\n        checked: subjectFilters.indexOf('Math') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'Math');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"mathModal\"\n      }, \"Math\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"challengePractice\",\n        checked: lessonTypeFilters.indexOf('Challenge + Practice') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('lessonType', 'Challenge + Practice');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"challengePractice\"\n      }, \"Challenge + Practice\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"homeworkDrill\",\n        checked: lessonTypeFilters.indexOf('Homework Drill') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('lessonType', 'Homework Drill');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"homeworkDrill\"\n      }, \"Homework Drill\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"readingFromWorkbook\",\n        checked: lessonTypeFilters.indexOf('Read from the Book') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('lessonType', 'Read from the Book');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"readingFromWorkbook\"\n      }, \"Reading from Workbook\")))), __jsx(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"search-field input-field\",\n        style: {\n          marginTop: '30px'\n        }\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control  validate\",\n        name: \"nameFilter\",\n        value: nameFilter,\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'nameFilter');\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, __jsx(\"i\", {\n        className: \"icon-search\"\n      })), __jsx(\"label\", {\n        className: nameFilter.length ? \"label active\" : \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))), __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"input-field\",\n        style: {\n          marginTop: '-7px'\n        }\n      }, __jsx(Dropdown, {\n        value: getValueFromState(unitFilter, unitOptions),\n        onChange: function onChange(event) {\n          return _this2.handleUnitChange(event);\n        },\n        options: unitOptions,\n        label: \"Unit Number\",\n        stateKey: \"unit\",\n        dropdownKey: \"unit\"\n      }))))), __jsx(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 14\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(sort, modalSortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleSortChange(event);\n        },\n        options: modalSortOptions,\n        label: \"Sort by\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), __jsx(\"div\", {\n        className: \"col s12 l4 offset-s12\"\n      }, __jsx(\"div\", {\n        className: \"option-filters\"\n      }, __jsx(\"div\", {\n        className: \"option-item clear\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.clearAllFilters\n      }, \"Clear Filters\")), __jsx(\"div\", {\n        className: \"option-item\"\n      }, __jsx(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, __jsx(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return ModalFilterSection;\n}(React.Component);\n\nModalFilterSection.propTypes = {\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  statusFilters: PropTypes.array.isRequired,\n  lessonTypeFilters: PropTypes.array.isRequired,\n  onSetUnitFilter: PropTypes.func.isRequired\n};\nexport default ModalFilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/components/ModalFilterSection/index.js"],"names":["React","update","PropTypes","Dropdown","getValueFromState","lessonSortOptions","unitOptions","modalSortOptions","ModalFilterSection","props","setState","open","event","onSetSort","sort","onSetFilteredState","onUnsetFilteredState","nameFilter","state","transformedName","replace","toLowerCase","onSetUnitFilter","unitFilter","onClearFilters","name","value","target","updatedState","$merge","subjectFilters","statusFilters","lessonTypeFilters","handleFilterClick","display","indexOf","marginTop","handleFilterChange","submitNameFilter","length","handleUnitChange","handleSortChange","clearAllFilters","onToggleShowFilters","Component","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport unitOptions from '../../utils/unitOptions';\nimport modalSortOptions from '../../utils/modalSortOptions';\n\nclass ModalFilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\",\n    }\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  handleSortChange = (event) => {\n    const {onSetSort} = this.props;\n    this.setState({sort: event});\n    onSetSort(event);\n  }\n\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { nameFilter } = this.state;\n    if (nameFilter === '') {\n      onUnsetFilteredState(nameFilter);\n    }\n    const transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  handleUnitChange = (event) => {\n    const { onSetUnitFilter } = this.props;\n    this.setState({unitFilter: event});\n    onSetUnitFilter(event);\n  }\n\n  clearAllFilters = () => {\n    const { onClearFilters } = this.props;\n    this.setState({sort: {}, nameFilter: \"\", unitFilter: \"\"})\n    onClearFilters()\n  }\n  handleFilterChange = (event, name) => {\n    const { onUnsetFilteredState, onSetFilteredState, onSetUnitFilter} = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'nameFilter') {\n      if (event === '') {\n        return onUnsetFilteredState();\n      }\n      return onSetFilteredState(event);\n    }\n    if (name === 'unitFilter') {\n      if (event === \"\") {\n        return onUnsetFilteredState();\n      }\n      return onSetUnitFilter(event);\n    }\n  }\n  render() {\n    const { open, sort, nameFilter, unitFilter } = this.state;\n    const { subjectFilters, statusFilters, lessonTypeFilters, handleFilterClick } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n              <ul className=\"filter-form_checkbox-list\">\n              <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"assignedModal\"\n                      checked={statusFilters.indexOf('Assigned') !== -1}\n                      onChange={() => handleFilterClick('status', 'Assigned')}\n                    />\n                    <label htmlFor=\"assignedModal\">Assigned</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unassigned\"\n                      checked={statusFilters.indexOf('Unassigned') !== -1}\n                      onChange={() => handleFilterClick('status', 'Unassigned')}\n                    />\n                    <label htmlFor=\"unassigned\">Unassigned</label>\n                  </li>\n                </ul>\n                <ul className='filter-form_checkbox-list'>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"readingModal\"\n                      checked={subjectFilters.indexOf('Reading') !== -1}\n                      onChange={() => handleFilterClick('subject', 'Reading')}\n                    />\n                    <label htmlFor=\"readingModal\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writingModal\"\n                      checked={subjectFilters.indexOf('Writing') !== -1}\n                      onChange={() => handleFilterClick('subject', 'Writing')}\n                    />\n                    <label htmlFor=\"writingModal\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mathModal\"\n                      checked={subjectFilters.indexOf('Math') !== -1}\n                      onChange={() => handleFilterClick('subject', 'Math')}\n                    />\n                    <label htmlFor=\"mathModal\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"challengePractice\"\n                      checked={lessonTypeFilters.indexOf('Challenge + Practice') !== -1}\n                      onChange={() => handleFilterClick('lessonType', 'Challenge + Practice')}\n                    />\n                    <label htmlFor=\"challengePractice\">Challenge + Practice</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"homeworkDrill\"\n                      checked={lessonTypeFilters.indexOf('Homework Drill') !== -1}\n                      onChange={() => handleFilterClick('lessonType', 'Homework Drill')}\n                    />\n                    <label htmlFor=\"homeworkDrill\">Homework Drill</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"readingFromWorkbook\"\n                      checked={lessonTypeFilters.indexOf('Read from the Book') !== -1}\n                      onChange={() => handleFilterClick('lessonType', 'Read from the Book')}\n                    />\n                    <label htmlFor=\"readingFromWorkbook\">Reading from Workbook</label>\n                  </li>\n\n                </ul>\n              </div>\n            <div className=\"d-flex row mb-0 justify-center\">\n              <div className=\"col s12 m3\">\n                    <div className=\"search-field input-field\" style={{marginTop: '30px'}}>\n                      <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      className=\"input-control  validate\"\n                      name=\"nameFilter\"\n                      value={nameFilter}\n                      onChange={(event) =>  this.handleFilterChange(event, 'nameFilter')}\n                      />\n                      <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}><i className=\"icon-search\"></i></button>\n                      <label className={nameFilter.length ? \"label active\" : \"label\"} htmlFor=\"name_search\">Search</label>\n                    </div>\n              </div>\n            <div className=\"col s12 m3\">\n              <div className=\"input-field\" style={{marginTop: '-7px'}}>\n                <Dropdown\n                value={getValueFromState(unitFilter, unitOptions)}\n                onChange={(event) => this.handleUnitChange(event)}\n                options={unitOptions}\n                label=\"Unit Number\"\n                stateKey=\"unit\"\n                dropdownKey=\"unit\"\n                />\n              </div>\n            </div>\n\n            </div>\n            </div>\n\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n\n                  <div className=\"col s12 14\">\n                   <div className=\"input-field\"  >\n                      <Dropdown\n                        value={getValueFromState(sort, modalSortOptions)}\n                        onChange={(event) => this.handleSortChange(event)}\n                        options={modalSortOptions}\n                        label=\"Sort by\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                        />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 offset-s12\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.clearAllFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nModalFilterSection.propTypes = {\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  statusFilters: PropTypes.array.isRequired,\n  lessonTypeFilters: PropTypes.array.isRequired,\n  onSetUnitFilter: PropTypes.func.isRequired,\n}\nexport default ModalFilterSection;\n"]},"metadata":{},"sourceType":"module"}