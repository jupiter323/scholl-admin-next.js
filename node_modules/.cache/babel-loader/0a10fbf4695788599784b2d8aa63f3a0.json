{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _this.state = {\n      open: false,\n      activeFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          activeFilters = _this$state.activeFilters;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"activated\",\n        checked: activeFilters.indexOf(\"activated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('activated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"activated\"\n      }, \"Activated\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unactivated\",\n        checked: activeFilters.indexOf(\"unactivated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unactivated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unactivated\"\n      }, \"Unactivated\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"expired\",\n        checked: activeFilters.indexOf(\"expired\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('expired');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"expired\"\n      }, \"Expired\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"current\",\n        checked: activeFilters.indexOf(\"current\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('current');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"current\"\n      }, \"Current\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"archived\",\n        checked: activeFilters.indexOf(\"archived\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('archived');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"archived\"\n      }, \"Archived\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-gain\",\n        checked: activeFilters.indexOf(\"no-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-gain');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-gain\"\n      }, \"No Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"some-gain\",\n        checked: activeFilters.indexOf(\"some-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('some-gain');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"some-gain\"\n      }, \"Some Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-100+\",\n        checked: activeFilters.indexOf(\"gain-100+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-100+');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain-100+\"\n      }, \"Gain of 100+\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-200+\",\n        checked: activeFilters.indexOf(\"gain-200+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-200+');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain-200+\"\n      }, \"Gain of 200+\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hit-target-score\",\n        checked: activeFilters.indexOf(\"hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hit-target-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hit-target-score\"\n      }, \"Hit Target Score\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hasnt-hit-target-score\",\n        checked: activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hasnt-hit-target-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hasnt-hit-target-score\"\n      }, \"Hasn\\u2019t Hit Target Score\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-tests\",\n        checked: activeFilters.indexOf(\"no-tests\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('tests');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-tests\"\n      }, \"No Tests\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"1-test\",\n        checked: activeFilters.indexOf(\"1-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('1-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"1-test\"\n      }, \"1 Test\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"2-test\",\n        checked: activeFilters.indexOf(\"2-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('2-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"2-test\"\n      }, \"2 Tests\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"3-test\",\n        checked: activeFilters.indexOf(\"3-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('3-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"3-test\"\n      }, \"3+ Tests\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"has-overdue-work\",\n        checked: activeFilters.indexOf(\"has-overdue-work\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('has-overdue-work');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"has-overdue-work\"\n      }, \"Has Overdue Work\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unreviewed-flags\",\n        checked: activeFilters.indexOf(\"unreviewed-flags\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unreviewed-flags');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unreviewed-flags\"\n      }, \"Unreviewed Flags\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions-this-week\",\n        checked: activeFilters.indexOf(\"sessions-this-week\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('sessions-this-week');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"sessions-this-week\"\n      }, \"Sessions This Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"session-today\",\n        checked: activeFilters.indexOf(\"session-today\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('session-today');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"session-today\"\n      }, \"Session Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-sessions\",\n        checked: activeFilters.indexOf(\"no-sessions\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-sessions');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-sessions\"\n      }, \"No Sessions Scheduled\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"entered-actual-score\",\n        checked: activeFilters.indexOf(\"entered-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('entered-actual-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"entered-actual-score\"\n      }, \"Entered Actual Score\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-actual-score\",\n        checked: activeFilters.indexOf(\"no-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-actual-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-actual-score\"\n      }, \"No Actual Score\"))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-flex-end\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l8\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control  validate\"\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\"\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"select\", {\n        id: \"location_search\"\n      }, React.createElement(\"option\", null, \"Any\"), React.createElement(\"option\", null, \"Option\"), React.createElement(\"option\", null, \"Option\")), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"location_search\"\n      }, \"Location\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"select\", {\n        id: \"sort_search\"\n      }, React.createElement(\"option\", null, \"Last Name (ascending)\"), React.createElement(\"option\", null, \"Option\"), React.createElement(\"option\", null, \"Option\")), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"sort_search\"\n      }, \"Sort\"))))), React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nexport default FilterSection;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailLessonList\\components\\FilterSection\\index.js"],"names":["React","update","FilterSection","props","setState","open","filter","currentActiveFilters","state","activeFilters","indexOf","$push","filterIndex","$splice","display","onHandleFilterClick","onClearFilters","onToggleShowFilters","Component"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      activeFilters: [],\n    }\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n\n  onHandleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  render() {\n    const { open, activeFilters } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"activated\"\n                      checked={activeFilters.indexOf(\"activated\") !== -1}\n                      onChange={() => this.onHandleFilterClick('activated')}\n                    />\n                    <label htmlFor=\"activated\">Activated</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unactivated\"\n                      checked={activeFilters.indexOf(\"unactivated\") !== -1}\n                      onChange={() => this.onHandleFilterClick('unactivated')}\n                    />\n                    <label htmlFor=\"unactivated\">Unactivated</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"expired\"\n                      checked={activeFilters.indexOf(\"expired\") !== -1}\n                      onChange={() => this.onHandleFilterClick('expired')}\n                    />\n                    <label htmlFor=\"expired\">Expired</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"current\"\n                      checked={activeFilters.indexOf(\"current\") !== -1}\n                      onChange={() => this.onHandleFilterClick('current')}\n                    />\n                    <label htmlFor=\"current\">Current</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"archived\"\n                      checked={activeFilters.indexOf(\"archived\") !== -1}\n                      onChange={() => this.onHandleFilterClick('archived')}\n                    />\n                    <label htmlFor=\"archived\">Archived</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-gain\"\n                      checked={activeFilters.indexOf(\"no-gain\") !== -1}\n                      onChange={() => this.onHandleFilterClick('no-gain')}\n                    />\n                    <label htmlFor=\"no-gain\">No Gain</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"some-gain\"\n                      checked={activeFilters.indexOf(\"some-gain\") !== -1}\n                      onChange={() => this.onHandleFilterClick('some-gain')}\n                    />\n                    <label htmlFor=\"some-gain\">Some Gain</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gain-100+\"\n                      checked={activeFilters.indexOf(\"gain-100+\") !== -1}\n                      onChange={() => this.onHandleFilterClick('gain-100+')}\n                    />\n                    <label htmlFor=\"gain-100+\">Gain of 100+</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gain-200+\"\n                      checked={activeFilters.indexOf(\"gain-200+\") !== -1}\n                      onChange={() => this.onHandleFilterClick('gain-200+')}\n                    />\n                    <label htmlFor=\"gain-200+\">Gain of 200+</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hit-target-score\"\n                      checked={activeFilters.indexOf(\"hit-target-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('hit-target-score')}\n                    />\n                    <label htmlFor=\"hit-target-score\">Hit Target Score</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasnt-hit-target-score\"\n                      checked={activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('hasnt-hit-target-score')}\n                    />\n                    <label htmlFor=\"hasnt-hit-target-score\">Hasn’t Hit Target Score</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-tests\"\n                      checked={activeFilters.indexOf(\"no-tests\") !== -1}\n                      onChange={() => this.onHandleFilterClick('tests')}\n                    />\n                    <label htmlFor=\"no-tests\">No Tests</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"1-test\"\n                      checked={activeFilters.indexOf(\"1-test\") !== -1}\n                      onChange={() => this.onHandleFilterClick('1-test')}\n                    />\n                    <label htmlFor=\"1-test\">1 Test</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"2-test\"\n                      checked={activeFilters.indexOf(\"2-test\") !== -1}\n                      onChange={() => this.onHandleFilterClick('2-test')}\n                    />\n                    <label htmlFor=\"2-test\">2 Tests</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"3-test\"\n                      checked={activeFilters.indexOf(\"3-test\") !== -1}\n                      onChange={() => this.onHandleFilterClick('3-test')}\n                    />\n                    <label htmlFor=\"3-test\">3+ Tests</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"has-overdue-work\"\n                      checked={activeFilters.indexOf(\"has-overdue-work\") !== -1}\n                      onChange={() => this.onHandleFilterClick('has-overdue-work')}\n                    />\n                    <label htmlFor=\"has-overdue-work\">Has Overdue Work</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unreviewed-flags\"\n                      checked={activeFilters.indexOf(\"unreviewed-flags\") !== -1}\n                      onChange={() => this.onHandleFilterClick('unreviewed-flags')}\n                    />\n                    <label htmlFor=\"unreviewed-flags\">Unreviewed Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"sessions-this-week\"\n                      checked={activeFilters.indexOf(\"sessions-this-week\") !== -1}\n                      onChange={() => this.onHandleFilterClick('sessions-this-week')}\n                    />\n                    <label htmlFor=\"sessions-this-week\">Sessions This Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"session-today\"\n                      checked={activeFilters.indexOf(\"session-today\") !== -1}\n                      onChange={() => this.onHandleFilterClick('session-today')}\n                    />\n                    <label htmlFor=\"session-today\">Session Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-sessions\"\n                      checked={activeFilters.indexOf(\"no-sessions\") !== -1}\n                      onChange={() => this.onHandleFilterClick('no-sessions')}\n                    />\n                    <label htmlFor=\"no-sessions\">No Sessions Scheduled</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"entered-actual-score\"\n                      checked={activeFilters.indexOf(\"entered-actual-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('entered-actual-score')}\n                    />\n                    <label htmlFor=\"entered-actual-score\">Entered Actual Score</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"no-actual-score\"\n                      checked={activeFilters.indexOf(\"no-actual-score\") !== -1}\n                      onChange={() => this.onHandleFilterClick('no-actual-score')}\n                    />\n                    <label htmlFor=\"no-actual-score\">No Actual Score</label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-flex-end\">\n              <div className=\"col s12 l8\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 m3\">\n                    <div className=\"search-field input-field\">\n                      <input type=\"search\" id=\"name_search\" className=\"input-control  validate\" />\n                      <button type=\"submit\" className=\"search-button\"><i className=\"icon-search\"></i></button>\n                      <label className=\"label\" htmlFor=\"name_search\">Search</label>\n                    </div>\n                  </div>\n                  <div className=\"col s12 m3\">\n                    <div className=\"input-field\">\n                      <select id=\"location_search\">\n                        <option>Any</option>\n                        <option>Option</option>\n                        <option>Option</option>\n                      </select>\n                      <label className=\"label\" htmlFor=\"location_search\">Location</label>\n                    </div>\n                  </div>\n                  <div className=\"col s12 m3\">\n                    <div className=\"input-field\">\n                      <select id=\"sort_search\">\n                        <option>Last Name (ascending)</option>\n                        <option>Option</option>\n                        <option>Option</option>\n                      </select>\n                      <label className=\"label\" htmlFor=\"sort_search\">Sort</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}