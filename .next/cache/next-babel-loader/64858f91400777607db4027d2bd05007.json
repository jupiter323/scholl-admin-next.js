{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nconst API_URL = process.env.API_URL;\nexport const fetchInstructorsApi = () => fetch(`${API_URL}/api/instructors`, {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\"\n  }\n}).then(res => res.json()).then(({\n  data\n}) => {\n  const {\n    students = []\n  } = data;\n  const formattedInstructors = students.reduce((finalArry, currentInstructor) => {\n    const {\n      id,\n      first_name,\n      last_name,\n      email,\n      sex,\n      type,\n      password,\n      created_at,\n      updated_at,\n      user_address\n    } = currentInstructor;\n    const newInstructor = {\n      id,\n      accountInfo: {\n        lastName: last_name,\n        firstName: first_name,\n        email,\n        gender: sex\n      },\n      contactInfo: {\n        phone: \"1234567890\",\n        streetAddress: \"1234 Test Road\",\n        city: \"Austin\",\n        state: \"TX\",\n        zip: \"78751\"\n      },\n      basicInfo: {\n        activeStudents: 15,\n        pastStudents: 24,\n        unactivatedStudents: 29,\n        averageImprovement: 185,\n        averageInitialScore: 1037,\n        averageFinalScore: 1218,\n        studentsAchievingTargetScore: 12\n      }\n    };\n    finalArry.push(newInstructor);\n    return finalArry;\n  }, []);\n  return {\n    formattedInstructors\n  };\n}).catch(err => err);\nexport const createNewInstructorApi = insturctor => fetch(`${API_URL}/api/commands/create-instructor`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  },\n  body: _JSON$stringify(insturctor)\n}).then(res => res.json()).catch(err => err);\nexport default [createNewInstructorApi, fetchInstructorsApi];","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/index/api.js"],"names":["API_URL","process","env","fetchInstructorsApi","fetch","headers","then","res","json","data","students","formattedInstructors","reduce","finalArry","currentInstructor","id","first_name","last_name","email","sex","type","password","created_at","updated_at","user_address","newInstructor","accountInfo","lastName","firstName","gender","contactInfo","phone","streetAddress","city","state","zip","basicInfo","activeStudents","pastStudents","unactivatedStudents","averageImprovement","averageInitialScore","averageFinalScore","studentsAchievingTargetScore","push","catch","err","createNewInstructorApi","insturctor","method","Accept","body"],"mappings":";AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA5B;AAEA,OAAO,MAAMG,mBAAmB,GAAG,MACjCC,KAAK,CAAE,GAAEJ,OAAQ,kBAAZ,EAA+B;AAClCK,EAAAA,OAAO,EAAE;AACP,mCAA+B,GADxB;AAEP,oBAAgB;AAFT;AADyB,CAA/B,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANf,EAOGF,IAPH,CAOQ,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAc;AAClB,QAAM;AAAEC,IAAAA,QAAQ,GAAG;AAAb,MAAoBD,IAA1B;AACA,QAAME,oBAAoB,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACC,SAAD,EAAYC,iBAAZ,KAAkC;AAC3E,UAAM;AACJC,MAAAA,EADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,SAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,GALI;AAMJC,MAAAA,IANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,UARI;AASJC,MAAAA,UATI;AAUJC,MAAAA;AAVI,QAWFV,iBAXJ;AAYA,UAAMW,aAAa,GAAG;AACpBV,MAAAA,EADoB;AAEpBW,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAEV,SADC;AAEXW,QAAAA,SAAS,EAAEZ,UAFA;AAGXE,QAAAA,KAHW;AAIXW,QAAAA,MAAM,EAAEV;AAJG,OAFO;AAQpBW,MAAAA,WAAW,EAAE;AACXC,QAAAA,KAAK,EAAE,YADI;AAEXC,QAAAA,aAAa,EAAE,gBAFJ;AAGXC,QAAAA,IAAI,EAAE,QAHK;AAIXC,QAAAA,KAAK,EAAE,IAJI;AAKXC,QAAAA,GAAG,EAAE;AALM,OARO;AAepBC,MAAAA,SAAS,EAAE;AACTC,QAAAA,cAAc,EAAE,EADP;AAETC,QAAAA,YAAY,EAAE,EAFL;AAGTC,QAAAA,mBAAmB,EAAE,EAHZ;AAITC,QAAAA,kBAAkB,EAAE,GAJX;AAKTC,QAAAA,mBAAmB,EAAE,IALZ;AAMTC,QAAAA,iBAAiB,EAAE,IANV;AAOTC,QAAAA,4BAA4B,EAAE;AAPrB;AAfS,KAAtB;AAyBA9B,IAAAA,SAAS,CAAC+B,IAAV,CAAenB,aAAf;AACA,WAAOZ,SAAP;AACD,GAxC0B,EAwCzB,EAxCyB,CAA7B;AAyCE,SAAO;AAACF,IAAAA;AAAD,GAAP;AACH,CAnDH,EAoDGkC,KApDH,CAoDSC,GAAG,IAAIA,GApDhB,CADK;AAuDP,OAAO,MAAMC,sBAAsB,GAAGC,UAAU,IAC9C5C,KAAK,CAAE,GAAEJ,OAAQ,iCAAZ,EAA8C;AACjDiD,EAAAA,MAAM,EAAE,MADyC;AAEjD5C,EAAAA,OAAO,EAAE;AACP6C,IAAAA,MAAM,EAAE,kBADD;AAEP,oBAAgB;AAFT,GAFwC;AAMjDC,EAAAA,IAAI,EAAE,gBAAeH,UAAf;AAN2C,CAA9C,CAAL,CAQG1C,IARH,CAQQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARf,EASGqC,KATH,CASSC,GAAG,IAAIA,GAThB,CADK;AAYP,eAAe,CAACC,sBAAD,EAAyB5C,mBAAzB,CAAf","sourcesContent":["const API_URL = process.env.API_URL;\n\nexport const fetchInstructorsApi = () =>\n  fetch(`${API_URL}/api/instructors`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => {\n      const { students = [] } = data;\n      const formattedInstructors = students.reduce((finalArry, currentInstructor) => {\n          const {\n            id,\n            first_name,\n            last_name,\n            email,\n            sex,\n            type,\n            password,\n            created_at,\n            updated_at,\n            user_address,\n          } = currentInstructor;\n          const newInstructor = {\n            id,\n            accountInfo: {\n              lastName: last_name,\n              firstName: first_name,\n              email,\n              gender: sex,\n            },\n            contactInfo: {\n              phone: \"1234567890\",\n              streetAddress: \"1234 Test Road\",\n              city: \"Austin\",\n              state: \"TX\",\n              zip: \"78751\",\n            },\n            basicInfo: {\n              activeStudents: 15,\n              pastStudents: 24,\n              unactivatedStudents: 29,\n              averageImprovement: 185,\n              averageInitialScore: 1037,\n              averageFinalScore: 1218,\n              studentsAchievingTargetScore: 12,\n            },\n          };\n          finalArry.push(newInstructor);\n          return finalArry;\n        },[]);\n        return {formattedInstructors};\n    })\n    .catch(err => err);\n\nexport const createNewInstructorApi = insturctor =>\n  fetch(`${API_URL}/api/commands/create-instructor`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(insturctor),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport default [createNewInstructorApi, fetchInstructorsApi];\n"]},"metadata":{},"sourceType":"module"}