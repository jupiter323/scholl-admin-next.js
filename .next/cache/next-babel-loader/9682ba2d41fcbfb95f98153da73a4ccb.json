{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nconst Location = ({\n  state: {\n    locations\n  },\n  onOpenLocationModal,\n  onRemoveLocation\n}) => __jsx(\"div\", {\n  className: \"card-block\"\n}, __jsx(\"h3\", null, \"Location\"), __jsx(\"div\", {\n  className: \"card card-instructor\"\n}, __jsx(\"div\", {\n  className: \"card-content\"\n}, __jsx(\"div\", {\n  className: \"text-block\"\n}, __jsx(\"p\", null, \"Depending on your settings, you may have more than one location/branch. The student\\u2019s location a\\uFB00ects which managers have access to this student. \")), __jsx(\"div\", {\n  className: \"box-scrollable\"\n}, __jsx(\"div\", {\n  className: \"height-15 jcf-scrollable\"\n}, __jsx(\"div\", {\n  className: \"card-location-holder\",\n  style: {\n    height: '100%',\n    overflowY: 'scroll'\n  }\n}, !locations.length && __jsx(\"div\", {\n  className: \"add-class-box\"\n}), locations.map((location, index) => __jsx(LocationCard, {\n  location: location,\n  key: location.id,\n  onRemoveLocation: () => onRemoveLocation(index, 'location', 'locations')\n}))))), __jsx(\"div\", {\n  className: \"card-footer right-align\"\n}, __jsx(\"a\", {\n  href: \"#\",\n  onClick: onOpenLocationModal,\n  className: \"modal-trigger link-block\"\n}, \"Add Location\")))));\n\nLocation.propTypes = {\n  state: PropTypes.object.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired\n};\nexport default Location;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/AccountPage/components/Location/index.js"],"names":["React","PropTypes","LocationCard","Location","state","locations","onOpenLocationModal","onRemoveLocation","height","overflowY","length","map","location","index","id","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAAT;AAAwBC,EAAAA,mBAAxB;AAA6CC,EAAAA;AAA7C,CAAD,KACf;AAAK,EAAA,SAAS,EAAC;AAAf,GACE,6BADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE,gLADF,CADF,EAIE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAsC,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,SAAS,EAAE;AAA7B;AAA7C,GACG,CAACJ,SAAS,CAACK,MAAX,IACC;AAAK,EAAA,SAAS,EAAC;AAAf,EAFJ,EAIGL,SAAS,CAACM,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KACb,MAAC,YAAD;AAAc,EAAA,QAAQ,EAAED,QAAxB;AAAkC,EAAA,GAAG,EAAEA,QAAQ,CAACE,EAAhD;AAAoD,EAAA,gBAAgB,EAAE,MAAMP,gBAAgB,CAACM,KAAD,EAAQ,UAAR,EAAoB,WAApB;AAA5F,EADD,CAJH,CADF,CADF,CAJF,EAgBE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AACE,EAAA,IAAI,EAAC,GADP;AAEE,EAAA,OAAO,EAAEP,mBAFX;AAGE,EAAA,SAAS,EAAC;AAHZ,kBADF,CAhBF,CADF,CAFF,CADF;;AAkCAH,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,KAAK,EAAEH,SAAS,CAACe,MAAV,CAAiBC,UADL;AAEnBV,EAAAA,gBAAgB,EAAEN,SAAS,CAACiB,IAAV,CAAeD,UAFd;AAGnBX,EAAAA,mBAAmB,EAAEL,SAAS,CAACiB,IAAV,CAAeD;AAHjB,CAArB;AAMA,eAAed,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nconst Location = ({ state: { locations }, onOpenLocationModal, onRemoveLocation }) => (\n  <div className=\"card-block\">\n    <h3>Location</h3>\n    <div className=\"card card-instructor\">\n      <div className=\"card-content\">\n        <div className=\"text-block\">\n          <p>Depending on your settings, you may have more than one location/branch. The student’s location aﬀects which managers have access to this student. </p>\n        </div>\n        <div className=\"box-scrollable\">\n          <div className=\"height-15 jcf-scrollable\">\n            <div className=\"card-location-holder\" style={{ height: '100%', overflowY: 'scroll' }}>\n              {!locations.length && (\n                <div className=\"add-class-box\"></div>\n              )}\n              {locations.map((location, index) => (\n                <LocationCard location={location} key={location.id} onRemoveLocation={() => onRemoveLocation(index, 'location', 'locations')} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer right-align\">\n          <a\n            href=\"#\"\n            onClick={onOpenLocationModal}\n            className=\"modal-trigger link-block\"\n          >\n            Add Location\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocation.propTypes = {\n  state: PropTypes.object.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired,\n};\n\nexport default Location;\n"]},"metadata":{},"sourceType":"module"}