{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        topic: ''\n      }, _this.props.onClearFilters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props = _this.props,\n          onSetFilteredTopicState = _this$props.onSetFilteredTopicState,\n          onUnsetFilteredTopicState = _this$props.onUnsetFilteredTopicState,\n          onSetSort = _this$props.onSetSort;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'topic') {\n        if (event === '') {\n          return onUnsetFilteredTopicState();\n        }\n\n        return onSetFilteredTopicState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props2 = _this.props,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState;\n      var worksheetName = _this.state.worksheetName;\n\n      if (worksheetName === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _this.state = {\n      open: false,\n      worksheetName: '',\n      topic: '',\n      sort: {}\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          worksheetName = _this$state.worksheetName,\n          topic = _this$state.topic,\n          sort = _this$state.sort;\n      var _this$props3 = this.props,\n          currentView = _this$props3.currentView,\n          onChangeView = _this$props3.onChangeView,\n          handleFilterClick = _this$props3.handleFilterClick,\n          subjectFilters = _this$props3.subjectFilters,\n          difficultyFilters = _this$props3.difficultyFilters,\n          typeFilters = _this$props3.typeFilters,\n          sourceFilters = _this$props3.sourceFilters;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"reading\",\n        id: \"reading\",\n        checked: subjectFilters.indexOf('reading') !== -1,\n        onChange: function onChange(_ref2) {\n          var target = _ref2.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"reading\"\n      }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"writing\",\n        id: \"writing\",\n        checked: subjectFilters.indexOf('writing') !== -1,\n        onChange: function onChange(_ref3) {\n          var target = _ref3.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"writing\"\n      }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"math\",\n        id: \"math\",\n        checked: subjectFilters.indexOf('math') !== -1,\n        onChange: function onChange(_ref4) {\n          var target = _ref4.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"math\"\n      }, \"Math\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"mixedSubject\",\n        id: \"mixedSubject\",\n        checked: subjectFilters.indexOf('mixedSubject') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'mixedSubject');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"mixedSubject\"\n      }, \"Mixed\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"basic\",\n        id: \"basic\",\n        checked: difficultyFilters.indexOf('basic') !== -1,\n        onChange: function onChange(_ref5) {\n          var target = _ref5.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"basic\"\n      }, \"Basic\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"medium\",\n        id: \"medium\",\n        checked: difficultyFilters.indexOf('medium') !== -1,\n        onChange: function onChange(_ref6) {\n          var target = _ref6.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"medium\"\n      }, \"Medium\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"advanced\",\n        id: \"advanced\",\n        checked: difficultyFilters.indexOf('advanced') !== -1,\n        onChange: function onChange(_ref7) {\n          var target = _ref7.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"advanced\"\n      }, \"Advanced\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"mixedDifficulty\",\n        id: \"mixedDifficulty\",\n        checked: difficultyFilters.indexOf('mixedDifficulty') !== -1,\n        onChange: function onChange(_ref8) {\n          var target = _ref8.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"mixedDifficulty\"\n      }, \"Mixed\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"skillBuilders\",\n        name: \"skillBuilders\",\n        checked: typeFilters.indexOf('skillBuilders') !== -1,\n        onChange: function onChange(_ref9) {\n          var target = _ref9.target;\n          return handleFilterClick('type', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"skillBuilders\"\n      }, \"Skill Builders\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"satPractice\",\n        name: \"satPractice\",\n        checked: typeFilters.indexOf('satPractice') !== -1,\n        onChange: function onChange(_ref10) {\n          var target = _ref10.target;\n          return handleFilterClick('type', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"satPractice\"\n      }, \"SAT Practice\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"mixedType\",\n        name: \"mixedType\",\n        checked: typeFilters.indexOf('mixedType') !== -1,\n        onChange: function onChange(_ref11) {\n          var target = _ref11.target;\n          return handleFilterClick('type', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"mixedType\"\n      }, \"Mixed\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"builtIn\",\n        name: \"builtIn\",\n        checked: sourceFilters.indexOf('builtIn') !== -1,\n        onChange: function onChange(_ref12) {\n          var target = _ref12.target;\n          return handleFilterClick('source', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"builtIn\"\n      }, \"Built-In\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"userCreated\",\n        name: \"userCreated\",\n        checked: sourceFilters.indexOf('userCreated') !== -1,\n        onChange: function onChange(_ref13) {\n          var target = _ref13.target;\n          return handleFilterClick('source', target.name);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"userCreated\"\n      }, \"User Created\")))), React.createElement(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        value: worksheetName,\n        className: \"input-control validate\",\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'worksheetName');\n        }\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: worksheetName.length ? 'label active' : 'label',\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(topic, sampleTopics),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'topic');\n        },\n        options: sampleTopics,\n        label: \"Topic\",\n        stateKey: \"topic\",\n        dropdownKey: \"topic\"\n      }))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 xl7\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(sort, worksheetSortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'sort');\n        },\n        options: worksheetSortOptions,\n        label: \"Sort By\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), React.createElement(\"div\", {\n        className: \"switcher-block col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"view-switcher\"\n      }, React.createElement(\"ul\", {\n        className: \"switcher center-align\"\n      }, React.createElement(\"li\", {\n        \"data-view\": \"view-full\",\n        className: currentView === 'full' ? 'active' : '',\n        onClick: function onClick() {\n          return onChangeView('full');\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Full View\")), React.createElement(\"li\", {\n        \"data-view\": \"view-list\",\n        className: currentView === 'list' ? 'active' : '',\n        onClick: function onClick() {\n          return onChangeView('list');\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"List View\"))))), React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nFilterSection.propTypes = {\n  typeFilters: PropTypes.array.isRequired,\n  sourceFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  difficultyFilters: PropTypes.array.isRequired,\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Worksheet/ListPage/components/FilterSection/index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","sampleTopics","worksheetSortOptions","FilterSection","props","setState","open","topic","onClearFilters","event","name","onSetFilteredTopicState","onUnsetFilteredTopicState","onSetSort","value","target","updatedState","state","$merge","onSetFilteredState","onUnsetFilteredState","worksheetName","transformedName","replace","toLowerCase","sort","currentView","onChangeView","handleFilterClick","subjectFilters","difficultyFilters","typeFilters","sourceFilters","display","indexOf","handleFilterChange","submitNameFilter","length","onToggleShowFilters","Component","propTypes","array","isRequired","string","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: '',\n      sort: {},\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  onClearFilters = () => this.setState({ topic: '' }, this.props.onClearFilters)\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredTopicState, onUnsetFilteredTopicState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'topic') {\n      if (event === '') {\n        return onUnsetFilteredTopicState();\n      }\n      return onSetFilteredTopicState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { worksheetName } = this.state;\n    if (worksheetName === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  render() {\n    const { open, worksheetName, topic, sort } = this.state;\n    const { currentView, onChangeView, handleFilterClick, subjectFilters, difficultyFilters, typeFilters, sourceFilters } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"reading\"\n                      id=\"reading\"\n                      checked={subjectFilters.indexOf('reading') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"writing\"\n                      id=\"writing\"\n                      checked={subjectFilters.indexOf('writing') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"math\"\n                      id=\"math\"\n                      checked={subjectFilters.indexOf('math') !== -1}\n                      onChange={({ target }) => handleFilterClick('subject', target.name)}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"mixedSubject\"\n                      id=\"mixedSubject\"\n                      checked={subjectFilters.indexOf('mixedSubject') !== -1}\n                      onChange={() => handleFilterClick('subject', 'mixedSubject')}\n                    />\n                    <label htmlFor=\"mixedSubject\">Mixed</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"basic\"\n                      id=\"basic\"\n                      checked={difficultyFilters.indexOf('basic') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"basic\">Basic</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"medium\"\n                      id=\"medium\"\n                      checked={difficultyFilters.indexOf('medium') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"medium\">Medium</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"advanced\"\n                      id=\"advanced\"\n                      checked={difficultyFilters.indexOf('advanced') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"advanced\">Advanced</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      name=\"mixedDifficulty\"\n                      id=\"mixedDifficulty\"\n                      checked={difficultyFilters.indexOf('mixedDifficulty') !== -1}\n                      onChange={({ target }) => handleFilterClick('difficulty', target.name)}\n                    />\n                    <label htmlFor=\"mixedDifficulty\">Mixed</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"skillBuilders\"\n                      name=\"skillBuilders\"\n                      checked={typeFilters.indexOf('skillBuilders') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"skillBuilders\">Skill Builders</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"satPractice\"\n                      name=\"satPractice\"\n                      checked={typeFilters.indexOf('satPractice') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"satPractice\">SAT Practice</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"mixedType\"\n                      name=\"mixedType\"\n                      checked={typeFilters.indexOf('mixedType') !== -1}\n                      onChange={({ target }) => handleFilterClick('type', target.name)}\n                    />\n                    <label htmlFor=\"mixedType\">Mixed</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"builtIn\"\n                      name=\"builtIn\"\n                      checked={sourceFilters.indexOf('builtIn') !== -1}\n                      onChange={({ target }) => handleFilterClick('source', target.name)}\n                    />\n                    <label htmlFor=\"builtIn\">Built-In</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"userCreated\"\n                      name=\"userCreated\"\n                      checked={sourceFilters.indexOf('userCreated') !== -1}\n                      onChange={({ target }) => handleFilterClick('source', target.name)}\n                    />\n                    <label htmlFor=\"userCreated\">User Created</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      value={worksheetName}\n                      className=\"input-control validate\"\n                      onChange={(event) => this.handleFilterChange(event, 'worksheetName')}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    >\n                      <i className=\"icon-search\"></i>\n                    </button>\n                    <label className={worksheetName.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                      value={getValueFromState(topic, sampleTopics)}\n                      onChange={(event) => this.handleFilterChange(event, 'topic')}\n                      options={sampleTopics}\n                      label=\"Topic\"\n                      stateKey=\"topic\"\n                      dropdownKey=\"topic\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, worksheetSortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={worksheetSortOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li\n                      data-view=\"view-full\"\n                      className={currentView === 'full' ? 'active' : ''}\n                      onClick={() => onChangeView('full')}\n                    >\n                      <a href=\"#\">Full View</a>\n                    </li>\n                    <li\n                      data-view=\"view-list\"\n                      className={currentView === 'list' ? 'active' : ''}\n                      onClick={() => onChangeView('list')}\n                    >\n                      <a href=\"#\">List View</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  typeFilters: PropTypes.array.isRequired,\n  sourceFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  difficultyFilters: PropTypes.array.isRequired,\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}