{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2'; // import { data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nvar _data = function data(percentage) {\n  return {\n    datasets: [{\n      data: [percentage, 100 - percentage],\n      backgroundColor: ['#00bbf7', '#eaeaea']\n    }]\n  };\n};\n\nexport { _data as data };\n\nvar TestCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestCard, _React$Component);\n\n  function TestCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TestCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TestCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapTestSubjects\", function () {\n      var _this$props2 = _this.props,\n          test = _this$props2.test,\n          futureTest = _this$props2.futureTest;\n      var subjects = test.subjects;\n      return subjects.map(function (subject, index) {\n        return React.createElement(\"div\", {\n          className: \"chart-block chart-block-test\",\n          key: index\n        }, React.createElement(\"span\", {\n          className: \"value-max\"\n        }, subject.targetScore), React.createElement(\"div\", {\n          className: \"js-donut-chart\",\n          \"data-stroke-width\": \"15\",\n          \"data-source\": \"./inc/score-data-test-reading.json\"\n        }), React.createElement(\"div\", {\n          className: \"chart-text\"\n        }, subject.subject === 'Reading & Writing' && !futureTest ? React.createElement(\"span\", {\n          className: \"title\"\n        }, \"Reading \", React.createElement(\"br\", null), \" & Writing\") : React.createElement(\"span\", {\n          className: \"title\"\n        }, subject.subject), React.createElement(\"span\", {\n          className: \"value\"\n        }, subject.currentScore), React.createElement(\"span\", {\n          className: \"description\"\n        }, \"+\", subject.totalGain)));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TestCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          test = _this$props3.test,\n          _this$props3$futureTe = _this$props3.futureTest,\n          futureTest = _this$props3$futureTe === void 0 ? false : _this$props3$futureTe,\n          dropdownIndex = _this$props3.dropdownIndex,\n          index = _this$props3.index,\n          dropdownIsOpen = _this$props3.dropdownIsOpen,\n          onEnterAnswers = _this$props3.onEnterAnswers,\n          onEditTest = _this$props3.onEditTest,\n          onDownloadReport = _this$props3.onDownloadReport,\n          onDeleteTest = _this$props3.onDeleteTest;\n      var title = test.title,\n          _test$version = test.version,\n          version = _test$version === void 0 ? '' : _test$version,\n          testDate = test.testDate,\n          weekNumber = test.weekNumber,\n          initialScore = test.initialScore,\n          targetScore = test.targetScore,\n          currentScore = test.currentScore,\n          totalGain = test.totalGain;\n      return React.createElement(\"div\", {\n        className: \"col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: \"card-main-col\"\n      }, React.createElement(\"div\", {\n        className: futureTest ? 'card-test card-main card-disabled card' : 'card-test card-main card'\n      }, React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"col\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        className: \"dropdown-trigger btn\",\n        onClick: this.handleDropdownClick\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content\",\n        style: {\n          display: 'block',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onEnterAnswers\n      }, \"Enter Answers\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onEditTest\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onDownloadReport,\n        className: \"disabled\"\n      }, \"Download Report\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onDeleteTest,\n        className: \"red-text text-darken-3\"\n      }, \"Delete\"))) : null)))), React.createElement(\"div\", {\n        className: \"card-test-row row d-flex mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s7\"\n      }, React.createElement(\"div\", {\n        className: \"card-title-block\"\n      }, React.createElement(\"h4\", {\n        className: \"h2\"\n      }, title), React.createElement(\"time\", {\n        className: \"date\"\n      }, testDate, \" (week \", weekNumber, \")\"), !futureTest ? React.createElement(\"p\", null, \"Version \", version) : null), React.createElement(\"div\", {\n        className: \"chart-container chart-container-test\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, React.createElement(\"span\", {\n        className: \"svg-curved-bar\"\n      }, React.createElement(Doughnut, {\n        data: function data() {\n          return _data(initialScore ? Number(initialScore / targetScore) * 100 : 0);\n        },\n        options: {\n          circumference: 1 * Math.PI,\n          rotation: 1 * Math.PI,\n          cutoutPercentage: 60,\n          tooltips: false\n        }\n      }), React.createElement(\"span\", {\n        className: \"js-diff-holder\"\n      }, React.createElement(\"span\", {\n        className: \"js-diff\"\n      }, React.createElement(\"span\", {\n        className: \"txt\",\n        style: {\n          opacity: '1',\n          bottom: '75px',\n          color: 'black',\n          fontWeight: '600',\n          fontSize: '12px'\n        }\n      }, \"+\", totalGain)))), React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: '#00bbf7'\n        }\n      }, React.createElement(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": \"1100\",\n        \"data-end-val\": \"1210\",\n        \"data-duration\": \"1\"\n      }, currentScore))), React.createElement(\"div\", {\n        className: \"chart-row\"\n      }, React.createElement(\"div\", {\n        className: \"chart-col chart-start\"\n      }, React.createElement(\"span\", {\n        className: \"amount\"\n      }, initialScore), \" \", React.createElement(\"br\", null), React.createElement(\"span\", {\n        className: \"amount-text\"\n      }, \"initial\")), React.createElement(\"div\", {\n        className: \"chart-col chart-end\"\n      }, React.createElement(\"span\", {\n        className: \"amount\"\n      }, targetScore), \" \", React.createElement(\"br\", null), React.createElement(\"span\", {\n        className: \"amount-text\"\n      }, \"target\"))))), React.createElement(\"div\", {\n        className: \"col s5 right-align\"\n      }, this.mapTestSubjects()))))));\n    }\n  }]);\n\n  return TestCard;\n}(React.Component);\n\nTestCard.propTypes = {\n  index: PropTypes.number,\n  futureTest: PropTypes.bool,\n  dropdownIndex: PropTypes.number,\n  test: PropTypes.object.isRequired,\n  onEditTest: PropTypes.func.isRequired,\n  onDeleteTest: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onEnterAnswers: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired\n};\nexport default TestCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestList/components/TestCard/index.js"],"names":["React","PropTypes","Doughnut","data","percentage","datasets","backgroundColor","TestCard","event","props","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","test","futureTest","subjects","map","subject","targetScore","currentScore","totalGain","dropdownIndex","onEnterAnswers","onEditTest","onDownloadReport","onDeleteTest","title","version","testDate","weekNumber","initialScore","handleDropdownClick","display","transformOrigin","opacity","transform","Number","circumference","Math","PI","rotation","cutoutPercentage","tooltips","bottom","color","fontWeight","fontSize","mapTestSubjects","Component","propTypes","number","bool","object","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\n// import { data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nexport const data = (percentage) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      '#00bbf7',\n      '#eaeaea',\n    ],\n  }],\n});\n\nclass TestCard extends React.Component {\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  mapTestSubjects = () => {\n    const { test, futureTest } = this.props;\n    const { subjects } = test;\n    return subjects.map((subject, index) => (\n      <div className=\"chart-block chart-block-test\" key={index}>\n        <span className=\"value-max\">{subject.targetScore}</span>\n        <div className=\"js-donut-chart\" data-stroke-width=\"15\" data-source='./inc/score-data-test-reading.json'></div>\n        <div className=\"chart-text\">\n          <Choose>\n            <When condition={subject.subject === 'Reading & Writing' && !futureTest}>\n              <span className=\"title\">Reading <br /> &amp; Writing</span>\n            </When>\n            <Otherwise>\n              <span className=\"title\">{subject.subject}</span>\n            </Otherwise>\n          </Choose>\n          <span className=\"value\">{subject.currentScore}</span>\n          <span className=\"description\">+{subject.totalGain}</span>\n        </div>\n      </div>\n    ));\n  }\n\n  render() {\n    const { test, futureTest = false, dropdownIndex, index, dropdownIsOpen, onEnterAnswers, onEditTest, onDownloadReport, onDeleteTest } = this.props;\n    const { title, version = '', testDate, weekNumber, initialScore, targetScore, currentScore, totalGain } = test;\n    return (\n      <div className=\"col s12 m8 l7 xl5\">\n        <div className=\"card-main-col\">\n          <div className={futureTest ? 'card-test card-main card-disabled card' : 'card-test card-main card'}>\n            <div className=\"card-content\">\n              <div className=\"card-panel-row row\">\n                <div className=\"col\">&nbsp;</div>\n                <div className=\"col\">\n                  <div className=\"row icons-row\">\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        data-target='dropdown01'\n                        className='dropdown-trigger btn'\n                        onClick={this.handleDropdownClick}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id='dropdown01'\n                          className='dropdown-content'\n                          style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li><a href=\"#\" onClick={onEnterAnswers}>Enter Answers</a></li>\n                          <li><a href=\"#\" onClick={onEditTest}>Edit</a></li>\n                          <li><a href=\"#\" onClick={onDownloadReport} className=\"disabled\">Download Report</a></li>\n                          <li><a href=\"#\" onClick={onDeleteTest} className=\"red-text text-darken-3\">Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-test-row row d-flex mb-0\">\n                <div className=\"col s7\">\n                  <div className=\"card-title-block\">\n                    <h4 className=\"h2\">{title}</h4>\n                    <time className=\"date\">{testDate} (week {weekNumber})</time>\n                    <If condition={!futureTest}>\n                      <p>Version {version}</p>\n                    </If>\n                  </div>\n                  <div className=\"chart-container chart-container-test\">\n                    <div className=\"chart-holder\">\n                      <span className=\"svg-curved-bar\">\n                        <Doughnut\n                          data={() => (data(initialScore ? Number(initialScore / targetScore) * 100 : 0 ))}\n                          options={{\n                            circumference: 1 * Math.PI,\n                            rotation: 1 * Math.PI,\n                            cutoutPercentage: 60,\n                            tooltips: false,\n                          }}\n                        />\n                        <span className=\"js-diff-holder\">\n                          <span className=\"js-diff\">\n                            <span className=\"txt\" style={{ opacity: '1', bottom: '75px', color: 'black', fontWeight: '600', fontSize: '12px' }}>+{totalGain}</span>\n                          </span>\n                        </span>\n                      </span>\n                      <span className=\"chart-value\" style={{ backgroundColor: '#00bbf7' }}><span data-count-up data-start-val=\"1100\" data-end-val=\"1210\" data-duration=\"1\">{currentScore}</span></span>\n                    </div>\n                    <div className=\"chart-row\">\n                      <div className=\"chart-col chart-start\">\n                        <span className=\"amount\">{initialScore}</span> <br />\n                        <span className=\"amount-text\">initial</span>\n                      </div>\n                      <div className=\"chart-col chart-end\">\n                        <span className=\"amount\">{targetScore}</span> <br />\n                        <span className=\"amount-text\">target</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s5 right-align\">\n                  {this.mapTestSubjects()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTestCard.propTypes = {\n  index: PropTypes.number,\n  futureTest: PropTypes.bool,\n  dropdownIndex: PropTypes.number,\n  test: PropTypes.object.isRequired,\n  onEditTest: PropTypes.func.isRequired,\n  onDeleteTest: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onEnterAnswers: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n};\n\nexport default TestCard;"]},"metadata":{},"sourceType":"module"}