{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport FilterSection from '../components/Dashboard/components/FilterSection';\nimport CalendarHeader from '../components/Dashboard/components/CalendarHeader';\nimport CalendarRow from '../components/Dashboard/components/CalendarRow';\nimport AssignSessionModal from '../components/Dashboard/components/Modals/AssignSessionModal';\nimport AssignLessonModal from '../components/Dashboard/components/Modals/AssignLessonModal';\nimport AssignWorksheetModal from '../components/Dashboard/components/Modals/AssignWorksheetModal';\nimport AssignTestSectionModal from '../components/Dashboard/components/Modals/AssignTestSectionModal';\nimport AssignSimulatedSatModal from '../components/Dashboard/components/Modals/AssignSimulatedSatModal';\nimport AssignTargetTestModal from '../components/Dashboard/components/Modals/AssignTargetTestModal';\nimport { currentYear, getFirstDay, getDaysInActiveMonth, getDaysInPreviousMonth, getDayDate, getNextMonthAsCurrentMonth } from '../components/Dashboard/utils/dateAndCalendarUtils';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetActiveMonth\", function (activeMonthIndex) {\n      // daysInPreviousMonth is used to handle cases where the calendar for the month starts with dates from the preceding month\n      // firstDay indicates the day the first day of the month falls on in a zero-based index manner, meaning Sunday is 0, Monday is 1, etc\n      var daysInPreviousMonth = getDaysInPreviousMonth(activeMonthIndex);\n      var daysInActiveMonth = getDaysInActiveMonth(activeMonthIndex);\n      var firstDay = getFirstDay(activeMonthIndex);\n      var rows = []; // We increment calDate and change inMonth in the case where dates from the next month appear in row 1 or row 6\n      // Since activeMonthIndex is zero-based, currentMonth adds 1 so the cells are accurate as actual calendar dates\n      // getNextMonthAsCurrentMonth is used to derive the current month to ensure it matches the format of incoming dates - 01/15/19 vs 1/15/19, otherwise new events wouldn't find the date to be assigned to\n\n      var inMonth = true;\n      var calDate = 1;\n      var currentMonth = getNextMonthAsCurrentMonth(activeMonthIndex);\n\n      if (firstDay !== 0) {\n        currentMonth = currentMonth > 9 ? currentMonth -= 1 : \"0\".concat(currentMonth - 1);\n        calDate = daysInPreviousMonth - firstDay + 1;\n        inMonth = false;\n      } // First for loop handles the 6 calendar rows, second for loop handles the 7 days of the week\n\n\n      for (var i = 0; i < 6; i++) {\n        var rowArr = [];\n\n        for (var j = 0; j < 7; j++) {\n          var date = \"\".concat(currentMonth, \"/\").concat(calDate > 9 ? calDate : \"0\".concat(calDate), \"/\").concat(currentYear);\n          var dayDate = getDayDate(date);\n          var activeDateKey = \"row-\".concat(i + 1, \"-column-\").concat(j + 1); // This if statement handles the easiest calendar month scenario, where the 1st of the month falls on a Sunday\n\n          if (firstDay === 0) {\n            var dateCell = {\n              date: date,\n              dayDate: dayDate,\n              calDate: calDate,\n              activeDateKey: activeDateKey,\n              inMonth: inMonth,\n              sessions: [],\n              lessons: [],\n              worksheets: [],\n              testSections: [],\n              simulatedSat: []\n            }; // This if statement handles the case where the date spills over into the next month\n\n            if (calDate === daysInActiveMonth) {\n              calDate = 1;\n              currentMonth = activeMonthIndex > 9 ? activeMonthIndex + 2 : \"0\".concat(activeMonthIndex + 2);\n              inMonth = false;\n            } else {\n              calDate += 1;\n            }\n\n            rowArr.push(dateCell);\n          } // This else statement handles the more likely scenario, where the first row contains several days from the preceding month\n          else {\n              var _dateCell = {\n                date: date,\n                dayDate: dayDate,\n                calDate: calDate,\n                activeDateKey: activeDateKey,\n                inMonth: inMonth,\n                sessions: [],\n                lessons: [],\n                worksheets: [],\n                testSections: [],\n                simulatedSat: []\n              }; // This if statement handles the case where the date spills over into the next month\n\n              if (inMonth === false && calDate === daysInPreviousMonth) {\n                calDate = 1;\n                currentMonth = getNextMonthAsCurrentMonth(activeMonthIndex);\n                inMonth = true;\n              } else if (inMonth === true && calDate === daysInActiveMonth) {\n                currentMonth = activeMonthIndex > 9 ? activeMonthIndex + 2 : \"0\".concat(activeMonthIndex + 2);\n                calDate = 1;\n                inMonth = false;\n              } else {\n                calDate += 1;\n              }\n\n              rowArr.push(_dateCell);\n            }\n        }\n\n        ;\n        rows.push.apply(rows, rowArr);\n      }\n\n      ;\n\n      _this.setState({\n        activeMonth: activeMonthIndex,\n        rows: rows\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetActiveDate\", function (incomingDate) {\n      _this.setState({\n        activeDate: incomingDate,\n        activeColumn: incomingDate[13]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignSession\", function (session) {\n      var rows = _this.state.rows;\n      var updatedDate = rows.filter(function (row) {\n        return row.date === session.date;\n      })[0];\n      var updatedDateIndex = rows.indexOf(updatedDate);\n      updatedDate.sessions.push(session);\n      var updatedRows = update(rows, {\n        $splice: [[updatedDateIndex, 1, updatedDate]]\n      });\n\n      _this.setState({\n        rows: updatedRows\n      });\n\n      _this.onToggleAssignSessionModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignLessons\", function (lessons, date) {\n      var _updatedDate$lessons;\n\n      var rows = _this.state.rows;\n      var updatedDate = rows.filter(function (row) {\n        return row.date === date;\n      })[0];\n      var updatedDateIndex = rows.indexOf(updatedDate);\n\n      (_updatedDate$lessons = updatedDate.lessons).push.apply(_updatedDate$lessons, _toConsumableArray(lessons));\n\n      var updatedRows = update(rows, {\n        $splice: [[updatedDateIndex, 1, updatedDate]]\n      });\n\n      _this.setState({\n        rows: updatedRows\n      });\n\n      _this.onToggleAssignLessonsModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignWorksheets\", function (worksheets, date) {\n      var _updatedDate$workshee;\n\n      var rows = _this.state.rows;\n      var updatedDate = rows.filter(function (row) {\n        return row.date === date;\n      })[0];\n      var updatedDateIndex = rows.indexOf(updatedDate);\n\n      (_updatedDate$workshee = updatedDate.worksheets).push.apply(_updatedDate$workshee, _toConsumableArray(worksheets));\n\n      var updatedRows = update(rows, {\n        $splice: [[updatedDateIndex, 1, updatedDate]]\n      });\n\n      _this.setState({\n        rows: updatedRows\n      });\n\n      _this.onToggleAssignWorksheetsModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignTestSection\", function (testSection) {\n      var rows = _this.state.rows;\n      var updatedDate = rows.filter(function (row) {\n        return row.date === testSection.assignDate;\n      })[0];\n      var updatedDateIndex = rows.indexOf(updatedDate);\n      updatedDate.testSections.push(testSection);\n      var updatedRows = update(rows, {\n        $splice: [[updatedDateIndex, 1, updatedDate]]\n      });\n\n      _this.setState({\n        rows: updatedRows\n      });\n\n      _this.onToggleAssignTestSectionModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignSimulatedSat\", function (simulatedSat) {\n      var rows = _this.state.rows;\n      var updatedDate = rows.filter(function (row) {\n        return row.date === simulatedSat.assignDate;\n      })[0];\n      var updatedDateIndex = rows.indexOf(updatedDate);\n      updatedDate.simulatedSat.push(simulatedSat);\n      var updatedRows = update(rows, {\n        $splice: [[updatedDateIndex, 1, updatedDate]]\n      });\n\n      _this.setState({\n        rows: updatedRows\n      });\n\n      _this.onToggleAssignSimulatedSatModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignTargetTest\", function (targetTestDate) {\n      console.warn('pending decision of what test date assign ui looks like', targetTestDate);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignSessionModal\", function () {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var modalDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.setState(function (_ref) {\n        var assignSessionModalOpen = _ref.assignSessionModalOpen;\n        return {\n          assignSessionModalOpen: !assignSessionModalOpen,\n          modalDate: modalDate,\n          assignDropdownIsOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignLessonsModal\", function () {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var modalDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.setState(function (_ref2) {\n        var assignLessonsModalOpen = _ref2.assignLessonsModalOpen;\n        return {\n          assignLessonsModalOpen: !assignLessonsModalOpen,\n          modalDate: modalDate,\n          assignDropdownIsOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignWorksheetsModal\", function () {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var modalDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.setState(function (_ref3) {\n        var assignWorksheetsModalOpen = _ref3.assignWorksheetsModalOpen;\n        return {\n          assignWorksheetsModalOpen: !assignWorksheetsModalOpen,\n          modalDate: modalDate,\n          assignDropdownIsOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignTestSectionModal\", function () {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var modalDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.setState(function (_ref4) {\n        var assignTestSectionModalOpen = _ref4.assignTestSectionModalOpen;\n        return {\n          assignTestSectionModalOpen: !assignTestSectionModalOpen,\n          modalDate: modalDate,\n          assignDropdownIsOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignSimulatedSatModal\", function () {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var modalDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.setState(function (_ref5) {\n        var assignSimulatedSatModalOpen = _ref5.assignSimulatedSatModalOpen;\n        return {\n          assignSimulatedSatModalOpen: !assignSimulatedSatModalOpen,\n          modalDate: modalDate,\n          assignDropdownIsOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignTargetTestModal\", function () {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      _this.setState(function (_ref6) {\n        var assignTargetTestDateModalOpen = _ref6.assignTargetTestDateModalOpen;\n        return {\n          assignTargetTestDateModalOpen: !assignTargetTestDateModalOpen,\n          assignDropdownIsOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAddDropdown\", function () {\n      return _this.setState(function (_ref7) {\n        var addDropdownOpen = _ref7.addDropdownOpen;\n        return {\n          addDropdownOpen: !addDropdownOpen,\n          deleteDropdownOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleDeleteDropdown\", function () {\n      return _this.setState(function (_ref8) {\n        var deleteDropdownOpen = _ref8.deleteDropdownOpen;\n        return {\n          deleteDropdownOpen: !deleteDropdownOpen,\n          addDropdownOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleAssignDropdown\", function () {\n      return _this.setState(function (_ref9) {\n        var assignDropdownIsOpen = _ref9.assignDropdownIsOpen;\n        return {\n          assignDropdownIsOpen: !assignDropdownIsOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleHandleFilteredItemsDropdown\", function () {\n      return _this.setState(function (_ref10) {\n        var onToggleHandleFilteredItemsDropdown = _ref10.onToggleHandleFilteredItemsDropdown;\n        return {\n          onToggleHandleFilteredItemsDropdown: !onToggleHandleFilteredItemsDropdown\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        filters: [],\n        eventFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filter) {\n      var eventFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      // TODO: Only the following filters are active: sessions, lessons, worksheets, test sections, simulated sats, target tests\n      // The other filters dont seem to have corresponding data in this page\n      var _this$state = _this.state,\n          allFilters = _this$state.filters,\n          eventFilters = _this$state.eventFilters;\n      var filters;\n      var filterName;\n\n      if (eventFilter) {\n        filters = eventFilters;\n        filterName = 'eventFilters';\n      } else {\n        filters = allFilters;\n        filterName = 'filters';\n      }\n\n      var updatedFilters;\n\n      if (filters.indexOf(filter) === -1) {\n        updatedFilters = update(filters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = filters.indexOf(filter);\n        updatedFilters = update(filters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, filterName, updatedFilters));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapRows\", function () {\n      var _this$state2 = _this.state,\n          rows = _this$state2.rows,\n          filters = _this$state2.filters,\n          eventFilters = _this$state2.eventFilters,\n          activeDate = _this$state2.activeDate,\n          activeColumn = _this$state2.activeColumn,\n          addDropdownOpen = _this$state2.addDropdownOpen,\n          deleteDropdownOpen = _this$state2.deleteDropdownOpen;\n      var startIndex = -7;\n      var endIndex = 0;\n      var rowArray = [];\n\n      for (var i = 0; i < 6; i++) {\n        startIndex += 7;\n        endIndex += 7;\n        rowArray.push(React.createElement(CalendarRow, {\n          key: i,\n          rows: rows.slice(startIndex, endIndex),\n          filters: filters,\n          eventFilters: eventFilters,\n          activeDate: activeDate,\n          activeColumn: activeColumn,\n          addDropdownOpen: addDropdownOpen,\n          deleteDropdownOpen: deleteDropdownOpen,\n          onSetActiveDate: _this.onSetActiveDate,\n          onToggleAddDropdown: _this.onToggleAddDropdown,\n          onToggleDeleteDropdown: _this.onToggleDeleteDropdown,\n          onToggleAssignLessonsModal: _this.onToggleAssignLessonsModal,\n          onToggleAssignSessionModal: _this.onToggleAssignSessionModal,\n          onToggleAssignWorksheetsModal: _this.onToggleAssignWorksheetsModal,\n          onToggleAssignTestSectionModal: _this.onToggleAssignTestSectionModal,\n          onToggleAssignSimulatedSatModal: _this.onToggleAssignSimulatedSatModal\n        }));\n      }\n\n      return rowArray;\n    });\n\n    _this.state = {\n      activeMonth: '',\n      filters: [],\n      eventFilters: [],\n      rows: [],\n      activeDate: null,\n      activeColumn: null,\n      addDropdownOpen: false,\n      deleteDropdownOpen: false,\n      assignDropdownIsOpen: false,\n      onToggleHandleFilteredItemsDropdown: false,\n      assignSessionModalOpen: false,\n      assignLessonsModalOpen: false,\n      assignWorksheetsModalOpen: false,\n      assignTestSectionModalOpen: false,\n      assignSimulatedSatModalOpen: false,\n      assignTargetTestDateModalOpen: false,\n      modalDate: null\n    };\n    return _this;\n  } // This is called onMount in CalendarHeader component to set the current month calendar rows, and every time the month changes afterward\n  // IMPORTANT: activeMonthIndex is zero-based, meaning January is 0, February is 1, etc.\n\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          assignSessionModalOpen = _this$state3.assignSessionModalOpen,\n          assignLessonsModalOpen = _this$state3.assignLessonsModalOpen,\n          assignWorksheetsModalOpen = _this$state3.assignWorksheetsModalOpen,\n          activeMonth = _this$state3.activeMonth,\n          assignTestSectionModalOpen = _this$state3.assignTestSectionModalOpen,\n          assignSimulatedSatModalOpen = _this$state3.assignSimulatedSatModalOpen,\n          assignTargetTestDateModalOpen = _this$state3.assignTargetTestDateModalOpen,\n          modalDate = _this$state3.modalDate,\n          assignDropdownIsOpen = _this$state3.assignDropdownIsOpen,\n          onToggleHandleFilteredItemsDropdown = _this$state3.onToggleHandleFilteredItemsDropdown,\n          filters = _this$state3.filters,\n          eventFilters = _this$state3.eventFilters;\n      return React.createElement(React.Fragment, null, React.createElement(AssignSessionModal, {\n        modalDate: modalDate,\n        open: assignSessionModalOpen,\n        onClose: this.onToggleAssignSessionModal,\n        onAssignSession: this.onAssignSession\n      }), React.createElement(AssignLessonModal, {\n        modalDate: modalDate,\n        open: assignLessonsModalOpen,\n        onClose: this.onToggleAssignLessonsModal,\n        onAssignLessons: this.onAssignLessons\n      }), React.createElement(AssignWorksheetModal, {\n        modalDate: modalDate,\n        open: assignWorksheetsModalOpen,\n        onClose: this.onToggleAssignWorksheetsModal,\n        onAssignWorksheets: this.onAssignWorksheets\n      }), React.createElement(AssignTestSectionModal, {\n        modalDate: modalDate,\n        open: assignTestSectionModalOpen,\n        onClose: this.onToggleAssignTestSectionModal,\n        onAssignTestSection: this.onAssignTestSection\n      }), React.createElement(AssignSimulatedSatModal, {\n        modalDate: modalDate,\n        open: assignSimulatedSatModalOpen,\n        onClose: this.onToggleAssignSimulatedSatModal,\n        onAssignSimulatedSat: this.onAssignSimulatedSat\n      }), React.createElement(AssignTargetTestModal, {\n        open: assignTargetTestDateModalOpen,\n        onClose: this.onToggleAssignTargetTestModal,\n        onAssignTargetTest: this.onAssignTargetTest\n      }), React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-3\"\n      }, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"nav\", {\n        className: \"breadcrumb-holder\"\n      }, React.createElement(\"div\", {\n        className: \"nav-wrapper \"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"breadcrumb\"\n      }, \"< Classes\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-members\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"Some Class in June\"))), React.createElement(\"nav\", {\n        className: \"nav-additional\"\n      }, React.createElement(\"ul\", {\n        className: \"menu-additional\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Summary\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        className: \"active\",\n        href: \"#\"\n      }, \"Calendar\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Lessons\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Tests\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Account\")))), React.createElement(\"div\", {\n        className: \"activate-block\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n      }, React.createElement(\"b\", {\n        className: \"btn-text visible-lg\"\n      }, \"Account Activated\"), \" \", React.createElement(\"i\", {\n        className: \"icon-unlock\"\n      })), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\",\n        \"data-target\": \"dropdown_activate\"\n      }, React.createElement(\"b\", {\n        className: \"btn-text visible-lg\"\n      }, \"Activate Account\"), \" \", React.createElement(\"i\", {\n        className: \"icon-key\"\n      })), React.createElement(\"div\", {\n        id: \"dropdown_activate\",\n        className: \"dropdown-content\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"title-block\"\n      }, React.createElement(\"div\", {\n        className: \"h3\"\n      }, \"Ready to begin your course?\"), React.createElement(\"div\", {\n        className: \"subtitle\"\n      }, \"Please enter a valid license code below.\")), React.createElement(\"form\", {\n        action: \"#\",\n        className: \"activate-form\"\n      }, React.createElement(\"fieldset\", null, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: \"4BF86266-A2A4-C9FB-387D07ABB5471305\",\n        id: \"license_code\"\n      }), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"license_code\"\n      }, \"License Code\")), React.createElement(\"div\", {\n        className: \"btn-holder center-align\"\n      }, React.createElement(\"button\", {\n        className: \"btn btn-blue\",\n        type: \"submit\"\n      }, \"Activate \")))), React.createElement(\"div\", {\n        className: \"text-block center-align\"\n      }, React.createElement(\"p\", null, \"If you need license codes, you can get them here: \", React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-light btn-small btn-blue\"\n      }, \"Purchase Licenses\"))), React.createElement(\"div\", {\n        className: \"text-block\"\n      }, React.createElement(\"p\", null, \"*Note: \"), React.createElement(\"p\", null, \"We o\\uFB00er discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.\")))))), React.createElement(FilterSection, {\n        filters: filters,\n        eventFilters: eventFilters,\n        onClearFilters: this.onClearFilters,\n        handleFilterClick: this.handleFilterClick\n      }), React.createElement(\"div\", {\n        className: \"calendar-section view-month\"\n      }, React.createElement(\"div\", {\n        className: \"calendar-slider\"\n      }, React.createElement(CalendarHeader, {\n        activeMonth: Number(activeMonth),\n        onSetActiveMonth: this.onSetActiveMonth\n      }), React.createElement(\"div\", {\n        id: \"calendar\",\n        className: \"main-slick-calendar cal-context\",\n        style: {\n          width: '100%'\n        }\n      }, React.createElement(\"div\", {\n        className: \"slide\"\n      }, React.createElement(\"table\", {\n        className: \"calendar-table cal-month-box\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", {\n        className: \"month-title\"\n      }, React.createElement(\"td\", {\n        colSpan: \"7\"\n      }, React.createElement(\"div\", {\n        className: \"cal-month-day\"\n      }, \"January\"))), React.createElement(\"tr\", {\n        className: \"calendar-head-row\"\n      }, React.createElement(\"th\", null, \"Su\"), React.createElement(\"th\", null, \"M\"), React.createElement(\"th\", null, \"Tu\"), React.createElement(\"th\", null, \"W\"), React.createElement(\"th\", null, \"Th\"), React.createElement(\"th\", null, \"F\"), React.createElement(\"th\", null, \"Sa\"))), React.createElement(\"tbody\", null, this.mapRows()))), React.createElement(\"div\", {\n        className: \"slide\"\n      }), React.createElement(\"div\", {\n        className: \"slide\"\n      })), React.createElement(\"div\", {\n        className: \"add-btn-block\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown_assign\",\n        onClick: this.onToggleAssignDropdown,\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\"\n      }, \"Assign...\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign\",\n        className: \"dropdown-content\",\n        style: {\n          display: assignDropdownIsOpen ? 'block' : 'none',\n          opacity: assignDropdownIsOpen ? '100' : '0'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onToggleAssignSessionModal,\n        className: \"modal-trigger\"\n      }, \"Session\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onToggleAssignLessonsModal,\n        className: \"modal-trigger\"\n      }, \"Lesson\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onToggleAssignWorksheetsModal,\n        className: \"modal-trigger\"\n      }, \"Worksheet\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onToggleAssignTestSectionModal,\n        className: \"modal-trigger\"\n      }, \"Test Section\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onToggleAssignSimulatedSatModal,\n        className: \"modal-trigger\"\n      }, \"Simulated SAT\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onToggleAssignTargetTestModal,\n        className: \"modal-trigger\"\n      }, \"Target Test\")), React.createElement(\"li\", {\n        className: \"divider\",\n        tabIndex: \"-1\"\n      }), React.createElement(\"li\", {\n        className: \"dropdown-footer\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-trigger\"\n      }, \"Apply Course Template\")))), React.createElement(\"div\", {\n        className: \"add-btn-block btn-block-right\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown_other\",\n        onClick: this.onToggleHandleFilteredItemsDropdown,\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn-circle\"\n      }, React.createElement(\"i\", {\n        className: \"icon-dots\"\n      })), React.createElement(\"ul\", {\n        id: \"dropdown_other\",\n        className: \"dropdown-content\",\n        style: {\n          display: onToggleHandleFilteredItemsDropdown ? 'block' : 'none',\n          opacity: onToggleHandleFilteredItemsDropdown ? '100' : '0'\n        }\n      }, React.createElement(\"li\", {\n        className: \"dropdown-header\"\n      }, React.createElement(\"b\", null, \"With Filtered Items... \"), React.createElement(\"b\", {\n        className: \"small\"\n      }, \"(items currently visible on calendar)\")), React.createElement(\"li\", {\n        className: \"divider\"\n      }), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-trigger\"\n      }, \"Save Course as Template\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Reset All\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Delete All\")))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;\n/* <!-- Modal structure view Lesson --> */\n// <div id=\"modal_view_lesson\" className=\"modal modal-custom\"></div>\n\n/* <!-- Modal structure view Session --> */\n// <div id=\"modal_view_session\" className=\"modal modal-custom\"></div>\n\n/* <!-- Modal structure view Practice Test --> */\n// <div id=\"modal_view_practice_test\" className=\"modal modal-custom\"></div>\n\n/* <!-- Modal structure view Worksheet --> */\n// <div id=\"modal_view_worksheet\" className=\"modal modal-custom\"></div>","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\pages\\dashboard.js"],"names":["React","Component","update","FilterSection","CalendarHeader","CalendarRow","AssignSessionModal","AssignLessonModal","AssignWorksheetModal","AssignTestSectionModal","AssignSimulatedSatModal","AssignTargetTestModal","currentYear","getFirstDay","getDaysInActiveMonth","getDaysInPreviousMonth","getDayDate","getNextMonthAsCurrentMonth","Dashboard","props","activeMonthIndex","daysInPreviousMonth","daysInActiveMonth","firstDay","rows","inMonth","calDate","currentMonth","i","rowArr","j","date","dayDate","activeDateKey","dateCell","sessions","lessons","worksheets","testSections","simulatedSat","push","setState","activeMonth","incomingDate","activeDate","activeColumn","session","state","updatedDate","filter","row","updatedDateIndex","indexOf","updatedRows","$splice","onToggleAssignSessionModal","onToggleAssignLessonsModal","onToggleAssignWorksheetsModal","testSection","assignDate","onToggleAssignTestSectionModal","onToggleAssignSimulatedSatModal","targetTestDate","console","warn","event","modalDate","preventDefault","assignSessionModalOpen","assignDropdownIsOpen","assignLessonsModalOpen","assignWorksheetsModalOpen","assignTestSectionModalOpen","assignSimulatedSatModalOpen","assignTargetTestDateModalOpen","addDropdownOpen","deleteDropdownOpen","onToggleHandleFilteredItemsDropdown","filters","eventFilters","eventFilter","allFilters","filterName","updatedFilters","$push","filterIndex","startIndex","endIndex","rowArray","slice","onSetActiveDate","onToggleAddDropdown","onToggleDeleteDropdown","onAssignSession","onAssignLessons","onAssignWorksheets","onAssignTestSection","onAssignSimulatedSat","onToggleAssignTargetTestModal","onAssignTargetTest","onClearFilters","handleFilterClick","Number","onSetActiveMonth","width","mapRows","onToggleAssignDropdown","display","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\n\nimport FilterSection from '../components/Dashboard/components/FilterSection';\nimport CalendarHeader from '../components/Dashboard/components/CalendarHeader';\nimport CalendarRow from '../components/Dashboard/components/CalendarRow';\n\nimport AssignSessionModal from '../components/Dashboard/components/Modals/AssignSessionModal';\nimport AssignLessonModal from '../components/Dashboard/components/Modals/AssignLessonModal';\nimport AssignWorksheetModal from '../components/Dashboard/components/Modals/AssignWorksheetModal';\nimport AssignTestSectionModal from '../components/Dashboard/components/Modals/AssignTestSectionModal';\nimport AssignSimulatedSatModal from '../components/Dashboard/components/Modals/AssignSimulatedSatModal';\nimport AssignTargetTestModal from '../components/Dashboard/components/Modals/AssignTargetTestModal';\n\nimport { currentYear, getFirstDay, getDaysInActiveMonth, getDaysInPreviousMonth, getDayDate, getNextMonthAsCurrentMonth } from '../components/Dashboard/utils/dateAndCalendarUtils';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMonth: '',\n      filters: [],\n      eventFilters: [],\n      rows: [],\n      activeDate: null,\n      activeColumn: null,\n      addDropdownOpen: false,\n      deleteDropdownOpen: false,\n      assignDropdownIsOpen: false,\n      onToggleHandleFilteredItemsDropdown: false,\n      assignSessionModalOpen: false,\n      assignLessonsModalOpen: false,\n      assignWorksheetsModalOpen: false,\n      assignTestSectionModalOpen: false,\n      assignSimulatedSatModalOpen: false,\n      assignTargetTestDateModalOpen: false,\n      modalDate: null,\n    };\n  }\n\n  // This is called onMount in CalendarHeader component to set the current month calendar rows, and every time the month changes afterward\n  // IMPORTANT: activeMonthIndex is zero-based, meaning January is 0, February is 1, etc.\n  onSetActiveMonth = (activeMonthIndex) => {\n    // daysInPreviousMonth is used to handle cases where the calendar for the month starts with dates from the preceding month\n    // firstDay indicates the day the first day of the month falls on in a zero-based index manner, meaning Sunday is 0, Monday is 1, etc\n    const daysInPreviousMonth = getDaysInPreviousMonth(activeMonthIndex);\n    const daysInActiveMonth = getDaysInActiveMonth(activeMonthIndex);\n    const firstDay = getFirstDay(activeMonthIndex);\n    const rows = [];\n\n    // We increment calDate and change inMonth in the case where dates from the next month appear in row 1 or row 6\n    // Since activeMonthIndex is zero-based, currentMonth adds 1 so the cells are accurate as actual calendar dates\n    // getNextMonthAsCurrentMonth is used to derive the current month to ensure it matches the format of incoming dates - 01/15/19 vs 1/15/19, otherwise new events wouldn't find the date to be assigned to\n    let inMonth = true;\n    let calDate = 1;\n    let currentMonth = getNextMonthAsCurrentMonth(activeMonthIndex);\n    if (firstDay !== 0) {\n      currentMonth = currentMonth > 9 ? currentMonth -= 1 : `0${currentMonth - 1}`;\n      calDate = daysInPreviousMonth - firstDay + 1;\n      inMonth = false;\n    }\n    // First for loop handles the 6 calendar rows, second for loop handles the 7 days of the week\n    for (let i = 0; i < 6; i++) {\n      const rowArr = [];\n      for (let j = 0; j < 7; j++) {\n        const date = `${currentMonth}/${calDate > 9 ? calDate : `0${calDate}`}/${currentYear}`;\n        const dayDate = getDayDate(date);\n        const activeDateKey = `row-${i + 1}-column-${j + 1}`;\n        // This if statement handles the easiest calendar month scenario, where the 1st of the month falls on a Sunday\n        if (firstDay === 0) {\n          const dateCell = {\n            date,\n            dayDate,\n            calDate,\n            activeDateKey,\n            inMonth,\n            sessions: [],\n            lessons: [],\n            worksheets: [],\n            testSections: [],\n            simulatedSat: [],\n          };\n          // This if statement handles the case where the date spills over into the next month\n          if (calDate === daysInActiveMonth) {\n            calDate = 1;\n            currentMonth = activeMonthIndex > 9 ? activeMonthIndex + 2 : `0${activeMonthIndex + 2}`;\n            inMonth = false;\n          } else {\n            calDate += 1;\n          }\n          rowArr.push(dateCell);\n        }\n        // This else statement handles the more likely scenario, where the first row contains several days from the preceding month\n        else {\n          const dateCell = {\n            date,\n            dayDate,\n            calDate,\n            activeDateKey,\n            inMonth,\n            sessions: [],\n            lessons: [],\n            worksheets: [],\n            testSections: [],\n            simulatedSat: [],\n          };\n          // This if statement handles the case where the date spills over into the next month\n          if (inMonth === false && calDate === daysInPreviousMonth) {\n            calDate = 1;\n            currentMonth = getNextMonthAsCurrentMonth(activeMonthIndex);\n            inMonth = true;\n          } else if (inMonth === true && calDate === daysInActiveMonth) {\n            currentMonth = activeMonthIndex > 9 ? activeMonthIndex + 2 : `0${activeMonthIndex + 2}`;\n            calDate = 1;\n            inMonth = false;\n          }\n          else {\n            calDate += 1;\n          }\n          rowArr.push(dateCell);\n        }\n      };\n      rows.push(...rowArr);\n    };\n    this.setState({ activeMonth: activeMonthIndex, rows })\n  }\n\n  onSetActiveDate = (incomingDate) => {\n    this.setState({ activeDate: incomingDate, activeColumn: incomingDate[13] })\n  }\n\n  onAssignSession = (session) => {\n    const { rows } = this.state;\n    const updatedDate = rows.filter(row => row.date === session.date)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.sessions.push(session);\n    const updatedRows = update(rows, {\n      $splice: [[ updatedDateIndex, 1, updatedDate ]],\n    });\n    this.setState({ rows: updatedRows });\n    this.onToggleAssignSessionModal();\n  }\n\n  onAssignLessons = (lessons, date) => {\n    const { rows } = this.state;\n    const updatedDate = rows.filter(row => row.date === date)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.lessons.push(...lessons);\n    const updatedRows = update(rows, {\n      $splice: [[ updatedDateIndex, 1, updatedDate ]],\n    });\n    this.setState({ rows: updatedRows });\n    this.onToggleAssignLessonsModal();\n  }\n\n  onAssignWorksheets = (worksheets, date) => {\n    const { rows } = this.state;\n    const updatedDate = rows.filter(row => row.date === date)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.worksheets.push(...worksheets);\n    const updatedRows = update(rows, {\n      $splice: [[ updatedDateIndex, 1, updatedDate ]],\n    });\n    this.setState({ rows: updatedRows });\n    this.onToggleAssignWorksheetsModal();\n  }\n\n  onAssignTestSection = (testSection) => {\n    const { rows } = this.state;\n    const updatedDate = rows.filter(row => row.date === testSection.assignDate)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.testSections.push(testSection);\n    const updatedRows = update(rows, {\n      $splice: [[ updatedDateIndex, 1, updatedDate ]],\n    });\n    this.setState({ rows: updatedRows });\n    this.onToggleAssignTestSectionModal();\n  }\n\n  onAssignSimulatedSat = (simulatedSat) => {\n    const { rows } = this.state;\n    const updatedDate = rows.filter(row => row.date === simulatedSat.assignDate)[0];\n    const updatedDateIndex = rows.indexOf(updatedDate);\n    updatedDate.simulatedSat.push(simulatedSat);\n    const updatedRows = update(rows, {\n      $splice: [[ updatedDateIndex, 1, updatedDate ]],\n    });\n    this.setState({ rows: updatedRows });\n    this.onToggleAssignSimulatedSatModal();\n  }\n\n  onAssignTargetTest = (targetTestDate) => {\n    console.warn('pending decision of what test date assign ui looks like', targetTestDate);\n  }\n\n  onToggleAssignSessionModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignSessionModalOpen }) => ({ assignSessionModalOpen: !assignSessionModalOpen, modalDate, assignDropdownIsOpen: false }))\n  }\n\n  onToggleAssignLessonsModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignLessonsModalOpen }) => ({ assignLessonsModalOpen: !assignLessonsModalOpen, modalDate, assignDropdownIsOpen: false }))\n  }\n\n  onToggleAssignWorksheetsModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignWorksheetsModalOpen }) => ({ assignWorksheetsModalOpen: !assignWorksheetsModalOpen, modalDate, assignDropdownIsOpen: false }))\n  }\n\n  onToggleAssignTestSectionModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignTestSectionModalOpen }) => ({ assignTestSectionModalOpen: !assignTestSectionModalOpen, modalDate, assignDropdownIsOpen: false }))\n  }\n\n  onToggleAssignSimulatedSatModal = (event = null, modalDate = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignSimulatedSatModalOpen }) => ({ assignSimulatedSatModalOpen: !assignSimulatedSatModalOpen, modalDate, assignDropdownIsOpen: false }))\n  }\n\n  onToggleAssignTargetTestModal = (event = null) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(({ assignTargetTestDateModalOpen }) => ({ assignTargetTestDateModalOpen: !assignTargetTestDateModalOpen, assignDropdownIsOpen: false }))\n  }\n\n  onToggleAddDropdown = () => this.setState(({ addDropdownOpen }) => ({ addDropdownOpen: !addDropdownOpen, deleteDropdownOpen: false }))\n  onToggleDeleteDropdown = () => this.setState(({ deleteDropdownOpen }) => ({ deleteDropdownOpen: !deleteDropdownOpen, addDropdownOpen: false }))\n\n  onToggleAssignDropdown = () => this.setState(({ assignDropdownIsOpen }) => ({ assignDropdownIsOpen: !assignDropdownIsOpen }))\n  onToggleHandleFilteredItemsDropdown = () => this.setState(({ onToggleHandleFilteredItemsDropdown }) => ({ onToggleHandleFilteredItemsDropdown: !onToggleHandleFilteredItemsDropdown }))\n\n  onClearFilters = () => this.setState({ filters: [], eventFilters: [] })\n\n  handleFilterClick = (filter, eventFilter = false) => {\n    // TODO: Only the following filters are active: sessions, lessons, worksheets, test sections, simulated sats, target tests\n    // The other filters dont seem to have corresponding data in this page\n    const { filters: allFilters, eventFilters } = this.state;\n    let filters;\n    let filterName;\n    if (eventFilter) {\n      filters = eventFilters;\n      filterName = 'eventFilters';\n    } else {\n      filters = allFilters;\n      filterName = 'filters';\n    }\n    let updatedFilters;\n    if (filters.indexOf(filter) === -1) {\n      updatedFilters = update(filters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = filters.indexOf(filter);\n      updatedFilters = update(filters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [filterName]: updatedFilters });\n  }\n\n  mapRows = () => {\n    const { rows, filters, eventFilters, activeDate, activeColumn, addDropdownOpen, deleteDropdownOpen } = this.state;\n    let startIndex = -7;\n    let endIndex = 0;\n    const rowArray = [];\n    for (let i = 0; i < 6; i++) {\n      startIndex += 7;\n      endIndex += 7;\n      rowArray.push(\n        <CalendarRow\n          key={i}\n          rows={rows.slice(startIndex, endIndex)}\n          filters={filters}\n          eventFilters={eventFilters}\n          activeDate={activeDate}\n          activeColumn={activeColumn}\n          addDropdownOpen={addDropdownOpen}\n          deleteDropdownOpen={deleteDropdownOpen}\n          onSetActiveDate={this.onSetActiveDate}\n          onToggleAddDropdown={this.onToggleAddDropdown}\n          onToggleDeleteDropdown={this.onToggleDeleteDropdown}\n          onToggleAssignLessonsModal={this.onToggleAssignLessonsModal}\n          onToggleAssignSessionModal={this.onToggleAssignSessionModal}\n          onToggleAssignWorksheetsModal={this.onToggleAssignWorksheetsModal}\n          onToggleAssignTestSectionModal={this.onToggleAssignTestSectionModal}\n          onToggleAssignSimulatedSatModal={this.onToggleAssignSimulatedSatModal}\n        />\n      )\n    }\n    return rowArray;\n  }\n\n  render() {\n    const { assignSessionModalOpen, assignLessonsModalOpen, assignWorksheetsModalOpen, activeMonth,\n      assignTestSectionModalOpen, assignSimulatedSatModalOpen, assignTargetTestDateModalOpen,\n      modalDate, assignDropdownIsOpen, onToggleHandleFilteredItemsDropdown, filters, eventFilters,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <AssignSessionModal\n          modalDate={modalDate}\n          open={assignSessionModalOpen}\n          onClose={this.onToggleAssignSessionModal}\n          onAssignSession={this.onAssignSession}\n        />\n        <AssignLessonModal\n          modalDate={modalDate}\n          open={assignLessonsModalOpen}\n          onClose={this.onToggleAssignLessonsModal}\n          onAssignLessons={this.onAssignLessons}\n        />\n        <AssignWorksheetModal\n          modalDate={modalDate}\n          open={assignWorksheetsModalOpen}\n          onClose={this.onToggleAssignWorksheetsModal}\n          onAssignWorksheets={this.onAssignWorksheets}\n        />\n        <AssignTestSectionModal\n          modalDate={modalDate}\n          open={assignTestSectionModalOpen}\n          onClose={this.onToggleAssignTestSectionModal}\n          onAssignTestSection={this.onAssignTestSection}\n        />\n        <AssignSimulatedSatModal\n          modalDate={modalDate}\n          open={assignSimulatedSatModalOpen}\n          onClose={this.onToggleAssignSimulatedSatModal}\n          onAssignSimulatedSat={this.onAssignSimulatedSat}\n        />\n        <AssignTargetTestModal\n          open={assignTargetTestDateModalOpen}\n          onClose={this.onToggleAssignTargetTestModal}\n          onAssignTargetTest={this.onAssignTargetTest}\n        />\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-3\">\n            <div className=\"title-row card-panel\">\n              <div className=\"mobile-header\">\n                <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n              </div>\n              <nav className=\"breadcrumb-holder\">\n                <div className=\"nav-wrapper \">\n                  <a href=\"#\" className=\"breadcrumb\">&lt; Classes</a>\n                </div>\n              </nav>\n              <h2 className=\"h1 white-text\">\n                <span className=\"heading-holder\">\n                  <i className=\"icon-members\"></i>\n                  <span className=\"heading-block\">Some Class in June</span>\n                </span>\n              </h2>\n              {/* <!-- navigation additional --> */}\n              <nav className=\"nav-additional\">\n                <ul className=\"menu-additional\">\n                  <li><a href=\"#\">Summary</a></li>\n                  <li><a className=\"active\" href=\"#\">Calendar</a></li>\n                  <li><a href=\"#\">Lessons</a></li>\n                  <li><a href=\"#\">Tests</a></li>\n                  <li><a href=\"#\">Account</a></li>\n                </ul>\n              </nav>\n              <div className=\"activate-block\">\n                <a href=\"#\" className=\"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"><b className=\"btn-text visible-lg\">Account Activated</b> <i className=\"icon-unlock\"></i></a>\n                <a href=\"#\" className=\"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\" data-target=\"dropdown_activate\"><b className=\"btn-text visible-lg\">Activate Account</b> <i className=\"icon-key\"></i></a>\n                {/* <!-- Dropdown Activate Structure --> */}\n                <div id='dropdown_activate' className='dropdown-content'>\n                  <div className=\"card-panel\">\n                    <div className=\"title-block\">\n                      <div className=\"h3\">Ready to begin your course?</div>\n                      <div className=\"subtitle\">Please enter a valid license code below.</div>\n                    </div>\n                    <form action=\"#\" className=\"activate-form\">\n                      <fieldset>\n                        <div className=\"input-field\">\n                          <input type=\"text\" value=\"4BF86266-A2A4-C9FB-387D07ABB5471305\" id=\"license_code\" />\n                          <label className=\"label\" htmlFor=\"license_code\">License Code</label>\n                        </div>\n                        <div className=\"btn-holder center-align\">\n                          <button className=\"btn btn-blue\" type=\"submit\">Activate </button>\n                        </div>\n                      </fieldset>\n                    </form>\n                    <div className=\"text-block center-align\">\n                      <p>If you need license codes, you can get them here: <a href=\"#\" className=\"waves-effect waves-light btn-small btn-blue\">Purchase Licenses</a></p>\n                    </div>\n                    <div className=\"text-block\">\n                      <p>*Note: </p>\n                      <p>We oﬀer discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <FilterSection\n              filters={filters}\n              eventFilters={eventFilters}\n              onClearFilters={this.onClearFilters}\n              handleFilterClick={this.handleFilterClick}\n            />\n            <div className=\"calendar-section view-month\">\n              <div className=\"calendar-slider\">\n                <CalendarHeader\n                  activeMonth={Number(activeMonth)}\n                  onSetActiveMonth={this.onSetActiveMonth}\n                />\n                <div id=\"calendar\" className=\"main-slick-calendar cal-context\" style={{ width: '100%' }}>\n                  {/* <!-- calendar month slide January--> */}\n                  <div className=\"slide\">\n                    <table className=\"calendar-table cal-month-box\">\n                      <thead>\n                        <tr className=\"month-title\">\n                          <td colSpan=\"7\"><div className=\"cal-month-day\">January</div></td>\n                        </tr>\n                        <tr className=\"calendar-head-row\">\n                          <th>Su</th>\n                          <th>M</th>\n                          <th>Tu</th>\n                          <th>W</th>\n                          <th>Th</th>\n                          <th>F</th>\n                          <th>Sa</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.mapRows()}\n                      </tbody>\n                    </table>\n                  </div>\n                  {/* <!-- calendar month slide February --> */}\n                  <div className=\"slide\"></div>\n                  {/* <!-- calendar month slide March --> */}\n                  <div className=\"slide\"></div>\n                </div>\n                <div className=\"add-btn-block\">\n                  <a\n                    href=\"#\"\n                    data-target='dropdown_assign'\n                    onClick={this.onToggleAssignDropdown}\n                    className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n                  >\n                    Assign...\n                  </a>\n                  <ul id='dropdown_assign' className='dropdown-content' style={{ display: assignDropdownIsOpen ? 'block' : 'none', opacity: assignDropdownIsOpen ? '100' : '0' }}>\n                    <li><a href=\"#\" onClick={this.onToggleAssignSessionModal} className=\"modal-trigger\">Session</a></li>\n                    <li><a href=\"#\" onClick={this.onToggleAssignLessonsModal} className=\"modal-trigger\">Lesson</a></li>\n                    <li><a href=\"#\" onClick={this.onToggleAssignWorksheetsModal} className=\"modal-trigger\">Worksheet</a></li>\n                    <li><a href=\"#\" onClick={this.onToggleAssignTestSectionModal} className=\"modal-trigger\">Test Section</a></li>\n                    <li><a href=\"#\" onClick={this.onToggleAssignSimulatedSatModal} className=\"modal-trigger\">Simulated SAT</a></li>\n                    <li><a href=\"#\" onClick={this.onToggleAssignTargetTestModal} className=\"modal-trigger\">Target Test</a></li>\n                    <li className=\"divider\" tabIndex=\"-1\"></li>\n                    <li className=\"dropdown-footer\"><a href=\"#\" className=\"modal-trigger\">Apply Course Template</a></li>\n                  </ul>\n                </div>\n                <div className=\"add-btn-block btn-block-right\">\n                  <a\n                    href=\"#\"\n                    data-target='dropdown_other'\n                    onClick={this.onToggleHandleFilteredItemsDropdown}\n                    className=\"dropdown-trigger waves-effect waves-teal btn add-btn-circle\"\n                  >\n                    <i className=\"icon-dots\"></i>\n                  </a>\n                  <ul id='dropdown_other' className='dropdown-content' style={{ display: onToggleHandleFilteredItemsDropdown ? 'block' : 'none', opacity: onToggleHandleFilteredItemsDropdown ? '100' : '0' }}>\n                    <li className=\"dropdown-header\">\n                      <b>With Filtered Items... </b>\n                      <b className=\"small\">(items currently visible on calendar)</b>\n                    </li>\n                    <li className=\"divider\"></li>\n                    <li><a href=\"#\" className=\"modal-trigger\">Save Course as Template</a></li>\n                    <li><a href=\"#\">Reset All</a></li>\n                    <li><a href=\"#\">Delete All</a></li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n\n\n/* <!-- Modal structure view Lesson --> */\n// <div id=\"modal_view_lesson\" className=\"modal modal-custom\"></div>\n\n/* <!-- Modal structure view Session --> */\n// <div id=\"modal_view_session\" className=\"modal modal-custom\"></div>\n\n/* <!-- Modal structure view Practice Test --> */\n// <div id=\"modal_view_practice_test\" className=\"modal modal-custom\"></div>\n\n/* <!-- Modal structure view Worksheet --> */\n// <div id=\"modal_view_worksheet\" className=\"modal modal-custom\"></div>\n"]},"metadata":{},"sourceType":"module"}