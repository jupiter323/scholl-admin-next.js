{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _this.state = {\n      open: true,\n      activeFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          activeFilters = _this$state.activeFilters;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"activated\",\n        checked: activeFilters.indexOf(\"activated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('activated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"activated\"\n      }, \"Activated\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unactivated\",\n        checked: activeFilters.indexOf(\"unactivated\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unactivated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unactivated\"\n      }, \"Unactivated\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"expired\",\n        checked: activeFilters.indexOf(\"expired\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('expired');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"expired\"\n      }, \"Expired\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"current\",\n        checked: activeFilters.indexOf(\"current\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('current');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"current\"\n      }, \"Current\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"archived\",\n        checked: activeFilters.indexOf(\"archived\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('archived');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"archived\"\n      }, \"Archived\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-gain\",\n        checked: activeFilters.indexOf(\"no-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-gain');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-gain\"\n      }, \"No Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"some-gain\",\n        checked: activeFilters.indexOf(\"some-gain\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('some-gain');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"some-gain\"\n      }, \"Some Gain\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-100+\",\n        checked: activeFilters.indexOf(\"gain-100+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-100+');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain-100+\"\n      }, \"Gain of 100+\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"gain-200+\",\n        checked: activeFilters.indexOf(\"gain-200+\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('gain-200+');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"gain-200+\"\n      }, \"Gain of 200+\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hit-target-score\",\n        checked: activeFilters.indexOf(\"hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hit-target-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hit-target-score\"\n      }, \"Hit Target Score\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hasnt-hit-target-score\",\n        checked: activeFilters.indexOf(\"hasnt-hit-target-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('hasnt-hit-target-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hasnt-hit-target-score\"\n      }, \"Hasn\\u2019t Hit Target Score\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-tests\",\n        checked: activeFilters.indexOf(\"no-tests\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('tests');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-tests\"\n      }, \"No Tests\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"1-test\",\n        checked: activeFilters.indexOf(\"1-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('1-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"1-test\"\n      }, \"1 Test\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"2-test\",\n        checked: activeFilters.indexOf(\"2-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('2-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"2-test\"\n      }, \"2 Tests\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"3-test\",\n        checked: activeFilters.indexOf(\"3-test\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('3-test');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"3-test\"\n      }, \"3+ Tests\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"has-overdue-work\",\n        checked: activeFilters.indexOf(\"has-overdue-work\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('has-overdue-work');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"has-overdue-work\"\n      }, \"Has Overdue Work\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unreviewed-flags\",\n        checked: activeFilters.indexOf(\"unreviewed-flags\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('unreviewed-flags');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unreviewed-flags\"\n      }, \"Unreviewed Flags\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"sessions-this-week\",\n        checked: activeFilters.indexOf(\"sessions-this-week\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('sessions-this-week');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"sessions-this-week\"\n      }, \"Sessions This Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"session-today\",\n        checked: activeFilters.indexOf(\"session-today\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('session-today');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"session-today\"\n      }, \"Session Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-sessions\",\n        checked: activeFilters.indexOf(\"no-sessions\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-sessions');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-sessions\"\n      }, \"No Sessions Scheduled\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"entered-actual-score\",\n        checked: activeFilters.indexOf(\"entered-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('entered-actual-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"entered-actual-score\"\n      }, \"Entered Actual Score\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"no-actual-score\",\n        checked: activeFilters.indexOf(\"no-actual-score\") !== -1,\n        onChange: function onChange() {\n          return _this2.onHandleFilterClick('no-actual-score');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"no-actual-score\"\n      }, \"No Actual Score\"))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-flex-end\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l8\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        className: \"input-control  validate\",\n        placeholder: \"Edwar\"\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\"\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"select\", {\n        id: \"location_search\"\n      }, React.createElement(\"option\", null, \"Any\"), React.createElement(\"option\", null, \"Option\"), React.createElement(\"option\", null, \"Option\")), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"location_search\"\n      }, \"Location\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(\"select\", {\n        id: \"sort_search\"\n      }, React.createElement(\"option\", null, \"Last Name (ascending)\"), React.createElement(\"option\", null, \"Option\"), React.createElement(\"option\", null, \"Option\")), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"sort_search\"\n      }, \"Sort\"))))), React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}