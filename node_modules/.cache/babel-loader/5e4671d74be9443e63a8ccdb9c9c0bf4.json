{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        activeFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props = _this.props,\n          onSetFilteredTopicState = _this$props.onSetFilteredTopicState,\n          onUnsetFilteredTopicState = _this$props.onUnsetFilteredTopicState,\n          onSetSort = _this$props.onSetSort;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'topic') {\n        if (event === '') {\n          return onUnsetFilteredTopicState();\n        }\n\n        return onSetFilteredTopicState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props2 = _this.props,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState;\n      var worksheetName = _this.state.worksheetName;\n\n      if (worksheetName === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _this.state = {\n      open: false,\n      worksheetName: '',\n      topic: {},\n      sort: {},\n      activeFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          activeFilters = _this$state.activeFilters,\n          worksheetName = _this$state.worksheetName,\n          topic = _this$state.topic,\n          sort = _this$state.sort;\n      var _this$props3 = this.props,\n          currentView = _this$props3.currentView,\n          onChangeView = _this$props3.onChangeView;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\"\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"reading\",\n        checked: activeFilters.indexOf('reading') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('reading');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"reading\"\n      }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"writing\",\n        checked: activeFilters.indexOf('writing') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('writing');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"writing\"\n      }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"math\",\n        checked: activeFilters.indexOf('math') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('math');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"math\"\n      }, \"Math\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"beginning\",\n        checked: activeFilters.indexOf('beginning') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('beginning');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"beginning\"\n      }, \"Beginning\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"developing\",\n        checked: activeFilters.indexOf('developing') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('developing');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"developing\"\n      }, \"Developing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"accomplished\",\n        checked: activeFilters.indexOf('accomplished') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('accomplished');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"accomplished\"\n      }, \"Accomplished\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"exemplary\",\n        checked: activeFilters.indexOf('exemplary') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('exemplary');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"exemplary\"\n      }, \"Exemplary\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"unassigned\",\n        checked: activeFilters.indexOf('unassigned') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('unassigned');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"unassigned\"\n      }, \"Unassigned\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"complete\",\n        checked: activeFilters.indexOf('complete') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('complete');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"complete\"\n      }, \"Complete\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"incomplete\",\n        checked: activeFilters.indexOf('incomplete') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('incomplete');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"incomplete\"\n      }, \"Incomplete\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"hasReviewFlags\",\n        checked: activeFilters.indexOf('hasReviewFlags') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('hasReviewFlags');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"hasReviewFlags\"\n      }, \"Has Review Flags\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"dueToday\",\n        checked: activeFilters.indexOf('dueToday') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('dueToday');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"dueToday\"\n      }, \"Due Today\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"dueNextSession\",\n        checked: activeFilters.indexOf('dueNextSession') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('dueNextSession');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"dueNextSession\"\n      }, \"Due By Next Session\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"dueThisWeek\",\n        checked: activeFilters.indexOf('dueThisWeek') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('dueThisWeek');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"dueThisWeek\"\n      }, \"Due this Week\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"overdue\",\n        checked: activeFilters.indexOf('overdue') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('overdue');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"overdue\"\n      }, \"Overdue\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"some-class\",\n        checked: activeFilters.indexOf('class') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('class');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"some-class\"\n      }, \"Some Class\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"tutoring\",\n        checked: activeFilters.indexOf('tutoring') !== -1,\n        onChange: function onChange() {\n          return _this2.handleFilterClick('tutoring');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"tutoring\"\n      }, \"Tutoring\")))), React.createElement(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        value: worksheetName,\n        className: \"input-control validate\",\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'worksheetName');\n        }\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: worksheetName.length ? 'label active' : 'label',\n        htmlFor: \"name_search\"\n      }, \"Search\"))), React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(topic, sampleTopics),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'topic');\n        },\n        options: sampleTopics,\n        label: \"Topic\",\n        stateKey: \"topic\",\n        dropdownKey: \"topic\"\n      }))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 xl7\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\"\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(sort, worksheetSortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'sort');\n        },\n        options: worksheetSortOptions,\n        label: \"Sort By\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), React.createElement(\"div\", {\n        className: \"switcher-block col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"view-switcher\"\n      }, React.createElement(\"ul\", {\n        className: \"switcher center-align\"\n      }, React.createElement(\"li\", {\n        \"data-view\": \"view-full\",\n        className: currentView === 'full' ? 'active' : '',\n        onClick: function onClick() {\n          return onChangeView('full');\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Full View\")), React.createElement(\"li\", {\n        \"data-view\": \"view-list\",\n        className: currentView === 'list' ? 'active' : '',\n        onClick: function onClick() {\n          return onChangeView('list');\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"List View\"))))), React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailWorksheetPage/components/FilterSection/index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","sampleTopics","worksheetSortOptions","FilterSection","props","setState","open","activeFilters","filter","currentActiveFilters","state","indexOf","$push","filterIndex","$splice","event","name","onSetFilteredTopicState","onUnsetFilteredTopicState","onSetSort","value","target","updatedState","$merge","onSetFilteredState","onUnsetFilteredState","worksheetName","transformedName","replace","toLowerCase","topic","sort","currentView","onChangeView","display","handleFilterClick","handleFilterChange","submitNameFilter","length","onClearFilters","onToggleShowFilters","Component","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      worksheetName: '',\n      topic: {},\n      sort: {},\n      activeFilters: [],\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  handleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredTopicState, onUnsetFilteredTopicState, onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'topic') {\n      if (event === '') {\n        return onUnsetFilteredTopicState();\n      }\n      return onSetFilteredTopicState(event);\n    } else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { worksheetName } = this.state;\n    if (worksheetName === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  render() {\n    const { open, activeFilters, worksheetName, topic, sort } = this.state;\n    const { currentView, onChangeView } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      checked={activeFilters.indexOf('reading') !== -1}\n                      onChange={() => this.handleFilterClick('reading')}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      checked={activeFilters.indexOf('writing') !== -1}\n                      onChange={() => this.handleFilterClick('writing')}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      checked={activeFilters.indexOf('math') !== -1}\n                      onChange={() => this.handleFilterClick('math')}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"beginning\"\n                      checked={activeFilters.indexOf('beginning') !== -1}\n                      onChange={() => this.handleFilterClick('beginning')}\n                    />\n                    <label htmlFor=\"beginning\">Beginning</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"developing\"\n                      checked={activeFilters.indexOf('developing') !== -1}\n                      onChange={() => this.handleFilterClick('developing')}\n                    />\n                    <label htmlFor=\"developing\">Developing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"accomplished\"\n                      checked={activeFilters.indexOf('accomplished') !== -1}\n                      onChange={() => this.handleFilterClick('accomplished')}\n                    />\n                    <label htmlFor=\"accomplished\">Accomplished</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"exemplary\"\n                      checked={activeFilters.indexOf('exemplary') !== -1}\n                      onChange={() => this.handleFilterClick('exemplary')}\n                    />\n                    <label htmlFor=\"exemplary\">Exemplary</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unassigned\"\n                      checked={activeFilters.indexOf('unassigned') !== -1}\n                      onChange={() => this.handleFilterClick('unassigned')}\n                    />\n                    <label htmlFor=\"unassigned\">Unassigned</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"complete\"\n                      checked={activeFilters.indexOf('complete') !== -1}\n                      onChange={() => this.handleFilterClick('complete')}\n                    />\n                    <label htmlFor=\"complete\">Complete</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"incomplete\"\n                      checked={activeFilters.indexOf('incomplete') !== -1}\n                      onChange={() => this.handleFilterClick('incomplete')}\n                    />\n                    <label htmlFor=\"incomplete\">Incomplete</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      checked={activeFilters.indexOf('hasReviewFlags') !== -1}\n                      onChange={() => this.handleFilterClick('hasReviewFlags')}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      checked={activeFilters.indexOf('dueToday') !== -1}\n                      onChange={() => this.handleFilterClick('dueToday')}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      checked={activeFilters.indexOf('dueNextSession') !== -1}\n                      onChange={() => this.handleFilterClick('dueNextSession')}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueThisWeek\"\n                      checked={activeFilters.indexOf('dueThisWeek') !== -1}\n                      onChange={() => this.handleFilterClick('dueThisWeek')}\n                    />\n                    <label htmlFor=\"dueThisWeek\">Due this Week</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      checked={activeFilters.indexOf('overdue') !== -1}\n                      onChange={() => this.handleFilterClick('overdue')}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"some-class\"\n                      checked={activeFilters.indexOf('class') !== -1}\n                      onChange={() => this.handleFilterClick('class')}\n                    />\n                    <label htmlFor=\"some-class\">Some Class</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"tutoring\"\n                      checked={activeFilters.indexOf('tutoring') !== -1}\n                      onChange={() => this.handleFilterClick('tutoring')}\n                    />\n                    <label htmlFor=\"tutoring\">Tutoring</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      value={worksheetName}\n                      className=\"input-control validate\"\n                      onChange={(event) => this.handleFilterChange(event, 'worksheetName')}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    >\n                      <i className=\"icon-search\"></i>\n                    </button>\n                    <label className={worksheetName.length ? 'label active' : 'label'} htmlFor=\"name_search\">Search</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                      value={getValueFromState(topic, sampleTopics)}\n                      onChange={(event) => this.handleFilterChange(event, 'topic')}\n                      options={sampleTopics}\n                      label=\"Topic\"\n                      stateKey=\"topic\"\n                      dropdownKey=\"topic\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, worksheetSortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={worksheetSortOptions}\n                        label=\"Sort By\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\">\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li\n                      data-view=\"view-full\"\n                      className={currentView === 'full' ? 'active' : ''}\n                      onClick={() => onChangeView('full')}\n                    >\n                      <a href=\"#\">Full View</a>\n                    </li>\n                    <li\n                      data-view=\"view-list\"\n                      className={currentView === 'list' ? 'active' : ''}\n                      onClick={() => onChangeView('list')}\n                    >\n                      <a href=\"#\">List View</a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredTopicState: PropTypes.func.isRequired,\n  onUnsetFilteredTopicState: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}