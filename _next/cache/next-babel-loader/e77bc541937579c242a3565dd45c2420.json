{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport StrengthsWeaknessesNavBar from './components/StrengthsWeaknessesNavBar';\nimport ReadingPage from './components/ReadingPage';\nimport WritingPage from './components/WritingPage';\nimport MathPage from './components/MathPage';\nimport SubjectsCard from './components/SubjectsCard';\nimport { makeSelectActiveTestScores } from '../index/selectors';\nimport { fetchStudentTestScoreApi } from '../index/api';\n\nvar DetailTestAnswerSheetComplete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailTestAnswerSheetComplete, _React$Component);\n\n  function DetailTestAnswerSheetComplete(props) {\n    var _this;\n\n    _classCallCheck(this, DetailTestAnswerSheetComplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailTestAnswerSheetComplete).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getComponentImages\", function () {\n      return new _Promise(function _callee3(resolve) {\n        var circleImageList, barImageList, circleRefs, barRefs, getCircleImagesPromise;\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                circleImageList = [];\n                barImageList = [];\n                circleRefs = [{\n                  id: 'analysisReadingCicleImg'\n                }, {\n                  id: 'analysisWritingCircleImg'\n                }, {\n                  id: 'analysisMathCircleImg'\n                }];\n                barRefs = [{\n                  id: 'readingAnalysisBarImg',\n                  state: 'reading'\n                }, {\n                  id: 'writingAnalysisBarImg',\n                  state: 'writing'\n                }, {\n                  id: 'mathAnalysisBarImg',\n                  state: 'math'\n                }];\n                getCircleImagesPromise = circleRefs.reduce(function (accumulatorPromise, circleRef) {\n                  return accumulatorPromise.then(function _callee() {\n                    var _ref, _ref2, currentImg;\n\n                    return _regeneratorRuntime.async(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return _regeneratorRuntime.awrap(_Promise.all([_this.onHandleTargetImage(circleRef.id)]));\n\n                          case 2:\n                            _ref = _context.sent;\n                            _ref2 = _slicedToArray(_ref, 1);\n                            currentImg = _ref2[0];\n                            circleImageList.push(currentImg);\n\n                          case 6:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    });\n                  })[\"catch\"](console.error);\n                }, _Promise.resolve());\n                _context3.next = 7;\n                return _regeneratorRuntime.awrap(_Promise.all(barRefs.map(function _callee2(barRef) {\n                  return _regeneratorRuntime.async(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return _regeneratorRuntime.awrap(_this.getData(barRef));\n\n                        case 2:\n                          return _context2.abrupt(\"return\", _context2.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  });\n                })));\n\n              case 7:\n                barImageList = _context3.sent;\n                getCircleImagesPromise.then(function () {\n                  var imgList = {\n                    circleImageList: circleImageList,\n                    barImageList: barImageList\n                  };\n                  resolve(imgList);\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", function (item) {\n      return new _Promise(function _callee5(resolve) {\n        return _regeneratorRuntime.async(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                setTimeout(function () {\n                  _this.setState({\n                    activeSlide: item.state\n                  }, function _callee4() {\n                    var _ref3, _ref4, currentImg;\n\n                    return _regeneratorRuntime.async(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return _regeneratorRuntime.awrap(_Promise.all([_this.onHandleTargetImage(item.id)]));\n\n                          case 2:\n                            _ref3 = _context4.sent;\n                            _ref4 = _slicedToArray(_ref3, 1);\n                            currentImg = _ref4[0];\n                            if (currentImg) resolve(currentImg);\n\n                          case 6:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    });\n                  });\n                }, 500);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleTargetImage\", function _callee7(currentRef) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", new _Promise(function _callee6(resolve) {\n                var getTargetImage, _ref5, _ref6, currentImg;\n\n                return _regeneratorRuntime.async(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        getTargetImage = _this.props.getTargetImage;\n                        _context6.next = 3;\n                        return _regeneratorRuntime.awrap(_Promise.all([getTargetImage(document.getElementById(currentRef))]));\n\n                      case 3:\n                        _ref5 = _context6.sent;\n                        _ref6 = _slicedToArray(_ref5, 1);\n                        currentImg = _ref6[0];\n                        resolve(currentImg);\n\n                      case 7:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                });\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetActiveSlide\", function (activeSlide) {\n      return _this.setState({\n        activeSlide: activeSlide\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentSlide\", function () {\n      var _this$state = _this.state,\n          activeSlide = _this$state.activeSlide,\n          readingScores = _this$state.readingScores,\n          mathScores = _this$state.mathScores,\n          writingScores = _this$state.writingScores;\n\n      if (activeSlide === 'reading') {\n        return __jsx(ReadingPage, {\n          scores: readingScores,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        });\n      }\n\n      if (activeSlide === 'writing') {\n        return __jsx(WritingPage, {\n          scores: writingScores,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n      }\n\n      if (activeSlide === 'math') {\n        return __jsx(MathPage, {\n          scores: mathScores,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      activeSlide: 'reading',\n      readingScores: null,\n      writingScores: null,\n      mathScores: null\n    };\n    return _this;\n  }\n\n  _createClass(DetailTestAnswerSheetComplete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var activeTestScores, fetchedScores, _this$props, test, activeStudent, response, categories;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this.props.onRef(this);\n              activeTestScores = this.props.activeTestScores;\n              fetchedScores = {};\n\n              if (this.props.activeTestScores) {\n                _context8.next = 9;\n                break;\n              }\n\n              _this$props = this.props, test = _this$props.test, activeStudent = _this$props.activeStudent;\n              _context8.next = 7;\n              return _regeneratorRuntime.awrap(fetchStudentTestScoreApi(activeStudent.id, test.student_test_id));\n\n            case 7:\n              response = _context8.sent;\n\n              if (response && !response.message) {\n                fetchedScores = response.categories;\n              }\n\n            case 9:\n              categories = activeTestScores ? activeTestScores.categories : fetchedScores;\n\n              if (categories && categories.length !== 0) {\n                categories.map(function (category) {\n                  switch (category.name) {\n                    case 'Writing':\n                      _this2.setState({\n                        writingScores: category\n                      });\n\n                      break;\n\n                    case 'Math':\n                      _this2.setState({\n                        mathScores: category\n                      });\n\n                      break;\n\n                    case 'Reading':\n                      _this2.setState({\n                        readingScores: category\n                      });\n\n                      break;\n\n                    default:\n                  }\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onRef(undefined);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          activeSlide = _this$state2.activeSlide,\n          readingScores = _this$state2.readingScores,\n          mathScores = _this$state2.mathScores,\n          writingScores = _this$state2.writingScores;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __jsx(SubjectsCard, {\n        readingScores: readingScores,\n        writingScores: writingScores,\n        mathScores: mathScores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Details\"), __jsx(\"div\", {\n        className: \"card-main-full card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"slick-tabs-gallery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, __jsx(StrengthsWeaknessesNavBar, {\n        activeSlide: activeSlide,\n        onSetActiveSlide: this.onSetActiveSlide,\n        scores: {\n          readingScores: readingScores,\n          mathScores: mathScores,\n          writingScores: writingScores\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"main-slick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.renderCurrentSlide())))));\n    }\n  }]);\n\n  return DetailTestAnswerSheetComplete;\n}(React.Component);\n\nDetailTestAnswerSheetComplete.propTypes = {\n  getTargetImage: PropTypes.func.isRequired,\n  activeTestScores: PropTypes.object.isRequired\n};\nvar mapStateToProps = createStructuredSelector({\n  activeTestScores: makeSelectActiveTestScores()\n});\nvar withConnect = connect(mapStateToProps, null);\nexport default compose(withConnect)(DetailTestAnswerSheetComplete);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/index.js"],"names":["React","PropTypes","connect","compose","createStructuredSelector","StrengthsWeaknessesNavBar","ReadingPage","WritingPage","MathPage","SubjectsCard","makeSelectActiveTestScores","fetchStudentTestScoreApi","DetailTestAnswerSheetComplete","props","resolve","circleImageList","barImageList","circleRefs","id","barRefs","state","getCircleImagesPromise","reduce","accumulatorPromise","circleRef","then","all","onHandleTargetImage","currentImg","push","console","error","map","barRef","getData","imgList","item","setTimeout","setState","activeSlide","currentRef","getTargetImage","document","getElementById","readingScores","mathScores","writingScores","onRef","activeTestScores","fetchedScores","test","activeStudent","student_test_id","response","message","categories","length","category","name","undefined","onSetActiveSlide","renderCurrentSlide","Component","propTypes","func","isRequired","object","mapStateToProps","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport StrengthsWeaknessesNavBar from './components/StrengthsWeaknessesNavBar';\nimport ReadingPage from './components/ReadingPage';\nimport WritingPage from './components/WritingPage';\nimport MathPage from './components/MathPage';\nimport SubjectsCard from './components/SubjectsCard';\n\nimport { makeSelectActiveTestScores } from '../index/selectors';\nimport { fetchStudentTestScoreApi } from '../index/api';\n\nclass DetailTestAnswerSheetComplete extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSlide: 'reading',\n      readingScores: null,\n      writingScores: null,\n      mathScores: null,\n    };\n  }\n\n  async componentDidMount() {\n    this.props.onRef(this);\n    const { activeTestScores } = this.props;\n    let fetchedScores = {};\n    if (!this.props.activeTestScores) {\n      const { test, activeStudent } = this.props;\n      const response = await fetchStudentTestScoreApi(activeStudent.id, test.student_test_id);\n      if (response && !response.message) {\n        fetchedScores = response.categories;\n      }\n    }\n    const categories = activeTestScores ? activeTestScores.categories : fetchedScores;\n    if (categories && categories.length !== 0) {\n      categories.map(category => {\n        switch (category.name) {\n          case 'Writing':\n            this.setState({\n              writingScores: category,\n            });\n            break;\n          case 'Math':\n            this.setState({\n              mathScores: category,\n            });\n            break;\n          case 'Reading':\n            this.setState({\n              readingScores: category,\n            });\n            break;\n          default:\n        }\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  getComponentImages = () =>\n    new Promise(async resolve => {\n      const circleImageList = [];\n      let barImageList = [];\n      const circleRefs = [\n        { id: 'analysisReadingCicleImg' },\n        { id: 'analysisWritingCircleImg' },\n        { id: 'analysisMathCircleImg' },\n      ];\n      const barRefs = [\n        { id: 'readingAnalysisBarImg', state: 'reading' },\n        { id: 'writingAnalysisBarImg', state: 'writing' },\n        { id: 'mathAnalysisBarImg', state: 'math' },\n      ];\n\n      const getCircleImagesPromise = circleRefs.reduce(\n        (accumulatorPromise, circleRef) =>\n          accumulatorPromise\n            .then(async () => {\n              const [currentImg] = await Promise.all([this.onHandleTargetImage(circleRef.id)]);\n              circleImageList.push(currentImg);\n            })\n            .catch(console.error),\n        Promise.resolve(),\n      );\n      barImageList = await Promise.all(barRefs.map(async barRef => await this.getData(barRef)));\n      getCircleImagesPromise.then(() => {\n        const imgList = { circleImageList, barImageList };\n        resolve(imgList);\n      });\n    });\n  getData = item =>\n    new Promise(async resolve => {\n      setTimeout(() => {\n        this.setState({ activeSlide: item.state }, async () => {\n          const [currentImg] = await Promise.all([this.onHandleTargetImage(item.id)]);\n          if (currentImg) resolve(currentImg);\n        });\n      }, 500);\n    });\n\n  onHandleTargetImage = async currentRef =>\n    new Promise(async resolve => {\n      const { getTargetImage } = this.props;\n      const [currentImg] = await Promise.all([getTargetImage(document.getElementById(currentRef))]);\n      resolve(currentImg);\n    });\n\n  onSetActiveSlide = activeSlide => this.setState({ activeSlide });\n\n  renderCurrentSlide = () => {\n    const { activeSlide, readingScores, mathScores, writingScores } = this.state;\n    if (activeSlide === 'reading') {\n      return <ReadingPage scores={readingScores} />;\n    }\n    if (activeSlide === 'writing') {\n      return <WritingPage scores={writingScores} />;\n    }\n    if (activeSlide === 'math') {\n      return <MathPage scores={mathScores} />;\n    }\n    return null;\n  };\n\n  render() {\n    const { activeSlide, readingScores, mathScores, writingScores } = this.state;\n    return (\n      <React.Fragment>\n        <SubjectsCard\n          readingScores={readingScores}\n          writingScores={writingScores}\n          mathScores={mathScores}\n        />\n        <div className=\"card-block\">\n          <h2>Details</h2>\n          <div className=\"card-main-full card\">\n            <div className=\"slick-tabs-gallery\">\n              <StrengthsWeaknessesNavBar\n                activeSlide={activeSlide}\n                onSetActiveSlide={this.onSetActiveSlide}\n                scores={{ readingScores, mathScores, writingScores }}\n              />\n            </div>\n            <div className=\"card-content\">\n              <div className=\"main-slick\">\n                {this.renderCurrentSlide()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nDetailTestAnswerSheetComplete.propTypes = {\n  getTargetImage: PropTypes.func.isRequired,\n  activeTestScores: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  activeTestScores: makeSelectActiveTestScores(),\n});\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect)(DetailTestAnswerSheetComplete);\n"]},"metadata":{},"sourceType":"module"}