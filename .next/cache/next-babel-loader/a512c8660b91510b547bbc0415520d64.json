{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onSetFilteredLocationState,\n        onUnsetFilteredLocationState,\n        onSetSort\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        name\n      } = this.state;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    this.state = {\n      name: '',\n      location: {},\n      sort: {}\n    };\n  } // This function does two things - first, it changes the filter state regardless of the field it's coming from\n  // If either location or sort filters are changed, we dispatch the appropriate action in ListPage to ensure the rendered instructors are filtered/sorted appropriately\n  // eslint-disable-next-line consistent-return\n\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const {\n      name,\n      location,\n      sort\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"filter-inputs-holder\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m4 l3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\"\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control validate\",\n      name: \"name\",\n      value: name,\n      onChange: event => this.handleFilterChange(event, 'name')\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: name.length ? 'label active' : 'label',\n      htmlFor: \"name_search\"\n    }, \"Search\"))), __jsx(\"div\", {\n      className: \"col s12 m4 l3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(location, locationOptions),\n      onChange: event => this.handleFilterChange(event, 'location'),\n      options: locationOptions,\n      label: \"Location\",\n      stateKey: \"location\",\n      dropdownKey: \"location\"\n    }))), __jsx(\"div\", {\n      className: \"col s12 m4 l3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, sortOptions),\n      onChange: event => this.handleFilterChange(event, 'sort'),\n      options: sortOptions,\n      label: \"Sort\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    })))));\n  }\n\n}\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}