{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/FreeResponse/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addFreeResponseAnswerToTest } from '../../../../../index/actions';\n\nclass FreeResponseInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleInputChange\", e => {\n      e.preventDefault();\n      const answer = e.target.value;\n      const {\n        onAddFreeResponseAnswerToTest,\n        problem,\n        testSection: {\n          student_test_id\n        }\n      } = this.props;\n      const postBody = {\n        student_test_id,\n        test_problem_id: problem.id,\n        answer\n      };\n      onAddFreeResponseAnswerToTest(postBody, problem.test_section_id);\n      this.setState({\n        answer\n      });\n    });\n\n    this.state = {\n      answer: props.problem.student_answer,\n      basicStyle: {\n        width: \"50px\"\n      },\n      incorrectStyle: {\n        color: \"#fff\",\n        borderColor: \"#ad1e3e\",\n        backgroundColor: \"#db1d41\",\n        width: \"50px\"\n      },\n      correctStyle: {\n        color: \"#fff\",\n        borderColor: \"#32955c\",\n        backgroundColor: \"#3eb777\",\n        width: \"50px\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      answerStatus\n    } = this.props;\n    let style = {};\n    !answerStatus.complete ? style = this.state.basicStyle : !answerStatus.isCorrect ? style = this.state.incorrectStyle : style = this.state.correctStyle;\n    return __jsx(\"input\", {\n      className: \"badge badge-rounded badge-rounded-bordered\",\n      style: style,\n      type: \"text\",\n      name: \"answer\",\n      defaultValue: this.state.answer,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }\n\n}\n\nFreeResponseInput.propTypes = {\n  problem: PropTypes.object,\n  answerStatus: PropTypes.object\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddFreeResponseAnswerToTest: (postBody, sectionId) => dispatch(addFreeResponseAnswerToTest(postBody, sectionId))\n  };\n}\n\nconst withConnect = connect(null, mapDispatchToProps);\nexport default compose(withConnect)(FreeResponseInput);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/FreeResponse/index.js"],"names":["React","PropTypes","connect","compose","addFreeResponseAnswerToTest","FreeResponseInput","Component","constructor","props","e","preventDefault","answer","target","value","onAddFreeResponseAnswerToTest","problem","testSection","student_test_id","postBody","test_problem_id","id","test_section_id","setState","state","student_answer","basicStyle","width","incorrectStyle","color","borderColor","backgroundColor","correctStyle","render","answerStatus","style","complete","isCorrect","handleInputChange","propTypes","object","mapDispatchToProps","dispatch","sectionId","withConnect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addFreeResponseAnswerToTest } from '../../../../../index/actions';\n\nclass FreeResponseInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: props.problem.student_answer,\n      basicStyle: { width: \"50px\" },\n      incorrectStyle: { color: \"#fff\", borderColor: \"#ad1e3e\", backgroundColor: \"#db1d41\", width: \"50px\" },\n      correctStyle: { color: \"#fff\", borderColor: \"#32955c\", backgroundColor: \"#3eb777\", width: \"50px\" },\n    };\n  }\n\n  handleInputChange = (e) => {\n    e.preventDefault();\n    const answer = e.target.value;\n    const { onAddFreeResponseAnswerToTest, problem, testSection: { student_test_id } } = this.props;\n    const postBody = { student_test_id, test_problem_id: problem.id, answer };\n    onAddFreeResponseAnswerToTest(postBody, problem.test_section_id);\n    this.setState({ answer });\n  };\n\n  render() {\n    const { answerStatus } = this.props;\n    let style = {};\n    !answerStatus.complete ? style = this.state.basicStyle : !answerStatus.isCorrect ? style = this.state.incorrectStyle : style = this.state.correctStyle;\n    return (\n      <input\n        className=\"badge badge-rounded badge-rounded-bordered\"\n        style={style}\n        type=\"text\"\n        name=\"answer\"\n        defaultValue={this.state.answer}\n        onChange={this.handleInputChange}\n      />\n    );\n  }\n}\n\nFreeResponseInput.propTypes = {\n  problem: PropTypes.object,\n  answerStatus: PropTypes.object,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddFreeResponseAnswerToTest: (postBody, sectionId) => dispatch(addFreeResponseAnswerToTest(postBody, sectionId)),\n  };\n}\n\nconst withConnect = connect(null, mapDispatchToProps);\n\nexport default compose(withConnect)(FreeResponseInput);\n"]},"metadata":{},"sourceType":"module"}