{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Portal from '../../../Portal';\nimport ClickOffComponentWrapper from '../../../ClickOffComponentWrapper';\nimport Dropdown from '../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../utils/getValueFromState';\nimport InstructorToggleCard from './components/InstructorToggleCard';\nimport sampleInstructors from '../../../utils/sampleInstructors';\nvar locationOptions = [{\n  label: 'Any',\n  value: 'all'\n}, {\n  label: 'Location 2',\n  value: 'location2'\n}, {\n  label: 'Location 3',\n  value: 'location3'\n}];\n\nvar InstructorModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorModal, _React$Component);\n\n  function InstructorModal(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseModal\", function () {\n      return _this.setState({\n        selectedInstructors: []\n      }, _this.props.onClose);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleInstructorSelect\", function (instructor) {\n      var selectedInstructors = _this.state.selectedInstructors;\n\n      if (selectedInstructors.indexOf(instructor) === -1) {\n        _this.setState({\n          selectedInstructors: [].concat(_toConsumableArray(selectedInstructors), [instructor])\n        });\n      } else {\n        var updatedInstructors = update(selectedInstructors, {\n          $splice: [[selectedInstructors.indexOf(instructor), 1]]\n        });\n\n        _this.setState({\n          selectedInstructors: updatedInstructors\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetLocation\", function (location) {\n      return _this.setState({\n        location: location\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveInstructorChanges\", function () {\n      var selectedInstructors = _this.state.selectedInstructors;\n      var handleInstructorsChange = _this.props.handleInstructorsChange;\n      handleInstructorsChange(selectedInstructors);\n\n      _this.onCloseModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchChange\", function (_ref) {\n      var searchTerm = _ref.target.value;\n      return _this.setState({\n        searchTerm: searchTerm\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInstructors\", function () {\n      var _this$state = _this.state,\n          location = _this$state.location,\n          allInstructors = _this$state.instructors,\n          searchTerm = _this$state.searchTerm;\n      var instructors;\n\n      if (searchTerm) {\n        instructors = allInstructors.reduce(function (finalArr, currentInstructor) {\n          var instructorName = \"\".concat(currentInstructor.firstName).concat(currentInstructor.lastName).toLowerCase();\n\n          if (instructorName.indexOf(searchTerm) !== -1) {\n            finalArr.push(currentInstructor);\n          }\n\n          return finalArr;\n        }, []);\n      } else if (location === 'all') {\n        instructors = allInstructors;\n      } else {\n        instructors = allInstructors.filter(function (instructor) {\n          return instructor.location === location;\n        });\n      }\n\n      return instructors.map(function (instructor) {\n        return __jsx(InstructorToggleCard, {\n          key: instructor.email,\n          instructor: instructor,\n          onToggleInstructorSelect: _this.onToggleInstructorSelect\n        });\n      });\n    });\n\n    _this.state = {\n      open: false,\n      instructors: sampleInstructors,\n      location: 'all',\n      searchTerm: '',\n      selectedInstructors: []\n    };\n    return _this;\n  }\n\n  _createClass(InstructorModal, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.props.open;\n      var _this$state2 = this.state,\n          location = _this$state2.location,\n          searchTerm = _this$state2.searchTerm;\n      return __jsx(Portal, {\n        selector: \"#modal\"\n      }, open && __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"overlay\"\n      }, __jsx(ClickOffComponentWrapper, {\n        onOuterClick: this.onCloseModal\n      }, __jsx(\"div\", {\n        id: \"modal_Instructor1\",\n        className: \"jsx-3963704857\" + \" \" + \"modal modal-custom modal-location\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"card-modal card\"\n      }, __jsx(\"div\", {\n        style: {\n          backgroundColor: '#00456b',\n          color: '#fff'\n        },\n        className: \"jsx-3963704857\" + \" \" + \"owner-box card-panel card-panel-title\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"card-panel-row row\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"col\"\n      }, __jsx(\"h3\", {\n        className: \"jsx-3963704857\"\n      }, \"Select Instructor(s)\")))), __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"card-content\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"card-body\"\n      }, __jsx(\"span\", {\n        className: \"jsx-3963704857\" + \" \" + \"hint\"\n      }, \"Click to select or deselect.\"), __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"row-holder\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"search-field input-field\"\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        name: \"nameSearch\",\n        value: searchTerm,\n        onChange: this.handleSearchChange,\n        className: \"jsx-3963704857\" + \" \" + \"input-control validate\"\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"jsx-3963704857\" + \" \" + \"search-button\"\n      }, __jsx(\"i\", {\n        className: \"jsx-3963704857\" + \" \" + \"icon-search\"\n      })), __jsx(\"label\", {\n        htmlFor: \"name_search\",\n        className: \"jsx-3963704857\" + \" \" + ((searchTerm.length ? 'label active' : 'label') || \"\")\n      }, \"Search\")), __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(location, locationOptions),\n        onChange: this.onSetLocation,\n        options: locationOptions,\n        label: \"State\",\n        stateKey: \"state\",\n        dropdownKey: \"state\"\n      }))), __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"box-scrollable\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"height-40 jcf-scrollable\"\n      }, __jsx(\"div\", {\n        style: {\n          height: '100%',\n          overflowY: 'scroll'\n        },\n        className: \"jsx-3963704857\" + \" \" + \"card-location-holder\"\n      }, __jsx(\"ul\", {\n        className: \"jsx-3963704857\" + \" \" + \"checkbox-list\"\n      }, this.renderInstructors()))))), __jsx(\"div\", {\n        className: \"jsx-3963704857\" + \" \" + \"modal-footer\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onCloseModal,\n        className: \"jsx-3963704857\" + \" \" + \"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n      }, \"Cancel\"), __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onSaveInstructorChanges,\n        className: \"jsx-3963704857\" + \" \" + \"btn\"\n      }, \"Add\"))))))), __jsx(_JSXStyle, {\n        id: \"3963704857\"\n      }, [\".overlay.jsx-3963704857{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:1999;}\", \".card-modal.jsx-3963704857{margin:0;border-radius:6px;}\", \"#modal_Location1.jsx-3963704857{border-radius:6px;}\", \".modal.jsx-3963704857{display:block;background-color:white;position:absolute;top:10%;right:10%;left:10%;box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);}\", \".modal-custom.jsx-3963704857{opacity:1;visibility:visible;}\", \".modal-footer.jsx-3963704857{background-color:white;}\"]));\n    }\n  }]);\n\n  return InstructorModal;\n}(React.Component);\n\nexport default InstructorModal;","map":null,"metadata":{},"sourceType":"module"}