{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nconst API_URL = process.env.API_URL;\nimport { getToken } from '../../../utils/AuthService';\nexport const fetchClassesApi = () => fetch(`${API_URL}/api/classes`, {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  }\n}).then(res => res.json()).then(({\n  data\n}) => {\n  const classes = data.classes.map(item => ({\n    id: item.id,\n    summary: {\n      amount_students: item.students.length,\n      start_date: item.start_date,\n      end_date: item.end_date,\n      improvement: 123,\n      coursework_assigned: 60,\n      coursework_completed: 90,\n      problems_flagged_review: 40,\n      average_score: 1256,\n      achieved_target_score: 85,\n      average_practice_tests_completed: 1.8,\n      instruction: 14\n    },\n    accountInfo: {\n      start_date: item.start_date,\n      end_date: item.end_date,\n      active: false,\n      isExclude: item.exclude_from_statistics,\n      duration: item.duration\n    },\n    classInfo: {\n      className: item.name\n    },\n    location: {\n      locations: item.locations\n    },\n    instructor: {\n      instructors: item.instructors\n    },\n    student: {\n      students: item.students\n    }\n  }));\n  return classes;\n}).catch(err => err);\nexport const createClassApi = classroom => fetch(`${API_URL}/api/commands/create-classroom`, {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(classroom)\n}).then(res => res.json()).catch(err => err);\nexport const updateClassNameApi = body => fetch(`${API_URL}/api/commands/update-class-name`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateClassStartDateApi = body => fetch(`${API_URL}/api/commands/update-class-start-date`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateClassEndDateApi = body => fetch(`${API_URL}/api/commands/update-class-end-date`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateClassDurationApi = body => fetch(`${API_URL}/api/commands/update-class-duration`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport const updateClassExcludeFromStatisticsApi = body => fetch(`${API_URL}/api/commands/update-class-exclude-from-statistics`, {\n  method: \"PATCH\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  },\n  body: _JSON$stringify(body)\n}).then(res => res.json()).catch(err => err);\nexport default createClassApi;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Classes/index/api.js"],"names":["API_URL","process","env","getToken","fetchClassesApi","fetch","headers","Authorization","then","res","json","data","classes","map","item","id","summary","amount_students","students","length","start_date","end_date","improvement","coursework_assigned","coursework_completed","problems_flagged_review","average_score","achieved_target_score","average_practice_tests_completed","instruction","accountInfo","active","isExclude","exclude_from_statistics","duration","classInfo","className","name","location","locations","instructor","instructors","student","catch","err","createClassApi","classroom","method","Accept","body","updateClassNameApi","updateClassStartDateApi","updateClassEndDateApi","updateClassDurationApi","updateClassExcludeFromStatisticsApi"],"mappings":"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","sourcesContent":["const API_URL = process.env.API_URL;\nimport { getToken } from '../../../utils/AuthService';\n\nexport const fetchClassesApi = () =>\n  fetch(`${API_URL}/api/classes`, {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n  })\n    .then(res => res.json())\n    .then(({ data }) => {\n      const classes = data.classes.map(item => ({\n        id: item.id,\n        summary: {\n          amount_students: item.students.length,\n          start_date: item.start_date,\n          end_date: item.end_date,\n          improvement: 123,\n          coursework_assigned: 60,\n          coursework_completed: 90,\n          problems_flagged_review: 40,\n          average_score: 1256,\n          achieved_target_score: 85,\n          average_practice_tests_completed: 1.8,\n          instruction: 14,\n        },\n        accountInfo: {\n          start_date: item.start_date,\n          end_date: item.end_date,\n          active: false,\n          isExclude: item.exclude_from_statistics,\n          duration: item.duration,\n        },\n        classInfo: {\n          className: item.name,\n        },\n        location: {\n          locations: item.locations,\n        },\n        instructor: {\n          instructors: item.instructors,\n        },\n        student: {\n          students: item.students,\n        },\n      }));\n      return classes;\n    })\n    .catch(err => err);\n\nexport const createClassApi = (classroom) =>\n  fetch(`${API_URL}/api/commands/create-classroom`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(classroom),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateClassNameApi = body =>\n  fetch(`${API_URL}/api/commands/update-class-name`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateClassStartDateApi = body =>\n  fetch(`${API_URL}/api/commands/update-class-start-date`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateClassEndDateApi = body =>\n  fetch(`${API_URL}/api/commands/update-class-end-date`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateClassDurationApi = body =>\n  fetch(`${API_URL}/api/commands/update-class-duration`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\nexport const updateClassExcludeFromStatisticsApi = body =>\n  fetch(`${API_URL}/api/commands/update-class-exclude-from-statistics`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${getToken()}`,\n    },\n    body: JSON.stringify(body),\n  })\n    .then(res => res.json())\n    .catch(err => err);\n\n\nexport default createClassApi;\n"]},"metadata":{},"sourceType":"module"}