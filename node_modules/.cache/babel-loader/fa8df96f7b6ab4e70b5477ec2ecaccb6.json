{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCalendarCellClassName, getCalendarDayClassName } from '../../utils/dateAndCalendarUtils';\n\nvar CalendarRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarRow, _React$Component);\n\n  function CalendarRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CalendarRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CalendarRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignSessionModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          onToggleAssignSessionModal = _this$props.onToggleAssignSessionModal,\n          onToggleAddDropdown = _this$props.onToggleAddDropdown;\n      onToggleAssignSessionModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignLessonsModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props2 = _this.props,\n          onToggleAssignLessonsModal = _this$props2.onToggleAssignLessonsModal,\n          onToggleAddDropdown = _this$props2.onToggleAddDropdown;\n      onToggleAssignLessonsModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignWorksheetsModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props3 = _this.props,\n          onToggleAssignWorksheetsModal = _this$props3.onToggleAssignWorksheetsModal,\n          onToggleAddDropdown = _this$props3.onToggleAddDropdown;\n      onToggleAssignWorksheetsModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignTestSectionModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props4 = _this.props,\n          onToggleAssignTestSectionModal = _this$props4.onToggleAssignTestSectionModal,\n          onToggleAddDropdown = _this$props4.onToggleAddDropdown;\n      onToggleAssignTestSectionModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleAssignSimulatedSatModal\", function (event, date) {\n      event.preventDefault();\n      var _this$props5 = _this.props,\n          onToggleAssignSimulatedSatModal = _this$props5.onToggleAssignSimulatedSatModal,\n          onToggleAddDropdown = _this$props5.onToggleAddDropdown;\n      onToggleAssignSimulatedSatModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapDateLessons\", function (shouldMapLessons, lessons) {\n      if (shouldMapLessons) {\n        return lessons.map(function (lesson, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, lesson.completed && React.createElement(\"span\", {\n            className: \"event-check lesson-check\"\n          }, React.createElement(\"i\", {\n            className: \"icon-check02\"\n          })), React.createElement(\"span\", {\n            className: \"event event-lesson-box\"\n          }, lesson.title));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapDateWorksheets\", function (shouldMapWorksheets, worksheets) {\n      if (shouldMapWorksheets) {\n        return worksheets.map(function (worksheet, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, worksheet.completed && React.createElement(\"span\", {\n            className: \"event-check worksheet-check\"\n          }, React.createElement(\"i\", {\n            className: \"icon-check02\"\n          })), React.createElement(\"span\", {\n            className: \"event event-worksheet-box\"\n          }, worksheet.title));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapTestSections\", function (shouldMapTestSections, testSections) {\n      if (shouldMapTestSections) {\n        return testSections.map(function (testSection, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, React.createElement(\"span\", {\n            className: \"event event-test-box\"\n          }, \"Test Section: \", testSection.version));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapSimulatedSats\", function (shouldMapSimulatedSats, simulatedSat) {\n      if (shouldMapSimulatedSats) {\n        return simulatedSat.map(function (sat, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, React.createElement(\"span\", {\n            className: \"event event-sat-box\"\n          }, sat.version));\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapRowDates\", function () {\n      return _this.props.rows && _this.props.rows.map(function (rowDate) {\n        var _this$props6 = _this.props,\n            eventFilters = _this$props6.eventFilters,\n            activeDate = _this$props6.activeDate,\n            addDropdownOpen = _this$props6.addDropdownOpen,\n            deleteDropdownOpen = _this$props6.deleteDropdownOpen,\n            onSetActiveDate = _this$props6.onSetActiveDate,\n            onToggleAddDropdown = _this$props6.onToggleAddDropdown,\n            onToggleDeleteDropdown = _this$props6.onToggleDeleteDropdown,\n            activeColumn = _this$props6.activeColumn;\n        var date = rowDate.date,\n            dayDate = rowDate.dayDate,\n            calDate = rowDate.calDate,\n            activeDateKey = rowDate.activeDateKey,\n            inMonth = rowDate.inMonth,\n            _rowDate$sessions = rowDate.sessions,\n            sessions = _rowDate$sessions === void 0 ? [] : _rowDate$sessions,\n            _rowDate$lessons = rowDate.lessons,\n            lessons = _rowDate$lessons === void 0 ? [] : _rowDate$lessons,\n            _rowDate$worksheets = rowDate.worksheets,\n            worksheets = _rowDate$worksheets === void 0 ? [] : _rowDate$worksheets,\n            _rowDate$testSections = rowDate.testSections,\n            testSections = _rowDate$testSections === void 0 ? [] : _rowDate$testSections,\n            _rowDate$simulatedSat = rowDate.simulatedSat,\n            simulatedSat = _rowDate$simulatedSat === void 0 ? [] : _rowDate$simulatedSat;\n        var hasEvents = sessions.length > 0 || lessons.length > 0 || worksheets.length > 0 || testSections.length > 0 || simulatedSat.length > 0;\n        var inActiveColumn = activeDateKey && activeDateKey[13] === activeColumn;\n        var isActiveDate = activeDate === activeDateKey;\n        var hasEventFilters = eventFilters.length > 0;\n        var shouldMapSessions = !hasEventFilters && sessions.length || hasEventFilters && eventFilters.indexOf('sessions') !== -1;\n        var shouldMapLessons = !hasEventFilters && lessons.length || lessons.length && hasEventFilters && eventFilters.indexOf('lessons') !== -1;\n        var shouldMapWorksheets = !hasEventFilters && worksheets.length || worksheets.length && hasEventFilters && eventFilters.indexOf('worksheets') !== -1;\n        var shouldMapTestSections = !hasEventFilters && testSections.length || testSections.length && hasEventFilters && eventFilters.indexOf('testSections') !== -1;\n        var shouldMapSimulatedSats = !hasEventFilters && simulatedSat.length || simulatedSat.length && hasEventFilters && eventFilters.indexOf('simulatedSats') !== -1;\n\n        if (!inMonth) {\n          return React.createElement(\"td\", {\n            className: \"cal-cell1 cal-cell cal-day-outmonth\",\n            key: dayDate\n          }, React.createElement(\"div\", {\n            className: getCalendarDayClassName(date, inMonth, activeDateKey)\n          }, React.createElement(\"span\", {\n            className: \"day-date\"\n          }, dayDate), React.createElement(\"span\", {\n            className: \"cal-date\"\n          }, calDate)));\n        }\n\n        return React.createElement(\"td\", {\n          key: activeDateKey,\n          className: getCalendarCellClassName(hasEvents, inActiveColumn),\n          onClick: function onClick() {\n            return onSetActiveDate(activeDateKey);\n          }\n        }, React.createElement(\"div\", {\n          className: getCalendarDayClassName(date, inMonth, activeDateKey)\n        }, React.createElement(\"span\", {\n          className: \"day-date\"\n        }, dayDate), React.createElement(\"span\", {\n          className: \"cal-date\"\n        }, calDate), React.createElement(\"ul\", {\n          className: \"day-collapsible collapsible\"\n        }, React.createElement(\"li\", {\n          className: isActiveDate ? 'collapsible-holder active' : 'collapsible-holder',\n          style: {\n            transform: 'none'\n          }\n        }, React.createElement(\"div\", {\n          className: \"collapsible-header\",\n          style: {\n            display: inActiveColumn && isActiveDate ? 'none' : 'block'\n          }\n        }, React.createElement(\"span\", {\n          className: \"fake-close\"\n        }, React.createElement(\"span\", {\n          className: \"icon-close-thin\"\n        })), hasEvents ? React.createElement(\"ul\", {\n          className: \"events-list events-list-short\"\n        }, shouldMapSessions ? React.createElement(\"li\", {\n          className: \"event-frame event-title\"\n        }, React.createElement(\"span\", {\n          className: \"event-title-box\"\n        }, \"Session \", sessions.length)) : null, shouldMapLessons ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-lesson-box\"\n        }, \" \", lessons.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Lesson\", lessons.length > 1 && 's'))) : null, shouldMapWorksheets ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-worksheet-box\"\n        }, worksheets.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Worksheet\", worksheets.length > 1 && 's'))) : null, shouldMapTestSections ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-test-box\"\n        }, testSections.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Test Section\", testSections.length > 1 && 's'))) : null, shouldMapSimulatedSats ? React.createElement(\"li\", {\n          className: \"event-frame\"\n        }, React.createElement(\"span\", {\n          className: \"event event-sat-box\"\n        }, simulatedSat.length, \" \", React.createElement(\"span\", {\n          className: \"event-text\"\n        }, \"Simulated SAT\"))) : null) : null), React.createElement(\"div\", {\n          className: \"collapsible-body\",\n          style: {\n            opacity: inActiveColumn && isActiveDate ? '1' : '0',\n            visibility: inActiveColumn ? 'visible' : 'hidden'\n          }\n        }, hasEvents ? React.createElement(\"ul\", {\n          className: \"events-list\"\n        }, shouldMapSessions && sessions.map(function (session, index) {\n          return React.createElement(\"li\", {\n            className: \"event-frame\",\n            key: index\n          }, React.createElement(\"span\", {\n            className: \"event-title-box\"\n          }, session.title));\n        }), _this.mapDateLessons(shouldMapLessons, lessons), _this.mapDateWorksheets(shouldMapWorksheets, worksheets), _this.mapTestSections(shouldMapTestSections, testSections), _this.mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)) : null, React.createElement(\"div\", {\n          className: \"day-footer\"\n        }, React.createElement(\"ul\", {\n          className: \"links-list\"\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown_day_240119_add\",\n          onClick: onToggleAddDropdown,\n          className: \"link-add dropdown-trigger waves-effect waves-teal\"\n        }, \"Add\"), React.createElement(\"ul\", {\n          id: \"dropdown_day_240119_add\",\n          className: \"dropdown-content\",\n          style: {\n            display: addDropdownOpen ? 'block' : 'none',\n            opacity: addDropdownOpen ? '100' : '0'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignSessionModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Session\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignLessonsModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Lesson\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignWorksheetsModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Worksheet\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignTestSectionModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Test Section\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick(event) {\n            return _this.toggleAssignSimulatedSatModal(event, date);\n          },\n          className: \"modal-trigger\"\n        }, \"Simulated SAT\")))), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown_day_240119_delete\",\n          onClick: onToggleDeleteDropdown,\n          className: \"link-delete dropdown-trigger waves-effect waves-teal\"\n        }, \"Delete\"), React.createElement(\"ul\", {\n          id: \"dropdown_day_240119_delete\",\n          className: \"dropdown-content\",\n          style: {\n            display: deleteDropdownOpen ? 'block' : 'none',\n            opacity: deleteDropdownOpen ? '100' : '0'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_section\",\n          className: \"modal-trigger\"\n        }, \"Session\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_lesson\",\n          className: \"modal-trigger\"\n        }, \"Lesson\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_worksheet\",\n          className: \"modal-trigger\"\n        }, \"Worksheet\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#modal_edit_delete_test_section\",\n          className: \"modal-trigger\"\n        }, \"Test Section\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"disabled\"\n        }, \"Simulated SAT\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"disabled\"\n        }, \"Target Test\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"All\")))))))))));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CalendarRow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"tr\", {\n        className: \"cal-row-fluid\"\n      }, this.mapRowDates());\n    }\n  }]);\n\n  return CalendarRow;\n}(React.Component);\n\nCalendarRow.propTypes = {\n  activeDate: PropTypes.string,\n  activeColumn: PropTypes.string,\n  rows: PropTypes.array.isRequired,\n  eventFilters: PropTypes.array.isRequired,\n  onSetActiveDate: PropTypes.func.isRequired,\n  addDropdownOpen: PropTypes.bool.isRequired,\n  deleteDropdownOpen: PropTypes.bool.isRequired,\n  onToggleAddDropdown: PropTypes.func.isRequired,\n  onToggleDeleteDropdown: PropTypes.func.isRequired,\n  onToggleAssignSessionModal: PropTypes.func.isRequired,\n  onToggleAssignLessonsModal: PropTypes.func.isRequired,\n  onToggleAssignWorksheetsModal: PropTypes.func.isRequired,\n  onToggleAssignTestSectionModal: PropTypes.func.isRequired,\n  onToggleAssignSimulatedSatModal: PropTypes.func.isRequired\n};\nexport default CalendarRow;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Dashboard\\components\\CalendarRow\\index.js"],"names":["React","PropTypes","getCalendarCellClassName","getCalendarDayClassName","CalendarRow","event","date","preventDefault","props","onToggleAssignSessionModal","onToggleAddDropdown","onToggleAssignLessonsModal","onToggleAssignWorksheetsModal","onToggleAssignTestSectionModal","onToggleAssignSimulatedSatModal","shouldMapLessons","lessons","map","lesson","index","completed","title","shouldMapWorksheets","worksheets","worksheet","shouldMapTestSections","testSections","testSection","version","shouldMapSimulatedSats","simulatedSat","sat","rows","rowDate","eventFilters","activeDate","addDropdownOpen","deleteDropdownOpen","onSetActiveDate","onToggleDeleteDropdown","activeColumn","dayDate","calDate","activeDateKey","inMonth","sessions","hasEvents","length","inActiveColumn","isActiveDate","hasEventFilters","shouldMapSessions","indexOf","transform","display","opacity","visibility","session","mapDateLessons","mapDateWorksheets","mapTestSections","mapSimulatedSats","toggleAssignSessionModal","toggleAssignLessonsModal","toggleAssignWorksheetsModal","toggleAssignTestSectionModal","toggleAssignSimulatedSatModal","mapRowDates","Component","propTypes","string","array","isRequired","func","bool"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getCalendarCellClassName, getCalendarDayClassName } from '../../utils/dateAndCalendarUtils';\n\nclass CalendarRow extends React.Component {\n  toggleAssignSessionModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignSessionModal, onToggleAddDropdown } = this.props;\n    onToggleAssignSessionModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignLessonsModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignLessonsModal, onToggleAddDropdown } = this.props;\n    onToggleAssignLessonsModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignWorksheetsModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignWorksheetsModal, onToggleAddDropdown } = this.props;\n    onToggleAssignWorksheetsModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignTestSectionModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignTestSectionModal, onToggleAddDropdown } = this.props;\n    onToggleAssignTestSectionModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  toggleAssignSimulatedSatModal = (event, date) => {\n    event.preventDefault();\n    const { onToggleAssignSimulatedSatModal, onToggleAddDropdown } = this.props;\n    onToggleAssignSimulatedSatModal(event, date);\n    onToggleAddDropdown();\n  }\n\n  mapDateLessons = (shouldMapLessons, lessons) => {\n    if (shouldMapLessons) {\n      return lessons.map((lesson, index) => (\n        <li className=\"event-frame\" key={index}>\n          {lesson.completed && <span className=\"event-check lesson-check\"><i className=\"icon-check02\"></i></span>}\n          <span className=\"event event-lesson-box\">{lesson.title}</span>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapDateWorksheets = (shouldMapWorksheets, worksheets) => {\n    if (shouldMapWorksheets) {\n      return worksheets.map((worksheet, index) => (\n        <li className=\"event-frame\" key={index}>\n          {worksheet.completed && <span className=\"event-check worksheet-check\"><i className=\"icon-check02\"></i></span>}\n          <span className=\"event event-worksheet-box\">{worksheet.title}</span>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapTestSections = (shouldMapTestSections, testSections) => {\n    if (shouldMapTestSections) {\n      return testSections.map((testSection, index) => (\n        <li className=\"event-frame\" key={index}>\n          <span className=\"event event-test-box\">Test Section: {testSection.version}</span>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapSimulatedSats = (shouldMapSimulatedSats, simulatedSat) => {\n    if (shouldMapSimulatedSats) {\n      return simulatedSat.map((sat, index) => (\n        <li className=\"event-frame\" key={index}>\n          <span className=\"event event-sat-box\">{sat.version}</span>\n        </li>\n      ));\n    }\n    return null;\n  }\n\n  mapRowDates = () => this.props.rows && this.props.rows.map(rowDate => {\n    const { eventFilters, activeDate, addDropdownOpen, deleteDropdownOpen, onSetActiveDate, onToggleAddDropdown, onToggleDeleteDropdown, activeColumn } = this.props;\n    const { date, dayDate, calDate, activeDateKey, inMonth, sessions = [], lessons = [], worksheets = [], testSections = [], simulatedSat = [] } = rowDate;\n    const hasEvents = sessions.length > 0 || lessons.length > 0 || worksheets.length > 0 || testSections.length > 0 || simulatedSat.length > 0;\n    const inActiveColumn = activeDateKey && activeDateKey[13] === activeColumn;\n    const isActiveDate = activeDate === activeDateKey;\n    const hasEventFilters = eventFilters.length > 0;\n\n    const shouldMapSessions = (!hasEventFilters && sessions.length) || (hasEventFilters && eventFilters.indexOf('sessions') !== -1);\n    const shouldMapLessons = (!hasEventFilters && lessons.length) || (lessons.length && hasEventFilters && eventFilters.indexOf('lessons') !== -1);\n    const shouldMapWorksheets = (!hasEventFilters && worksheets.length) || (worksheets.length && hasEventFilters && eventFilters.indexOf('worksheets') !== -1);\n    const shouldMapTestSections = (!hasEventFilters && testSections.length) || (testSections.length && hasEventFilters && eventFilters.indexOf('testSections') !== -1);\n    const shouldMapSimulatedSats = (!hasEventFilters && simulatedSat.length) || (simulatedSat.length && hasEventFilters && eventFilters.indexOf('simulatedSats') !== -1);\n    if (!inMonth) {\n      return (\n        <td className=\"cal-cell1 cal-cell cal-day-outmonth\" key={dayDate}>\n          <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n            <span className=\"day-date\">{dayDate}</span>\n            <span className=\"cal-date\">{calDate}</span>\n          </div>\n        </td>\n      )\n    }\n    return (\n      <td key={activeDateKey} className={getCalendarCellClassName(hasEvents, inActiveColumn)} onClick={() => onSetActiveDate(activeDateKey)}>\n        <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n          <span className=\"day-date\">{dayDate}</span>\n          <span className=\"cal-date\">{calDate}</span>\n          <ul className=\"day-collapsible collapsible\">\n            <li className={isActiveDate ? 'collapsible-holder active' : 'collapsible-holder'} style={{ transform: 'none' }}>\n              <div className=\"collapsible-header\" style={{ display: inActiveColumn && isActiveDate ? 'none' : 'block'}}>\n                <span className=\"fake-close\"><span className=\"icon-close-thin\"></span></span>\n                <If condition={hasEvents}>\n                  <ul className=\"events-list events-list-short\">\n                    <If condition={shouldMapSessions}>\n                      <li className=\"event-frame event-title\">\n                        <span className=\"event-title-box\">Session {sessions.length}</span>\n                      </li>\n                    </If>\n                    <If condition={shouldMapLessons}>\n                      <li className=\"event-frame\">\n                        <span className=\"event event-lesson-box\"> {lessons.length} <span className=\"event-text\">Lesson{lessons.length > 1 && 's'}</span></span>\n                      </li>\n                    </If>\n                    <If condition={shouldMapWorksheets}>\n                      <li className=\"event-frame\">\n                        <span className=\"event event-worksheet-box\">{worksheets.length} <span className=\"event-text\">Worksheet{worksheets.length > 1 && 's'}</span></span>\n                      </li>\n                    </If>\n                    <If condition={shouldMapTestSections}>\n                      <li className=\"event-frame\">\n                        <span className=\"event event-test-box\">{testSections.length} <span className=\"event-text\">Test Section{testSections.length > 1 && 's'}</span></span>\n                      </li>\n                    </If>\n                    <If condition={shouldMapSimulatedSats}>\n                      <li className=\"event-frame\">\n                        <span className=\"event event-sat-box\">{simulatedSat.length} <span className=\"event-text\">Simulated SAT</span></span>\n                      </li>\n                    </If>\n                  </ul>\n                </If>\n              </div>\n              <div className=\"collapsible-body\" style={{ opacity: inActiveColumn && isActiveDate ? '1' : '0', visibility: inActiveColumn ? 'visible' : 'hidden' }}>\n                <If condition={hasEvents}>\n                  <ul className=\"events-list\">\n                    {shouldMapSessions && sessions.map((session, index) => (\n                      <li className=\"event-frame\" key={index}>\n                        <span className=\"event-title-box\">{session.title}</span>\n                      </li>\n                    ))}\n                    {this.mapDateLessons(shouldMapLessons, lessons)}\n                    {this.mapDateWorksheets(shouldMapWorksheets, worksheets)}\n                    {this.mapTestSections(shouldMapTestSections, testSections)}\n                    {this.mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)}\n                  </ul>\n                </If>\n                <div className=\"day-footer\">\n                  <ul className=\"links-list\">\n                    <li>\n                      <a\n                        href=\"#\"\n                        data-target='dropdown_day_240119_add'\n                        onClick={onToggleAddDropdown}\n                        className=\"link-add dropdown-trigger waves-effect waves-teal\"\n                      >\n                        Add\n                      </a>\n                      <ul\n                        id='dropdown_day_240119_add'\n                        className='dropdown-content'\n                        style={{ display: addDropdownOpen ? 'block' : 'none', opacity: addDropdownOpen ? '100' : '0' }}\n                      >\n                        <li><a href=\"#\" onClick={(event) => this.toggleAssignSessionModal(event, date)} className=\"modal-trigger\">Session</a></li>\n                        <li><a href=\"#\" onClick={(event) => this.toggleAssignLessonsModal(event, date)} className=\"modal-trigger\">Lesson</a></li>\n                        <li><a href=\"#\" onClick={(event) => this.toggleAssignWorksheetsModal(event, date)} className=\"modal-trigger\">Worksheet</a></li>\n                        <li><a href=\"#\" onClick={(event) => this.toggleAssignTestSectionModal(event, date)} className=\"modal-trigger\">Test Section</a></li>\n                        <li><a href=\"#\" onClick={(event) => this.toggleAssignSimulatedSatModal(event, date)} className=\"modal-trigger\">Simulated SAT</a></li>\n                      </ul>\n                    </li>\n                    <li>\n                      <a\n                        href=\"#\"\n                        data-target='dropdown_day_240119_delete'\n                        onClick={onToggleDeleteDropdown}\n                        className=\"link-delete dropdown-trigger waves-effect waves-teal\"\n                      >\n                        Delete\n                      </a>\n                      <ul\n                        id='dropdown_day_240119_delete'\n                        className='dropdown-content'\n                        style={{ display: deleteDropdownOpen ? 'block' : 'none', opacity: deleteDropdownOpen ? '100' : '0' }}\n                      >\n                        <li><a href=\"#modal_edit_delete_section\" className=\"modal-trigger\">Session</a></li>\n                        <li><a href=\"#modal_edit_delete_lesson\" className=\"modal-trigger\">Lesson</a></li>\n                        <li><a href=\"#modal_edit_delete_worksheet\" className=\"modal-trigger\">Worksheet</a></li>\n                        <li><a href=\"#modal_edit_delete_test_section\" className=\"modal-trigger\">Test Section</a></li>\n                        <li><a href=\"#!\" className=\"disabled\">Simulated SAT</a></li>\n                        <li><a href=\"#!\" className=\"disabled\">Target Test</a></li>\n                        <li><a href=\"#!\">All</a></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </td>\n    )\n  }\n)\n\n  render() {\n    return (\n      <tr className=\"cal-row-fluid\">\n        {this.mapRowDates()}\n      </tr>\n    )\n  }\n}\n\nCalendarRow.propTypes = {\n  activeDate: PropTypes.string,\n  activeColumn: PropTypes.string,\n  rows: PropTypes.array.isRequired,\n  eventFilters: PropTypes.array.isRequired,\n  onSetActiveDate: PropTypes.func.isRequired,\n  addDropdownOpen: PropTypes.bool.isRequired,\n  deleteDropdownOpen: PropTypes.bool.isRequired,\n  onToggleAddDropdown: PropTypes.func.isRequired,\n  onToggleDeleteDropdown: PropTypes.func.isRequired,\n  onToggleAssignSessionModal: PropTypes.func.isRequired,\n  onToggleAssignLessonsModal: PropTypes.func.isRequired,\n  onToggleAssignWorksheetsModal: PropTypes.func.isRequired,\n  onToggleAssignTestSectionModal: PropTypes.func.isRequired,\n  onToggleAssignSimulatedSatModal: PropTypes.func.isRequired,\n}\n\nexport default CalendarRow;\n"]},"metadata":{},"sourceType":"module"}