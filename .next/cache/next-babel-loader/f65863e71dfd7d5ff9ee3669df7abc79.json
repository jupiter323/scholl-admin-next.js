{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-did-update-set-state */\n\n/* eslint-disable react/no-did-mount-set-state */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport Portal from '../../../../Portal';\nimport TestVersionSettings from './components/TestVersionSettings';\nimport Settings from './components/Settings';\n\nclass EditTestModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleTestVersionSettingsChange\", event => {\n      const {\n        testVersion: {\n          sections\n        }\n      } = this.state;\n      let testVersion;\n\n      if (event.target) {\n        const {\n          target: {\n            name: setting\n          }\n        } = event;\n\n        if (sections[setting] !== undefined) {\n          testVersion = update(this.state.testVersion, {\n            sections: {\n              [setting]: {\n                $set: !sections[setting]\n              }\n            }\n          });\n        } else {\n          testVersion = update(this.state.testVersion, {\n            [setting]: {\n              $set: !this.state.testVersion[setting]\n            }\n          });\n        }\n      } else {\n        testVersion = update(this.state.testVersion, {\n          version: {\n            $set: event\n          }\n        });\n      }\n\n      this.setState({\n        testVersion\n      });\n    });\n\n    _defineProperty(this, \"handleSettingsChange\", event => {\n      const {\n        settings: previousSettings\n      } = this.state;\n      const {\n        target: {\n          name: setting\n        }\n      } = event;\n      const settings = update(this.state.settings, {\n        [setting]: {\n          $set: !previousSettings[setting]\n        }\n      });\n      this.setState({\n        settings\n      });\n    });\n\n    _defineProperty(this, \"handleDatePickerChange\", (field, value) => {\n      const settings = update(this.state.settings, {\n        [field]: {\n          $set: value\n        }\n      });\n      this.setState({\n        settings\n      });\n    });\n\n    _defineProperty(this, \"saveTestChanges\", () => {\n      const {\n        onSaveTestChanges\n      } = this.props;\n      const {\n        testVersion,\n        settings: {\n          testDate: unformattedTestDate,\n          dueDate: unformattedDueDate,\n          allowStudentToEnterAnswers,\n          timed\n        }\n      } = this.state;\n      const testDate = moment(unformattedTestDate).format('MM/DD/YY');\n      const dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n      onSaveTestChanges(testVersion, {\n        testDate,\n        dueDate,\n        allowStudentToEnterAnswers,\n        timed\n      });\n    });\n\n    this.state = {\n      testVersion: {\n        version: '',\n        sections: {\n          reading: false,\n          writing: false,\n          math: false,\n          essay: false\n        },\n        includeScoreInImprovementMetrics: false\n      },\n      settings: {\n        testDate: '',\n        dueDate: '',\n        allowStudentToEnterAnswers: false,\n        timed: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      test: {\n        testDate: unformattedTestDate,\n        dueDate: unformattedDueDate\n      }\n    } = this.props;\n    const testDate = new Date(unformattedTestDate);\n    const dueDate = unformattedDueDate ? new Date(unformattedDueDate) : '';\n    const settings = update(this.state.settings, {\n      testDate: {\n        $set: testDate\n      },\n      dueDate: {\n        $set: dueDate\n      }\n    });\n    this.setState({\n      settings\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      test: {\n        testDate: unformattedTestDate,\n        dueDate: unformattedDueDate\n      }\n    } = this.props;\n    const testDate = new Date(unformattedTestDate);\n    const dueDate = unformattedDueDate ? new Date(unformattedDueDate) : '';\n\n    if (prevProps.test.id !== this.props.test.id) {\n      const settings = update(this.state.settings, {\n        testDate: {\n          $set: testDate\n        },\n        dueDate: {\n          $set: dueDate\n        }\n      });\n      this.setState({\n        settings\n      });\n    }\n  }\n\n  render() {\n    const {\n      test,\n      user,\n      onDeleteTest\n    } = this.props;\n    const {\n      title,\n      version: testVersion,\n      completionDate,\n      completionTime\n    } = test;\n    const {\n      studentInformation: {\n        firstName,\n        lastName\n      }\n    } = user;\n    const {\n      testVersion: {\n        sections: {\n          reading,\n          writing,\n          math,\n          essay\n        },\n        version,\n        includeScoreInImprovementMetrics\n      },\n      settings: {\n        testDate,\n        dueDate,\n        allowStudentToEnterAnswers,\n        timed\n      }\n    } = this.state;\n    return React.createElement(Portal, {\n      selector: \"#modal\"\n    }, React.createElement(\"div\", {\n      className: \"main-holder grey lighten-5 modal\",\n      style: {\n        zIndex: '1003',\n        display: 'block',\n        position: 'absolute',\n        top: '0',\n        width: '100%'\n      }\n    }, React.createElement(\"div\", {\n      className: \"header-row card-panel light-blue lighten-1 white-text\"\n    }, React.createElement(\"div\", {\n      className: \"card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"icon-col col s1\"\n    }, React.createElement(\"i\", {\n      className: \"icon-letter-a\"\n    })), React.createElement(\"div\", {\n      className: \"col s9\"\n    }, React.createElement(\"div\", {\n      className: \"card-panel-text center-align\"\n    }, React.createElement(\"div\", {\n      className: \"text-xlarge\"\n    }, title), React.createElement(\"div\", {\n      className: \"text-small\"\n    }, \"Version: SAT Practice Test #\", testVersion))), React.createElement(\"div\", {\n      className: \"col s1 right-align\"\n    }, React.createElement(\"div\", {\n      className: \"row icons-row\"\n    }, \"\\xA0\"))), React.createElement(\"div\", {\n      className: \"header-row-block card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"col s3\"\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"col s9 right-align\"\n    }, React.createElement(\"div\", null, React.createElement(\"span\", {\n      className: \"name\"\n    }, firstName, \" \", lastName))))), React.createElement(\"div\", {\n      className: \"nav-header white\"\n    }, React.createElement(\"div\", {\n      className: \"nav-additional\"\n    }, React.createElement(\"ul\", {\n      className: \"menu-additional\"\n    }, React.createElement(\"li\", {\n      className: \"col s3\"\n    }, React.createElement(\"a\", {\n      className: \"active\",\n      href: \"#\"\n    }, \"Scores\")), React.createElement(\"li\", {\n      className: \"col s3\"\n    }, React.createElement(\"a\", {\n      href: \"#\"\n    }, \"Answer Sheet\")), React.createElement(\"li\", {\n      className: \"col s3\"\n    }, React.createElement(\"a\", {\n      href: \"#\"\n    }, \"Strengths & Weaknesses\")), React.createElement(\"li\", {\n      className: \"col s3\"\n    }, React.createElement(\"a\", {\n      href: \"#\"\n    }, \"Test Version\")), React.createElement(\"li\", {\n      className: \"menu-special col s3\"\n    }, React.createElement(\"a\", {\n      href: \"#\"\n    }, \"Download Score Report \", React.createElement(\"i\", {\n      className: \"icon-download-file\"\n    })))))), React.createElement(\"div\", {\n      className: \"content-section\"\n    }, React.createElement(\"div\", {\n      className: \"content-section-holder\"\n    }, React.createElement(\"div\", {\n      className: \"container-xsmall\"\n    }, React.createElement(\"div\", {\n      className: \"row d-flex-content card-width-322\"\n    }, React.createElement(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, React.createElement(TestVersionSettings, {\n      version: version,\n      reading: reading,\n      writing: writing,\n      math: math,\n      essay: essay,\n      includeScoreInImprovementMetrics: includeScoreInImprovementMetrics,\n      handleTestVersionSettingsChange: this.handleTestVersionSettingsChange\n    }), React.createElement(Settings, {\n      timed: timed,\n      testDate: testDate,\n      dueDate: dueDate,\n      handleSettingsChange: this.handleSettingsChange,\n      handleDatePickerChange: this.handleDatePickerChange,\n      allowStudentToEnterAnswers: allowStudentToEnterAnswers\n    })), React.createElement(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, React.createElement(\"h2\", null, \"Status\"), React.createElement(\"div\", {\n      className: \"card card-test-detail\"\n    }, React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"div\", {\n      className: \"meta-info\"\n    }, completionDate.length ? React.createElement(\"p\", null, \"Completed : \", React.createElement(\"time\", {\n      dateTime: \"2018-12-29\"\n    }, completionDate, \" at \", completionTime), completionDate.length && test.dueDate < completionDate ? React.createElement(\"span\", {\n      className: \"badge white-text badge-rounded-sm\",\n      style: {\n        backgroundColor: '#db1d41'\n      }\n    }, React.createElement(\"b\", {\n      className: \"badge-text\"\n    }, \"late\")) : null) : null, React.createElement(\"p\", null, \"Answers Entered by: \", firstName, \" \", lastName, \" (student)\")))))), React.createElement(\"div\", {\n      className: \"btn-holder\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"btn\",\n      onClick: this.saveTestChanges\n    }, \"Save\"), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-teal btn-flat pink-text text-darken-1\",\n      onClick: onDeleteTest\n    }, \"Delete\")))))));\n  }\n\n}\n\nexport default EditTestModal;","map":null,"metadata":{},"sourceType":"module"}