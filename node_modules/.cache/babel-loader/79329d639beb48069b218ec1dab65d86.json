{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport { calendarMap, currentMonthIndex } from '../../utils/dateAndCalendarUtils'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar CalendarHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarHeader, _React$Component);\n\n  function CalendarHeader() {\n    _classCallCheck(this, CalendarHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CalendarHeader).apply(this, arguments));\n  }\n\n  _createClass(CalendarHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeMonth = _this$props.activeMonth,\n          onSetActiveMonth = _this$props.onSetActiveMonth;\n      return React.createElement(\"div\", {\n        className: \"calendar-header\",\n        style: {\n          zIndex: '9'\n        }\n      }, React.createElement(\"div\", {\n        className: \"calendar-view-switcher\"\n      }, React.createElement(\"ul\", {\n        className: \"switcher\"\n      }, React.createElement(\"li\", {\n        className: \"active col\",\n        \"data-view\": \"view-month\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Month View\")), React.createElement(\"li\", {\n        className: \"col\",\n        \"data-view\": \"view-day\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Day View\")))), React.createElement(\"div\", {\n        className: \"nav-slick-calendar\",\n        style: {\n          opacity: '1'\n        }\n      }, React.createElement(Slider, {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        initialSlide: currentMonthIndex,\n        onInit: function onInit() {\n          return onSetActiveMonth(currentMonthIndex);\n        },\n        afterChange: onSetActiveMonth,\n        nextArrow: React.createElement(\"div\", null, calendarMap[activeMonth + 2]),\n        prevArrow: React.createElement(\"div\", null, calendarMap[activeMonth])\n      }, React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"January\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"February\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"March\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"April\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"May\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"June\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"July\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"August\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"September\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"October\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"November\"), React.createElement(\"div\", {\n        className: \"slide\"\n      }, \"December\"))));\n    }\n  }]);\n\n  return CalendarHeader;\n}(React.Component);\n\nCalendarHeader.propTypes = {\n  activeMonth: PropTypes.number.isRequired,\n  onSetActiveMonth: PropTypes.func.isRequired\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Dashboard/components/CalendarHeader/index.js"],"names":["React","PropTypes","Slider","calendarMap","currentMonthIndex","CalendarHeader","props","activeMonth","onSetActiveMonth","zIndex","opacity","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","onInit","afterChange","nextArrow","prevArrow","Component","propTypes","number","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,kCAA/C,C,CAEA;;IACMC,c;;;;;;;;;;;;;6BACK;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,gBADd,eACcA,gBADd;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAAxC,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAA2B,qBAAU;AAArC,SAAkD;AAAG,QAAA,IAAI,EAAC;AAAR,sBAAlD,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAoB,qBAAU;AAA9B,SAAyC;AAAG,QAAA,IAAI,EAAC;AAAR,oBAAzC,CAFF,CADF,CADF,EAOE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAA3C,SACE,oBAAC,MAAD,EAEK;AACDC,QAAAA,IAAI,EAAE,KADL;AAEDC,QAAAA,QAAQ,EAAE,IAFT;AAGDC,QAAAA,KAAK,EAAE,GAHN;AAIDC,QAAAA,YAAY,EAAE,CAJb;AAKDC,QAAAA,cAAc,EAAE,CALf;AAMDC,QAAAA,YAAY,EAAEZ,iBANb;AAODa,QAAAA,MAAM,EAAE;AAAA,iBAAMT,gBAAgB,CAACJ,iBAAD,CAAtB;AAAA,SAPP;AAQDc,QAAAA,WAAW,EAAEV,gBARZ;AASDW,QAAAA,SAAS,EAAE,iCAAMhB,WAAW,CAACI,WAAW,GAAG,CAAf,CAAjB,CATV;AAUDa,QAAAA,SAAS,EAAE,iCAAMjB,WAAW,CAACI,WAAD,CAAjB;AAVV,OAFL,EAeE;AAAK,QAAA,SAAS,EAAC;AAAf,mBAfF,EAgBE;AAAK,QAAA,SAAS,EAAC;AAAf,oBAhBF,EAiBE;AAAK,QAAA,SAAS,EAAC;AAAf,iBAjBF,EAkBE;AAAK,QAAA,SAAS,EAAC;AAAf,iBAlBF,EAmBE;AAAK,QAAA,SAAS,EAAC;AAAf,eAnBF,EAoBE;AAAK,QAAA,SAAS,EAAC;AAAf,gBApBF,EAqBE;AAAK,QAAA,SAAS,EAAC;AAAf,gBArBF,EAsBE;AAAK,QAAA,SAAS,EAAC;AAAf,kBAtBF,EAuBE;AAAK,QAAA,SAAS,EAAC;AAAf,qBAvBF,EAwBE;AAAK,QAAA,SAAS,EAAC;AAAf,mBAxBF,EAyBE;AAAK,QAAA,SAAS,EAAC;AAAf,oBAzBF,EA0BE;AAAK,QAAA,SAAS,EAAC;AAAf,oBA1BF,CADF,CAPF,CADF;AAwCD;;;;EA3C0BP,KAAK,CAACqB,S;;AA8CnChB,cAAc,CAACiB,SAAf,GAA2B;AACzBf,EAAAA,WAAW,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UADL;AAEzBhB,EAAAA,gBAAgB,EAAEP,SAAS,CAACwB,IAAV,CAAeD;AAFR,CAA3B;AAKA,eAAenB,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\n\nimport { calendarMap, currentMonthIndex } from '../../utils/dateAndCalendarUtils';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass CalendarHeader extends React.Component {\n  render() {\n    const { activeMonth, onSetActiveMonth } = this.props;\n    return (\n      <div className=\"calendar-header\" style={{ zIndex: '9' }}>\n        <div className=\"calendar-view-switcher\">\n          <ul className=\"switcher\">\n            <li className=\"active col\" data-view=\"view-month\"><a href=\"#\">Month View</a></li>\n            <li className=\"col\" data-view=\"view-day\"><a href=\"#\">Day View</a></li>\n          </ul>\n        </div>\n        <div className=\"nav-slick-calendar\" style={{ opacity: '1' }}>\n          <Slider\n          {\n            ...{\n              dots: false,\n              infinite: true,\n              speed: 500,\n              slidesToShow: 1,\n              slidesToScroll: 1,\n              initialSlide: currentMonthIndex,\n              onInit: () => onSetActiveMonth(currentMonthIndex),\n              afterChange: onSetActiveMonth,\n              nextArrow: <div>{calendarMap[activeMonth + 2]}</div>,\n              prevArrow: <div>{calendarMap[activeMonth]}</div>,\n            }\n          }>\n            <div className=\"slide\">January</div>\n            <div className=\"slide\">February</div>\n            <div className=\"slide\">March</div>\n            <div className=\"slide\">April</div>\n            <div className=\"slide\">May</div>\n            <div className=\"slide\">June</div>\n            <div className=\"slide\">July</div>\n            <div className=\"slide\">August</div>\n            <div className=\"slide\">September</div>\n            <div className=\"slide\">October</div>\n            <div className=\"slide\">November</div>\n            <div className=\"slide\">December</div>\n          </Slider>\n        </div>\n      </div>\n    );\n  }\n}\n\nCalendarHeader.propTypes = {\n  activeMonth: PropTypes.number.isRequired,\n  onSetActiveMonth: PropTypes.func.isRequired,\n}\n\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}