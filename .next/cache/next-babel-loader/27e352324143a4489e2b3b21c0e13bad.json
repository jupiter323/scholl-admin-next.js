{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../utils/sampleTopics';\nimport worksheetSortOptions from '../../../../../utils/worksheetSortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        topic: ''\n      }, _this.props.onClearFilters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var _this$props = _this.props,\n          onSetFilteredTopicState = _this$props.onSetFilteredTopicState,\n          onUnsetFilteredTopicState = _this$props.onUnsetFilteredTopicState,\n          onSetSort = _this$props.onSetSort;\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'topic') {\n        if (event === '') {\n          return onUnsetFilteredTopicState();\n        }\n\n        return onSetFilteredTopicState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props2 = _this.props,\n          onSetFilteredState = _this$props2.onSetFilteredState,\n          onUnsetFilteredState = _this$props2.onUnsetFilteredState;\n      var worksheetName = _this.state.worksheetName;\n\n      if (worksheetName === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedName = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _this.state = {\n      open: false,\n      worksheetName: '',\n      topic: '',\n      sort: {}\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          worksheetName = _this$state.worksheetName,\n          topic = _this$state.topic,\n          sort = _this$state.sort;\n      var _this$props3 = this.props,\n          currentView = _this$props3.currentView,\n          onChangeView = _this$props3.onChangeView,\n          handleFilterClick = _this$props3.handleFilterClick,\n          subjectFilters = _this$props3.subjectFilters,\n          difficultyFilters = _this$props3.difficultyFilters,\n          typeFilters = _this$props3.typeFilters,\n          sourceFilters = _this$props3.sourceFilters;\n      return __jsx(\"div\", {\n        className: \"filter-form-holder\"\n      }, __jsx(\"ul\", {\n        className: \"collapsible expandable\"\n      }, __jsx(\"li\", null, __jsx(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, __jsx(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"reading\",\n        id: \"reading\",\n        checked: subjectFilters.indexOf('reading') !== -1,\n        onChange: function onChange(_ref2) {\n          var target = _ref2.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"reading\"\n      }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"writing\",\n        id: \"writing\",\n        checked: subjectFilters.indexOf('writing') !== -1,\n        onChange: function onChange(_ref3) {\n          var target = _ref3.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"writing\"\n      }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"math\",\n        id: \"math\",\n        checked: subjectFilters.indexOf('math') !== -1,\n        onChange: function onChange(_ref4) {\n          var target = _ref4.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"math\"\n      }, \"Math\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"mixedSubject\",\n        id: \"mixedSubject\",\n        checked: subjectFilters.indexOf('mixedSubject') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'mixedSubject');\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"mixedSubject\"\n      }, \"Mixed\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"basic\",\n        id: \"basic\",\n        checked: difficultyFilters.indexOf('basic') !== -1,\n        onChange: function onChange(_ref5) {\n          var target = _ref5.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"basic\"\n      }, \"Basic\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"medium\",\n        id: \"medium\",\n        checked: difficultyFilters.indexOf('medium') !== -1,\n        onChange: function onChange(_ref6) {\n          var target = _ref6.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"medium\"\n      }, \"Medium\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"advanced\",\n        id: \"advanced\",\n        checked: difficultyFilters.indexOf('advanced') !== -1,\n        onChange: function onChange(_ref7) {\n          var target = _ref7.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"advanced\"\n      }, \"Advanced\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        name: \"mixedDifficulty\",\n        id: \"mixedDifficulty\",\n        checked: difficultyFilters.indexOf('mixedDifficulty') !== -1,\n        onChange: function onChange(_ref8) {\n          var target = _ref8.target;\n          return handleFilterClick('difficulty', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"mixedDifficulty\"\n      }, \"Mixed\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"skillBuilders\",\n        name: \"skillBuilders\",\n        checked: typeFilters.indexOf('skillBuilders') !== -1,\n        onChange: function onChange(_ref9) {\n          var target = _ref9.target;\n          return handleFilterClick('type', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"skillBuilders\"\n      }, \"Skill Builders\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"satPractice\",\n        name: \"satPractice\",\n        checked: typeFilters.indexOf('satPractice') !== -1,\n        onChange: function onChange(_ref10) {\n          var target = _ref10.target;\n          return handleFilterClick('type', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"satPractice\"\n      }, \"SAT Practice\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"mixedType\",\n        name: \"mixedType\",\n        checked: typeFilters.indexOf('mixedType') !== -1,\n        onChange: function onChange(_ref11) {\n          var target = _ref11.target;\n          return handleFilterClick('type', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"mixedType\"\n      }, \"Mixed\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"builtIn\",\n        name: \"builtIn\",\n        checked: sourceFilters.indexOf('builtIn') !== -1,\n        onChange: function onChange(_ref12) {\n          var target = _ref12.target;\n          return handleFilterClick('source', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"builtIn\"\n      }, \"Built-In\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"userCreated\",\n        name: \"userCreated\",\n        checked: sourceFilters.indexOf('userCreated') !== -1,\n        onChange: function onChange(_ref13) {\n          var target = _ref13.target;\n          return handleFilterClick('source', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"userCreated\"\n      }, \"User Created\")))), __jsx(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"search-field input-field\"\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"name_search\",\n        value: worksheetName,\n        className: \"input-control validate\",\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'worksheetName');\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, __jsx(\"i\", {\n        className: \"icon-search\"\n      })), __jsx(\"label\", {\n        className: worksheetName.length ? 'label active' : 'label',\n        htmlFor: \"name_search\"\n      }, \"Search\"))), __jsx(\"div\", {\n        className: \"col s12 m3\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(topic, sampleTopics),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'topic');\n        },\n        options: sampleTopics,\n        label: \"Topic\",\n        stateKey: \"topic\",\n        dropdownKey: \"topic\"\n      }))))), __jsx(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 xl7\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(Dropdown, {\n        value: getValueFromState(sort, worksheetSortOptions),\n        onChange: function onChange(event) {\n          return _this2.handleFilterChange(event, 'sort');\n        },\n        options: worksheetSortOptions,\n        label: \"Sort By\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), __jsx(\"div\", {\n        className: \"switcher-block col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"view-switcher\"\n      }, __jsx(\"ul\", {\n        className: \"switcher center-align\"\n      }, __jsx(\"li\", {\n        \"data-view\": \"view-full\",\n        className: currentView === 'full' ? 'active' : '',\n        onClick: function onClick() {\n          return onChangeView('full');\n        }\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, \"Full View\")), __jsx(\"li\", {\n        \"data-view\": \"view-list\",\n        className: currentView === 'list' ? 'active' : '',\n        onClick: function onClick() {\n          return onChangeView('list');\n        }\n      }, __jsx(\"a\", {\n        href: \"#\"\n      }, \"List View\"))))), __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"option-filters\"\n      }, __jsx(\"div\", {\n        className: \"option-item clear\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), __jsx(\"div\", {\n        className: \"option-item\"\n      }, __jsx(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, __jsx(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}