{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport sampleWorksheets from '../utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../utils/sortFunctions';\nimport { worksheetTypeMap, worksheetSourceMap, worksheetDifficultyMap, worksheetSubjectMap } from '../utils/worksheetFilterMap';\n\nvar ListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListPage, _React$Component);\n\n  function ListPage(props) {\n    var _this;\n\n    _classCallCheck(this, ListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        worksheetsAreFiltered: false,\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (filterTopic) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterTopic: filterTopic\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredTopicState\", function () {\n      return _this.setState({\n        filterTopic: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        subjectFilters: [],\n        difficultyFilters: [],\n        typeFilters: [],\n        sourceFilters: [],\n        workbookFilters: [],\n        topicFilter: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignWorksheet\", function (assignType) {\n      console.warn('Stubbed out assign worksheet click', assignType);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          worksheets = _this$state.worksheets,\n          filterName = _this$state.filterName;\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var _currentWorksheet$acc = currentWorksheet.accountInfo,\n            lastName = _currentWorksheet$acc.lastName,\n            firstName = _currentWorksheet$acc.firstName;\n        var worksheetString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByTopic\", function () {\n      var preFilteredWorksheets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allWorksheets = _this$state2.worksheets,\n          filterTopic = _this$state2.filterTopic;\n      var worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var topic = currentWorksheet.topic;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortWorksheets\", function (worksheets) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'dueDate':\n          return worksheets.sort(dueDate);\n\n        case 'assignDate':\n          return worksheets.sort(assignDate);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'completed':\n          return worksheets.sort(completed);\n\n        case 'flags':\n          return worksheets.sort(flags);\n\n        case 'score':\n          return worksheets.sort(score);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterWorksheets\", function () {\n      var _this$state3 = _this.state,\n          subjectFilters = _this$state3.subjectFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          typeFilters = _this$state3.typeFilters,\n          sourceFilters = _this$state3.sourceFilters,\n          allWorksheets = _this$state3.worksheets;\n      var worksheets = allWorksheets;\n\n      if (subjectFilters.length) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return subjectFilters.indexOf(worksheetSubjectMap[worksheet.subject]) !== -1;\n        });\n      }\n\n      if (typeFilters.length && typeFilters.indexOf('mixedType') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return typeFilters.indexOf(worksheetTypeMap[worksheet.problemType]) !== -1;\n        });\n      }\n\n      if (sourceFilters.length) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return sourceFilters.indexOf(worksheetSourceMap[worksheet.worksheetSource]) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length && difficultyFilters.indexOf('mixedDifficulty') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return difficultyFilters.indexOf(worksheetDifficultyMap[worksheet.difficulty]) !== -1;\n        });\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableWorksheets\", function () {\n      var _this$state4 = _this.state,\n          filterName = _this$state4.filterName,\n          filterTopic = _this$state4.filterTopic,\n          allWorksheets = _this$state4.worksheets,\n          sort = _this$state4.sort,\n          subjectFilters = _this$state4.subjectFilters,\n          difficultyFilters = _this$state4.difficultyFilters,\n          typeFilters = _this$state4.typeFilters,\n          sourceFilters = _this$state4.sourceFilters;\n      var worksheets;\n\n      if (filterName.length && !filterTopic.length) {\n        worksheets = _this.onFilterByName();\n      } else if (!filterName.length && filterTopic.length) {\n        worksheets = _this.onFilterByTopic();\n      } else if (filterName.length && filterTopic.length) {\n        var filteredByName = _this.onFilterByName();\n\n        worksheets = _this.onFilterByTopic(filteredByName);\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      if (subjectFilters.length || difficultyFilters.length || typeFilters.length || sourceFilters.length) {\n        worksheets = _this.onFilterWorksheets();\n      }\n\n      if (sort) {\n        return _this.onSortWorksheets(worksheets);\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentSubjectFilters = _this$state5.subjectFilters,\n          currentDifficultyFilters = _this$state5.difficultyFilters,\n          currentTypeFilters = _this$state5.typeFilters,\n          currentSourceFilters = _this$state5.sourceFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'type':\n          modifiedFilterCurrentState = currentTypeFilters;\n          modifiedFilterName = 'typeFilters';\n          break;\n\n        case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n\n        default:\n          break;\n      }\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderWorksheetView\", function () {\n      var currentView = _this.state.currentView;\n      var onSetActiveWorksheet = _this.props.onSetActiveWorksheet;\n\n      switch (currentView) {\n        case 'list':\n          return React.createElement(ListView, {\n            onSetActiveWorksheet: onSetActiveWorksheet,\n            worksheets: _this.getMappableWorksheets()\n          });\n\n        case 'full':\n          return React.createElement(FullView, {\n            onSetActiveWorksheet: onSetActiveWorksheet,\n            worksheets: _this.getMappableWorksheets()\n          });\n\n        default:\n          break;\n      }\n    });\n\n    _this.state = {\n      sort: '',\n      subjectFilters: [],\n      difficultyFilters: [],\n      typeFilters: [],\n      sourceFilters: [],\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      worksheets: sampleWorksheets\n    };\n    return _this;\n  }\n\n  _createClass(ListPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          currentView = _this$state6.currentView,\n          subjectFilters = _this$state6.subjectFilters,\n          difficultyFilters = _this$state6.difficultyFilters,\n          typeFilters = _this$state6.typeFilters,\n          sourceFilters = _this$state6.sourceFilters;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-sheets-w\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"Custom Worksheet Library\")))), React.createElement(FilterSection, {\n        currentView: currentView,\n        typeFilters: typeFilters,\n        sourceFilters: sourceFilters,\n        subjectFilters: subjectFilters,\n        difficultyFilters: difficultyFilters,\n        onSetSort: this.onSetSort,\n        onChangeView: this.onChangeView,\n        onClearFilters: this.onClearFilters,\n        handleFilterClick: this.handleFilterClick,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        onUnsetFilteredTopicState: this.onUnsetFilteredTopicState\n      }), this.renderWorksheetView(), React.createElement(\"div\", {\n        className: \"add-btn-block\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n        \"data-target\": \"dropdown_assign_selected\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \" Custom Worksheet\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign_selected\",\n        className: \"dropdown-content dropdown-small\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Create New\")))));\n    }\n  }]);\n\n  return ListPage;\n}(React.Component);\n\nexport default ListPage;","map":null,"metadata":{},"sourceType":"module"}