{"ast":null,"code":"import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nvar _data = function data(score) {\n  return {\n    datasets: [{\n      data: [score, 1600 - score],\n      backgroundColor: \"#eaeaea\"\n    }]\n  };\n}; // eslint-disable-next-line react/prop-types\n\n\nvar TotalScoreCard = function TotalScoreCard(_ref) {\n  var testScores = _ref.testScores;\n  return React.createElement(\"div\", {\n    className: \"col s12 l6 card-width-546\"\n  }, React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h2\", null, \"Your Score \", React.createElement(\"span\", {\n    className: \"separator\"\n  }, \"|\"), \" \", React.createElement(\"span\", {\n    className: \"quantity\"\n  }, \"400 to 1600\")), React.createElement(\"div\", {\n    className: \"card-main-full card\"\n  }, React.createElement(\"div\", {\n    className: \"card-content center-align\"\n  }, React.createElement(\"div\", {\n    className: \"chart-block chart-block-total\"\n  }, React.createElement(Doughnut, {\n    data: function data() {\n      return _data(testScores.totalScore);\n    },\n    options: {\n      circumference: 1 * Math.PI,\n      rotation: 1 * Math.PI,\n      cutoutPercentage: 60,\n      tooltips: false\n    }\n  }), React.createElement(\"div\", {\n    className: \"chart-text\"\n  }, React.createElement(\"span\", {\n    className: \"title\"\n  }, \"Total Score\"), React.createElement(\"span\", {\n    className: \"value\"\n  }, testScores.totalScore), React.createElement(\"span\", {\n    className: \"description\"\n  }, \"(+220)\")))))));\n};\n\nTotalScoreCard.PropTypes = {\n  testScores: PropTypes.object.isRequired\n};\nexport default TotalScoreCard;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestScorePage\\components\\TotalScoreCard\\index.js"],"names":["React","Doughnut","PropTypes","data","score","datasets","backgroundColor","TotalScoreCard","testScores","totalScore","circumference","Math","PI","rotation","cutoutPercentage","tooltips","object","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,IAAMC,KAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SAAY;AACvBC,IAAAA,QAAQ,EAAE,CAAC;AACTF,MAAAA,IAAI,EAAE,CAACC,KAAD,EAAQ,OAAKA,KAAb,CADG;AAETE,MAAAA,eAAe,EAAE;AAFR,KAAD;AADa,GAAZ;AAAA,CAAb,C,CAOA;;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,SACrB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,+CAAe;AAAM,IAAA,SAAS,EAAC;AAAhB,SAAf,OAAoD;AAAM,IAAA,SAAS,EAAC;AAAhB,mBAApD,CADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE;AAAA,aAAML,KAAI,CAACK,UAAU,CAACC,UAAZ,CAAV;AAAA,KADR;AAEE,IAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,IAAIC,IAAI,CAACC,EADjB;AAEPC,MAAAA,QAAQ,EAAE,IAAIF,IAAI,CAACC,EAFZ;AAGPE,MAAAA,gBAAgB,EAAE,EAHX;AAIPC,MAAAA,QAAQ,EAAE;AAJH;AAFX,IADF,EAUE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,mBADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAyBP,UAAU,CAACC,UAApC,CAFF,EAGE;AAAM,IAAA,SAAS,EAAC;AAAhB,cAHF,CAVF,CADF,CADF,CAFF,CADF,CADqB;AAAA,CAAvB;;AA4BAF,cAAc,CAACL,SAAf,GAA2B;AACzBM,EAAAA,UAAU,EAAEN,SAAS,CAACc,MAAV,CAAiBC;AADJ,CAA3B;AAIA,eAAeV,cAAf","sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\n\nconst data = (score) => ({\n  datasets: [{\n    data: [score, 1600-score],\n    backgroundColor: \"#eaeaea\",\n  }],\n})\n\n// eslint-disable-next-line react/prop-types\nconst TotalScoreCard = ( {testScores} ) => (\n  <div className=\"col s12 l6 card-width-546\">\n    <div className=\"card-block\">\n      <h2>Your Score <span className=\"separator\">|</span> <span className=\"quantity\">400 to 1600</span></h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content center-align\">\n          <div className=\"chart-block chart-block-total\">\n            <Doughnut\n              data={() => data(testScores.totalScore)}\n              options={{\n                circumference: 1 * Math.PI,\n                rotation: 1 * Math.PI,\n                cutoutPercentage: 60,\n                tooltips: false,\n              }}\n              />\n            <div className=\"chart-text\">\n              <span className=\"title\">Total Score</span>\n              <span className=\"value\">{testScores.totalScore}</span>\n              <span className=\"description\">(+220)</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nTotalScoreCard.PropTypes = {\n  testScores: PropTypes.object.isRequired,\n};\n\nexport default TotalScoreCard;"]},"metadata":{},"sourceType":"module"}