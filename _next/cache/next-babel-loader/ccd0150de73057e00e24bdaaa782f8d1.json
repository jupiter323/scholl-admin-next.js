{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport TotalScoreCard from './components/TotalScoreCard';\nimport SectionScoreCard from './components/SectionScoreCard';\nimport TestScoreCard from './components/TestScoreCard';\nimport EssayScoresCard from './components/EssayScoresCard';\nimport CrossTestScoresCard from './components/CrossTestScoresCard';\nimport SubScoresCard from './components/SubscoresCard';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../index/selectors';\nimport { setActiveTestScores } from '../index/actions';\nimport { fetchStudentTestScoreApi } from '../index/api';\n\nvar DetailTestScorePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailTestScorePage, _React$Component);\n\n  function DetailTestScorePage(props) {\n    var _this;\n\n    _classCallCheck(this, DetailTestScorePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailTestScorePage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      _this.props.onRef(_assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"delay\", function () {\n      var _this$props = _this.props,\n          scores = _this$props.scores,\n          student_test_id = _this$props.test.student_test_id,\n          onGetTestScores = _this$props.onGetTestScores,\n          id = _this$props.activeStudent.id;\n      return new _Promise(function _callee(resolve) {\n        var postBody;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                postBody = {\n                  studentId: id,\n                  student_test_id: student_test_id\n                };\n                onGetTestScores(postBody);\n                setTimeout(function () {\n                  resolve();\n                }, 3000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getComponentImages\", function () {\n      return new _Promise(function (resolve) {\n        _this.delay().then(function () {\n          setTimeout(function _callee2() {\n            var getTargetImage, _ref, _ref2, scoresImages;\n\n            return _regeneratorRuntime.async(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    getTargetImage = _this.props.getTargetImage;\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(_Promise.all([getTargetImage(document.getElementById('scoresRef'))]));\n\n                  case 3:\n                    _ref = _context2.sent;\n                    _ref2 = _slicedToArray(_ref, 1);\n                    scoresImages = _ref2[0];\n                    resolve(scoresImages);\n\n                  case 7:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            });\n          }, 2000);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadingSpinner\", function () {\n      return __jsx(\"div\", {\n        className: \"overlay-spinning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Fetching Scores...\"), __jsx(\"div\", {\n        className: \"spinning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(DetailTestScorePage, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onRef(undefined);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          scores = _this$props2.scores,\n          test = _this$props2.test;\n\n      if (!scores) {\n        return this.loadingSpinner();\n      }\n\n      if (scores.student_test_id !== test.student_test_id) {\n        return this.loadingSpinner();\n      }\n\n      var subjects = scores.subjects,\n          cross_test_score = scores.cross_test_score,\n          sub_section_score = scores.sub_section_score,\n          essay = scores.essay;\n      return __jsx(\"div\", {\n        className: \"container\",\n        id: \"scoresRef\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"cards-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"d-flex-content same-height justify-center row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(TotalScoreCard, {\n        subjectScores: subjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"d-flex-content same-height justify-center row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(TestScoreCard, {\n        subjectScores: subjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), __jsx(EssayScoresCard, {\n        essayScores: essay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"d-flex-content justify-center row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(CrossTestScoresCard, {\n        crossTestScores: cross_test_score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), __jsx(SubScoresCard, {\n        subScores: sub_section_score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DetailTestScorePage;\n}(React.Component);\n\nDetailTestScorePage.propTypes = {\n  getTargetImage: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\nvar mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent()\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetScores: function onSetScores(scores) {\n      return dispatch(setActiveTestScores(scores));\n    }\n  };\n}\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(DetailTestScorePage);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/index.js"],"names":["React","PropTypes","connect","createStructuredSelector","compose","TotalScoreCard","SectionScoreCard","TestScoreCard","EssayScoresCard","CrossTestScoresCard","SubScoresCard","makeSelectActiveTestScores","makeSelectActiveStudent","setActiveTestScores","fetchStudentTestScoreApi","DetailTestScorePage","props","onRef","scores","student_test_id","test","onGetTestScores","id","activeStudent","resolve","postBody","studentId","setTimeout","delay","then","getTargetImage","all","document","getElementById","scoresImages","undefined","loadingSpinner","subjects","cross_test_score","sub_section_score","essay","Component","propTypes","func","isRequired","object","mapStateToProps","mapDispatchToProps","dispatch","onSetScores","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {compose} from 'redux';\nimport TotalScoreCard from './components/TotalScoreCard';\nimport SectionScoreCard from './components/SectionScoreCard';\nimport TestScoreCard from './components/TestScoreCard';\nimport EssayScoresCard from './components/EssayScoresCard';\nimport CrossTestScoresCard from './components/CrossTestScoresCard';\nimport SubScoresCard from './components/SubscoresCard';\nimport {makeSelectActiveTestScores, makeSelectActiveStudent} from '../index/selectors';\nimport {setActiveTestScores} from '../index/actions';\nimport {fetchStudentTestScoreApi} from '../index/api';\n\nclass DetailTestScorePage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount = () => {\n    this.props.onRef(this);\n  };\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  delay = () => {\n    const {scores, test: {student_test_id}, onGetTestScores, activeStudent: {id}} = this.props;\n    return new Promise(async resolve => {\n      const postBody = {studentId: id, student_test_id};\n      onGetTestScores(postBody);\n      setTimeout(() => {\n        resolve();\n      }, 3000);\n    });\n  };\n\n  getComponentImages = () =>\n    new Promise(resolve => {\n      this.delay().then(() => {\n        setTimeout(async () => {\n          const {getTargetImage} = this.props;\n          const [scoresImages] = await Promise.all([\n            getTargetImage(document.getElementById('scoresRef')),\n          ]);\n          resolve(scoresImages);\n        }, 2000);\n      });\n    });\n\n  loadingSpinner = () =>\n    <div className=\"overlay-spinning\">\n      <h1>Fetching Scores...</h1>\n      <div className=\"spinning\" />\n    </div>;\n\n  render() {\n    const {scores, test} = this.props;\n    if (!scores) {\n      return this.loadingSpinner();\n    }\n    if (scores.student_test_id !== test.student_test_id) {\n      return this.loadingSpinner();\n    }\n    const {subjects, cross_test_score, sub_section_score, essay} = scores;\n    return (\n      <div className=\"container\" id=\"scoresRef\">\n        <div className=\"cards-section\">\n          <div className=\"d-flex-content same-height justify-center row mb-0\">\n            <TotalScoreCard subjectScores={subjects} />\n            {/* <SectionScoreCard sectionScores={sub_section_score} /> */}\n          </div>\n          <div className=\"d-flex-content same-height justify-center row mb-0\">\n            <TestScoreCard subjectScores={subjects} />\n            <EssayScoresCard essayScores={essay} />\n          </div>\n          <div className=\"d-flex-content justify-center row mb-0\">\n            <CrossTestScoresCard crossTestScores={cross_test_score} />\n            <SubScoresCard subScores={sub_section_score} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetailTestScorePage.propTypes = {\n  getTargetImage: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetScores: scores => dispatch(setActiveTestScores(scores)),\n  };\n}\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(DetailTestScorePage);\n"]},"metadata":{},"sourceType":"module"}