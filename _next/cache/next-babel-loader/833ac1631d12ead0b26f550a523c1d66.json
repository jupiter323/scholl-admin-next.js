{"ast":null,"code":"import { FETCH_STUDENTS, SET_STUDENTS, SEARCH_STUDENTS, DELETE_STUDENT, UPDATE_STUDENT_ADDRESS, UPDATE_STUDENT_CITY, UPDATE_STUDENT_EMAIL, UPDATE_STUDENT_FIRSTNAME, UPDATE_STUDENT_LASTNAME, UPDATE_STUDENT_PHONE, UPDATE_STUDENT_STATE, UPDATE_STUDENT_ZIP, SET_STUDENTS_CALENDAR_ASSIGN_LESSONS_MODAL_OPEN, SET_STUDENTS_CALENDAR_ASSIGN_WORKSHEETS_MODAL_OPEN, SET_STUDENTS_CALENDAR_CALENDAR_ROWS, SET_IS_VISIBLE_TOP_BAR, SET_ACTIVE_TEST_SCORES, GET_TESTS, SET_STUDENT_COMPLETED_TESTS, SET_STUDENT_OVERDUE_TESTS, SET_STUDENT_ASSIGNED_TESTS, SET_STUDENT_TESTS, SET_STUDENT_SECTIONS, FETCH_STUDENT_TEST_SECTIONS, SET_ACTIVE_STUDENT_TEST_ID, FETCH_LESSON_LIST, FETCH_STUDENT_LESSON_LIST, CHECKED_LESSON, SELECT_ALL_LESSONS, UNSELECT_ALL_LESSONS, ADD_CHECKED_LESSON, REMOVE_CHECKED_LESSON, FETCH_UNITS, SET_UNIT_FILTER_OPTIONS, SET_ACTIVE_STUDENT_TOKEN, ASSIGN_STUDENT_LESSON, RESET_STUDENT_LESSONS, UNASSIGN_STUDENT_LESSON, RESCHEDULE_STUDENT_LESSONS, ADD_ALL_LESSONS, REMOVE_ALL_LESSONS, SET_ACTIVE_LESSON, SET_OPEN_ACTIVE_PAGE, UPDATE_STUDENT_ACTIVATION, FETCH_SUBJECTS, EXCUSE_STUDENT_LATENESS, FILTER_LESSONS, FLAG_STUDENT_LESSON_PROBLEM, SET_TESTS, SET_ACTIVE_STUDENT, ADD_LESSON_ANSWER, DELETE_STUDENT_TEST, UPDATE_TEST_FLAG, ASSIGN_NEW_TEST, ADD_NEW_TEST_TO_STUDENT_TESTS, SET_ESSAY_SCORE, ADD_STUDENT_ANSWER_TO_TEST, UPDATE_TEST_STATUS, UPDATE_FLAG_STATUS, FETCH_STUDENT_TESTS_SUCCESSFUL, ADD_FREE_RESPONSE_ANSWER_TO_TEST, SEND_ERROR_MESSAGE, RESET_ERROR_MESSAGE, GET_TEST_SCORES } from \"./constants\";\nexport function fetchStudents() {\n  return {\n    type: FETCH_STUDENTS\n  };\n}\nexport function fetchUnits() {\n  return {\n    type: FETCH_UNITS\n  };\n}\nexport function fetchSubjects() {\n  return {\n    type: FETCH_SUBJECTS\n  };\n}\nexport function setUnitFilterOptions(options) {\n  return {\n    type: SET_UNIT_FILTER_OPTIONS,\n    options\n  };\n}\nexport function searchStudents(filters) {\n  return {\n    type: SEARCH_STUDENTS,\n    filters\n  };\n}\nexport function fetchStudentTests(user) {\n  return {\n    type: GET_TESTS,\n    user\n  };\n}\nexport function fetchStudentTestSections(postBody) {\n  return {\n    type: FETCH_STUDENT_TEST_SECTIONS,\n    postBody\n  };\n}\nexport function setStudentSections(sections) {\n  return {\n    type: SET_STUDENT_SECTIONS,\n    sections\n  };\n}\nexport function setActiveStudentToken(token) {\n  return {\n    type: SET_ACTIVE_STUDENT_TOKEN,\n    token\n  };\n}\nexport function setActiveStudentTestId(studentTestId) {\n  return {\n    type: SET_ACTIVE_STUDENT_TEST_ID,\n    studentTestId\n  };\n}\nexport function setStudentTests(tests) {\n  return {\n    type: SET_STUDENT_TESTS,\n    tests\n  };\n}\nexport function setStudentCompletedTests(tests) {\n  return {\n    type: SET_STUDENT_COMPLETED_TESTS,\n    tests\n  };\n}\nexport function setStudentOverDueTests(tests) {\n  return {\n    type: SET_STUDENT_OVERDUE_TESTS,\n    tests\n  };\n}\nexport function setStudentAssignedTests(tests) {\n  return {\n    type: SET_STUDENT_ASSIGNED_TESTS,\n    tests\n  };\n}\nexport function setStudents(students) {\n  return {\n    type: SET_STUDENTS,\n    students\n  };\n}\nexport function deleteStudent(id) {\n  return {\n    type: DELETE_STUDENT,\n    id\n  };\n}\nexport function updateStudentAddress(address) {\n  return {\n    type: UPDATE_STUDENT_ADDRESS,\n    address\n  };\n}\nexport function updateStudentCity(city) {\n  return {\n    type: UPDATE_STUDENT_CITY,\n    city\n  };\n}\nexport function updateStudentEmail(email) {\n  return {\n    type: UPDATE_STUDENT_EMAIL,\n    email\n  };\n}\nexport function updateStudentFirstName(firstName) {\n  return {\n    type: UPDATE_STUDENT_FIRSTNAME,\n    firstName\n  };\n}\nexport function updateStudentLastName(lastName) {\n  return {\n    type: UPDATE_STUDENT_LASTNAME,\n    lastName\n  };\n}\nexport function updateStudentPhone(phone) {\n  return {\n    type: UPDATE_STUDENT_PHONE,\n    phone\n  };\n}\nexport function updateStudentState(state) {\n  return {\n    type: UPDATE_STUDENT_STATE,\n    state\n  };\n}\nexport function updateStudentZip(zip) {\n  return {\n    type: UPDATE_STUDENT_ZIP,\n    zip\n  };\n}\nexport function setAssignLessonsModalOpen(value) {\n  return {\n    type: SET_STUDENTS_CALENDAR_ASSIGN_LESSONS_MODAL_OPEN,\n    value\n  };\n}\nexport function setAssignWorksheetModalOpen(value) {\n  return {\n    type: SET_STUDENTS_CALENDAR_ASSIGN_WORKSHEETS_MODAL_OPEN,\n    value\n  };\n}\nexport function setCalendarRows(rows) {\n  return {\n    type: SET_STUDENTS_CALENDAR_CALENDAR_ROWS,\n    rows\n  };\n}\nexport function setIsVisibleTopBar(value) {\n  return {\n    type: SET_IS_VISIBLE_TOP_BAR,\n    value\n  };\n}\nexport function setActiveTestScores(scores) {\n  return {\n    type: SET_ACTIVE_TEST_SCORES,\n    scores\n  };\n}\nexport function setEssayScore(score) {\n  return {\n    type: SET_ESSAY_SCORE,\n    score\n  };\n}\nexport const getLessonList = () => ({\n  type: FETCH_LESSON_LIST\n});\nexport const getStudentLessonList = postBody => ({\n  type: FETCH_STUDENT_LESSON_LIST,\n  postBody\n});\nexport const checkLesson = id => ({\n  type: CHECKED_LESSON,\n  id\n});\nexport const checkAllLessons = mappedLessons => ({\n  type: SELECT_ALL_LESSONS,\n  mappedLessons\n});\nexport const unCheckAllLessons = mappedLessons => ({\n  type: UNSELECT_ALL_LESSONS,\n  mappedLessons\n});\nexport const addCheckedLesson = lessonId => ({\n  type: ADD_CHECKED_LESSON,\n  lessonId\n});\nexport const removeCheckedLesson = lessonId => ({\n  type: REMOVE_CHECKED_LESSON,\n  lessonId\n});\nexport const assignLessonToStudent = lesson => ({\n  type: ASSIGN_STUDENT_LESSON,\n  lesson\n});\nexport const resetStudentLessons = lessons => ({\n  type: RESET_STUDENT_LESSONS,\n  lessons\n});\nexport const unAssignLessonToStudent = lesson => ({\n  type: UNASSIGN_STUDENT_LESSON,\n  lesson\n});\nexport const rescheduleStudentLessons = studentLessonData => ({\n  type: RESCHEDULE_STUDENT_LESSONS,\n  studentLessonData\n});\nexport const addAllLessons = mappedLessons => ({\n  type: ADD_ALL_LESSONS,\n  mappedLessons\n});\nexport const removeAllLessons = mappedLessons => ({\n  type: REMOVE_ALL_LESSONS,\n  mappedLessons\n});\nexport const setActiveLesson = activeLesson => ({\n  type: SET_ACTIVE_LESSON,\n  activeLesson\n});\nexport const setOpenActivePage = value => ({\n  type: SET_OPEN_ACTIVE_PAGE,\n  value\n});\nexport const updateStudentActivation = studentInfo => ({\n  type: UPDATE_STUDENT_ACTIVATION,\n  studentInfo\n});\nexport const excuseStudentLateness = lessons => ({\n  type: EXCUSE_STUDENT_LATENESS,\n  lessons\n});\nexport const filterLessons = filters => ({\n  type: FILTER_LESSONS,\n  filters\n});\nexport const flagStudentLessonProblem = lesson => ({\n  type: FLAG_STUDENT_LESSON_PROBLEM,\n  lesson\n});\nexport const setTests = tests => ({\n  type: SET_TESTS,\n  tests\n});\nexport const setActiveStudent = student => ({\n  type: SET_ACTIVE_STUDENT,\n  student\n});\nexport const answerStudentLessonProblem = payload => ({\n  type: ADD_LESSON_ANSWER,\n  payload\n});\nexport const deleteStudentTest = (studentTestId, studentId, testType) => ({\n  type: DELETE_STUDENT_TEST,\n  studentTestId,\n  studentId,\n  testType\n});\nexport const updateTestFlag = (studentTestId, studentId) => ({\n  type: UPDATE_TEST_FLAG,\n  studentTestId,\n  studentId\n});\nexport const assignNewTest = newTest => ({\n  type: ASSIGN_NEW_TEST,\n  newTest\n});\nexport const addNewTestToStudentTests = newTest => ({\n  type: ADD_NEW_TEST_TO_STUDENT_TESTS,\n  newTest\n});\nexport const addStudentAnswerToTest = (payload, sectionId) => ({\n  type: ADD_STUDENT_ANSWER_TO_TEST,\n  payload,\n  sectionId\n});\nexport const updateTestStatus = (payload, currentStatus, studentId) => ({\n  type: UPDATE_TEST_STATUS,\n  payload,\n  currentStatus,\n  studentId\n});\nexport const updateFlagStatus = (payload, status, question) => ({\n  type: UPDATE_FLAG_STATUS,\n  payload,\n  status,\n  question\n});\nexport function setFetchStudentTestsStatus(status) {\n  return {\n    type: FETCH_STUDENT_TESTS_SUCCESSFUL,\n    status\n  };\n}\nexport const addFreeResponseAnswerToTest = (payload, sectionId) => ({\n  type: ADD_FREE_RESPONSE_ANSWER_TO_TEST,\n  payload,\n  sectionId\n});\nexport const sendErrorMessage = (propertyName, message) => ({\n  type: SEND_ERROR_MESSAGE,\n  propertyName,\n  message\n});\nexport const resetErrorMessage = propertyName => ({\n  type: RESET_ERROR_MESSAGE,\n  propertyName\n});\nexport const getTestScores = payload => ({\n  type: GET_TEST_SCORES,\n  payload\n});","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/index/actions.js"],"names":["FETCH_STUDENTS","SET_STUDENTS","SEARCH_STUDENTS","DELETE_STUDENT","UPDATE_STUDENT_ADDRESS","UPDATE_STUDENT_CITY","UPDATE_STUDENT_EMAIL","UPDATE_STUDENT_FIRSTNAME","UPDATE_STUDENT_LASTNAME","UPDATE_STUDENT_PHONE","UPDATE_STUDENT_STATE","UPDATE_STUDENT_ZIP","SET_STUDENTS_CALENDAR_ASSIGN_LESSONS_MODAL_OPEN","SET_STUDENTS_CALENDAR_ASSIGN_WORKSHEETS_MODAL_OPEN","SET_STUDENTS_CALENDAR_CALENDAR_ROWS","SET_IS_VISIBLE_TOP_BAR","SET_ACTIVE_TEST_SCORES","GET_TESTS","SET_STUDENT_COMPLETED_TESTS","SET_STUDENT_OVERDUE_TESTS","SET_STUDENT_ASSIGNED_TESTS","SET_STUDENT_TESTS","SET_STUDENT_SECTIONS","FETCH_STUDENT_TEST_SECTIONS","SET_ACTIVE_STUDENT_TEST_ID","FETCH_LESSON_LIST","FETCH_STUDENT_LESSON_LIST","CHECKED_LESSON","SELECT_ALL_LESSONS","UNSELECT_ALL_LESSONS","ADD_CHECKED_LESSON","REMOVE_CHECKED_LESSON","FETCH_UNITS","SET_UNIT_FILTER_OPTIONS","SET_ACTIVE_STUDENT_TOKEN","ASSIGN_STUDENT_LESSON","RESET_STUDENT_LESSONS","UNASSIGN_STUDENT_LESSON","RESCHEDULE_STUDENT_LESSONS","ADD_ALL_LESSONS","REMOVE_ALL_LESSONS","SET_ACTIVE_LESSON","SET_OPEN_ACTIVE_PAGE","UPDATE_STUDENT_ACTIVATION","FETCH_SUBJECTS","EXCUSE_STUDENT_LATENESS","FILTER_LESSONS","FLAG_STUDENT_LESSON_PROBLEM","SET_TESTS","SET_ACTIVE_STUDENT","ADD_LESSON_ANSWER","DELETE_STUDENT_TEST","UPDATE_TEST_FLAG","ASSIGN_NEW_TEST","ADD_NEW_TEST_TO_STUDENT_TESTS","SET_ESSAY_SCORE","ADD_STUDENT_ANSWER_TO_TEST","UPDATE_TEST_STATUS","UPDATE_FLAG_STATUS","FETCH_STUDENT_TESTS_SUCCESSFUL","ADD_FREE_RESPONSE_ANSWER_TO_TEST","SEND_ERROR_MESSAGE","RESET_ERROR_MESSAGE","GET_TEST_SCORES","fetchStudents","type","fetchUnits","fetchSubjects","setUnitFilterOptions","options","searchStudents","filters","fetchStudentTests","user","fetchStudentTestSections","postBody","setStudentSections","sections","setActiveStudentToken","token","setActiveStudentTestId","studentTestId","setStudentTests","tests","setStudentCompletedTests","setStudentOverDueTests","setStudentAssignedTests","setStudents","students","deleteStudent","id","updateStudentAddress","address","updateStudentCity","city","updateStudentEmail","email","updateStudentFirstName","firstName","updateStudentLastName","lastName","updateStudentPhone","phone","updateStudentState","state","updateStudentZip","zip","setAssignLessonsModalOpen","value","setAssignWorksheetModalOpen","setCalendarRows","rows","setIsVisibleTopBar","setActiveTestScores","scores","setEssayScore","score","getLessonList","getStudentLessonList","checkLesson","checkAllLessons","mappedLessons","unCheckAllLessons","addCheckedLesson","lessonId","removeCheckedLesson","assignLessonToStudent","lesson","resetStudentLessons","lessons","unAssignLessonToStudent","rescheduleStudentLessons","studentLessonData","addAllLessons","removeAllLessons","setActiveLesson","activeLesson","setOpenActivePage","updateStudentActivation","studentInfo","excuseStudentLateness","filterLessons","flagStudentLessonProblem","setTests","setActiveStudent","student","answerStudentLessonProblem","payload","deleteStudentTest","studentId","testType","updateTestFlag","assignNewTest","newTest","addNewTestToStudentTests","addStudentAnswerToTest","sectionId","updateTestStatus","currentStatus","updateFlagStatus","status","question","setFetchStudentTestsStatus","addFreeResponseAnswerToTest","sendErrorMessage","propertyName","message","resetErrorMessage","getTestScores"],"mappings":"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","sourcesContent":["import {\n  FETCH_STUDENTS,\n  SET_STUDENTS,\n  SEARCH_STUDENTS,\n  DELETE_STUDENT,\n  UPDATE_STUDENT_ADDRESS,\n  UPDATE_STUDENT_CITY,\n  UPDATE_STUDENT_EMAIL,\n  UPDATE_STUDENT_FIRSTNAME,\n  UPDATE_STUDENT_LASTNAME,\n  UPDATE_STUDENT_PHONE,\n  UPDATE_STUDENT_STATE,\n  UPDATE_STUDENT_ZIP,\n  SET_STUDENTS_CALENDAR_ASSIGN_LESSONS_MODAL_OPEN,\n  SET_STUDENTS_CALENDAR_ASSIGN_WORKSHEETS_MODAL_OPEN,\n  SET_STUDENTS_CALENDAR_CALENDAR_ROWS,\n  SET_IS_VISIBLE_TOP_BAR,\n  SET_ACTIVE_TEST_SCORES,\n  GET_TESTS,\n  SET_STUDENT_COMPLETED_TESTS,\n  SET_STUDENT_OVERDUE_TESTS,\n  SET_STUDENT_ASSIGNED_TESTS,\n  SET_STUDENT_TESTS,\n  SET_STUDENT_SECTIONS,\n  FETCH_STUDENT_TEST_SECTIONS,\n  SET_ACTIVE_STUDENT_TEST_ID,\n  FETCH_LESSON_LIST,\n  FETCH_STUDENT_LESSON_LIST,\n  CHECKED_LESSON,\n  SELECT_ALL_LESSONS,\n  UNSELECT_ALL_LESSONS,\n  ADD_CHECKED_LESSON,\n  REMOVE_CHECKED_LESSON,\n  FETCH_UNITS,\n  SET_UNIT_FILTER_OPTIONS,\n  SET_ACTIVE_STUDENT_TOKEN,\n  ASSIGN_STUDENT_LESSON,\n  RESET_STUDENT_LESSONS,\n  UNASSIGN_STUDENT_LESSON,\n  RESCHEDULE_STUDENT_LESSONS,\n  ADD_ALL_LESSONS,\n  REMOVE_ALL_LESSONS,\n  SET_ACTIVE_LESSON,\n  SET_OPEN_ACTIVE_PAGE,\n  UPDATE_STUDENT_ACTIVATION,\n  FETCH_SUBJECTS,\n  EXCUSE_STUDENT_LATENESS,\n  FILTER_LESSONS,\n  FLAG_STUDENT_LESSON_PROBLEM,\n  SET_TESTS,\n  SET_ACTIVE_STUDENT,\n  ADD_LESSON_ANSWER,\n  DELETE_STUDENT_TEST,\n  UPDATE_TEST_FLAG,\n  ASSIGN_NEW_TEST,\n  ADD_NEW_TEST_TO_STUDENT_TESTS,\n  SET_ESSAY_SCORE,\n  ADD_STUDENT_ANSWER_TO_TEST,\n  UPDATE_TEST_STATUS,\n  UPDATE_FLAG_STATUS,\n  FETCH_STUDENT_TESTS_SUCCESSFUL,\n  ADD_FREE_RESPONSE_ANSWER_TO_TEST,\n  SEND_ERROR_MESSAGE,\n  RESET_ERROR_MESSAGE,\n  GET_TEST_SCORES,\n} from \"./constants\";\n\nexport function fetchStudents() {\n  return {\n    type: FETCH_STUDENTS,\n  };\n}\n\nexport function fetchUnits() {\n  return {\n    type: FETCH_UNITS,\n  };\n}\n\nexport function fetchSubjects() {\n  return {\n    type: FETCH_SUBJECTS,\n  };\n}\n\nexport function setUnitFilterOptions(options) {\n  return {\n    type: SET_UNIT_FILTER_OPTIONS,\n    options,\n  };\n}\n\nexport function searchStudents(filters) {\n  return {\n    type: SEARCH_STUDENTS,\n    filters,\n  };\n}\n\nexport function fetchStudentTests(user) {\n  return {\n    type: GET_TESTS,\n    user,\n  };\n}\n\nexport function fetchStudentTestSections(postBody) {\n  return {\n    type: FETCH_STUDENT_TEST_SECTIONS,\n    postBody,\n  };\n}\n\nexport function setStudentSections(sections) {\n  return {\n    type: SET_STUDENT_SECTIONS,\n    sections,\n  };\n}\n\nexport function setActiveStudentToken(token) {\n  return {\n    type: SET_ACTIVE_STUDENT_TOKEN,\n    token,\n  };\n}\n\nexport function setActiveStudentTestId(studentTestId) {\n  return {\n    type: SET_ACTIVE_STUDENT_TEST_ID,\n    studentTestId,\n  };\n}\n\nexport function setStudentTests(tests) {\n  return {\n    type: SET_STUDENT_TESTS,\n    tests,\n  };\n}\n\nexport function setStudentCompletedTests(tests) {\n  return {\n    type: SET_STUDENT_COMPLETED_TESTS,\n    tests,\n  };\n}\nexport function setStudentOverDueTests(tests) {\n  return {\n    type: SET_STUDENT_OVERDUE_TESTS,\n    tests,\n  };\n}\nexport function setStudentAssignedTests(tests) {\n  return {\n    type: SET_STUDENT_ASSIGNED_TESTS,\n    tests,\n  };\n}\n\nexport function setStudents(students) {\n  return {\n    type: SET_STUDENTS,\n    students,\n  };\n}\n\nexport function deleteStudent(id) {\n  return {\n    type: DELETE_STUDENT,\n    id,\n  };\n}\n\nexport function updateStudentAddress(address) {\n  return {\n    type: UPDATE_STUDENT_ADDRESS,\n    address,\n  };\n}\n\nexport function updateStudentCity(city) {\n  return {\n    type: UPDATE_STUDENT_CITY,\n    city,\n  };\n}\n\nexport function updateStudentEmail(email) {\n  return {\n    type: UPDATE_STUDENT_EMAIL,\n    email,\n  };\n}\n\nexport function updateStudentFirstName(firstName) {\n  return {\n    type: UPDATE_STUDENT_FIRSTNAME,\n    firstName,\n  };\n}\n\nexport function updateStudentLastName(lastName) {\n  return {\n    type: UPDATE_STUDENT_LASTNAME,\n    lastName,\n  };\n}\n\nexport function updateStudentPhone(phone) {\n  return {\n    type: UPDATE_STUDENT_PHONE,\n    phone,\n  };\n}\n\nexport function updateStudentState(state) {\n  return {\n    type: UPDATE_STUDENT_STATE,\n    state,\n  };\n}\n\nexport function updateStudentZip(zip) {\n  return {\n    type: UPDATE_STUDENT_ZIP,\n    zip,\n  };\n}\n\nexport function setAssignLessonsModalOpen(value) {\n  return {\n    type: SET_STUDENTS_CALENDAR_ASSIGN_LESSONS_MODAL_OPEN,\n    value,\n  };\n}\n\nexport function setAssignWorksheetModalOpen(value) {\n  return {\n    type: SET_STUDENTS_CALENDAR_ASSIGN_WORKSHEETS_MODAL_OPEN,\n    value,\n  };\n}\n\nexport function setCalendarRows(rows) {\n  return {\n    type: SET_STUDENTS_CALENDAR_CALENDAR_ROWS,\n    rows,\n  };\n}\n\nexport function setIsVisibleTopBar(value) {\n  return {\n    type: SET_IS_VISIBLE_TOP_BAR,\n    value,\n  };\n}\n\nexport function setActiveTestScores(scores) {\n  return {\n    type: SET_ACTIVE_TEST_SCORES,\n    scores,\n  };\n}\n\nexport function setEssayScore(score) {\n  return {\n    type: SET_ESSAY_SCORE,\n    score,\n  };\n}\n\nexport const getLessonList = () => ({\n  type: FETCH_LESSON_LIST,\n});\n\nexport const getStudentLessonList = (postBody) => ({\n  type: FETCH_STUDENT_LESSON_LIST,\n  postBody,\n});\n\nexport const checkLesson = (id) => ({\n  type: CHECKED_LESSON,\n  id,\n});\nexport const checkAllLessons = (mappedLessons) => ({\n  type: SELECT_ALL_LESSONS,\n  mappedLessons,\n});\n\nexport const unCheckAllLessons = (mappedLessons) => ({\n  type: UNSELECT_ALL_LESSONS,\n  mappedLessons,\n});\n\nexport const addCheckedLesson = (lessonId) => ({\n  type: ADD_CHECKED_LESSON,\n  lessonId,\n});\n\nexport const removeCheckedLesson = (lessonId) => ({\n  type: REMOVE_CHECKED_LESSON,\n  lessonId,\n});\n\nexport const assignLessonToStudent = (lesson) => ({\n  type: ASSIGN_STUDENT_LESSON,\n  lesson,\n});\n\nexport const resetStudentLessons = (lessons) => ({\n  type: RESET_STUDENT_LESSONS,\n  lessons,\n});\n\nexport const unAssignLessonToStudent = (lesson) => ({\n  type: UNASSIGN_STUDENT_LESSON,\n  lesson,\n});\n\nexport const rescheduleStudentLessons = (studentLessonData) => ({\n  type: RESCHEDULE_STUDENT_LESSONS,\n  studentLessonData,\n});\nexport const addAllLessons = (mappedLessons) => ({\n  type: ADD_ALL_LESSONS,\n  mappedLessons,\n});\n\nexport const removeAllLessons = (mappedLessons) => ({\n  type: REMOVE_ALL_LESSONS,\n  mappedLessons,\n});\n\nexport const setActiveLesson = (activeLesson) => ({\n  type: SET_ACTIVE_LESSON,\n  activeLesson,\n});\n\nexport const setOpenActivePage = (value) => ({\n  type: SET_OPEN_ACTIVE_PAGE,\n  value,\n});\nexport const updateStudentActivation = (studentInfo) => ({\n  type: UPDATE_STUDENT_ACTIVATION,\n  studentInfo,\n});\n\nexport const excuseStudentLateness = (lessons) => ({\n  type: EXCUSE_STUDENT_LATENESS,\n  lessons,\n});\n\nexport const filterLessons = (filters) => ({\n  type: FILTER_LESSONS,\n  filters,\n});\n\nexport const flagStudentLessonProblem = (lesson) => ({\n  type: FLAG_STUDENT_LESSON_PROBLEM,\n  lesson,\n});\n\nexport const setTests = (tests) => ({\n  type: SET_TESTS,\n  tests,\n});\n\n\nexport const setActiveStudent = (student) => ({\n  type: SET_ACTIVE_STUDENT,\n  student,\n});\n\nexport const answerStudentLessonProblem = (payload) => ({\n  type: ADD_LESSON_ANSWER,\n  payload,\n});\n\nexport const deleteStudentTest = (studentTestId, studentId, testType) => ({\n  type: DELETE_STUDENT_TEST,\n  studentTestId,\n  studentId,\n  testType,\n});\n\nexport const updateTestFlag = (studentTestId, studentId) => ({\n  type: UPDATE_TEST_FLAG,\n  studentTestId,\n  studentId,\n});\n\nexport const assignNewTest = (newTest) => ({\n  type: ASSIGN_NEW_TEST,\n  newTest,\n});\n\nexport const addNewTestToStudentTests = (newTest) => ({\n  type: ADD_NEW_TEST_TO_STUDENT_TESTS,\n  newTest,\n});\n\nexport const addStudentAnswerToTest = (payload, sectionId) => ({\n  type: ADD_STUDENT_ANSWER_TO_TEST,\n  payload,\n  sectionId,\n});\n\nexport const updateTestStatus = (payload, currentStatus, studentId) => ({\n  type: UPDATE_TEST_STATUS,\n  payload,\n  currentStatus,\n  studentId,\n});\n\nexport const updateFlagStatus = (payload, status, question) => ({\n  type: UPDATE_FLAG_STATUS,\n  payload,\n  status,\n  question,\n});\n\nexport function setFetchStudentTestsStatus(status) {\n  return {\n    type: FETCH_STUDENT_TESTS_SUCCESSFUL,\n    status,\n  };\n}\n\nexport const addFreeResponseAnswerToTest = (payload, sectionId) => ({\n  type: ADD_FREE_RESPONSE_ANSWER_TO_TEST,\n  payload,\n  sectionId,\n});\n\nexport const sendErrorMessage = (propertyName, message) => ({\n  type: SEND_ERROR_MESSAGE,\n  propertyName,\n  message,\n});\n\nexport const resetErrorMessage = (propertyName) => ({\n  type: RESET_ERROR_MESSAGE,\n  propertyName,\n});\n\nexport const getTestScores = (payload) => ({\n  type: GET_TEST_SCORES,\n  payload,\n});\n"]},"metadata":{},"sourceType":"module"}