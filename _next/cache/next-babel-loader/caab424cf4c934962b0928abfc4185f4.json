{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/ListView/components/ListItem.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenDetailModal\", () => this.setState({\n      detailModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDetailModal\", () => this.setState({\n      detailModalOpen: false\n    }));\n\n    _defineProperty(this, \"renderLessonIcon\", subject => {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"renderDropdownOptions\", status => {\n      if (status === \"Scheduled\" || status === 'Assigned') {\n        return __jsx(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Reschedule\")), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          href: \"#!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Unassign\")));\n      }\n\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Reschedule\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Mark all Flags Reviewed\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Reset\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Unassign\")));\n    });\n\n    this.state = {\n      detailModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      lessonName,\n      score,\n      scoreStatus,\n      passage,\n      reviewedAlerts,\n      overdue,\n      subject,\n      status,\n      completionDate,\n      problems,\n      type,\n      availableDate,\n      dueDate,\n      flags\n    } = this.props.lesson;\n    const {\n      dropdownIndex,\n      lesson,\n      dropdownIsOpen,\n      index,\n      user,\n      handleDropdownClick\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(LessonDetailAnswerSheet, {\n      onCloseDetailModal: this.onCloseDetailModal,\n      open: this.state.detailModalOpen,\n      user: user,\n      lesson: lesson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"card list-table-row\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"list-table-cell icon-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"block-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: this.renderLessonIcon(subject),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-panel-text truncate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\",\n      id: \"lessonName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenDetailModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, lessonName)))), __jsx(\"div\", {\n      className: \"list-table-cell graph-cell\",\n      style: {\n        marginLeft: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, scoreStatus && __jsx(\"span\", {\n      className: `chart-bar ${statusColorMap[scoreStatus]} white-text`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, Math.floor(`${score / problems * 100}`), \"%\")), __jsx(\"div\", {\n      className: \"list-table-cell status-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, scoreStatus !== \"\" ? __jsx(\"span\", {\n      className: `badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, scoreStatus) : __jsx(\"span\", {\n      className: `badge badge-rounded-md ${statusColorMap[status]} white-text`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, status)), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\",\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, subject), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"p. \", passage), __jsx(\"div\", {\n      className: \"list-table-cell date-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"time\", {\n      dateTime: \"2019-01-27\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, availableDate)), __jsx(\"div\", {\n      className: \"list-table-cell dueDate-cell\",\n      style: {\n        color: overdue ? \"#db1b29\" : \"\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"time\", {\n      dateTime: \"2019-01-27\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, dueDate)), __jsx(\"div\", {\n      className: \"list-table-cell completed-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, completionDate), __jsx(\"div\", {\n      className: \"list-table-cell name-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-panel-text truncate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, type))), __jsx(\"div\", {\n      className: \"list-table-cell graph-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, reviewedAlerts.length > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge grey darken-1 white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, reviewedAlerts.length), \" \", __jsx(\"i\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell flags-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, flags.length > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge red darken-2 white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, flags.length), \" \", __jsx(\"i\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell drop-cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"dropdown-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown01\",\n      className: \"dropdown-trigger btn\",\n      onClick: event => handleDropdownClick(event, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.renderDropdownOptions(status)) : null))));\n  }\n\n}\n\nListItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  dropdownIndex: PropTypes.number.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default ListItem;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/ListView/components/ListItem.js"],"names":["React","PropTypes","statusColorMap","LessonDetailAnswerSheet","ListItem","Component","constructor","props","setState","detailModalOpen","subject","status","state","render","lessonName","score","scoreStatus","passage","reviewedAlerts","overdue","completionDate","problems","type","availableDate","dueDate","flags","lesson","dropdownIndex","dropdownIsOpen","index","user","handleDropdownClick","onCloseDetailModal","renderLessonIcon","onOpenDetailModal","marginLeft","Math","floor","color","length","event","display","opacity","transform","renderDropdownOptions","propTypes","object","isRequired","number","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailModalOpen: false,\n    };\n  }\n\n  onOpenDetailModal = () => this.setState({ detailModalOpen: true })\n  onCloseDetailModal = () => this.setState({ detailModalOpen: false });\n\n\n   // eslint-disable-next-line consistent-return\n   renderLessonIcon = (subject) => {\n     switch (subject) {\n       case 'Reading':\n         return 'icon-books';\n       case 'Writing':\n         return 'icon-hands';\n       case 'Math':\n         return 'icon-calculator';\n       default:\n         break;\n     }\n   }\n\n  renderDropdownOptions = (status) => {\n    if (status === \"Scheduled\" || status === 'Assigned') {\n      return (\n        <React.Fragment>\n          <li><a href=\"#\">Reschedule</a></li>\n          <li><a href=\"#!\">Unassign</a></li>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <li><a href=\"#\">Reschedule</a></li>\n        <li><a href=\"#!\" >Mark all Flags Reviewed</a></li>\n        <li><a href=\"#!\">Reset</a></li>\n        <li><a href=\"#!\">Unassign</a></li>\n      </React.Fragment>\n    );\n  }\n\n\n  render() {\n    const { lessonName, score, scoreStatus, passage, reviewedAlerts, overdue, subject, status, completionDate, problems, type, availableDate, dueDate, flags } = this.props.lesson;\n    const { dropdownIndex, lesson, dropdownIsOpen, index, user, handleDropdownClick } = this.props;\n    return (\n      <React.Fragment>\n        <LessonDetailAnswerSheet\n          onCloseDetailModal={this.onCloseDetailModal}\n          open={this.state.detailModalOpen}\n          user={user}\n          lesson={lesson}\n        />\n        <div className=\"card list-table-row\" key={index}>\n          <div className=\"list-table-cell icon-cell\">\n            <span className=\"block-icon\">\n              <i className={this.renderLessonIcon(subject)}></i>\n            </span>\n          </div>\n          <div className=\"list-table-cell type-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\" id=\"lessonName\"><a href=\"#\" onClick={this.onOpenDetailModal}>{lessonName}</a></div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\" style={{ marginLeft: '50px' }}>\n            {scoreStatus && (\n              <span className={`chart-bar ${statusColorMap[scoreStatus]} white-text`}>{Math.floor(`${score / problems * 100}`)}%</span>\n            )}\n          </div>\n          <div className=\"list-table-cell status-cell\" >\n            <Choose>\n              <When condition={scoreStatus !== \"\"}>\n                <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n              </When>\n              <Otherwise>\n                <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n              </Otherwise>\n            </Choose>\n          </div>\n          <div className=\"list-table-cell type-cell\" style={{ marginLeft: '10px' }}>{subject}</div>\n          <div className=\"list-table-cell type-cell\">p. {passage}</div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{availableDate}</time></div>\n          <div className=\"list-table-cell dueDate-cell\" style={{ color: overdue ? \"#db1b29\" : \"\" }}><time dateTime=\"2019-01-27\">{dueDate}</time></div>\n          <div className=\"list-table-cell completed-cell\">{completionDate}\n            {/* {completed && (\n            <React.Fragment>\n              {completionDate}\n            </React.Fragment>\n          )} */}\n          </div>\n          <div className=\"list-table-cell name-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\">{type}</div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\">\n            {reviewedAlerts.length > 0 && (\n              <span className=\"badge-rounded-xs badge grey darken-1 white-text\"><b className=\"badge-text\">{reviewedAlerts.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n          <div className=\"list-table-cell flags-cell\">\n            {flags.length > 0 && (\n              <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n\n          <div className=\"list-table-cell drop-cell\">\n            <div className=\"dropdown-block\">\n              <a\n                href=\"#\"\n                data-target=\"dropdown01\"\n                className=\"dropdown-trigger btn\"\n                onClick={(event) => handleDropdownClick(event, index)}\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id=\"dropdown01\" className=\"dropdown-content dropdown-wide\" style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  {this.renderDropdownOptions(status)}\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nListItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  dropdownIndex: PropTypes.number.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n\n};\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}