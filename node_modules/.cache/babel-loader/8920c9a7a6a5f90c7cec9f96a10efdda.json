{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  } // maybe move correct state up to parent so component didmount will not rerender????? \n\n};\n\nvar BubbleGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BubbleGroup, _React$Component);\n\n  function BubbleGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BubbleGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BubbleGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubbleStyle\", function (letter) {\n      var _this$props = _this.props,\n          correct = _this$props.correct,\n          selected = _this$props.selected;\n      var answer = _this.props.question.answer;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderEmptyBubble\", function (letter, id) {\n      return React.createElement(\"li\", {\n        key: letter\n      }, React.createElement(\"form\", null, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"\".concat(id).concat(letter),\n        name: \"letter\",\n        value: letter,\n        checked: _this.props.selected === letter,\n        onChange: function onChange(event) {\n          return _this.onHandleBubbleChange(event, letter);\n        },\n        onClick: function onClick(event) {\n          return _this.onSelectedBubbleClick(event);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"\".concat(id).concat(letter),\n        style: _this.props.selected ? _this.renderBubbleStyle(letter) : styles.plain\n      }, React.createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginTop: '2px',\n          paddingLeft: \"4.5px\"\n        }\n      }, letter))));\n    });\n\n    return _this;\n  }\n\n  _createClass(BubbleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.question.id;\n      return (// <If condition={studentChoice === \"\"}>\n        React.createElement(React.Fragment, null, this.renderEmptyBubble(\"A\", id), this.renderEmptyBubble(\"B\", id), this.renderEmptyBubble(\"C\", id), this.renderEmptyBubble(\"D\", id)) // </If>\n        // map through bubbles and student answer\n\n      );\n    }\n  }]);\n\n  return BubbleGroup;\n}(React.Component);\n\nBubbleGroup.propTypes = {\n  question: PropTypes.object.isRequired,\n  correct: PropTypes.boolean.isRequired,\n  selected: PropTypes.string.isRequired\n};\nexport default BubbleGroup;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\components\\Bubble\\index.js"],"names":["React","PropTypes","styles","red","position","color","borderColor","border","backgroundColor","height","width","borderRadius","greenFilled","greenBorderOnly","plain","BubbleGroup","letter","props","correct","selected","answer","question","id","event","onHandleBubbleChange","onSelectedBubbleClick","renderBubbleStyle","display","marginTop","paddingLeft","renderEmptyBubble","Component","propTypes","object","isRequired","boolean","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  red: { position: 'relative', color: '#fff', borderColor: '#fff', border: '1px solid', backgroundColor: '#db1d41', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenFilled: { position: 'relative', color: '#fff', borderColor: '#32955c', border: '1px solid', backgroundColor: '#32955c', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenBorderOnly: { position: 'relative', color: '#32955c', borderColor: '#32955c', border: '1px solid', backgroundColor: '#fff', height: '19px', width: '19px', borderRadius: '50%' },\r\n  plain: { position: 'relative', color: '#a6a8ab', border: '1px solid', borderColor: '#a6a8ab', height: '19px', width: '19px', borderRadius: '50%' }\r\n}\r\n// maybe move correct state up to parent so component didmount will not rerender????? \r\nclass BubbleGroup extends React.Component {\r\n  \r\n// componentDidMount = () => {\r\n  //   const { index, sampleAnswers } = this.props;\r\n  //   const { studentChoice, answer } = sampleAnswers[index];\r\n  //   this.setState({selectedAnswer: studentChoice});\r\n  //   if(studentChoice === answer) {\r\n  //     this.setState({correct: true})\r\n  //   }\r\n    // this.checkIfCorrect();\r\n    // update counter on writing page\r\n  // };\r\n  // componentDidMount = () => {\r\n  //   const { question: { studentChoice, answer} } = this.props;\r\n  //     this.setState = ({selected: studentChoice}, () => {\r\n  //       this.checkIfCorrect(this.state.selected)\r\n  //     })\r\n  // }\r\n\r\n  // onHandleBubbleChange = (event, letter) => {\r\n  //  this.setState({selected: event.target.value},\r\n  //   () => this.checkIfCorrect(letter))\r\n  // }\r\n\r\n// clears state when selected button is clicked again, unless it was studentChoice from props\r\n  // onSelectedBubbleClick = (event) => {\r\n  //   const { selected } = this.state;\r\n  //   const { question: {studentChoice} }  = this.props;\r\n  //   if (selected === event.target.value  && studentChoice !== event.target.value){\r\n  //     this.setState({selected: \"\"})\r\n  //   }\r\n  // }\r\n\r\n  // checkIfCorrect = (letter) => {\r\n  //   const { question } = this.props;\r\n  //   if(letter === question.answer) {\r\n  //     this.setState({correct: true});\r\n  //   }else{\r\n  //     this.setState({correct: false})\r\n  //   }\r\n  //   // update counter on writing page\r\n  // }\r\n\r\n  renderBubbleStyle = ( letter ) => {\r\n    const { correct, selected } = this.props;\r\n    const { question: { answer } } = this.props;\r\n    if (selected === letter && correct) {\r\n      return styles.greenFilled\r\n    }\r\n    if (selected === letter && !correct) {\r\n      return styles.red\r\n    }\r\n    if (letter !== selected && letter === !answer) {\r\n      return styles.plain\r\n    }if(letter !== selected && letter === answer){\r\n      return styles.greenBorderOnly\r\n    }\r\n    return styles.plain\r\n  }\r\n\r\n  renderEmptyBubble = (letter, id) => (\r\n    <li key={letter}>\r\n        <form>\r\n          <input\r\n            type=\"radio\"\r\n            id={`${id}${letter}`}\r\n            name=\"letter\"\r\n            value={letter}\r\n            checked={this.props.selected === letter}\r\n            onChange={(event) => this.onHandleBubbleChange(event, letter)}\r\n            onClick={(event)=> this.onSelectedBubbleClick(event)}\r\n            />\r\n          <label\r\n            htmlFor={`${id}${letter}`}\r\n            style={this.props.selected ? this.renderBubbleStyle(letter) : styles.plain}\r\n            >\r\n          <span style={{ display: 'block', marginTop: '2px', paddingLeft: \"4.5px\" }}>{letter}</span>\r\n          </label>\r\n        </form>\r\n      </li>\r\n  )\r\n\r\n  render() {\r\n    const { question: { id } } = this.props\r\n      return (\r\n          // <If condition={studentChoice === \"\"}>\r\n        <React.Fragment>\r\n          {this.renderEmptyBubble(\"A\", id)}\r\n          {this.renderEmptyBubble(\"B\", id)}\r\n          {this.renderEmptyBubble(\"C\", id)}\r\n          {this.renderEmptyBubble(\"D\", id)}\r\n          </React.Fragment>\r\n          // </If>\r\n          // map through bubbles and student answer\r\n      )\r\n  }\r\n}\r\n\r\nBubbleGroup.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  correct: PropTypes.boolean.isRequired,\r\n  selected: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default BubbleGroup;\r\n"]},"metadata":{},"sourceType":"module"}