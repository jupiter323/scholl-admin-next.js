{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\n\nvar _data = function data(current, target, initial) {\n  return {\n    datasets: [{\n      data: [current - initial, target - initial - (current - initial)],\n      backgroundColor: ['#0085ce', '#eaeaea']\n    }]\n  };\n};\n\nvar StudentCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StudentCard, _React$Component);\n\n  function StudentCard(props) {\n    var _this;\n\n    _classCallCheck(this, StudentCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StudentCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenEditModal\", function () {\n      _this.props.onCloseDropdown();\n\n      _this.setState({\n        editModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseEditModal\", function () {\n      return _this.setState({\n        editModalOpen: false\n      });\n    });\n\n    _this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(StudentCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onHandleStudentCard = _this$props2.onHandleStudentCard,\n          onSaveStudentChanges = _this$props2.onSaveStudentChanges,\n          onDeleteStudent = _this$props2.onDeleteStudent,\n          onCloneStudent = _this$props2.onCloneStudent,\n          index = _this$props2.index,\n          dropdownIndex = _this$props2.dropdownIndex,\n          student = _this$props2.student,\n          _this$props2$student = _this$props2.student,\n          id = _this$props2$student.id,\n          active = _this$props2$student.active,\n          tutor = _this$props2$student.tutor,\n          _this$props2$student$ = _this$props2$student.testScores,\n          initialScore = _this$props2$student$.initialScore,\n          currentScore = _this$props2$student$.currentScore,\n          targetScore = _this$props2$student.courseContext.targetScore,\n          _this$props2$student$2 = _this$props2$student.studentInformation,\n          firstName = _this$props2$student$2.firstName,\n          lastName = _this$props2$student$2.lastName,\n          email = _this$props2$student.emailAddress.email,\n          dropdownIsOpen = _this$props2.dropdownIsOpen;\n      var editModalOpen = this.state.editModalOpen;\n      return React.createElement(React.Fragment, null, React.createElement(EditModal, {\n        open: editModalOpen,\n        onSaveStudentChanges: onSaveStudentChanges,\n        onCloseEditModal: this.onCloseEditModal,\n        student: student,\n        handleDetailsChange: this.handleDetailsChange\n      }), React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\",\n        id: id\n      }, React.createElement(\"div\", {\n        className: active ? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"\n      }, React.createElement(\"div\", {\n        className: \"owner-box card-panel card-panel-panel card-panel-large\",\n        style: {\n          backgroundColor: active ? '#0085ce' : '#9b9b9b',\n          color: '#fff'\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"user-block\"\n      }, React.createElement(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: active ? '#14b14b' : '#808080',\n          color: '#fff',\n          height: '45px'\n        }\n      }, React.createElement(\"img\", {\n        src: \"#\",\n        alt: \"\"\n      })), React.createElement(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: '#fff'\n        }\n      }, React.createElement(\"h4\", {\n        className: \"h3\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        value: student,\n        onClick: function onClick() {\n          return onHandleStudentCard({\n            index: index\n          });\n        }\n      }, lastName, \", \", firstName)), React.createElement(\"a\", {\n        href: \"mailto:\".concat(email)\n      }, email)))), React.createElement(\"div\", {\n        className: \"col s2 right-align\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-user\"\n      }), React.createElement(\"span\", {\n        className: \"text-icon\"\n      }, \"Student\"))), React.createElement(\"div\", {\n        className: \"col s1 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger btn\",\n        \"data-target\": \"dropdown01\",\n        onClick: this.handleDropdownClick\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: \"block\",\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"modal-trigger link-block\",\n        onClick: this.onOpenEditModal\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onCloneStudent(index);\n        }\n      }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Show Owner\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onDeleteStudent(index);\n        }\n      }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n        className: \"card-content\",\n        ref: this.studentCard\n      }, React.createElement(\"div\", {\n        className: \"row d-flex align-items-center mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m6\"\n      }, React.createElement(\"div\", {\n        className: \"chart-container chart-container-large\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, active ? React.createElement(Doughnut, {\n        data: function data() {\n          return _data(currentScore, targetScore, initialScore);\n        },\n        height: 210,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 60,\n          tooltips: false\n        }\n      }) : null, React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: \"#0085ce\",\n          bottom: \"7px\"\n        }\n      }, React.createElement(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": initialScore,\n        \"data-end-val\": currentScore,\n        \"data-duration\": \"1\"\n      }, currentScore))), React.createElement(\"div\", {\n        className: \"chart-row\"\n      }, React.createElement(\"div\", {\n        className: \"chart-col chart-start\"\n      }, React.createElement(\"span\", {\n        className: \"amount\",\n        style: {\n          color: '#0085ce'\n        }\n      }, initialScore), React.createElement(\"span\", {\n        className: \"amount-text\"\n      }, \"\\xA0 initial\")), React.createElement(\"div\", {\n        className: \"chart-col chart-end\"\n      }, React.createElement(\"span\", {\n        className: \"amount\"\n      }, targetScore), React.createElement(\"span\", {\n        className: \"amount-text\"\n      }, \"\\xA0 target\"))))), React.createElement(\"div\", {\n        className: \"col s12 m6\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list-bordered\"\n      }, React.createElement(\"li\", {\n        className: \"style-green\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, \"61\"), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"complete\")), React.createElement(\"li\", {\n        className: \"style-red\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, \"7\"), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"overdue\")), React.createElement(\"li\", {\n        className: \"style-orange\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, \"3\"), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"practice tests\")), React.createElement(\"li\", {\n        className: \"style-blue-lighter\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, React.createElement(\"span\", null, \"17\"), \" \", React.createElement(\"span\", {\n        className: \"of\"\n      }, \"of 23\")), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"sessions\"))))), React.createElement(\"div\", {\n        className: \"card-inner-row\"\n      }, React.createElement(\"div\", {\n        className: \"row-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"category-list\"\n      }, React.createElement(\"li\", {\n        className: \"category-box\"\n      }, React.createElement(\"span\", {\n        className: \"category-badge badge-purple\"\n      }), React.createElement(\"span\", {\n        className: \"category-text\"\n      }, tutor)))))))));\n    }\n  }]);\n\n  return StudentCard;\n}(React.Component);\n\n;\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired,\n  onHandleStudentCard: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  onDeleteStudent: PropTypes.func.isRequired,\n  onCloneStudent: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIndex: PropTypes.number,\n  onSaveStudentChanges: PropTypes.func.isRequired\n};\nexport default StudentCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/components/StudentCard/index.js"],"names":["React","PropTypes","Doughnut","EditModal","data","current","target","initial","datasets","backgroundColor","StudentCard","props","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","setState","editModalOpen","state","cloneModalOpen","showOwnerModalOpen","deleteModalOpen","activateAccountModalOpen","assignInstructorModalOpen","onHandleStudentCard","onSaveStudentChanges","onDeleteStudent","onCloneStudent","dropdownIndex","student","id","active","tutor","testScores","initialScore","currentScore","targetScore","courseContext","studentInformation","firstName","lastName","email","emailAddress","onCloseEditModal","handleDetailsChange","color","height","handleDropdownClick","display","opacity","transform","onOpenEditModal","studentCard","circumference","Math","PI","rotation","cutoutPercentage","tooltips","bottom","Component","propTypes","object","isRequired","func","bool","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\nconst data = (current, target, initial) => ({\n  datasets: [{\n    data: [current-initial, (target-initial) - (current-initial) ],\n    backgroundColor: [\n      '#0085ce',\n      '#eaeaea',\n    ],\n  }],\n})\n\nclass StudentCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editModalOpen: false,\n            cloneModalOpen: false,\n            showOwnerModalOpen: false,\n            deleteModalOpen: false,\n            activateAccountModalOpen: false,\n            assignInstructorModalOpen: false,\n        }\n    }\n\n    handleDropdownClick = (event) => {\n      const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n      event.preventDefault();\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n      return onSetDropdown(index);\n    }\n\n    onOpenEditModal = () => {\n      this.props.onCloseDropdown();\n      this.setState({editModalOpen: true});\n    }\n    onCloseEditModal = () => this.setState({editModalOpen: false})\n\n    render() {\n    const { onHandleStudentCard,onSaveStudentChanges, onDeleteStudent, onCloneStudent, index, dropdownIndex,student, student: {id, active, tutor, testScores: { initialScore, currentScore }, courseContext: {targetScore}, studentInformation: { firstName, lastName },\n        emailAddress: { email }},dropdownIsOpen }= this.props;\n    const { editModalOpen } = this.state;\n    return (\n      <React.Fragment>\n      <EditModal open={editModalOpen} onSaveStudentChanges = {onSaveStudentChanges} onCloseEditModal={this.onCloseEditModal} student={student} handleDetailsChange={this.handleDetailsChange}/>\n\n      <div className=\"card-main-col col s12 m8 l7 xl5\" id={id}>\n          <div className={ active? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\"}>\n\n        <div className=\"owner-box card-panel card-panel-panel card-panel-large\" style={{ backgroundColor: active ? '#0085ce' : '#9b9b9b', color: '#fff' }}>\n          <div className=\"card-panel-row row\">\n          <div className=\"col s9\">\n            <div className=\"user-block\">\n              <div className=\"user-circle\" style={{ backgroundColor: active ? '#14b14b' : '#808080', color: '#fff', height: '45px' }}>\n                <img src=\"#\" alt=\"\" />\n              </div>\n              <div className=\"user-text\" style={{ color: '#fff' }}>\n                <h4 className=\"h3\"><a href=\"#\" value={student} onClick={() => onHandleStudentCard({index})}>{lastName}, {firstName}</a></h4>\n                <a href={`mailto:${email}`}>{email}</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s2 right-align\">\n            <span className=\"block-icon\">\n              <i className=\"icon-user\"></i>\n              <span className=\"text-icon\">Student</span>\n            </span>\n          </div>\n          <div className=\"col s1 right-align\">\n            <div className=\"row icons-row\">\n              <div className=\"dropdown-block col\">\n                <a\n                href='#'\n                className='dropdown-trigger btn'\n                data-target='dropdown01'\n                onClick={this.handleDropdownClick}>\n                <i className=\"material-icons dots-icon\">more_vert</i>\n                </a>\n                <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{display: \"block\", opacity: '1', transform: 'scaleX(1) scaleY(1)'}}>\n                  <li>\n                    <a href=\"#\" className=\"modal-trigger link-block\" onClick={this.onOpenEditModal}>Edit</a>\n                  </li>\n                  <li><a href=\"#!\" onClick={() => onCloneStudent(index)}>Clone</a></li>\n                  <li><a href=\"#!\">Show Owner</a></li>\n                  <li><a href=\"#!\" onClick={() => onDeleteStudent(index)}>Delete</a></li>\n                </ul>\n                </If>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* card content */}\n      <div className=\"card-content\" ref={this.studentCard}>\n          <div className=\"row d-flex align-items-center mb-0\">\n            <div className=\"col s12 m6\">\n              <div className=\"chart-container chart-container-large\">\n                <div className=\"chart-holder\">\n                  <If condition={active}>\n                    <Doughnut\n                      data={() => data(currentScore, targetScore, initialScore)}\n                      height={210}\n                      options={{\n                        circumference: 1.45 * Math.PI,\n                        rotation: -3.85,\n                        cutoutPercentage: 60,\n                        tooltips: false,\n                      }}\n                    />\n                  </If>\n                  <span className=\"chart-value\" style={{backgroundColor: \"#0085ce\", bottom: \"7px\"}}><span data-count-up data-start-val={initialScore} data-end-val={currentScore} data-duration=\"1\">{currentScore}</span></span>\n                </div>\n                <div className=\"chart-row\">\n                  <div className=\"chart-col chart-start\">\n                    <span className=\"amount\" style={{color: '#0085ce'}}>{initialScore}</span>\n                    <span className=\"amount-text\">&nbsp; initial</span>\n                  </div>\n                  <div className=\"chart-col chart-end\">\n                    <span className=\"amount\">{targetScore}</span>\n                    <span className=\"amount-text\">&nbsp; target</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col s12 m6\">\n              <ul className=\"points-list-bordered\">\n                <li className=\"style-green\">\n                  <span className=\"badge-circle\">61</span>\n                  <span className=\"point-text\">complete</span>\n                </li>\n                <li className=\"style-red\">\n                  <span className=\"badge-circle\">7</span>\n                  <span className=\"point-text\">overdue</span>\n                </li>\n                <li className=\"style-orange\">\n                  <span className=\"badge-circle\">3</span>\n                  <span className=\"point-text\">practice tests</span>\n                </li>\n                <li className=\"style-blue-lighter\">\n                  <span className=\"badge-circle\"><span>17</span> <span className=\"of\">of 23</span></span>\n                  <span className=\"point-text\">sessions</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"card-inner-row\">\n            <div className=\"row-holder\">\n              <ul className=\"category-list\">\n                <li className=\"category-box\">\n                  <span className=\"category-badge badge-purple\"></span>\n                  <span className=\"category-text\">{tutor}</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n     {/* </div> */}\n    </React.Fragment>\n)}};\n\n  StudentCard.propTypes = {\n    student: PropTypes.object.isRequired,\n    onHandleStudentCard: PropTypes.func.isRequired,\n    dropdownIsOpen: PropTypes.bool.isRequired,\n    index: PropTypes.number.isRequired,\n    onDeleteStudent: PropTypes.func.isRequired,\n    onCloneStudent: PropTypes.func.isRequired,\n    onSetDropdown: PropTypes.func.isRequired,\n    onCloseDropdown: PropTypes.func.isRequired,\n    dropdownIndex: PropTypes.number,\n    onSaveStudentChanges:PropTypes.func.isRequired,\n  };\n\nexport default StudentCard;"]},"metadata":{},"sourceType":"module"}