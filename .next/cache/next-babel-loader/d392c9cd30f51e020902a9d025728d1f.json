{"ast":null,"code":"import { take, call, put, all } from \"redux-saga/effects\";\nimport { FETCH_STUDENTS, SET_STUDENTS, ADD_STUDENT, DELETE_STUDENT } from \"./components/Student/index/constants\";\nimport { fetchStudents, setStudents, addStudent } from \"./components/Student/index/actions\";\nimport { studentApi } from \"./api\";\nconst {\n  fetchStudentsApi,\n  addNewStudentApi\n} = studentApi;\n/** ******************************************    STUDENTS    ********************************************/\n\nexport function* watchForFetchStudents() {\n  while (true) {\n    yield take(FETCH_STUDENTS);\n    yield call(fetchStudents);\n  }\n}\nexport function* watchForAddStudent() {\n  while (true) {\n    try {\n      const {\n        student\n      } = yield take(ADD_STUDENT);\n      const response = yield call(addNewStudentApi, student);\n\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with adding a new student!\");\n      }\n\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occurred in watchForAddStudent\", err);\n    }\n  }\n}\nconst {\n  deleteStudentApi\n} = studentApi;\nexport function* watchForDeleteStudent() {\n  while (true) {\n    try {\n      const {\n        id\n      } = yield take(DELETE_STUDENT);\n      const response = yield call(deleteStudentApi, id);\n\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with deleting a student.\");\n      }\n\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occured in watchForDeleteStudent\", err);\n    }\n  }\n}\nexport default function* defaultSaga() {\n  yield all([watchForFetchStudents(), watchForAddStudent(), watchForDeleteStudent()]);\n}","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/sagas.js"],"names":["take","call","put","all","FETCH_STUDENTS","SET_STUDENTS","ADD_STUDENT","DELETE_STUDENT","fetchStudents","setStudents","addStudent","studentApi","fetchStudentsApi","addNewStudentApi","watchForFetchStudents","watchForAddStudent","student","response","message","console","warn","err","deleteStudentApi","watchForDeleteStudent","id","defaultSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,sCALP;AAMA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,QAIO,oCAJP;AAKA,SAASC,UAAT,QAA2B,OAA3B;AACA,MAAM;AAACC,EAAAA,gBAAD;AAAmBC,EAAAA;AAAnB,IAAuCF,UAA7C;AAEA;;AACA,OAAO,UAAUG,qBAAV,GAAkC;AACvC,SAAO,IAAP,EAAa;AACX,UAAMd,IAAI,CAACI,cAAD,CAAV;AACA,UAAMH,IAAI,CAACO,aAAD,CAAV;AACD;AACF;AAED,OAAO,UAAUO,kBAAV,GAA+B;AACpC,SAAO,IAAP,EAAa;AACX,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMhB,IAAI,CAACM,WAAD,CAA9B;AACA,YAAMW,QAAQ,GAAG,MAAMhB,IAAI,CAACY,gBAAD,EAAmBG,OAAnB,CAA3B;;AACA,UAAIC,QAAQ,IAAIA,QAAQ,CAACC,OAAzB,EAAkC;AAChC,eAAOC,OAAO,CAACC,IAAR,CAAa,iDAAb,CAAP;AACD;;AACD,YAAMnB,IAAI,CAACO,aAAD,CAAV;AACD,KAPD,CAOE,OAAOa,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,IAAR,CAAa,sCAAb,EAAqDC,GAArD;AACD;AACF;AACF;AACD,MAAM;AAACC,EAAAA;AAAD,IAAqBX,UAA3B;AAEA,OAAO,UAAUY,qBAAV,GAAkC;AACvC,SAAO,IAAP,EAAa;AACX,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAS,MAAMxB,IAAI,CAACO,cAAD,CAAzB;AACA,YAAMU,QAAQ,GAAG,MAAMhB,IAAI,CAACqB,gBAAD,EAAmBE,EAAnB,CAA3B;;AACA,UAAIP,QAAQ,IAAIA,QAAQ,CAACC,OAAzB,EAAkC;AAChC,eAAOC,OAAO,CAACC,IAAR,CAAa,+CAAb,CAAP;AACD;;AACD,YAAMnB,IAAI,CAACO,aAAD,CAAV;AACD,KAPD,CAOE,OAAOa,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,IAAR,CAAa,wCAAb,EAAuDC,GAAvD;AACD;AACF;AACF;AAED,eAAe,UAAUI,WAAV,GAAwB;AACrC,QAAMtB,GAAG,CAAC,CACRW,qBAAqB,EADb,EAERC,kBAAkB,EAFV,EAGRQ,qBAAqB,EAHb,CAAD,CAAT;AAKD","sourcesContent":["import { take, call, put, all } from \"redux-saga/effects\";\nimport {\n  FETCH_STUDENTS,\n  SET_STUDENTS,\n  ADD_STUDENT,\n  DELETE_STUDENT,\n} from \"./components/Student/index/constants\";\nimport {\n  fetchStudents,\n  setStudents,\n  addStudent,\n} from \"./components/Student/index/actions\";\nimport { studentApi } from \"./api\";\nconst {fetchStudentsApi, addNewStudentApi} = studentApi;\n\n/** ******************************************    STUDENTS    ********************************************/\nexport function* watchForFetchStudents() {\n  while (true) {\n    yield take(FETCH_STUDENTS);\n    yield call(fetchStudents);\n  }\n}\n\nexport function* watchForAddStudent() {\n  while (true) {\n    try {\n      const { student } = yield take(ADD_STUDENT);\n      const response = yield call(addNewStudentApi, student);\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with adding a new student!\");\n      }\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occurred in watchForAddStudent\", err);\n    }\n  }\n}\nconst {deleteStudentApi} = studentApi;\n\nexport function* watchForDeleteStudent() {\n  while (true) {\n    try {\n      const { id } = yield take(DELETE_STUDENT);\n      const response = yield call(deleteStudentApi, id);\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with deleting a student.\");\n      }\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occured in watchForDeleteStudent\", err);\n    }\n  }\n}\n\nexport default function* defaultSaga() {\n  yield all([\n    watchForFetchStudents(),\n    watchForAddStudent(),\n    watchForDeleteStudent(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}