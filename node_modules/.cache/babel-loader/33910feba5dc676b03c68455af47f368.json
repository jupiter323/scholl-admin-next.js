{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar _data = function data(percentage) {\n  return {\n    datasets: [{\n      data: [percentage, 100 - percentage],\n      backgroundColor: ['#00bbf7', '#eaeaea']\n    }]\n  };\n};\n\nvar TargetScores = function TargetScores(_ref) {\n  var percentageHitTargetScore = _ref.state.percentageHitTargetScore;\n  return React.createElement(\"div\", {\n    className: \"grid-item card-width-366 order-sm-3\"\n  }, React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h2\", null, \"Target Scores\"), React.createElement(\"div\", {\n    className: \"card-main-full card\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"chart-container chart-container-xllarge\"\n  }, React.createElement(\"div\", {\n    className: \"chart-holder\"\n  }, React.createElement(Doughnut, {\n    data: function data() {\n      return _data(percentageHitTargetScore);\n    },\n    options: {\n      circumference: 1 * Math.PI,\n      rotation: 1 * Math.PI,\n      cutoutPercentage: 60,\n      tooltips: false\n    }\n  }), React.createElement(\"span\", {\n    className: \"chart-value\",\n    style: {\n      backgroundColor: '#00bbf7'\n    }\n  }, React.createElement(\"span\", {\n    \"data-count-up\": true,\n    \"data-start-val\": \"0\",\n    \"data-end-val\": \"\".concat(percentageHitTargetScore),\n    \"data-duration\": \"1\"\n  }, percentageHitTargetScore), \"%\")), React.createElement(\"div\", {\n    className: \"chart-row\"\n  }, React.createElement(\"div\", {\n    className: \"chart-col chart-start\"\n  }, React.createElement(\"b\", {\n    className: \"amount-text\"\n  }, \"Total Students\")), React.createElement(\"div\", {\n    className: \"chart-col chart-end\"\n  }, React.createElement(\"b\", {\n    className: \"amount-text\"\n  }, \"Hit Target Score\"))))))));\n};\n\nTargetScores.propTypes = {\n  state: PropTypes.object.isRequired\n};\nexport default TargetScores;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/SharedSummaryPageComponents/TargetScores/index.js"],"names":["React","PropTypes","Doughnut","data","percentage","datasets","backgroundColor","TargetScores","percentageHitTargetScore","state","circumference","Math","PI","rotation","cutoutPercentage","tooltips","propTypes","object","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,IAAMC,KAAI,GAAG,SAAPA,IAAO,CAACC,UAAD;AAAA,SAAiB;AAC5BC,IAAAA,QAAQ,EAAE,CAAC;AACTF,MAAAA,IAAI,EAAE,CAACC,UAAD,EAAa,MAAMA,UAAnB,CADG;AAETE,MAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe;AAFR,KAAD;AADkB,GAAjB;AAAA,CAAb;;AAUA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAYC,wBAAZ,QAAGC,KAAH,CAAYD,wBAAZ;AAAA,SACnB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,gDADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE;AAAA,aAAML,KAAI,CAACK,wBAAD,CAAV;AAAA,KADR;AAEE,IAAA,OAAO,EAAE;AACPE,MAAAA,aAAa,EAAE,IAAIC,IAAI,CAACC,EADjB;AAEPC,MAAAA,QAAQ,EAAE,IAAIF,IAAI,CAACC,EAFZ;AAGPE,MAAAA,gBAAgB,EAAE,EAHX;AAIPC,MAAAA,QAAQ,EAAE;AAJH;AAFX,IADF,EAUE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,KAAK,EAAE;AAAET,MAAAA,eAAe,EAAE;AAAnB;AAArC,KAAqE;AAAM,yBAAN;AAAoB,sBAAe,GAAnC;AAAuC,8BAAiBE,wBAAjB,CAAvC;AAAoF,qBAAc;AAAlG,KAAuGA,wBAAvG,CAArE,MAVF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,sBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,wBADF,CAJF,CAbF,CADF,CADF,CAFF,CADF,CADmB;AAAA,CAArB;;AAkCAD,YAAY,CAACS,SAAb,GAAyB;AACvBP,EAAAA,KAAK,EAAER,SAAS,CAACgB,MAAV,CAAiBC;AADD,CAAzB;AAIA,eAAeX,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (percentage) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      '#00bbf7',\n      '#eaeaea',\n    ],\n  }],\n});\n\nconst TargetScores = ({ state: { percentageHitTargetScore } }) => (\n  <div className=\"grid-item card-width-366 order-sm-3\">\n    <div className=\"card-block\">\n      <h2>Target Scores</h2>\n      <div className=\"card-main-full card\">\n        <div className=\"card-content\">\n          <div className=\"chart-container chart-container-xllarge\">\n            <div className=\"chart-holder\">\n              <Doughnut\n                data={() => data(percentageHitTargetScore)}\n                options={{\n                  circumference: 1 * Math.PI,\n                  rotation: 1 * Math.PI,\n                  cutoutPercentage: 60,\n                  tooltips: false,\n                }}\n              />\n              <span className=\"chart-value\" style={{ backgroundColor: '#00bbf7' }}><span data-count-up data-start-val=\"0\" data-end-val={`${percentageHitTargetScore}`} data-duration=\"1\">{percentageHitTargetScore}</span>%</span>\n            </div>\n            <div className=\"chart-row\">\n              <div className=\"chart-col chart-start\">\n                <b className=\"amount-text\">Total Students</b>\n              </div>\n              <div className=\"chart-col chart-end\">\n                <b className=\"amount-text\">Hit Target Score</b>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nTargetScores.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default TargetScores;\n"]},"metadata":{},"sourceType":"module"}