{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/components/TotalScoreCard/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar _data = function data(totalScore, totalPossible) {\n  return {\n    datasets: [{\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#32b9ec', 'rgb(234, 234, 234)']\n    }]\n  };\n};\n\nvar TotalScoreCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TotalScoreCard, _React$Component);\n\n  function TotalScoreCard(props) {\n    var _this;\n\n    _classCallCheck(this, TotalScoreCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TotalScoreCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var subjectScores = _this.props.subjectScores;\n      var currentTotalScore = 0;\n      var deltaScore = 0;\n\n      if (subjectScores && subjectScores instanceof Array) {\n        subjectScores.map(function (subjectScore) {\n          currentTotalScore += subjectScore.current_score;\n          deltaScore += subjectScore.delta;\n        });\n\n        _this.setState({\n          currentTotalScore: currentTotalScore,\n          deltaScore: deltaScore\n        });\n      }\n    });\n\n    _this.state = {\n      currentTotalScore: 0,\n      deltaScore: 0\n    };\n    return _this;\n  }\n\n  _createClass(TotalScoreCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentTotalScore = _this$state.currentTotalScore,\n          deltaScore = _this$state.deltaScore;\n      return __jsx(\"div\", {\n        className: \"col s12 l6 card-width-546\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Your Score \", __jsx(\"span\", {\n        className: \"separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"|\"), __jsx(\"span\", {\n        className: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"400 to 1600\")), __jsx(\"div\", {\n        className: \"card-main-full card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content center-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-block chart-block-total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(Doughnut, {\n        data: function data() {\n          return _data(currentTotalScore, 1600);\n        },\n        width: 320,\n        height: 320,\n        options: {\n          cutoutPercentage: 80\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"chart-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"TotalScore\"), __jsx(\"span\", {\n        className: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, currentTotalScore), __jsx(\"span\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"(\", deltaScore, \")\")))))));\n    }\n  }]);\n\n  return TotalScoreCard;\n}(React.Component);\n\nTotalScoreCard.propTypes = {};\nexport default TotalScoreCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/components/TotalScoreCard/index.js"],"names":["React","PropTypes","Doughnut","data","totalScore","totalPossible","datasets","backgroundColor","TotalScoreCard","props","subjectScores","currentTotalScore","deltaScore","Array","map","subjectScore","current_score","delta","setState","state","cutoutPercentage","Component","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = (totalScore, totalPossible) => ({\n  datasets: [\n    {\n      data: [totalScore, totalPossible - totalScore],\n      backgroundColor: ['#32b9ec', 'rgb(234, 234, 234)'],\n    },\n  ],\n});\nclass TotalScoreCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTotalScore: 0,\n      deltaScore: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    const { subjectScores } = this.props;\n    let currentTotalScore = 0;\n    let deltaScore = 0;\n    if (subjectScores && subjectScores instanceof Array) {\n      subjectScores.map(subjectScore => {\n        currentTotalScore += subjectScore.current_score;\n        deltaScore += subjectScore.delta;\n      });\n      this.setState({\n        currentTotalScore,\n        deltaScore,\n      });\n    }\n  };\n\n  render() {\n    const { currentTotalScore, deltaScore } = this.state;\n    return (\n      <div className=\"col s12 l6 card-width-546\">\n        <div className=\"card-block\">\n          <h2>\n            Your Score <span className=\"separator\">|</span>\n            <span className=\"quantity\">\n              400 to 1600\n            </span>\n          </h2>\n          <div className=\"card-main-full card\">\n            <div className=\"card-content center-align\">\n              <div className=\"chart-block chart-block-total\">\n                <Doughnut\n                  data={() => data(currentTotalScore, 1600)}\n                  width={320}\n                  height={320}\n                  options={{\n                    cutoutPercentage: 80,\n                  }}\n                />\n                <div className=\"chart-text\">\n                  <span className=\"title\">TotalScore</span>\n                  <span className=\"value\">\n                    {currentTotalScore}\n                  </span>\n                  <span className=\"description\">\n                    ({deltaScore})\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTotalScoreCard.propTypes = {};\n\nexport default TotalScoreCard;\n"]},"metadata":{},"sourceType":"module"}