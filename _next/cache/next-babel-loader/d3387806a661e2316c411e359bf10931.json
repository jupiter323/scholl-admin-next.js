{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonDetailAnswerSheet/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport DrillQuestions from './components/DrillQuestions';\nimport moment from \"moment\";\nimport { fetchStudentLessonSectionApi } from \"../index/api\";\nimport { makeSelectUnitFilterOptions } from \"../index/selectors\";\nimport DropDownMenu from '../DropDownMenu';\n\nvar _data = function data(value, total) {\n  return {\n    datasets: [{\n      data: [value, total - value],\n      backgroundColor: [getValuesByScore(value, total, 'color'), \"#eaeaea\"]\n    }]\n  };\n};\n\nvar getValuesByScore = function getValuesByScore(value, max, target) {\n  var activeIndex = 0;\n\n  if (max === 0) {\n    activeIndex = 4;\n  } else {\n    var score = value / max * 100;\n\n    if (score >= 90) {\n      activeIndex = 0;\n    } else if (score < 90 && score > 75) {\n      activeIndex = 1;\n    } else if (score > 60 && score < 76) {\n      activeIndex = 2;\n    } else if (score >= 40 && score <= 60) {\n      activeIndex = 3;\n    } else if (score < 40) {\n      activeIndex = 4;\n    }\n  }\n\n  var colorList = [{\n    label: \"Great\",\n    color: \"#74b287\"\n  }, {\n    label: \"Above Average\",\n    color: \"#a9c466\"\n  }, {\n    label: \"Average\",\n    color: \"d8c539\"\n  }, {\n    label: \"Below Average\",\n    color: \"#e89258\"\n  }, {\n    label: \"Poor\",\n    color: \"#f27c7c\"\n  }];\n\n  if (target === 'color') {\n    return colorList[activeIndex].color;\n  }\n\n  return colorList[activeIndex].label;\n};\n\nvar LessonDetailAnswerSheet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LessonDetailAnswerSheet, _React$Component);\n\n  function LessonDetailAnswerSheet(props) {\n    var _this;\n\n    _classCallCheck(this, LessonDetailAnswerSheet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LessonDetailAnswerSheet).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function _callee2() {\n      var _this$props, lesson, student_id, lesson_id, sections;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props = _this.props, lesson = _this$props.lesson, student_id = _this$props.user.id;\n\n              if (lesson.sections) {\n                // lesson module type\n                _this.setState({\n                  currentType: \"Module\"\n                });\n\n                lesson_id = _this.props.lesson.id;\n                sections = _this.props.lesson.sections;\n                sections.map(function _callee(section) {\n                  var section_id, currentSectionName, challengeProblems, practiceProblems;\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          section_id = section.id;\n                          currentSectionName = section.name;\n\n                          if (!(currentSectionName === \"challenge\")) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          _this.setState({\n                            hasChallenge: true\n                          });\n\n                          _context.next = 6;\n                          return _regeneratorRuntime.awrap(fetchStudentLessonSectionApi(student_id, lesson_id, section_id));\n\n                        case 6:\n                          challengeProblems = _context.sent;\n\n                          _this.setState({\n                            challengeProblems: challengeProblems.lesson_problems\n                          });\n\n                          _context.next = 17;\n                          break;\n\n                        case 10:\n                          _this.setState({\n                            hasPractice: true\n                          });\n\n                          _context.next = 13;\n                          return _regeneratorRuntime.awrap(fetchStudentLessonSectionApi(student_id, lesson_id, section_id));\n\n                        case 13:\n                          practiceProblems = _context.sent;\n\n                          if (practiceProblems) {\n                            _context.next = 16;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\");\n\n                        case 16:\n                          _this.setState({\n                            practiceProlems: practiceProblems.lesson_problems\n                          });\n\n                        case 17:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  });\n                });\n              }\n\n              if (lesson.problems && lesson.problems.length !== 0) {\n                _this.setState({\n                  currentType: \"Drill\",\n                  hasDrill: true\n                });\n\n                if (_this.props.lessonIdsToUnFlag.includes(lesson.id)) {\n                  lesson.problems.map(function (problem) {\n                    if (problem.flag_status === 'FLAGGED') {\n                      problem.flag_status = 'REVIEWED';\n                      return problem;\n                    }\n\n                    return problem;\n                  });\n                }\n\n                _this.setState({\n                  drillProblems: lesson.problems\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getProblemsAmount\", function () {\n      if (_this.state.currentType === \"Module\") {\n        return _this.state.challengeProblems.length + _this.state.practiceProlems.length;\n      }\n\n      if (_this.state.currentType === \"Drill\") {\n        return _this.state.drillProblems.length;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getReviewedAndFlaggedProblemAmount\", function (type) {\n      var amount = 0;\n\n      if (_this.props.lesson.problems && _this.props.lesson.problems.length !== 0) {\n        _this.props.lesson.problems.map(function (section) {\n          if (section.flag_status === type) {\n            amount += 1;\n          }\n        });\n      }\n\n      if (_this.props.lesson.sections && _this.props.lesson.sections.length !== 0) {\n        var _this$state = _this.state,\n            challengeProblems = _this$state.challengeProblems,\n            practiceProlems = _this$state.practiceProlems;\n        challengeProblems.length !== 0 && challengeProblems.map(function (section) {\n          if (section.flag_status === type) {\n            amount += 1;\n          }\n        });\n        practiceProlems.length !== 0 && practiceProlems.map(function (section) {\n          if (section.flag_status === type) {\n            amount += 1;\n          }\n        });\n      }\n\n      return amount;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTypeLabel\", function () {\n      var typeLabel = \"\";\n\n      if (_this.state.hasChallenge && _this.state.hasPractice) {\n        typeLabel = \"Challenge + Practice\";\n      } else {\n        if (_this.state.hasChallenge) {\n          typeLabel = \"Challenge\";\n        }\n\n        if (_this.state.hasPractice) {\n          typeLabel = \"Practice\";\n        }\n      }\n\n      if (_this.state.hasDrill) {\n        typeLabel = \"Drill\";\n      }\n\n      return typeLabel;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnitNameById\", function () {\n      var units = _this.props.units;\n\n      if (units && units.length !== 0) {\n        var unitIds = units.map(function (unit) {\n          return unit.value;\n        });\n        var currentIndex = unitIds.findIndex(_this.getUnitIndexMatchedUnitId);\n        var currentUnit = units[currentIndex];\n        return currentUnit.label;\n      }\n\n      return \"Undefind UnitName\";\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getUnitIndexMatchedUnitId\", function (unitId) {\n      return unitId === _this.props.lesson.unit_id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: !_this.state.dropdownIsOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAssignLesson\", function () {\n      var _this$props2 = _this.props,\n          onOpenModal = _this$props2.onOpenModal,\n          onAddCheckedLesson = _this$props2.onAddCheckedLesson,\n          lesson = _this$props2.lesson;\n      onOpenModal();\n      onAddCheckedLesson(lesson.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateProblemList\", function (problemsType, updatedProblem) {\n      var problems = _this.state[problemsType];\n      var newProblems = problems.map(function (problem) {\n        if (problem.id === updatedProblem.id) return updatedProblem;\n        return problem;\n      });\n\n      _this.setState(_defineProperty({}, problemsType, _toConsumableArray(newProblems)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCurrentProblemList\", function () {\n      var _this$state2 = _this.state,\n          currentType = _this$state2.currentType,\n          drillProblems = _this$state2.drillProblems,\n          practiceProlems = _this$state2.practiceProlems,\n          challengeProblems = _this$state2.challengeProblems;\n      if (currentType === 'Drill') return [{\n        problems: drillProblems,\n        type: \"drillProblems\"\n      }];\n      if (currentType === 'Module') return [{\n        problems: challengeProblems,\n        type: \"challengeProblems\"\n      }, {\n        problems: practiceProlems,\n        type: \"practiceProlems\"\n      }];\n    });\n\n    _this.state = {\n      challengeProblems: [],\n      practiceProlems: [],\n      drillProblems: [],\n      currentType: \"\",\n      hasChallenge: false,\n      hasPractice: false,\n      hasDrill: false,\n      dropdownIsOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(LessonDetailAnswerSheet, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          challengeProblems = _this$state3.challengeProblems,\n          practiceProlems = _this$state3.practiceProlems,\n          drillProblems = _this$state3.drillProblems;\n      var _this$props3 = this.props,\n          onCloseDetailModal = _this$props3.onCloseDetailModal,\n          user = _this$props3.user,\n          _this$props3$lesson = _this$props3.lesson,\n          name = _this$props3$lesson.name,\n          starting_page = _this$props3$lesson.starting_page,\n          ending_page = _this$props3$lesson.ending_page,\n          completed_at = _this$props3$lesson.completed_at,\n          assignTime = _this$props3$lesson.assignTime,\n          assignment_date = _this$props3$lesson.assignment_date,\n          due_date = _this$props3$lesson.due_date,\n          dueTime = _this$props3$lesson.dueTime;\n      var _user$studentInformat = user.studentInformation,\n          firstName = _user$studentInformat.firstName,\n          lastName = _user$studentInformat.lastName;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-modal card-main card switcher-section grey lighten-5 modal\",\n        style: {\n          zIndex: \"1004\",\n          display: \"block\",\n          position: \"absolute\",\n          top: \"0\",\n          minHeight: \"100%\",\n          minWidth: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"header-box card-panel light-blue lighten-1 white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"header-flex-row row mb-0\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m7 xl8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"header-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"header-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"icon-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"text-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Lesson\"))), __jsx(\"div\", {\n        className: \"header-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, this.getUnitNameById()), __jsx(\"h1\", {\n        className: \"text-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, name), __jsx(\"div\", {\n        className: \"text-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"p.\", starting_page, ending_page > starting_page ? \"-\".concat(ending_page) : \"\", \"(Reading)\"))))), __jsx(\"div\", {\n        className: \"col s9 m4 xl3 position-mobile-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"text-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, firstName, \" \", lastName), assignment_date && __jsx(\"dl\", {\n        className: \"text-small dl-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Assigned:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, __jsx(\"time\", {\n        dateTime: \"2019-01-06T08:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"\".concat(moment(assignment_date).format(\"MM/DD/YY\"), \" at \").concat(moment(assignTime).format(\"hh:mm\"))))), due_date && __jsx(\"dl\", {\n        className: \"text-small dl-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Due:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, __jsx(\"time\", {\n        dateTime: \"2019-01-06T16:00\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"\".concat(moment(due_date).format(\"MM/DD/YY\"), \" at \").concat(moment(dueTime).format(\"hh:mm\"))))), completed_at && __jsx(\"dl\", {\n        className: \"text-small dl-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Completed:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, __jsx(\"time\", {\n        dateTime: \"2019-09-01T06:59\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"\".concat(moment(completed_at).format(\"MM/DD/YY\"), \" at \").concat(moment(completed_at).format(\"hh:mm\"))))))), __jsx(\"div\", {\n        className: \"col s2 m1 right-align position-mobile-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"dropdown-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"dropdown-trigger btn\",\n        href: \"#\",\n        \"data-target\": \"dropdown_top\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          _this2.onSetDropdown();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"more_vert\")), __jsx(DropDownMenu, {\n        onOpenModal: this.props.onOpenModal,\n        onAddCheckedLesson: this.props.onAddCheckedLesson,\n        lesson: this.props.lesson,\n        dropdownIsOpen: this.state.dropdownIsOpen,\n        onSetDropdown: this.onSetDropdown,\n        onCloseDetailModal: this.props.onCloseDetailModal,\n        onCloseDropdown: this.props.onCloseDropdown,\n        resetLessonSelections: this.props.resetLessonSelections,\n        handleMarkAllFlagsReviewed: this.props.handleMarkAllFlagsReviewed,\n        updateProblemList: this.updateProblemList,\n        problems: this.getCurrentProblemList(),\n        handleExcuseLessonLateness: this.props.handleExcuseLessonLateness,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"close-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"modal-close close\",\n        onClick: onCloseDetailModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-close-thin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))))), __jsx(\"div\", {\n        className: \"header-row-block card-panel-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 right-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        className: \"text-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"DownloadPDF\")))), __jsx(\"div\", {\n        className: \"content-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"container-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, this.props.lesson.status === \"COMPLETED\" && __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-block\",\n        style: {\n          margin: \"0 auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Performance\"), __jsx(\"div\", {\n        className: \"card-answer card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-container\",\n        style: {\n          width: 140\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-holder\",\n        style: {\n          width: 140\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, __jsx(Doughnut, {\n        data: function data() {\n          return _data(_this2.props.lesson.scoring.correct_count, _this2.props.lesson.scoring.question_count);\n        },\n        height: 140,\n        width: 140,\n        options: {\n          circumference: 1.45 * Math.PI,\n          rotation: -3.85,\n          cutoutPercentage: 55,\n          tooltips: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"color\"),\n          marginBottom: \"-40px\",\n          width: \"50px\",\n          height: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, Math.floor(this.props.lesson.scoring.percentage_correct ? this.props.lesson.scoring.percentage_correct : 0), \"%\")), __jsx(\"div\", {\n        style: {\n          color: getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"color\"),\n          margin: \"45px 45px 0 45px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, this.props.lesson.scoring.correct_count, \" of\", \" \", this.props.lesson.scoring.question_count))), __jsx(\"div\", {\n        className: \"col s6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"chart-description\",\n        style: {\n          marginTop: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, __jsx(\"dl\", {\n        className: \"dl-horizontal\",\n        style: {\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Time Est:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, this.props.lesson.time_estimate ? this.props.lesson.time_estimate : 0, \"min\")), __jsx(\"dl\", {\n        className: \"dl-horizontal\",\n        style: {\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, \"Problems:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, this.getProblemsAmount())), __jsx(\"dl\", {\n        className: \"dl-horizontal\",\n        style: {\n          fontSize: 16,\n          margin: 30,\n          padding: 10,\n          backgroundColor: getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"color\"),\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"label\")))))))))), __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-block\",\n        style: {\n          margin: \"0 auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Flagged For Review\"), __jsx(\"div\", {\n        className: \"card-answer card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row-bordered d-flex row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s6 badge-block-column red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-rounded-xlg badge red darken-2 white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, this.getReviewedAndFlaggedProblemAmount(\"FLAGGED\")), \" \", __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      })), __jsx(\"span\", {\n        style: {\n          marginLeft: 10,\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"To Review\")), __jsx(\"div\", {\n        className: \"col s6 badge-block-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"badge-rounded-xlg badge grey darken-2 white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, this.getReviewedAndFlaggedProblemAmount(\"REVIEWED\")), \" \", __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      })), __jsx(\"span\", {\n        style: {\n          marginLeft: 10,\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Reviewed\"))))))))), this.props.lesson.status === \"COMPLETED\" ? __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-block\",\n        style: {\n          margin: \"0 auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, challengeProblems.length !== 0 && __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, __jsx(ChallengeQuestions, {\n        questions: challengeProblems,\n        updateProblemList: this.updateProblemList,\n        problemType: 'challengeProblems',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      })), practiceProlems.length !== 0 && __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, __jsx(PracticeQuestions, {\n        questions: practiceProlems,\n        updateProblemList: this.updateProblemList,\n        problemType: 'practiceProlems',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      })), drillProblems.length !== 0 && __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, __jsx(DrillQuestions, {\n        questions: drillProblems,\n        updateProblemList: this.updateProblemList,\n        problemType: 'drillProblems',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }))))) : [__jsx(\"div\", {\n        className: \"col s12 m6 card-block\",\n        style: {\n          margin: \"0 auto\"\n        },\n        key: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, challengeProblems.length !== 0 && __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, __jsx(ChallengeQuestions, {\n        questions: challengeProblems,\n        updateProblemList: this.updateProblemList,\n        problemType: 'challengeProblems',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col s12 m6 card-block\",\n        style: {\n          margin: \"0 auto\"\n        },\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, practiceProlems.length !== 0 && __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, __jsx(PracticeQuestions, {\n        questions: practiceProlems,\n        updateProblemList: this.updateProblemList,\n        problemType: 'practiceProlems',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }))), drillProblems.length !== 0 && __jsx(\"div\", {\n        className: \"main-row row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, __jsx(DrillQuestions, {\n        questions: drillProblems,\n        updateProblemList: this.updateProblemList,\n        problemType: 'drillProblems',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }))]))))));\n    }\n  }]);\n\n  return LessonDetailAnswerSheet;\n}(React.Component);\n\nLessonDetailAnswerSheet.propTypes = {\n  open: PropTypes.bool.isRequired,\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  onCloseDetailModal: PropTypes.func.isRequired\n};\nvar mapStateToProps = createStructuredSelector({\n  units: makeSelectUnitFilterOptions()\n});\nvar withConnect = connect(mapStateToProps, null);\nexport default compose(withConnect)(LessonDetailAnswerSheet);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonDetailAnswerSheet/index.js"],"names":["React","compose","createStructuredSelector","connect","PropTypes","Doughnut","PracticeQuestions","ChallengeQuestions","DrillQuestions","moment","fetchStudentLessonSectionApi","makeSelectUnitFilterOptions","DropDownMenu","data","value","total","datasets","backgroundColor","getValuesByScore","max","target","activeIndex","score","colorList","label","color","LessonDetailAnswerSheet","props","lesson","student_id","user","id","sections","setState","currentType","lesson_id","map","section","section_id","currentSectionName","name","hasChallenge","challengeProblems","lesson_problems","hasPractice","practiceProblems","practiceProlems","problems","length","hasDrill","lessonIdsToUnFlag","includes","problem","flag_status","drillProblems","state","type","amount","typeLabel","units","unitIds","unit","currentIndex","findIndex","getUnitIndexMatchedUnitId","currentUnit","unitId","unit_id","dropdownIsOpen","onOpenModal","onAddCheckedLesson","problemsType","updatedProblem","newProblems","onCloseDetailModal","starting_page","ending_page","completed_at","assignTime","assignment_date","due_date","dueTime","studentInformation","firstName","lastName","zIndex","display","position","top","minHeight","minWidth","width","getUnitNameById","format","e","preventDefault","onSetDropdown","onCloseDropdown","resetLessonSelections","handleMarkAllFlagsReviewed","updateProblemList","getCurrentProblemList","handleExcuseLessonLateness","status","margin","scoring","correct_count","question_count","circumference","Math","PI","rotation","cutoutPercentage","tooltips","marginBottom","height","floor","percentage_correct","marginTop","fontSize","time_estimate","getProblemsAmount","padding","getReviewedAndFlaggedProblemAmount","marginLeft","Component","propTypes","open","bool","isRequired","object","func","mapStateToProps","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport DrillQuestions from './components/DrillQuestions';\nimport moment from \"moment\";\nimport { fetchStudentLessonSectionApi } from \"../index/api\";\nimport { makeSelectUnitFilterOptions } from \"../index/selectors\";\nimport DropDownMenu from '../DropDownMenu';\n\n\nconst data = (value, total) => ({\n  datasets: [{\n    data: [value, total - value],\n    backgroundColor: [\n      getValuesByScore(value, total, 'color'),\n      \"#eaeaea\",\n    ],\n  }],\n});\nconst getValuesByScore = (value, max, target) => {\n  let activeIndex = 0;\n  if (max === 0) {\n    activeIndex = 4;\n  } else {\n    const score = (value / max) * 100;\n    if (score >= 90) {\n      activeIndex = 0;\n    } else if (score < 90 && score > 75) {\n      activeIndex = 1;\n    } else if (score > 60 && score < 76) {\n      activeIndex = 2;\n    } else if (score >= 40 && score <= 60) {\n      activeIndex = 3;\n    } else if (score < 40) {\n      activeIndex = 4;\n    }\n  }\n  const colorList = [\n    { label: \"Great\", color: \"#74b287\" },\n    { label: \"Above Average\", color: \"#a9c466\" },\n    { label: \"Average\", color: \"d8c539\" },\n    { label: \"Below Average\", color: \"#e89258\" },\n    { label: \"Poor\", color: \"#f27c7c\" },\n  ];\n  if (target === 'color') {\n    return colorList[activeIndex].color;\n  }\n  return colorList[activeIndex].label;\n};\n\nclass LessonDetailAnswerSheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      challengeProblems: [],\n      practiceProlems: [],\n      drillProblems: [],\n      currentType: \"\",\n      hasChallenge: false,\n      hasPractice: false,\n      hasDrill: false,\n      dropdownIsOpen: false,\n    };\n  }\n\n\n  componentDidMount = async () => {\n    const { lesson, user: { id: student_id } } = this.props;\n    if (lesson.sections) { // lesson module type\n      this.setState({\n        currentType: \"Module\",\n      });\n      const lesson_id = this.props.lesson.id;\n      const { sections } = this.props.lesson;\n      sections.map(async section => {\n        const section_id = section.id;\n        const currentSectionName = section.name;\n        if (currentSectionName === \"challenge\") {\n          this.setState({\n            hasChallenge: true,\n          });\n          const challengeProblems = await fetchStudentLessonSectionApi(student_id, lesson_id, section_id);\n          this.setState({\n            challengeProblems: challengeProblems.lesson_problems,\n          });\n        } else {\n          this.setState({\n            hasPractice: true,\n          });\n          const practiceProblems = await fetchStudentLessonSectionApi(student_id, lesson_id, section_id);\n          if (!practiceProblems) return;\n          this.setState({\n            practiceProlems: practiceProblems.lesson_problems,\n          });\n        }\n      });\n    }\n    if (lesson.problems && lesson.problems.length !== 0) {\n      this.setState({\n        currentType: \"Drill\",\n        hasDrill: true,\n      });\n      if (this.props.lessonIdsToUnFlag.includes(lesson.id)) {\n        lesson.problems.map(problem => {\n          if (problem.flag_status === 'FLAGGED') {\n            problem.flag_status = 'REVIEWED';\n            return problem;\n          }\n          return problem;\n        });\n      }\n      this.setState({\n        drillProblems: lesson.problems,\n      });\n    }\n  }\n\n  getProblemsAmount = () => {\n    if (this.state.currentType === \"Module\") {\n      return this.state.challengeProblems.length + this.state.practiceProlems.length;\n    }\n    if (this.state.currentType === \"Drill\") {\n      return this.state.drillProblems.length;\n    }\n  }\n\n  getReviewedAndFlaggedProblemAmount = (type) => {\n    let amount = 0;\n    if (this.props.lesson.problems && this.props.lesson.problems.length !== 0) {\n      this.props.lesson.problems.map(section => {\n        if (section.flag_status === type) {\n          amount += 1;\n        }\n      });\n    }\n    if (this.props.lesson.sections && this.props.lesson.sections.length !== 0) {\n      const { challengeProblems, practiceProlems } = this.state;\n      challengeProblems.length !== 0 && challengeProblems.map(section => {\n        if (section.flag_status === type) {\n          amount += 1;\n        }\n      });\n      practiceProlems.length !== 0 && practiceProlems.map(section => {\n        if (section.flag_status === type) {\n          amount += 1;\n        }\n      });\n    }\n    return amount;\n  }\n\n  getTypeLabel = () => {\n    let typeLabel = \"\";\n    if (this.state.hasChallenge && this.state.hasPractice) {\n      typeLabel = \"Challenge + Practice\";\n    } else {\n      if (this.state.hasChallenge) {\n        typeLabel = \"Challenge\";\n      }\n      if (this.state.hasPractice) {\n        typeLabel = \"Practice\";\n      }\n    }\n\n    if (this.state.hasDrill) {\n      typeLabel = \"Drill\";\n    }\n\n    return typeLabel;\n  }\n\n  getUnitNameById = () => {\n    const { units } = this.props;\n    if (units && units.length !== 0) {\n      const unitIds = units.map(unit => unit.value);\n      const currentIndex = unitIds.findIndex(this.getUnitIndexMatchedUnitId);\n      const currentUnit = units[currentIndex];\n      return currentUnit.label;\n    }\n    return \"Undefind UnitName\";\n  }\n\n  getUnitIndexMatchedUnitId = unitId => unitId === this.props.lesson.unit_id;\n\n  onSetDropdown = () => this.setState({ dropdownIsOpen: !this.state.dropdownIsOpen });\n\n  handleAssignLesson = () => {\n    const { onOpenModal, onAddCheckedLesson, lesson } = this.props;\n    onOpenModal();\n    onAddCheckedLesson(lesson.id);\n  }\n\n  updateProblemList = (problemsType, updatedProblem) => {\n    const problems = this.state[problemsType];\n    const newProblems = problems.map(problem => {\n      if (problem.id === updatedProblem.id) return updatedProblem;\n      return problem;\n    });\n    this.setState({ [problemsType]: [...newProblems] });\n  }\n\n  getCurrentProblemList = () => {\n    const { currentType, drillProblems, practiceProlems, challengeProblems } = this.state;\n    if (currentType === 'Drill') return [{ problems: drillProblems, type: \"drillProblems\" }];\n    if (currentType === 'Module') return [{ problems: challengeProblems, type: \"challengeProblems\" }, { problems: practiceProlems, type: \"practiceProlems\" }];\n  }\n\n  render() {\n    const { challengeProblems, practiceProlems, drillProblems } = this.state;\n    const { onCloseDetailModal, user,\n      lesson: { name, starting_page, ending_page, completed_at, assignTime, assignment_date, due_date, dueTime } } = this.props;\n    const { studentInformation: { firstName, lastName } } = user;\n    return (\n      <React.Fragment>\n        <div className=\"wrapper\">\n          <div\n            className=\"card-modal card-main card switcher-section grey lighten-5 modal\"\n            style={{\n              zIndex: \"1004\",\n              display: \"block\",\n              position: \"absolute\",\n              top: \"0\",\n              minHeight: \"100%\",\n              minWidth: \"100%\",\n            }}\n          >\n            <div className=\"header-box card-panel light-blue lighten-1 white-text\">\n              <div className=\"header-flex-row row mb-0\" style={{ width: \"100%\" }}>\n                <div className=\"col s12 m7 xl8\">\n                  <div className=\"header-holder\">\n                    <div className=\"header-col\">\n                      <div className=\"icon-col\">\n                        <i className=\"icon-books\" />\n                        <span className=\"text-icon\">Lesson</span>\n                      </div>\n                    </div>\n                    <div className=\"header-col\">\n                      <div className=\"card-panel-text\">\n                        <div className=\"text-small\">{this.getUnitNameById()}</div>\n                        <h1 className=\"text-large\">{name}</h1>\n                        <div className=\"text-small\">\n                          p.{starting_page}\n                          {ending_page > starting_page ? `-${ending_page}` : \"\"}(Reading)\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s9 m4 xl3 position-mobile-left\">\n                  <div className=\"card-panel-text\">\n                    <h2 className=\"text-large\">\n                      {firstName} {lastName}\n                    </h2>\n                    {assignment_date && (\n                      <dl className=\"text-small dl-horizontal\">\n                        <dt>Assigned:</dt>\n                        <dd>\n                          <time dateTime=\"2019-01-06T08:00\">{`${moment(assignment_date).format(\n                            \"MM/DD/YY\",\n                          )} at ${moment(assignTime).format(\"hh:mm\")}`}</time>\n                        </dd>\n                      </dl>\n                    )}\n                    {due_date && (\n                      <dl className=\"text-small dl-horizontal\">\n                        <dt>Due:</dt>\n                        <dd>\n                          <time dateTime=\"2019-01-06T16:00\">{`${moment(due_date).format(\n                            \"MM/DD/YY\",\n                          )} at ${moment(dueTime).format(\"hh:mm\")}`}</time>\n                        </dd>\n                      </dl>\n                    )}\n                    {completed_at && (\n                      <dl className=\"text-small dl-horizontal\">\n                        <dt>Completed:</dt>\n                        <dd>\n                          <time dateTime=\"2019-09-01T06:59\">{`${moment(completed_at).format(\n                            \"MM/DD/YY\",\n                          )} at ${moment(completed_at).format(\"hh:mm\")}`}</time>\n                        </dd>\n                      </dl>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col s2 m1 right-align position-mobile-right\">\n                  <div className=\"dropdown-block\">\n                    <a\n                      className=\"dropdown-trigger btn\"\n                      href=\"#\"\n                      data-target=\"dropdown_top\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        this.onSetDropdown();\n                      }}\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <DropDownMenu\n                      onOpenModal={this.props.onOpenModal}\n                      onAddCheckedLesson={this.props.onAddCheckedLesson}\n                      lesson={this.props.lesson}\n                      dropdownIsOpen={this.state.dropdownIsOpen}\n                      onSetDropdown={this.onSetDropdown}\n                      onCloseDetailModal={this.props.onCloseDetailModal}\n                      onCloseDropdown={this.props.onCloseDropdown}\n                      resetLessonSelections={this.props.resetLessonSelections}\n                      handleMarkAllFlagsReviewed={this.props.handleMarkAllFlagsReviewed}\n                      updateProblemList={this.updateProblemList}\n                      problems={this.getCurrentProblemList()}\n                      handleExcuseLessonLateness={this.props.handleExcuseLessonLateness}\n                    />\n                  </div>\n                  <div className=\"close-block\">\n                    <a href=\"#\" className=\"modal-close close\" onClick={onCloseDetailModal}>\n                      <i className=\"icon-close-thin\" />\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"header-row-block card-panel-row row\">\n                <div className=\"col s12 right-align\">\n                  <h2 className=\"text-large\">DownloadPDF</h2>\n                </div>\n              </div>\n            </div>\n            <div className=\"content-section\">\n              <div className=\"row\">\n                <div className=\"container-sm\">\n                  {this.props.lesson.status === \"COMPLETED\" && (\n                    <div className=\"col s12 m6\">\n                      <div className=\"main-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"card-block\" style={{ margin: \"0 auto\" }}>\n                            <h3>Performance</h3>\n                            <div className=\"card-answer card\">\n                              <div className=\"card-content\">\n                                <div className=\"row\">\n                                  <div className=\"col s6\">\n                                    <div className=\"chart-container\" style={{ width: 140 }}>\n                                      <div className=\"chart-holder\" style={{ width: 140 }}>\n                                        <Doughnut\n                                          data={() =>\n                                            data(\n                                              this.props.lesson.scoring.correct_count,\n                                              this.props.lesson.scoring.question_count,\n                                            )\n                                          }\n                                          height={140}\n                                          width={140}\n                                          options={{\n                                            circumference: 1.45 * Math.PI,\n                                            rotation: -3.85,\n                                            cutoutPercentage: 55,\n                                            tooltips: false,\n                                          }}\n                                        />\n                                        <span\n                                          className=\"chart-value\"\n                                          style={{\n                                            backgroundColor: getValuesByScore(\n                                              this.props.lesson.scoring.correct_count,\n                                              this.props.lesson.scoring.question_count,\n                                              \"color\",\n                                            ),\n                                            marginBottom: \"-40px\",\n                                            width: \"50px\",\n                                            height: \"50px\",\n                                          }}\n                                        >\n                                          {Math.floor(\n                                            this.props.lesson.scoring.percentage_correct ? this.props.lesson.scoring.percentage_correct : 0,\n                                          )}\n                                          %\n                                        </span>\n                                      </div>\n                                      <div\n                                        style={{\n                                          color: getValuesByScore(\n                                            this.props.lesson.scoring.correct_count,\n                                            this.props.lesson.scoring.question_count,\n                                            \"color\",\n                                          ),\n                                          margin: \"45px 45px 0 45px\",\n                                        }}\n                                      >\n                                        {this.props.lesson.scoring.correct_count} of{\" \"}\n                                        {this.props.lesson.scoring.question_count}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div className=\"col s6\">\n                                    <div\n                                      className=\"chart-description\"\n                                      style={{ marginTop: \"10px\" }}\n                                    >\n                                      <dl className=\"dl-horizontal\" style={{ fontSize: 16 }}>\n                                        <dt>Time Est:</dt>\n                                        <dd>\n                                          {this.props.lesson.time_estimate\n                                            ? this.props.lesson.time_estimate\n                                            : 0}\n                                          min\n                                        </dd>\n                                      </dl>\n                                      <dl className=\"dl-horizontal\" style={{ fontSize: 16 }}>\n                                        <dt>Problems:</dt>\n                                        <dd>{this.getProblemsAmount()}</dd>\n                                      </dl>\n                                      <dl\n                                        className=\"dl-horizontal\"\n                                        style={{\n                                          fontSize: 16,\n                                          margin: 30,\n                                          padding: 10,\n                                          backgroundColor: getValuesByScore(\n                                            this.props.lesson.scoring.correct_count,\n                                            this.props.lesson.scoring.question_count,\n                                            \"color\",\n                                          ),\n                                          color: \"white\",\n                                        }}\n                                      >\n                                        {getValuesByScore(\n                                          this.props.lesson.scoring.correct_count,\n                                          this.props.lesson.scoring.question_count,\n                                          \"label\",\n                                        )}\n                                      </dl>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"main-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"card-block\" style={{ margin: \"0 auto\" }}>\n                            <h3>Flagged For Review</h3>\n                            <div className=\"card-answer card\">\n                              <div className=\"card-content\">\n                                <div className=\"row-bordered d-flex row\">\n                                  <div className=\"col s6 badge-block-column red-text\">\n                                    <span className=\"badge-rounded-xlg badge red darken-2 white-text\">\n                                      <b className=\"badge-text\">\n                                        {this.getReviewedAndFlaggedProblemAmount(\"FLAGGED\")}\n                                      </b>{\" \"}\n                                      <i className=\"icon-flag\"></i>\n                                    </span>\n                                    <span style={{ marginLeft: 10, fontSize: 16 }}>To Review</span>\n                                  </div>\n                                  <div className=\"col s6 badge-block-column\">\n                                    <span className=\"badge-rounded-xlg badge grey darken-2 white-text\">\n                                      <b className=\"badge-text\">\n                                        {this.getReviewedAndFlaggedProblemAmount(\"REVIEWED\")}\n                                      </b>{\" \"}\n                                      <i className=\"icon-flag\"></i>\n                                    </span>\n                                    <span style={{ marginLeft: 10, fontSize: 16 }}>Reviewed</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <Choose>\n                    <When condition={this.props.lesson.status === \"COMPLETED\"}>\n                      <div className=\"col s12 m6\">\n                        <div className=\"row\" style={{ margin: 0 }}>\n                          <div className=\"card-block\" style={{ margin: \"0 auto\" }}>\n                            {challengeProblems.length !== 0 && (\n                              <div className=\"main-row row\">\n                                <ChallengeQuestions questions={challengeProblems} updateProblemList={this.updateProblemList} problemType={'challengeProblems'} />\n                              </div>\n                            )}\n                            {practiceProlems.length !== 0 && (\n                              <div className=\"main-row row\">\n                                <PracticeQuestions questions={practiceProlems} updateProblemList={this.updateProblemList} problemType={'practiceProlems'} />\n                              </div>\n                            )}\n                            {drillProblems.length !== 0 && (\n                              <div className=\"main-row row\">\n                                <DrillQuestions questions={drillProblems} updateProblemList={this.updateProblemList} problemType={'drillProblems'} />\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </When>\n                    <Otherwise>\n                      <div className=\"col s12 m6 card-block\" style={{ margin: \"0 auto\" }}>\n                        {challengeProblems.length !== 0 && (\n                          <div className=\"main-row row\">\n                            <ChallengeQuestions questions={challengeProblems} updateProblemList={this.updateProblemList} problemType={'challengeProblems'} />\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"col s12 m6 card-block\" style={{ margin: \"0 auto\" }}>\n                        {practiceProlems.length !== 0 && (\n                          <div className=\"main-row row\">\n                            <PracticeQuestions questions={practiceProlems} updateProblemList={this.updateProblemList} problemType={'practiceProlems'} />\n                          </div>\n                        )}\n                      </div>\n                      {drillProblems.length !== 0 && (\n                        <div className=\"main-row row\">\n                          <DrillQuestions questions={drillProblems} updateProblemList={this.updateProblemList} problemType={'drillProblems'} />\n                        </div>\n                      )}\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nLessonDetailAnswerSheet.propTypes = {\n  open: PropTypes.bool.isRequired,\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  onCloseDetailModal: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n  units: makeSelectUnitFilterOptions(),\n});\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect)(LessonDetailAnswerSheet);\n"]},"metadata":{},"sourceType":"module"}