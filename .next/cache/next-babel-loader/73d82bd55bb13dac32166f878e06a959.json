{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport Portal from '../../../../Portal';\nimport LessonListItem from './components/LessonListItem';\nimport { totalProblemsDescending, totalProblemsAscending, timeEstimate, timeEstimateAscending, subjectAscending, subjectDescending, passageAscending, passageDescending, lessonNameDescending, lessonNameAscending, statusDescending, statusAscending, flagsAscending, flagsDescending, lessonTypeAscending, lessonTypeDescending } from '../../../../utils/sortFunctions';\nimport ModalFilterSection from '../ModalFilterSection';\nimport AssignDatesModal from '../AssignDatesModal';\n\nvar AssignLessonModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignLessonModal, _React$Component);\n\n  function AssignLessonModal(props) {\n    var _this;\n\n    _classCallCheck(this, AssignLessonModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignLessonModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDatesModal\", function () {\n      return _this.setState({\n        datesModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDatesModal\", function () {\n      return _this.setState({\n        datesModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleChecked\", function () {\n      _this.setState({\n        checked: !_this.state.checked\n      }, function () {\n        return _this.onChecked();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        statusFilters: [],\n        subjectFilters: [],\n        lessonTypeFilters: [],\n        unitFilter: \"\",\n        nameFilter: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (lesson) {\n      return _this.setState({\n        nameFilter: lesson\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({}, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetUnitFilter\", function (unit) {\n      return _this.setState({\n        unitFilter: unit\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChecked\", function () {\n      var _this$state = _this.state,\n          checkedLessons = _this$state.checkedLessons,\n          checked = _this$state.checked;\n\n      if (checked) {\n        var mappedLessons = _this.getMappableLessons();\n\n        for (var i = 0; i < mappedLessons.length; i++) {\n          if (checkedLessons.indexOf(mappedLessons[i]) > -1) {\n            mappedLessons = mappedLessons.filter(function (lesson) {\n              return checkedLessons.indexOf(lesson) === -1;\n            });\n          }\n        }\n\n        _this.setState(function (prevState) {\n          var _prevState$checkedLes;\n\n          (_prevState$checkedLes = prevState.checkedLessons).push.apply(_prevState$checkedLes, _toConsumableArray(mappedLessons));\n        });\n      } else _this.setState({\n        checkedLessons: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortLessons\", function (lessons) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'subjectAscending':\n          return lessons.sort(subjectAscending);\n\n        case 'subjectDescending':\n          return lessons.sort(subjectDescending);\n\n        case 'passageAscending':\n          return lessons.sort(passageAscending);\n\n        case 'passageDescending':\n          return lessons.sort(passageDescending);\n\n        case 'statusAscending':\n          return lessons.sort(statusAscending);\n\n        case 'statusDescending':\n          return lessons.sort(statusDescending);\n\n        case 'flagsAscending':\n          return lessons.sort(flagsAscending);\n\n        case 'flagsDescending':\n          return lessons.sort(flagsDescending);\n\n        case 'lessonNameAscending':\n          return lessons.sort(lessonNameAscending);\n\n        case 'lessonNameDescending':\n          return lessons.sort(lessonNameDescending);\n\n        case 'lessonTypeAscending':\n          return lessons.sort(lessonTypeAscending);\n\n        case 'lessonTypeDescending':\n          return lessons.sort(lessonTypeDescending);\n\n        case 'timeEstimateDescending':\n          return lessons.sort(timeEstimate);\n\n        case 'timeEstimateAscending':\n          return lessons.sort(timeEstimateAscending);\n\n        case 'totalProblemsDescending':\n          return lessons.sort(totalProblemsDescending);\n\n        case 'totalProblemsAscending':\n          return lessons.sort(totalProblemsAscending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state2 = _this.state,\n          lessons = _this$state2.lessons,\n          nameFilter = _this$state2.nameFilter;\n      return lessons.reduce(function (finalArr, currentLesson) {\n        var lessonName = currentLesson.lessonName;\n        var lessonString = lessonName.replace(/\\s/g, \"\").toLowerCase();\n\n        if (lessonString.indexOf(nameFilter) !== -1 && finalArr.indexOf(currentLesson) === -1) {\n          finalArr.push(currentLesson);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterLessons\", function () {\n      var _this$state3 = _this.state,\n          statusFilters = _this$state3.statusFilters,\n          subjectFilters = _this$state3.subjectFilters,\n          lessonTypeFilters = _this$state3.lessonTypeFilters,\n          unitFilter = _this$state3.unitFilter,\n          allLessons = _this$state3.lessons;\n      var lessons = allLessons;\n\n      if (statusFilters.length && statusFilters.indexOf('all') === -1) {\n        if (statusFilters.indexOf(\"Unassigned\") !== -1) {\n          lessons = lessons.filter(function (lesson) {\n            return statusFilters.indexOf(lesson.status) !== -1;\n          });\n        } else lessons = lessons.filter(function (lesson) {\n          return lesson.assigned === true;\n        });\n      }\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return subjectFilters.indexOf(lesson.subject) !== -1;\n        });\n      }\n\n      if (lessonTypeFilters.length && lessonTypeFilters.indexOf('all') === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return lessonTypeFilters.indexOf(lesson.type) !== -1;\n        });\n      }\n\n      if (unitFilter.length && unitFilter.indexOf('all') === -1) {\n        lessons = lessons.filter(function (lesson) {\n          return unitFilter.indexOf(lesson.unitNumber) !== -1;\n        });\n      }\n\n      return lessons;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleDates\", function (assignDate, assignTime, dueDate, dueTime) {\n      var onAddUpdatedLessons = _this.props.onAddUpdatedLessons;\n      var updatedLessons = [];\n      var previousCheckedLessons = _this.state.checkedLessons;\n\n      for (var i = 0; i < previousCheckedLessons.length; i++) {\n        var updatedCheckedLessons = update(previousCheckedLessons[i], {\n          $merge: {\n            assigned: true,\n            dueDate: moment(dueDate).format('DD/MM/YYYY'),\n            dueTime: dueTime,\n            availableDate: moment(assignDate).format(\"DD/MM/YYYY\"),\n            status: \"Scheduled\",\n            assignTime: assignTime\n          }\n        });\n        updatedLessons.push(updatedCheckedLessons);\n      }\n\n      onAddUpdatedLessons(updatedLessons);\n\n      _this.props.onCloseModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSortType\", function (name) {\n      var sort = _this.state.sort;\n\n      if (sort !== \"\".concat(name, \"Ascending\") && sort !== \"\".concat(name, \"Descending\")) {\n        _this.onSetSort(\"\".concat(name, \"Ascending\"));\n      }\n\n      if (sort === \"\".concat(name, \"Descending\")) {\n        _this.onSetSort(\"\".concat(name, \"Ascending\"));\n      } else {\n        _this.onSetSort(\"\".concat(name, \"Descending\"));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableLessons\", function () {\n      var _this$state4 = _this.state,\n          sort = _this$state4.sort,\n          unitFilter = _this$state4.unitFilter,\n          lessons = _this$state4.lessons,\n          statusFilters = _this$state4.statusFilters,\n          subjectFilters = _this$state4.subjectFilters,\n          lessonTypeFilters = _this$state4.lessonTypeFilters,\n          nameFilter = _this$state4.nameFilter;\n      var mappableLessons = lessons;\n\n      if (nameFilter.length) {\n        mappableLessons = _this.onFilterByName();\n      }\n\n      if (statusFilters.length || unitFilter.length || lessonTypeFilters.length || subjectFilters.length) {\n        mappableLessons = _this.onFilterLessons();\n      }\n\n      if (sort) {\n        return _this.onSortLessons(mappableLessons);\n      }\n\n      return mappableLessons;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckbox\", function (selectedLesson) {\n      var checkedLessons = _this.state.checkedLessons;\n      var updatedLessonArray;\n\n      if (checkedLessons.indexOf(selectedLesson) > -1) {\n        updatedLessonArray = checkedLessons.filter(function (lesson) {\n          return lesson !== selectedLesson;\n        });\n      } else {\n        updatedLessonArray = [].concat(_toConsumableArray(checkedLessons), [selectedLesson]);\n      }\n\n      _this.setState({\n        checkedLessons: updatedLessonArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentSubjectFilters = _this$state5.subjectFilters,\n          currentStatusFilters = _this$state5.statusFilters,\n          currentLessonTypeFilters = _this$state5.lessonTypeFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'status':\n          modifiedFilterCurrentState = currentStatusFilters;\n          modifiedFilterName = 'statusFilters';\n          break;\n\n        case 'lessonType':\n          modifiedFilterCurrentState = currentLessonTypeFilters;\n          modifiedFilterName = 'lessonTypeFilters';\n          break;\n\n        default:\n          break;\n      } // Decide whether we're adding or removing the selected filter\n\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapLessonListItem\", function () {\n      return _this.getMappableLessons().map(function (lesson, index) {\n        return React.createElement(LessonListItem, {\n          lesson: lesson,\n          index: index,\n          selectAll: _this.state.checked,\n          key: lesson.id,\n          onSelectLesson: _this.onSelectLesson,\n          renderLessonIcon: _this.renderLessonIcon,\n          checkedLessons: _this.state.checkedLessons,\n          handleCheckbox: _this.handleCheckbox\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTableHeader\", function () {\n      return React.createElement(\"div\", {\n        className: \"list-table-row\"\n      }, React.createElement(\"div\", {\n        className: \"list-table-cell icon-cell\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"selectAll\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"selectAll\",\n        defaultChecked: _this.state.checked,\n        onChange: _this.onToggleChecked,\n        className: \"filled-in\"\n      }), React.createElement(\"span\", null, React.createElement(\"b\", null, \"\\xA0\")))), React.createElement(\"div\", {\n        className: \"list-table-cell icon-cell\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"list-table-cell name-cell\",\n        value: \"lessonName\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"lessonName\");\n        }\n      }, React.createElement(\"b\", null, \"Lesson\"))), React.createElement(\"div\", {\n        className: \"list-table-cell name-cell\",\n        style: {\n          width: '100px',\n          paddingLeft: '237px'\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"status\");\n        }\n      }, React.createElement(\"b\", null, \"Status\"))), React.createElement(\"div\", {\n        className: \"list-table-call completed-cell\"\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), React.createElement(\"div\", {\n        className: \"list-table-cell type-cell\",\n        style: {\n          marginLeft: '30px',\n          paddingLeft: '58px'\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"subject\");\n        }\n      }, React.createElement(\"b\", null, \"Subject\"))), React.createElement(\"div\", {\n        className: \"list-table-cell completed-cell\",\n        style: {\n          paddingLeft: '56px'\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"passage\");\n        }\n      }, React.createElement(\"b\", null, \"Page\"))), React.createElement(\"div\", {\n        className: \"list-table-cell completed-cell\",\n        style: {\n          marginLeft: '30px'\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"timeEstimate\");\n        }\n      }, React.createElement(\"b\", null, \"Time Est\"))), React.createElement(\"div\", {\n        className: \"list-table-cell type-cell\",\n        style: {\n          marginLeft: '13px',\n          paddingLeft: '-1px'\n        }\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"totalProblems\");\n        }\n      }, React.createElement(\"b\", null, \"Problems\"))), React.createElement(\"div\", {\n        className: \"list-table-cell completed-cell\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"lessonType\");\n        }\n      }, React.createElement(\"b\", null, \"Type\"))), React.createElement(\"div\", {\n        className: \"list-table-cell flags-cell\"\n      }, React.createElement(\"b\", null, \"\\xA0\")), React.createElement(\"div\", {\n        className: \"list-table-cell flags-cell\"\n      }, React.createElement(\"b\", null, \"\\xA0\")), React.createElement(\"div\", {\n        className: \"list-table-cell flags-cell\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this.setSortType(\"alerts\");\n        }\n      }, React.createElement(\"b\", null, \"Flags\"))));\n    });\n\n    _this.state = {\n      lessons: _this.props.lessons,\n      statusFilters: [],\n      subjectFilters: [],\n      lessonTypeFilters: [],\n      sort: \"\",\n      nameFilter: \"\",\n      unitFilter: \"\",\n      checked: false,\n      checkedLessons: [],\n      datesModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(AssignLessonModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          lessons = _this$state6.lessons,\n          subjectFilters = _this$state6.subjectFilters,\n          statusFilters = _this$state6.statusFilters,\n          lessonTypeFilters = _this$state6.lessonTypeFilters;\n      var _this$props = this.props,\n          open = _this$props.open,\n          onCloseModal = _this$props.onCloseModal;\n      return React.createElement(Portal, {\n        selector: \"#modal\"\n      }, open && React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"overlay\"\n      }, React.createElement(\"div\", {\n        id: \"assign-lesson-modal\",\n        className: \"jsx-3810222716\" + \" \" + \"modal modal-custom\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"header-row card-panel light-blue lighten-1 white-text\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"col s3\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"col s9 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"row icons-row\"\n      }, \" \", React.createElement(\"span\", {\n        className: \"jsx-3810222716\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onCloseModal,\n        className: \"jsx-3810222716\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-3810222716\" + \" \" + \"icon-close\"\n      })))))), React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"icon-col col s1\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-3810222716\" + \" \" + \"icon-books\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"card-panel-text\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"text-large\"\n      }, \"Assign Lessons\"))))), React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#f2f2f2'\n        },\n        className: \"jsx-3810222716\" + \" \" + \"content-section\"\n      }, React.createElement(ModalFilterSection, {\n        handleFilterClick: this.handleFilterClick,\n        subjectFilters: subjectFilters,\n        statusFilters: statusFilters,\n        lessonTypeFilters: lessonTypeFilters,\n        onClearFilters: this.onClearFilters,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetSort: this.onSetSort,\n        onSetUnitFilter: this.onSetUnitFilter\n      }), React.createElement(\"div\", {\n        style: {\n          marginTop: '50px'\n        },\n        className: \"jsx-3810222716\" + \" \" + \"container-md\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"result-row center-align\"\n      }, React.createElement(\"b\", {\n        className: \"jsx-3810222716\" + \" \" + \"result\"\n      }, \" - \", lessons.length, \" Lessons\")), React.createElement(\"div\", {\n        style: {\n          margin: '0 -160px'\n        },\n        className: \"jsx-3810222716\" + \" \" + \"list-view-section\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"list-table\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"list-table-header\"\n      }, this.renderTableHeader()), React.createElement(\"div\", {\n        className: \"jsx-3810222716\" + \" \" + \"list-table-body\"\n      }, this.mapLessonListItem())))))), React.createElement(AssignDatesModal, {\n        open: this.state.datesModalOpen,\n        onCloseDatesModal: this.onCloseDatesModal,\n        onHandleDates: this.onHandleDates\n      }), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenDatesModal,\n        className: \"jsx-3810222716\" + \" \" + \"waves-effect waves-teal btn add-btn modal-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-3810222716\" + \" \" + \"material-icons\"\n      }, \"add\"), \"Assign Selected\")), React.createElement(_JSXStyle, {\n        id: \"3810222716\"\n      }, [\".overlay.jsx-3810222716{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:999;}\", \"#assign-lesson-modal.jsx-3810222716{border-radius:6px;}\", \".modal.jsx-3810222716{display:block;background-color:white;position:absolute;top:13%;right:0%;left:14%;box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);}\", \".modal-footer.jsx-3810222716{background-color:white;}\", \".modal-custom.jsx-3810222716{opacity:1;visibility:visible;max-width:1280px !important;}\", \"#assign-lessons-header.jsx-3810222716{background:rgb(24,181,233) !important background:linear-gradient(90deg,rgba(24,181,233,1) 0%,rgba(8,107,140,1) 100%) !important;}\"]));\n    }\n  }]);\n\n  return AssignLessonModal;\n}(React.Component);\n\nexport default AssignLessonModal;","map":null,"metadata":{},"sourceType":"module"}