{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TestCard from './components/TestCard';\nimport sampleTests from './utils/sampleTests';\nimport EditTestModal from './components/EditTestModal';\n\nvar DetailTestList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailTestList, _React$Component);\n\n  function DetailTestList(props) {\n    var _this;\n\n    _classCallCheck(this, DetailTestList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailTestList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleEditTestModal\", function () {\n      var activeTest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return _this.setState(function (_ref) {\n        var editTestModalOpen = _ref.editTestModalOpen;\n        return {\n          editTestModalOpen: !editTestModalOpen,\n          activeTest: activeTest\n        };\n      }, _this.onCloseDropdown);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCreateTest\", function (event) {\n      event.preventDefault();\n      console.warn('Pending implementation of create test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnterAnswers\", function () {\n      return console.warn('Pending implementation of enter answers UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditTest\", function () {\n      return console.warn('Pending implementation edit test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDownloadReport\", function () {\n      return console.warn('Pending implementation of download report ui and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteTest\", function () {\n      return _this.setState({\n        editTestModalOpen: false\n      }, function () {\n        return console.warn('Pending implementation of delete test UI and functionality');\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveTestChanges\", function (testVersion, settings) {\n      _this.onToggleEditTestModal();\n\n      console.warn('Pending save test changes functionality', testVersion, settings);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapCompletedTests\", function () {\n      var tests = _this.state.tests;\n      return tests.filter(function (test) {\n        return test.status === 'complete';\n      }).map(function (test, index) {\n        return React.createElement(TestCard, {\n          test: test,\n          key: \"completed-\".concat(test.id),\n          index: index,\n          onEditTest: function onEditTest() {\n            return _this.onToggleEditTestModal(test);\n          },\n          onDeleteTest: _this.onDeleteTest,\n          onSetDropdown: _this.onSetDropdown,\n          onEnterAnswers: _this.onEnterAnswers,\n          onCloseDropdown: _this.onCloseDropdown,\n          onDownloadReport: _this.onDownloadReport,\n          dropdownIndex: _this.state.dropdownIndex,\n          dropdownIsOpen: _this.state.dropdownIsOpen\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapFutureTests\", function () {\n      var tests = _this.state.tests;\n      return tests.filter(function (test) {\n        return test.status !== 'complete';\n      }).map(function (test, index) {\n        return React.createElement(TestCard, {\n          futureTest: true,\n          test: test,\n          key: \"future-\".concat(test.id),\n          onEditTest: function onEditTest() {\n            return _this.onToggleEditTestModal(test);\n          },\n          onDeleteTest: _this.onDeleteTest,\n          onSetDropdown: _this.onSetDropdown,\n          onEnterAnswers: _this.onEnterAnswers,\n          onCloseDropdown: _this.onCloseDropdown,\n          onDownloadReport: _this.onDownloadReport,\n          dropdownIndex: _this.state.dropdownIndex,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          index: tests.filter(function (filterTest) {\n            return filterTest.status === 'complete';\n          }).length + index\n        });\n      });\n    });\n\n    _this.state = {\n      tests: sampleTests,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      editTestModalOpen: false,\n      activeTest: null\n    };\n    return _this;\n  }\n\n  _createClass(DetailTestList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          editTestModalOpen = _this$state.editTestModalOpen,\n          activeTest = _this$state.activeTest;\n      var user = this.props.user;\n      return React.createElement(React.Fragment, null, editTestModalOpen ? React.createElement(EditTestModal, {\n        user: user,\n        test: activeTest,\n        onDeleteTest: this.onDeleteTest,\n        onSaveTestChanges: this.onSaveTestChanges\n      }) : React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"content-container\"\n      }, React.createElement(\"h2\", null, \"Completed Tests\"), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapCompletedTests())), React.createElement(\"div\", {\n        className: \"content-container\"\n      }, React.createElement(\"h2\", null, \"Future Tests\"), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapFutureTests()))), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onCreateTest,\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Test\")));\n    }\n  }]);\n\n  return DetailTestList;\n}(React.Component);\n\nexport default DetailTestList;","map":null,"metadata":{},"sourceType":"module"}