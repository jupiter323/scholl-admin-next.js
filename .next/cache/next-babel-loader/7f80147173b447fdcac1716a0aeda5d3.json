{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport sortByOptions from '../../../utils/sortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        testVersionFilter: ''\n      }, _this.props.onClearFilters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchChange\", function (_ref2) {\n      var target = _ref2.target;\n      return _this.setState({\n        testVersionFilter: target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitSearchFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var testVersionFilter = _this.state.testVersionFilter;\n\n      if (testVersionFilter === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedTitle = testVersionFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedTitle);\n    });\n\n    _this.state = {\n      open: false,\n      testVersionFilter: ''\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          open = _this$state.open,\n          testVersionFilter = _this$state.testVersionFilter;\n      var _this$props2 = this.props,\n          handleFilterClick = _this$props2.handleFilterClick,\n          sort = _this$props2.sort,\n          onSetSort = _this$props2.onSetSort,\n          subjectFilters = _this$props2.subjectFilters,\n          flagFilter = _this$props2.flagFilter,\n          availableDateFilters = _this$props2.availableDateFilters,\n          dueDateFilters = _this$props2.dueDateFilters;\n      return __jsx(\"div\", {\n        className: \"filter-form-holder\"\n      }, __jsx(\"ul\", {\n        className: \"collapsible expandable\",\n        style: {\n          minHeight: '0'\n        }\n      }, __jsx(\"li\", null, __jsx(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, __jsx(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"reading\",\n        name: \"reading\",\n        checked: subjectFilters.indexOf('reading') !== -1,\n        onChange: function onChange(_ref3) {\n          var target = _ref3.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"reading\"\n      }, \"Reading\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"writing\",\n        name: \"writing\",\n        checked: subjectFilters.indexOf('writing') !== -1,\n        onChange: function onChange(_ref4) {\n          var target = _ref4.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"writing\"\n      }, \"Writing\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"math\",\n        name: \"math\",\n        checked: subjectFilters.indexOf('math') !== -1,\n        onChange: function onChange(_ref5) {\n          var target = _ref5.target;\n          return handleFilterClick('subject', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"math\"\n      }, \"Math\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"future\",\n        name: \"future\",\n        checked: availableDateFilters.indexOf('future') !== -1,\n        onChange: function onChange(_ref6) {\n          var target = _ref6.target;\n          return handleFilterClick('availableDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"future\"\n      }, \"Future\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"available\",\n        name: \"available\",\n        checked: availableDateFilters.indexOf('available') !== -1,\n        onChange: function onChange(_ref7) {\n          var target = _ref7.target;\n          return handleFilterClick('availableDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"available\"\n      }, \"Available\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"complete\",\n        name: \"complete\",\n        checked: availableDateFilters.indexOf('complete') !== -1,\n        onChange: function onChange(_ref8) {\n          var target = _ref8.target;\n          return handleFilterClick('availableDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"complete\"\n      }, \"Complete\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"hasReviewFlags\",\n        name: \"hasReviewFlags\",\n        checked: flagFilter,\n        onChange: function onChange(_ref9) {\n          var target = _ref9.target;\n          return handleFilterClick('hasFlags', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"hasReviewFlags\"\n      }, \"Has Review Flags\"))), __jsx(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"dueToday\",\n        name: \"dueToday\",\n        checked: dueDateFilters.indexOf('dueToday') !== -1,\n        onChange: function onChange(_ref10) {\n          var target = _ref10.target;\n          return handleFilterClick('dueDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"dueToday\"\n      }, \"Due Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"dueNextSession\",\n        name: \"dueNextSession\",\n        checked: dueDateFilters.indexOf('dueNextSession') !== -1,\n        onChange: function onChange(_ref11) {\n          var target = _ref11.target;\n          return handleFilterClick('dueDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"dueNextSession\"\n      }, \"Due By Next Session\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"dueThisWeek\",\n        name: \"dueThisWeek\",\n        checked: dueDateFilters.indexOf('dueThisWeek') !== -1,\n        onChange: function onChange(_ref12) {\n          var target = _ref12.target;\n          return handleFilterClick('dueDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"dueThisWeek\"\n      }, \"Due this Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"overdue\",\n        name: \"overdue\",\n        checked: dueDateFilters.indexOf('overdue') !== -1,\n        onChange: function onChange(_ref13) {\n          var target = _ref13.target;\n          return handleFilterClick('dueDate', target.name);\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"overdue\"\n      }, \"Overdue\")))), __jsx(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 m4\"\n      }, __jsx(\"div\", {\n        className: \"search-field input-field\"\n      }, __jsx(\"input\", {\n        type: \"search\",\n        id: \"test_version_search\",\n        className: \"input-control validate\",\n        value: testVersionFilter,\n        onChange: this.handleSearchChange\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        onClick: this.submitSearchFilter,\n        className: \"search-button\"\n      }, __jsx(\"i\", {\n        className: \"icon-search\"\n      })), __jsx(\"label\", {\n        className: \"label\",\n        htmlFor: \"test_version_search\"\n      }, \"Test Version\"))))), __jsx(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"row mb-0\"\n      }, __jsx(\"div\", {\n        className: \"col s12 xl7\"\n      }, __jsx(\"div\", {\n        className: \"input-field\",\n        style: {\n          marginBottom: '10px',\n          marginTop: '0'\n        }\n      }, __jsx(Dropdown, {\n        value: getValueFromState(sort, sortByOptions),\n        onChange: onSetSort,\n        options: sortByOptions,\n        label: \"Sort By\",\n        stateKey: \"sort\",\n        dropdownKey: \"sort\"\n      }))))), __jsx(\"div\", {\n        className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"col s12 l4\"\n      }, __jsx(\"div\", {\n        className: \"option-filters\"\n      }, __jsx(\"div\", {\n        className: \"option-item clear\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onClearFilters\n      }, \"Clear Filters\")), __jsx(\"div\", {\n        className: \"option-item\"\n      }, __jsx(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, __jsx(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}