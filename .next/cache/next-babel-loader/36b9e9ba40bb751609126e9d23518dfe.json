{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { data as _data, subjectMap, testSectionCardColorMap, graphColorMap } from '../../../utils/testSectionCardUtils';\n\nvar TestSectionCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestSectionCard, _React$Component);\n\n  function TestSectionCard(props) {\n    var _this;\n\n    _classCallCheck(this, TestSectionCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestSectionCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"viewTestSectionDetails\", function () {\n      return console.warn('Pending implementation of view test section details functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dismissFlags\", function () {\n      return console.warn('Pending implementation of dismiss flags functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetTestSection\", function () {\n      return console.warn('Pending implementation of reset test section functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteTestSection\", function () {\n      return console.warn('Pending implementation of delete test section functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFlags\", function () {\n      var flags = _this.props.testSection.flags;\n\n      if (flags.length) {\n        return React.createElement(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, React.createElement(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", React.createElement(\"i\", {\n          className: \"icon-flag\"\n        }));\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      open: true\n    };\n    return _this;\n  }\n\n  _createClass(TestSectionCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          testSection = _this$props2.testSection,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          dropdownIndex = _this$props2.dropdownIndex,\n          index = _this$props2.index;\n      var subject = testSection.subject,\n          timeEstimate = testSection.timeEstimate,\n          version = testSection.version,\n          availableDate = testSection.availableDate,\n          dueDate = testSection.dueDate,\n          problems = testSection.problems,\n          disabled = testSection.disabled,\n          status = testSection.status,\n          percentageComplete = testSection.percentageComplete;\n      return React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: disabled ? 'card-main test-card card-disabled card' : 'card-main test-card card'\n      }, React.createElement(\"div\", {\n        className: \"card-panel panel-border\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"icon-col col s2\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-assign-section\"\n      }), React.createElement(\"span\", {\n        className: \"text-icon\"\n      }, \"Assigned \", React.createElement(\"br\", null), \"Test Section\"))), React.createElement(\"div\", {\n        className: \"col s8\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-text\"\n      }, React.createElement(\"div\", {\n        className: \"text-large truncate\"\n      }, subjectMap[subject], \" Section\"), React.createElement(\"div\", {\n        className: \"text-small truncate\"\n      }, \"Version: \", version))), React.createElement(\"div\", {\n        className: \"position-top right-align\"\n      }, React.createElement(\"div\", {\n        className: \"icons-row\"\n      }, this.renderFlags(), React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        className: \"dropdown-trigger btn\",\n        onClick: this.handleDropdownClick\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.viewTestSectionDetails,\n        className: \"modal-trigger link-block\"\n      }, \"View Details\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.dismissFlags\n      }, \"Dismiss Flags\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.resetTestSection\n      }, \"Reset\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.deleteTestSection,\n        className: \"link-delete\"\n      }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex sameheight-all row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s6\"\n      }, React.createElement(\"div\", {\n        className: \"chart-container\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, React.createElement(Doughnut, {\n        data: function data() {\n          return _data(percentageComplete, status);\n        },\n        options: {\n          circumference: 1 * Math.PI,\n          rotation: 1 * Math.PI,\n          cutoutPercentage: 60,\n          tooltips: false\n        }\n      }), React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: graphColorMap[status]\n        }\n      }, React.createElement(\"span\", {\n        \"data-count-up\": true,\n        \"data-start-val\": \"0\",\n        \"data-end-val\": \"96\",\n        \"data-duration\": \"1\"\n      }), React.createElement(\"span\", {\n        className: \"percentage\"\n      }, percentageComplete, \"%\"))), React.createElement(\"div\", {\n        className: \"chart-row\"\n      }, React.createElement(\"div\", {\n        className: \"chart-col chart-start\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"chart-col chart-end\"\n      }, React.createElement(\"span\", {\n        className: \"amount\",\n        style: {\n          color: graphColorMap[status]\n        }\n      }, problems))), React.createElement(\"div\", {\n        className: \"chart-description\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Time Est:\"), React.createElement(\"dd\", null, timeEstimate, \" min\")), React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Problems:\"), React.createElement(\"dd\", null, problems))))), React.createElement(\"div\", {\n        className: \"col s6 right-align justify-end\"\n      }, React.createElement(\"div\", {\n        className: \"chart-description\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Available:\"), React.createElement(\"dd\", null, React.createElement(\"time\", {\n        dateTime: \"2018-12-15\"\n      }, availableDate))), React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Due:\"), React.createElement(\"dd\", null, React.createElement(\"time\", {\n        dateTime: \"2018-12-15\"\n      }, dueDate)))), React.createElement(\"div\", {\n        className: \"align-self-end\"\n      }, React.createElement(\"span\", {\n        className: testSectionCardColorMap[status]\n      }, status)))))));\n    }\n  }]);\n\n  return TestSectionCard;\n}(React.Component);\n\nexport default TestSectionCard;","map":null,"metadata":{},"sourceType":"module"}