{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nvar Location = function Location(_ref) {\n  var locations = _ref.state.locations,\n      onOpenLocationModal = _ref.onOpenLocationModal,\n      _onRemoveLocation = _ref.onRemoveLocation;\n  return React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h3\", null, \"Location\"), React.createElement(\"div\", {\n    className: \"card card-instructor\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"text-block\"\n  }, React.createElement(\"p\", null, \"Depending on your settings, you may have more than one location/branch. The student\\u2019s location a\\uFB00ects which managers have access to this student. \")), React.createElement(\"div\", {\n    className: \"box-scrollable\"\n  }, React.createElement(\"div\", {\n    className: \"height-15 jcf-scrollable\"\n  }, React.createElement(\"div\", {\n    className: \"card-location-holder\",\n    style: {\n      height: '100%',\n      overflowY: 'scroll'\n    }\n  }, !locations.length && React.createElement(\"div\", {\n    className: \"add-class-box\"\n  }), locations.map(function (location, index) {\n    return React.createElement(LocationCard, {\n      location: location,\n      key: location.id,\n      onRemoveLocation: function onRemoveLocation() {\n        return _onRemoveLocation(index, 'location', 'locations');\n      }\n    });\n  })))), React.createElement(\"div\", {\n    className: \"card-footer right-align\"\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    onClick: onOpenLocationModal,\n    className: \"modal-trigger link-block\"\n  }, \"Add Location\")))));\n};\n\nLocation.propTypes = {\n  state: PropTypes.object.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired\n};\nexport default Location;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\AccountPage\\components\\Location\\index.js"],"names":["React","PropTypes","LocationCard","Location","locations","state","onOpenLocationModal","onRemoveLocation","height","overflowY","length","map","location","index","id","propTypes","object","isRequired","func"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAYC,SAAZ,QAAGC,KAAH,CAAYD,SAAZ;AAAA,MAAyBE,mBAAzB,QAAyBA,mBAAzB;AAAA,MAA8CC,iBAA9C,QAA8CA,gBAA9C;AAAA,SACf;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,2CADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,8LADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B;AAA7C,KACG,CAACL,SAAS,CAACM,MAAX,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,IAFJ,EAIGN,SAAS,CAACO,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX;AAAA,WACb,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,QAAxB;AAAkC,MAAA,GAAG,EAAEA,QAAQ,CAACE,EAAhD;AAAoD,MAAA,gBAAgB,EAAE;AAAA,eAAMP,iBAAgB,CAACM,KAAD,EAAQ,UAAR,EAAoB,WAApB,CAAtB;AAAA;AAAtE,MADa;AAAA,GAAd,CAJH,CADF,CADF,CAJF,EAgBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,OAAO,EAAEP,mBAFX;AAGE,IAAA,SAAS,EAAC;AAHZ,oBADF,CAhBF,CADF,CAFF,CADe;AAAA,CAAjB;;AAkCAH,QAAQ,CAACY,SAAT,GAAqB;AACnBV,EAAAA,KAAK,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UADL;AAEnBV,EAAAA,gBAAgB,EAAEN,SAAS,CAACiB,IAAV,CAAeD,UAFd;AAGnBX,EAAAA,mBAAmB,EAAEL,SAAS,CAACiB,IAAV,CAAeD;AAHjB,CAArB;AAMA,eAAed,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nconst Location = ({ state: { locations }, onOpenLocationModal, onRemoveLocation }) => (\n  <div className=\"card-block\">\n    <h3>Location</h3>\n    <div className=\"card card-instructor\">\n      <div className=\"card-content\">\n        <div className=\"text-block\">\n          <p>Depending on your settings, you may have more than one location/branch. The student’s location aﬀects which managers have access to this student. </p>\n        </div>\n        <div className=\"box-scrollable\">\n          <div className=\"height-15 jcf-scrollable\">\n            <div className=\"card-location-holder\" style={{ height: '100%', overflowY: 'scroll' }}>\n              {!locations.length && (\n                <div className=\"add-class-box\"></div>\n              )}\n              {locations.map((location, index) => (\n                <LocationCard location={location} key={location.id} onRemoveLocation={() => onRemoveLocation(index, 'location', 'locations')} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer right-align\">\n          <a\n            href=\"#\"\n            onClick={onOpenLocationModal}\n            className=\"modal-trigger link-block\"\n          >\n            Add Location\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocation.propTypes = {\n  state: PropTypes.object.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired,\n};\n\nexport default Location;\n"]},"metadata":{},"sourceType":"module"}