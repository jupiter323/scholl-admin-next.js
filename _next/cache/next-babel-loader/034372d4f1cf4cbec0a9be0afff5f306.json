{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/ListView/components/ListItem.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListItem, _React$Component);\n\n  function ListItem(props) {\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItem).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDetailModal\", function () {\n      return _this.setState({\n        detailModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDetailModal\", function () {\n      return _this.setState({\n        detailModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLessonIcon\", function (subject) {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDropdownOptions\", function (status) {\n      if (status === \"Scheduled\" || status === 'Assigned') {\n        return __jsx(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Reschedule\")), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          href: \"#!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Unassign\")));\n      }\n\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Reschedule\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Mark all Flags Reviewed\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Reset\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Unassign\")));\n    });\n\n    _this.state = {\n      detailModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$lesson = this.props.lesson,\n          lessonName = _this$props$lesson.lessonName,\n          score = _this$props$lesson.score,\n          scoreStatus = _this$props$lesson.scoreStatus,\n          passage = _this$props$lesson.passage,\n          reviewedAlerts = _this$props$lesson.reviewedAlerts,\n          overdue = _this$props$lesson.overdue,\n          subject = _this$props$lesson.subject,\n          status = _this$props$lesson.status,\n          completionDate = _this$props$lesson.completionDate,\n          problems = _this$props$lesson.problems,\n          type = _this$props$lesson.type,\n          availableDate = _this$props$lesson.availableDate,\n          dueDate = _this$props$lesson.dueDate,\n          flags = _this$props$lesson.flags;\n      var _this$props = this.props,\n          dropdownIndex = _this$props.dropdownIndex,\n          lesson = _this$props.lesson,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index,\n          user = _this$props.user,\n          handleDropdownClick = _this$props.handleDropdownClick;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(LessonDetailAnswerSheet, {\n        onCloseDetailModal: this.onCloseDetailModal,\n        open: this.state.detailModalOpen,\n        user: user,\n        lesson: lesson,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"card list-table-row\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"list-table-cell icon-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"block-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: this.renderLessonIcon(subject),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        id: \"lessonName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenDetailModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, lessonName)))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\",\n        style: {\n          marginLeft: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, scoreStatus && __jsx(\"span\", {\n        className: \"chart-bar \".concat(statusColorMap[scoreStatus], \" white-text\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, Math.floor(\"\".concat(score / problems * 100)), \"%\")), __jsx(\"div\", {\n        className: \"list-table-cell status-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, scoreStatus !== \"\" ? __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[scoreStatus], \" white-text\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, scoreStatus) : __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, status)), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        style: {\n          marginLeft: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, subject), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"p. \", passage), __jsx(\"div\", {\n        className: \"list-table-cell date-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(\"time\", {\n        dateTime: \"2019-01-27\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, availableDate)), __jsx(\"div\", {\n        className: \"list-table-cell dueDate-cell\",\n        style: {\n          color: overdue ? \"#db1b29\" : \"\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(\"time\", {\n        dateTime: \"2019-01-27\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, dueDate)), __jsx(\"div\", {\n        className: \"list-table-cell completed-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, completionDate), __jsx(\"div\", {\n        className: \"list-table-cell name-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, type))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, reviewedAlerts.length > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge grey darken-1 white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, reviewedAlerts.length), \" \", __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell flags-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, flags.length > 0 && __jsx(\"span\", {\n        className: \"badge-rounded-xs badge red darken-2 white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        className: \"badge-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, flags.length), \" \", __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell drop-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"dropdown-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        className: \"dropdown-trigger btn\",\n        onClick: function onClick(event) {\n          return handleDropdownClick(event, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.renderDropdownOptions(status)) : null))));\n    }\n  }]);\n\n  return ListItem;\n}(React.Component);\n\nListItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  dropdownIndex: PropTypes.number.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default ListItem;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/ListView/components/ListItem.js"],"names":["React","PropTypes","statusColorMap","LessonDetailAnswerSheet","ListItem","props","setState","detailModalOpen","subject","status","state","lesson","lessonName","score","scoreStatus","passage","reviewedAlerts","overdue","completionDate","problems","type","availableDate","dueDate","flags","dropdownIndex","dropdownIsOpen","index","user","handleDropdownClick","onCloseDetailModal","renderLessonIcon","onOpenDetailModal","marginLeft","Math","floor","color","length","event","display","opacity","transform","renderDropdownOptions","Component","propTypes","object","isRequired","number","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detailModalOpen: false,\n    };\n  }\n\n  onOpenDetailModal = () => this.setState({ detailModalOpen: true })\n  onCloseDetailModal = () => this.setState({ detailModalOpen: false });\n\n\n   // eslint-disable-next-line consistent-return\n   renderLessonIcon = (subject) => {\n     switch (subject) {\n       case 'Reading':\n         return 'icon-books';\n       case 'Writing':\n         return 'icon-hands';\n       case 'Math':\n         return 'icon-calculator';\n       default:\n         break;\n     }\n   }\n\n  renderDropdownOptions = (status) => {\n    if (status === \"Scheduled\" || status === 'Assigned') {\n      return (\n        <React.Fragment>\n          <li><a href=\"#\">Reschedule</a></li>\n          <li><a href=\"#!\">Unassign</a></li>\n        </React.Fragment>\n      );\n    }\n    return (\n      <React.Fragment>\n        <li><a href=\"#\">Reschedule</a></li>\n        <li><a href=\"#!\" >Mark all Flags Reviewed</a></li>\n        <li><a href=\"#!\">Reset</a></li>\n        <li><a href=\"#!\">Unassign</a></li>\n      </React.Fragment>\n    );\n  }\n\n\n  render() {\n    const { lessonName, score, scoreStatus, passage, reviewedAlerts, overdue, subject, status, completionDate, problems, type, availableDate, dueDate, flags } = this.props.lesson;\n    const { dropdownIndex, lesson, dropdownIsOpen, index, user, handleDropdownClick } = this.props;\n    return (\n      <React.Fragment>\n        <LessonDetailAnswerSheet\n          onCloseDetailModal={this.onCloseDetailModal}\n          open={this.state.detailModalOpen}\n          user={user}\n          lesson={lesson}\n        />\n        <div className=\"card list-table-row\" key={index}>\n          <div className=\"list-table-cell icon-cell\">\n            <span className=\"block-icon\">\n              <i className={this.renderLessonIcon(subject)}></i>\n            </span>\n          </div>\n          <div className=\"list-table-cell type-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\" id=\"lessonName\"><a href=\"#\" onClick={this.onOpenDetailModal}>{lessonName}</a></div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\" style={{ marginLeft: '50px' }}>\n            {scoreStatus && (\n              <span className={`chart-bar ${statusColorMap[scoreStatus]} white-text`}>{Math.floor(`${score / problems * 100}`)}%</span>\n            )}\n          </div>\n          <div className=\"list-table-cell status-cell\" >\n            <Choose>\n              <When condition={scoreStatus !== \"\"}>\n                <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n              </When>\n              <Otherwise>\n                <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n              </Otherwise>\n            </Choose>\n          </div>\n          <div className=\"list-table-cell type-cell\" style={{ marginLeft: '10px' }}>{subject}</div>\n          <div className=\"list-table-cell type-cell\">p. {passage}</div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{availableDate}</time></div>\n          <div className=\"list-table-cell dueDate-cell\" style={{ color: overdue ? \"#db1b29\" : \"\" }}><time dateTime=\"2019-01-27\">{dueDate}</time></div>\n          <div className=\"list-table-cell completed-cell\">{completionDate}\n            {/* {completed && (\n            <React.Fragment>\n              {completionDate}\n            </React.Fragment>\n          )} */}\n          </div>\n          <div className=\"list-table-cell name-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\">{type}</div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\">\n            {reviewedAlerts.length > 0 && (\n              <span className=\"badge-rounded-xs badge grey darken-1 white-text\"><b className=\"badge-text\">{reviewedAlerts.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n          <div className=\"list-table-cell flags-cell\">\n            {flags.length > 0 && (\n              <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n\n          <div className=\"list-table-cell drop-cell\">\n            <div className=\"dropdown-block\">\n              <a\n                href=\"#\"\n                data-target=\"dropdown01\"\n                className=\"dropdown-trigger btn\"\n                onClick={(event) => handleDropdownClick(event, index)}\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id=\"dropdown01\" className=\"dropdown-content dropdown-wide\" style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  {this.renderDropdownOptions(status)}\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nListItem.propTypes = {\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  dropdownIndex: PropTypes.number.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  handleDropdownClick: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n\n};\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}