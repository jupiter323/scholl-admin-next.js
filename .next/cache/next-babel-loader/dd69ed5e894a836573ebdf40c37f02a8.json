{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LessonCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(this, \"editLesson\", () => console.warn('Pending implementation of edit modal/functionality'));\n\n    _defineProperty(this, \"cloneLesson\", () => console.warn('Pending implementation of clone lesson functionality'));\n\n    _defineProperty(this, \"showOwner\", () => console.warn('Pending implementation of show owner functionality'));\n\n    _defineProperty(this, \"deleteLesson\", () => console.warn('Pending implementation of delete lesson functionality'));\n  }\n\n  render() {\n    const {\n      lesson,\n      selectedLessons,\n      handleLessonClick,\n      index,\n      dropdownIndex,\n      dropdownIsOpen\n    } = this.props;\n    const {\n      unit,\n      title,\n      subject,\n      timeEstimate,\n      problems,\n      pageNumber,\n      type\n    } = lesson;\n    return __jsx(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, __jsx(\"div\", {\n      className: \"card-checkbox\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      checked: selectedLessons.indexOf(lesson) !== -1,\n      onChange: () => handleLessonClick(lesson)\n    }), __jsx(\"div\", {\n      className: \"checkbox-card card-main card-lesson-detail card-assigned card\"\n    }, __jsx(\"div\", {\n      className: \"card-panel\",\n      style: {\n        backgroundColor: '#666',\n        color: '#fff'\n      }\n    }, __jsx(\"div\", {\n      className: \"card-panel-row row\"\n    }, __jsx(\"div\", {\n      className: \"icon-col col s2\"\n    }, __jsx(\"span\", {\n      className: \"block-icon\"\n    }, __jsx(\"i\", {\n      className: \"icon-books-l\"\n    }), __jsx(\"span\", {\n      className: \"text-icon\"\n    }, \"Lesson\"))), __jsx(\"div\", {\n      className: \"col s9\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-text\"\n    }, __jsx(\"div\", {\n      className: \"text-small\"\n    }, unit), __jsx(\"div\", {\n      className: \"text-large\"\n    }, title), __jsx(\"div\", {\n      className: \"text-small\"\n    }, \"Subject: \", subject))), __jsx(\"div\", {\n      className: \"align-top col s1 right-align\"\n    }, __jsx(\"div\", {\n      className: \"row icons-row\"\n    }, __jsx(\"div\", {\n      className: \"dropdown-block col\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"dropdown-trigger btn\",\n      \"data-target\": \"dropdown_lesson_01\",\n      onClick: this.handleDropdownClick\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown_lesson_01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.editLesson,\n      className: \"modal-trigger link-block\"\n    }, \"Edit\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.cloneLesson\n    }, \"Clone\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.showOwner\n    }, \"Show Owner\")), __jsx(\"li\", null, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.deleteLesson\n    }, \"Delete\"))) : null))))), __jsx(\"div\", {\n      className: \"card-content\"\n    }, __jsx(\"div\", {\n      className: \"chart-container\"\n    }, __jsx(\"div\", {\n      className: \"chart-holder\"\n    }, __jsx(\"span\", {\n      className: \"svg-curved-bar\",\n      \"data-values\": \"{\\\"from\\\": 0, \\\"to\\\": 100, \\\"current\\\": 0}\",\n      \"data-duration\": \"1\"\n    }, __jsx(\"svg\", {\n      width: \"110px\",\n      height: \"110px\",\n      viewBox: \" 0 0 110 110\"\n    }, __jsx(\"path\", {\n      fill: \"none\",\n      style: {\n        strokeWidth: '22',\n        stroke: '#d6d6d6'\n      },\n      d: \"M 14.151810947292809 71.35314804905443 A 44 44 0 1 1 95.8481890527072 71.35314804905443\"\n    }), __jsx(\"path\", {\n      \"data-dinamic\": true,\n      fill: \"none\",\n      style: {\n        strokeWidth: '22',\n        stroke: '#62b771'\n      },\n      d: \"M 14.151810947292809 71.35314804905443 A 44 44 0 0 1 14.151810947292809 71.35314804905443\"\n    }))), __jsx(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: '#4d4d4d'\n      }\n    })), __jsx(\"div\", {\n      className: \"chart-description\"\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Time Est:\"), __jsx(\"dd\", null, timeEstimate, \" min\")), __jsx(\"dl\", {\n      className: \"dl-horizontal\"\n    }, __jsx(\"dt\", null, \"Problems:\"), __jsx(\"dd\", null, problems)))), __jsx(\"div\", {\n      className: \"card-footer-row center-align\"\n    }, __jsx(\"div\", {\n      className: \"card-footer-holder\"\n    }, __jsx(\"p\", null, \"p.\", pageNumber, \"  (\", type, \")\")))))));\n  }\n\n}\n\n;\nLessonCard.propTypes = {\n  index: PropTypes.number,\n  dropdownIndex: PropTypes.number,\n  lesson: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  selectedLessons: PropTypes.array.isRequired,\n  handleLessonClick: PropTypes.func.isRequired\n};\nexport default LessonCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Dashboard/components/Modals/AssignLessonModal/components/LessonCard/index.js"],"names":["React","PropTypes","LessonCard","Component","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","props","preventDefault","console","warn","render","lesson","selectedLessons","handleLessonClick","dropdownIndex","unit","title","subject","timeEstimate","problems","pageNumber","type","indexOf","backgroundColor","color","handleDropdownClick","display","transformOrigin","opacity","transform","editLesson","cloneLesson","showOwner","deleteLesson","strokeWidth","stroke","propTypes","number","object","isRequired","func","bool","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LessonCard extends React.Component {\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  editLesson = () => console.warn('Pending implementation of edit modal/functionality')\n  cloneLesson = () => console.warn('Pending implementation of clone lesson functionality')\n  showOwner = () => console.warn('Pending implementation of show owner functionality')\n  deleteLesson = () => console.warn('Pending implementation of delete lesson functionality')\n\n  render() {\n    const { lesson, selectedLessons, handleLessonClick, index, dropdownIndex, dropdownIsOpen } = this.props;\n    const { unit, title, subject, timeEstimate, problems, pageNumber, type } = lesson;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={selectedLessons.indexOf(lesson) !== -1}\n            onChange={() => handleLessonClick(lesson)}\n          />\n          <div className=\"checkbox-card card-main card-lesson-detail card-assigned card\">\n            <div className=\"card-panel\" style={{ backgroundColor: '#666', color: '#fff' }}>\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-books-l\"></i>\n                    <span className=\"text-icon\">Lesson</span>\n                  </span>\n                </div>\n                <div className=\"col s9\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small\">{unit}</div>\n                    <div className=\"text-large\">{title}</div>\n                    <div className=\"text-small\">Subject: {subject}</div>\n                  </div>\n                </div>\n                <div className=\"align-top col s1 right-align\">\n                  <div className=\"row icons-row\">\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        className='dropdown-trigger btn'\n                        data-target='dropdown_lesson_01'\n                        onClick={this.handleDropdownClick}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id='dropdown_lesson_01'\n                          className='dropdown-content dropdown-wide'\n                          style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li><a href=\"#\" onClick={this.editLesson} className=\"modal-trigger link-block\">Edit</a></li>\n                          <li><a href=\"#\" onClick={this.cloneLesson}>Clone</a></li>\n                          <li><a href=\"#\" onClick={this.showOwner}>Show Owner</a></li>\n                          <li><a href=\"#\" onClick={this.deleteLesson}>Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"chart-container\">\n                <div className=\"chart-holder\">\n                  <span className=\"svg-curved-bar\" data-values='{\"from\": 0, \"to\": 100, \"current\": 0}' data-duration=\"1\">\n                    {/* <!-- do not change path attribute \"d\" !!! --> */}\n                    <svg  width=\"110px\" height=\"110px\" viewBox=\" 0 0 110 110\">\n                      <path fill=\"none\" style={{ strokeWidth: '22', stroke: '#d6d6d6' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 1 1 95.8481890527072 71.35314804905443\"></path>\n                      <path data-dinamic fill=\"none\" style={{ strokeWidth: '22', stroke: '#62b771' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 0 1 14.151810947292809 71.35314804905443\"></path>\n                    </svg>\n                  </span>\n                  <span className=\"chart-value\" style={{ backgroundColor: '#4d4d4d' }}></span>\n                </div>\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Time Est:</dt>\n                    <dd>{timeEstimate} min</dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Problems:</dt>\n                    <dd>{problems}</dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"card-footer-row center-align\">\n                <div className=\"card-footer-holder\">\n                  <p>p.{pageNumber}  ({type})</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nLessonCard.propTypes = {\n  index: PropTypes.number,\n  dropdownIndex: PropTypes.number,\n  lesson: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  selectedLessons: PropTypes.array.isRequired,\n  handleLessonClick: PropTypes.func.isRequired,\n}\n\nexport default LessonCard;\n"]},"metadata":{},"sourceType":"module"}