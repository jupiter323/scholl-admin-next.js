{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport LocationsToManage from './components/LocationsToManage';\nimport InstructorsToManage from './components/InstructorsToManage';\nimport FullAccess from './components/FullAccess';\nimport LocationModal from '../../Location/components/LocationModal';\nimport InstructorModal from '../../Instructor/components/InstructorModal';\n\nvar DetailManagementPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailManagementPage, _React$Component);\n\n  function DetailManagementPage(props) {\n    var _this;\n\n    _classCallCheck(this, DetailManagementPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailManagementPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (!_this.state.originalUser || nextProps.user.id !== _this.state.originalUser.id) {\n        var _nextProps$user = nextProps.user;\n        _nextProps$user = _nextProps$user === void 0 ? {} : _nextProps$user;\n        var id = _nextProps$user.id,\n            locationsToManage = _nextProps$user.locationsToManage,\n            instructorsToManage = _nextProps$user.instructorsToManage,\n            fullAccess = _nextProps$user.fullAccess;\n        var updatedUser = {\n          id: id,\n          locationsToManage: locationsToManage,\n          instructorsToManage: instructorsToManage,\n          fullAccess: fullAccess\n        };\n        var originalUserState = _this.state.originalUser;\n        var originalUser = update(originalUserState, {\n          $merge: nextProps.user\n        });\n\n        _this.setState({\n          originalUser: originalUser,\n          updatedUser: updatedUser\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveChanges\", function (event) {\n      event.preventDefault();\n      var updatedUser = _this.state.updatedUser;\n\n      _this.setState({\n        originalUser: updatedUser\n      });\n\n      console.warn('stubbed out success toast');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRemoveOption\", function (optionIndex, section, array) {\n      var updatedUser = update(_this.state.updatedUser, _defineProperty({}, section, _defineProperty({}, array, {\n        $splice: [[optionIndex, 1]]\n      })));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleFullAccess\", function () {\n      return _this.setState(function (_ref) {\n        var fullAccess = _ref.fullAccess;\n        return {\n          fullAccess: !fullAccess\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionsChange\", function (selectedOptions, section, array) {\n      var updatedUser = update(_this.state.updatedUser, _defineProperty({}, section, _defineProperty({}, array, {\n        $set: selectedOptions\n      })));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initialUserMount\", function () {\n      return _this.state.originalUser.id !== _this.props.user.id;\n    });\n\n    _this.state = {\n      locationModalOpen: false,\n      instructorModalOpen: false,\n      originalUser: {\n        locationsToManage: {\n          locations: []\n        },\n        instructorsToManage: {\n          instructors: []\n        },\n        fullAccess: false\n      },\n      updatedUser: {\n        locationsToManage: {\n          locations: []\n        },\n        instructorsToManage: {\n          instructors: []\n        },\n        fullAccess: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DetailManagementPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$user = this.props.user;\n      _this$props$user = _this$props$user === void 0 ? {} : _this$props$user;\n      var id = _this$props$user.id,\n          locationsToManage = _this$props$user.locationsToManage,\n          instructorsToManage = _this$props$user.instructorsToManage,\n          fullAccess = _this$props$user.fullAccess;\n      var updatedUser = {\n        id: id,\n        locationsToManage: locationsToManage,\n        instructorsToManage: instructorsToManage,\n        fullAccess: fullAccess\n      };\n      var originalUserState = this.state.originalUser;\n      var originalUser = update(originalUserState, {\n        $merge: updatedUser\n      });\n      this.setState({\n        originalUser: originalUser,\n        updatedUser: updatedUser\n      }); // eslint-disable-line\n    } // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the user edit page\n    // This resets the component state to reflect the details of the next user the user clicks on\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          locationModalOpen = _this$state.locationModalOpen,\n          instructorModalOpen = _this$state.instructorModalOpen,\n          _this$state$updatedUs = _this$state.updatedUser,\n          updatedLocations = _this$state$updatedUs.locationsToManage,\n          updatedInstructors = _this$state$updatedUs.instructorsToManage,\n          updatedFullAccess = _this$state$updatedUs.fullAccess;\n      var _this$props$user2 = this.props.user,\n          instructorsToManage = _this$props$user2.instructorsToManage,\n          locationsToManage = _this$props$user2.locationsToManage,\n          fullAccess = _this$props$user2.fullAccess;\n      return React.createElement(React.Fragment, null, React.createElement(LocationModal, {\n        open: locationModalOpen,\n        onClose: this.onCloseLocationModal,\n        handleLocationsChange: function handleLocationsChange(selectedLocations) {\n          return _this2.handleOptionsChange(selectedLocations, 'locationsToManage', 'locations');\n        }\n      }), React.createElement(InstructorModal, {\n        open: instructorModalOpen,\n        onClose: this.onCloseInstructorModal,\n        handleInstructorsChange: function handleInstructorsChange(selectedInstructors) {\n          return _this2.handleOptionsChange(selectedInstructors, 'instructorsToManage', 'instructors');\n        }\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0 d-flex-content large\"\n      }, React.createElement(LocationsToManage, {\n        state: this.initialUserMount() ? locationsToManage : updatedLocations,\n        onOpenLocationModal: this.onOpenLocationModal,\n        onRemoveLocation: this.onRemoveOption\n      }), React.createElement(InstructorsToManage, {\n        state: this.initialUserMount() ? instructorsToManage : updatedInstructors,\n        onOpenInstructorModal: this.onOpenInstructorModal,\n        onRemoveInstructor: this.onRemoveOption\n      }), React.createElement(FullAccess, {\n        fullAccess: this.initialUserMount() ? fullAccess : updatedFullAccess,\n        toggleFullAccess: this.toggleFullAccess\n      })), React.createElement(\"div\", {\n        className: \"btn-holder align-right-sm\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn\",\n        onClick: this.onSaveChanges\n      }, \"Save\")))));\n    }\n  }]);\n\n  return DetailManagementPage;\n}(React.Component);\n\nexport default DetailManagementPage;","map":null,"metadata":{},"sourceType":"module"}