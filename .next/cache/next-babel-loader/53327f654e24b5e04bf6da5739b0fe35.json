{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport CalendarDate from '../CalendarDate';\n\nclass CalendarRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"toggleAssignSessionModal\", (event, date) => {\n      event.preventDefault();\n      const {\n        onToggleAssignSessionModal,\n        onToggleAddDropdown\n      } = this.props;\n      onToggleAssignSessionModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(this, \"toggleAssignLessonsModal\", (event, date) => {\n      event.preventDefault();\n      const {\n        onToggleAssignLessonsModal,\n        onToggleAddDropdown\n      } = this.props;\n      onToggleAssignLessonsModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(this, \"toggleAssignWorksheetsModal\", (event, date) => {\n      event.preventDefault();\n      const {\n        onToggleAssignWorksheetsModal,\n        onToggleAddDropdown\n      } = this.props;\n      onToggleAssignWorksheetsModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(this, \"toggleAssignTestSectionModal\", (event, date) => {\n      event.preventDefault();\n      const {\n        onToggleAssignTestSectionModal,\n        onToggleAddDropdown\n      } = this.props;\n      onToggleAssignTestSectionModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(this, \"toggleAssignSimulatedSatModal\", (event, date) => {\n      event.preventDefault();\n      const {\n        onToggleAssignSimulatedSatModal,\n        onToggleAddDropdown\n      } = this.props;\n      onToggleAssignSimulatedSatModal(event, date);\n      onToggleAddDropdown();\n    });\n\n    _defineProperty(this, \"mapDateSessions\", (shouldMapSessions, sessions) => {\n      if (shouldMapSessions) {\n        return sessions.map((session, index) => React.createElement(\"li\", {\n          className: \"event-frame\",\n          key: index\n        }, React.createElement(Draggable, {\n          key: index,\n          index: index,\n          draggableId: `sessions-${session.date}-${index}`,\n          style: {\n            userSelect: 'none'\n          }\n        }, provided => React.createElement(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), React.createElement(\"span\", {\n          className: \"event-title-box\"\n        }, session.title)))));\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"mapDateLessons\", (shouldMapLessons, lessons) => {\n      if (shouldMapLessons) {\n        return lessons.map((lesson, index) => React.createElement(\"li\", {\n          className: \"event-frame\",\n          key: index\n        }, React.createElement(Draggable, {\n          key: index,\n          index: index,\n          draggableId: `lessons-${lesson.date}-${index}`,\n          style: {\n            userSelect: 'none'\n          }\n        }, provided => React.createElement(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), React.createElement(React.Fragment, null, lesson.completed && React.createElement(\"span\", {\n          className: \"event-check lesson-check\"\n        }, React.createElement(\"i\", {\n          className: \"icon-check02\"\n        })), React.createElement(\"span\", {\n          className: \"event event-lesson-box\"\n        }, lesson.title))))));\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"mapDateWorksheets\", (shouldMapWorksheets, worksheets) => {\n      if (shouldMapWorksheets) {\n        return worksheets.map((worksheet, index) => React.createElement(\"li\", {\n          className: \"event-frame\",\n          key: index\n        }, React.createElement(Draggable, {\n          key: index,\n          index: index,\n          draggableId: `worksheets-${worksheet.date}-${index}`,\n          style: {\n            userSelect: 'none'\n          }\n        }, provided => React.createElement(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), React.createElement(React.Fragment, null, worksheet.completed && React.createElement(\"span\", {\n          className: \"event-check worksheet-check\"\n        }, React.createElement(\"i\", {\n          className: \"icon-check02\"\n        })), React.createElement(\"span\", {\n          className: \"event event-worksheet-box\"\n        }, worksheet.title))))));\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"mapTestSections\", (shouldMapTestSections, testSections) => {\n      if (shouldMapTestSections) {\n        return testSections.map((testSection, index) => React.createElement(\"li\", {\n          className: \"event-frame\",\n          key: index\n        }, React.createElement(Draggable, {\n          key: index,\n          index: index,\n          draggableId: `testSections-${testSection.date}-${index}`,\n          style: {\n            userSelect: 'none'\n          }\n        }, provided => React.createElement(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps), React.createElement(\"span\", {\n          className: \"event event-test-box\"\n        }, \"Test Section: \", testSection.version)))));\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"mapSimulatedSats\", (shouldMapSimulatedSats, simulatedSat) => {\n      if (shouldMapSimulatedSats) {\n        return simulatedSat.map((sat, index) => React.createElement(\"li\", {\n          className: \"event-frame\",\n          key: index\n        }, React.createElement(Draggable, {\n          key: index,\n          index: index,\n          draggableId: `simulatedSat-${sat.date}-${index}`\n        }, provided => React.createElement(\"div\", _extends({\n          ref: provided.innerRef\n        }, provided.dragHandleProps, provided.dragHandleProps), React.createElement(\"span\", {\n          className: \"event event-sat-box\"\n        }, sat.version)))));\n      }\n\n      return null;\n    });\n\n    _defineProperty(this, \"mapRowDates\", () => this.props.rows && this.props.rows.map(rowDate => {\n      const {\n        eventFilters,\n        activeDate,\n        addDropdownOpen,\n        deleteDropdownOpen,\n        onSetActiveDate,\n        onToggleAddDropdown,\n        onToggleDeleteDropdown,\n        activeColumn\n      } = this.props;\n      const {\n        date,\n        dayDate,\n        calDate,\n        activeDateKey,\n        inMonth,\n        sessions = [],\n        lessons = [],\n        worksheets = [],\n        testSections = [],\n        simulatedSat = []\n      } = rowDate;\n      const hasEvents = sessions.length > 0 || lessons.length > 0 || worksheets.length > 0 || testSections.length > 0 || simulatedSat.length > 0;\n      const inActiveColumn = activeDateKey && activeDateKey[13] === activeColumn;\n      const isActiveDate = activeDate === activeDateKey;\n      const hasEventFilters = eventFilters.length > 0;\n      const shouldMapSessions = !hasEventFilters && sessions.length || sessions.length > 0 && hasEventFilters && eventFilters.indexOf('sessions') !== -1;\n      const shouldMapLessons = !hasEventFilters && lessons.length || lessons.length > 0 && hasEventFilters && eventFilters.indexOf('lessons') !== -1;\n      const shouldMapWorksheets = !hasEventFilters && worksheets.length || worksheets.length > 0 && hasEventFilters && eventFilters.indexOf('worksheets') !== -1;\n      const shouldMapTestSections = !hasEventFilters && testSections.length || testSections.length > 0 && hasEventFilters && eventFilters.indexOf('testSections') !== -1;\n      const shouldMapSimulatedSats = !hasEventFilters && simulatedSat.length || simulatedSat.length > 0 && hasEventFilters && eventFilters.indexOf('simulatedSats') !== -1;\n      return React.createElement(CalendarDate, {\n        sessions: sessions,\n        lessons: lessons,\n        worksheets: worksheets,\n        testSections: testSections,\n        simulatedSat: simulatedSat,\n        key: date,\n        date: date,\n        dayDate: dayDate,\n        calDate: calDate,\n        inMonth: inMonth,\n        hasEvents: hasEvents,\n        isActiveDate: isActiveDate,\n        activeDateKey: activeDateKey,\n        inActiveColumn: inActiveColumn,\n        addDropdownOpen: addDropdownOpen,\n        onSetActiveDate: onSetActiveDate,\n        shouldMapLessons: shouldMapLessons,\n        shouldMapSessions: shouldMapSessions,\n        deleteDropdownOpen: deleteDropdownOpen,\n        onToggleAddDropdown: onToggleAddDropdown,\n        shouldMapWorksheets: shouldMapWorksheets,\n        shouldMapTestSections: shouldMapTestSections,\n        onToggleDeleteDropdown: onToggleDeleteDropdown,\n        shouldMapSimulatedSats: shouldMapSimulatedSats,\n        mapDateSessions: this.mapDateSessions,\n        mapDateLessons: this.mapDateLessons,\n        mapDateWorksheets: this.mapDateWorksheets,\n        mapTestSections: this.mapTestSections,\n        mapSimulatedSats: this.mapSimulatedSats,\n        toggleAssignSessionModal: this.toggleAssignSessionModal,\n        toggleAssignLessonsModal: this.toggleAssignLessonsModal,\n        toggleAssignWorksheetsModal: this.toggleAssignWorksheetsModal,\n        toggleAssignTestSectionModal: this.toggleAssignTestSectionModal,\n        toggleAssignSimulatedSatModal: this.toggleAssignSimulatedSatModal\n      });\n    }));\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      className: \"cal-row-fluid\"\n    }, this.mapRowDates());\n  }\n\n}\n\nexport default CalendarRow; // if (!inMonth) {\n//   return (\n//     <td className=\"cal-cell1 cal-cell cal-day-outmonth\" key={dayDate}>\n//       <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n//         <span className=\"day-date\">{dayDate}</span>\n//         <span className=\"cal-date\">{calDate}</span>\n//       </div>\n//     </td>\n//   )\n// }\n// return (\n//   <td key={activeDateKey} className={getCalendarCellClassName(hasEvents, inActiveColumn)} onClick={() => onSetActiveDate(activeDateKey)}>\n//     <div className={getCalendarDayClassName(date, inMonth, activeDateKey)}>\n//       <span className=\"day-date\">{dayDate}</span>\n//       <span className=\"cal-date\">{calDate}</span>\n//       <ul className=\"day-collapsible collapsible\">\n//         <li className={isActiveDate ? 'collapsible-holder active' : 'collapsible-holder'} style={{ transform: 'none' }}>\n//           <div className=\"collapsible-header\" style={{ display: inActiveColumn && isActiveDate ? 'none' : 'block'}}>\n//             <span className=\"fake-close\"><span className=\"icon-close-thin\"></span></span>\n//             <If condition={hasEvents}>\n//               <ul className=\"events-list events-list-short\">\n//                 <If condition={shouldMapSessions}>\n//                   <li className=\"event-frame event-title\">\n//                     <span className=\"event-title-box\">Session {sessions.length}</span>\n//                   </li>\n//                 </If>\n//                 <If condition={shouldMapLessons}>\n//                   <li className=\"event-frame\">\n//                     <span className=\"event event-lesson-box\"> {lessons.length} <span className=\"event-text\">Lesson{lessons.length > 1 && 's'}</span></span>\n//                   </li>\n//                 </If>\n//                 <If condition={shouldMapWorksheets}>\n//                   <li className=\"event-frame\">\n//                     <span className=\"event event-worksheet-box\">{worksheets.length} <span className=\"event-text\">Worksheet{worksheets.length > 1 && 's'}</span></span>\n//                   </li>\n//                 </If>\n//                 <If condition={shouldMapTestSections}>\n//                   <li className=\"event-frame\">\n//                     <span className=\"event event-test-box\">{testSections.length} <span className=\"event-text\">Test Section{testSections.length > 1 && 's'}</span></span>\n//                   </li>\n//                 </If>\n//                 <If condition={shouldMapSimulatedSats}>\n//                   <li className=\"event-frame\">\n//                     <span className=\"event event-sat-box\">{simulatedSat.length} <span className=\"event-text\">Simulated SAT</span></span>\n//                   </li>\n//                 </If>\n//               </ul>\n//             </If>\n//           </div>\n//           <div className=\"collapsible-body\" style={{ opacity: inActiveColumn && isActiveDate ? '1' : '0', visibility: inActiveColumn ? 'visible' : 'hidden' }}>\n//             <If condition={hasEvents}>\n//               <ul className=\"events-list\">\n//                 {shouldMapSessions && sessions.map((session, index) => (\n//                   <li className=\"event-frame\" key={index}>\n//                     <span className=\"event-title-box\">{session.title}</span>\n//                   </li>\n//                 ))}\n//                 {this.mapDateLessons(shouldMapLessons, lessons)}\n//                 {this.mapDateWorksheets(shouldMapWorksheets, worksheets)}\n//                 {this.mapTestSections(shouldMapTestSections, testSections)}\n//                 {this.mapSimulatedSats(shouldMapSimulatedSats, simulatedSat)}\n//               </ul>\n//             </If>\n//             <div className=\"day-footer\">\n//               <ul className=\"links-list\">\n//                 <li>\n//                   <a\n//                     href=\"#\"\n//                     data-target='dropdown_day_240119_add'\n//                     onClick={onToggleAddDropdown}\n//                     className=\"link-add dropdown-trigger waves-effect waves-teal\"\n//                   >\n//                     Add\n//                   </a>\n//                   <ul\n//                     id='dropdown_day_240119_add'\n//                     className='dropdown-content'\n//                     style={{ display: addDropdownOpen ? 'block' : 'none', opacity: addDropdownOpen ? '100' : '0' }}\n//                   >\n//                     <li><a href=\"#\" onClick={(event) => this.toggleAssignSessionModal(event, date)} className=\"modal-trigger\">Session</a></li>\n//                     <li><a href=\"#\" onClick={(event) => this.toggleAssignLessonsModal(event, date)} className=\"modal-trigger\">Lesson</a></li>\n//                     <li><a href=\"#\" onClick={(event) => this.toggleAssignWorksheetsModal(event, date)} className=\"modal-trigger\">Worksheet</a></li>\n//                     <li><a href=\"#\" onClick={(event) => this.toggleAssignTestSectionModal(event, date)} className=\"modal-trigger\">Test Section</a></li>\n//                     <li><a href=\"#\" onClick={(event) => this.toggleAssignSimulatedSatModal(event, date)} className=\"modal-trigger\">Simulated SAT</a></li>\n//                   </ul>\n//                 </li>\n//                 <li>\n//                   <a\n//                     href=\"#\"\n//                     data-target='dropdown_day_240119_delete'\n//                     onClick={onToggleDeleteDropdown}\n//                     className=\"link-delete dropdown-trigger waves-effect waves-teal\"\n//                   >\n//                     Delete\n//                   </a>\n//                   <ul\n//                     id='dropdown_day_240119_delete'\n//                     className='dropdown-content'\n//                     style={{ display: deleteDropdownOpen ? 'block' : 'none', opacity: deleteDropdownOpen ? '100' : '0' }}\n//                   >\n//                     <li><a href=\"#modal_edit_delete_section\" className=\"modal-trigger\">Session</a></li>\n//                     <li><a href=\"#modal_edit_delete_lesson\" className=\"modal-trigger\">Lesson</a></li>\n//                     <li><a href=\"#modal_edit_delete_worksheet\" className=\"modal-trigger\">Worksheet</a></li>\n//                     <li><a href=\"#modal_edit_delete_test_section\" className=\"modal-trigger\">Test Section</a></li>\n//                     <li><a href=\"#!\" className=\"disabled\">Simulated SAT</a></li>\n//                     <li><a href=\"#!\" className=\"disabled\">Target Test</a></li>\n//                     <li><a href=\"#!\">All</a></li>\n//                   </ul>\n//                 </li>\n//               </ul>\n//             </div>\n//           </div>\n//         </li>\n//       </ul>\n//     </div>\n//   </td>\n// )","map":null,"metadata":{},"sourceType":"module"}