{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onHandleFilterClick\", filter => {\n      const {\n        activeFilters: currentActiveFilters\n      } = this.state;\n      let activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        const filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      this.setState({\n        activeFilters\n      });\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onSetFilteredLocationState,\n        onUnsetFilteredLocationState,\n        onSetSort\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'location') {\n        if (event === '') {\n          return onUnsetFilteredLocationState();\n        }\n\n        return onSetFilteredLocationState(event);\n      } else if (name === 'sort') {\n        return onSetSort(event);\n      }\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        name\n      } = this.state;\n\n      if (name === '') {\n        onUnsetFilteredState();\n      }\n\n      const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      activeFilters: []\n    }));\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    this.state = {\n      open: false,\n      name: '',\n      activeFilters: [],\n      location: \"\",\n      sort: \"lastNameDescending\"\n    };\n  }\n\n  render() {\n    const {\n      open,\n      activeFilters,\n      location,\n      sort\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\"\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\"\n    }, __jsx(\"li\", null, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      }\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sessions_this_week\",\n      checked: activeFilters.indexOf(\"sessions_this_week\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"sessions_this_week\")\n    }), __jsx(\"label\", {\n      htmlFor: \"sessions_this_week\"\n    }, \"Sessions This Week\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"session_today\",\n      checked: activeFilters.indexOf(\"session_today\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"session_today\")\n    }), __jsx(\"label\", {\n      htmlFor: \"session_today\"\n    }, \"Session Today\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"sessions_no\",\n      checked: activeFilters.indexOf(\"sessions_no\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"sessions_no\")\n    }), __jsx(\"label\", {\n      htmlFor: \"sessions_no\"\n    }, \"No Sessions Scheduled\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_no\",\n      checked: activeFilters.indexOf(\"gain_no\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_no\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_no\"\n    }, \"No Gain\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_0_49\",\n      checked: activeFilters.indexOf(\"gain_0_49\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_0_49\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_0_49\"\n    }, \"Gain of 0-49\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_50_100\",\n      checked: activeFilters.indexOf(\"gain_50_100\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_50_100\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_50_100\"\n    }, \"Gain of 50-100\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_100_199\",\n      checked: activeFilters.indexOf(\"gain_100_199\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_100_199\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_100_199\"\n    }, \"Gain of 100-199\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"gain_200\",\n      checked: activeFilters.indexOf(\"gain_200\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"gain_200\")\n    }), __jsx(\"label\", {\n      htmlFor: \"gain_200\"\n    }, \"Gain of 200+\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"current\",\n      checked: activeFilters.indexOf(\"current\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"current\")\n    }), __jsx(\"label\", {\n      htmlFor: \"current\"\n    }, \"Current\")), __jsx(\"li\", null, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"archived\",\n      checked: activeFilters.indexOf(\"archived\") !== -1,\n      onChange: () => this.onHandleFilterClick(\"archived\")\n    }), __jsx(\"label\", {\n      htmlFor: \"archived\"\n    }, \"Archived\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(location, locationOptions),\n      onChange: event => this.handleFilterChange(event, 'location'),\n      options: locationOptions,\n      label: \"Location\",\n      stateKey: \"location\",\n      dropdownKey: \"location\"\n    }))), __jsx(\"div\", {\n      className: \"col s12 m3\"\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\",\n      style: {\n        marginTop: \"50px\"\n      }\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control  validate\"\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter\n    }, __jsx(\"i\", {\n      className: \"icon-search\"\n    })), __jsx(\"label\", {\n      className: \"label\",\n      htmlFor: \"name_search\"\n    }, \"Search\"))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"row mb-0\"\n    }, __jsx(\"div\", {\n      className: \"col s12 xl7\"\n    }, __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, sortOptions),\n      onChange: event => this.handleFilterChange(event, 'sort'),\n      options: sortOptions,\n      label: \"Sort\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\"\n    }))))), __jsx(\"div\", {\n      className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n    }, \"\\xA0\"), __jsx(\"div\", {\n      className: \"col s12 l4\"\n    }, __jsx(\"div\", {\n      className: \"option-filters\",\n      style: {\n        marginTop: \"50px\"\n      }\n    }, __jsx(\"div\", {\n      className: \"option-item clear\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\"\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, __jsx(\"span\", {\n      className: \"open-text\"\n    }, open ? \"Hide Filters\" : \"Open Filters\")))))))));\n  }\n\n}\n\nFilterSection.propTyes = {\n  onSetSort: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetFilteredLocationState: PropTypes.func.isRequired,\n  onUnsetFilteredLocationState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/ListPage/components/FilterSection/index.js"],"names":["React","PropTypes","update","Dropdown","getValueFromState","locationOptions","sortOptions","FilterSection","Component","constructor","props","filter","activeFilters","currentActiveFilters","state","indexOf","$push","filterIndex","$splice","setState","event","name","onSetFilteredLocationState","onUnsetFilteredLocationState","onSetSort","value","target","updatedState","$merge","onSetFilteredState","onUnsetFilteredState","transformedName","replace","toLowerCase","open","location","sort","render","display","onHandleFilterClick","handleFilterChange","marginTop","submitNameFilter","onClearFilters","onToggleShowFilters","propTyes","func","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport locationOptions from '../../../../utils/locationOptions';\nimport sortOptions from '../../../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      name: '',\n      activeFilters: [],\n      location: \"\",\n      sort: \"lastNameDescending\",\n    };\n  }\n\n  onHandleFilterClick = filter => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  };\n\n  // This function does two things - first, it changes the filter state regardless of the field it's coming from\n  // If either location or sort filters are changed, we dispatch the appropriate action in ListPage to ensure the rendered instructors are filtered/sorted appropriately\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onSetFilteredLocationState, onUnsetFilteredLocationState,onSetSort } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'location') {\n      if (event === '') {\n        return onUnsetFilteredLocationState();\n      }\n      return onSetFilteredLocationState(event);\n    }else if (name === 'sort') {\n      return onSetSort(event);\n    }\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the ListPage event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { name } = this.state;\n    if (name === '') {\n      onUnsetFilteredState();\n    }\n    const transformedName = name.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  onClearFilters = () => this.setState({ activeFilters: [] })\n\n  // eslint-disable-next-line consistent-return\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }));\n\n  render() {\n    const { open, activeFilters,location,sort } = this.state;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div\n              className=\"collapsible-body\"\n              style={open ? { display: \"block\" } : { display: \"none\" }}\n            >\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"sessions_this_week\"\n                        checked={ activeFilters.indexOf(\"sessions_this_week\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"sessions_this_week\")}\n                    />\n                    <label htmlFor=\"sessions_this_week\">\n                      Sessions This Week\n                    </label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"session_today\"\n                        checked={ activeFilters.indexOf(\"session_today\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"session_today\")}\n                    />\n                    <label htmlFor=\"session_today\">Session Today</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"sessions_no\"\n                        checked={ activeFilters.indexOf(\"sessions_no\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"sessions_no\")}\n                    />\n                    <label htmlFor=\"sessions_no\">No Sessions Scheduled</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_no\"\n                        checked={ activeFilters.indexOf(\"gain_no\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_no\")}\n                    />\n                    <label htmlFor=\"gain_no\">No Gain</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_0_49\"\n                        checked={ activeFilters.indexOf(\"gain_0_49\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_0_49\")}\n                    />\n                    <label htmlFor=\"gain_0_49\">Gain of 0-49</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_50_100\"\n                        checked={ activeFilters.indexOf(\"gain_50_100\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_50_100\")}\n                    />\n                    <label htmlFor=\"gain_50_100\">Gain of 50-100</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_100_199\"\n                        checked={ activeFilters.indexOf(\"gain_100_199\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_100_199\")}\n                    />\n                    <label htmlFor=\"gain_100_199\">Gain of 100-199</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"gain_200\"\n                        checked={ activeFilters.indexOf(\"gain_200\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"gain_200\")}\n                    />\n                    <label htmlFor=\"gain_200\">Gain of 200+</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"current\"\n                        checked={ activeFilters.indexOf(\"current\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"current\")}\n                    />\n                    <label htmlFor=\"current\">Current</label>\n                  </li>\n                  <li>\n                    <input\n                        type=\"checkbox\"\n                        id=\"archived\"\n                        checked={ activeFilters.indexOf(\"archived\") !== -1}\n                        onChange={() => this.onHandleFilterClick(\"archived\")}\n                    />\n                    <label htmlFor=\"archived\">Archived</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\">\n                    <Dropdown\n                        value={getValueFromState(location, locationOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'location')}\n                        options={locationOptions}\n                        label=\"Location\"\n                        stateKey=\"location\"\n                        dropdownKey=\"location\"\n                    />\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\" style  = {{marginTop:\"50px\"}}>\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      className=\"input-control  validate\"\n                    />\n                    <button type=\"submit\" className=\"search-button\" onClick={this.submitNameFilter}>\n                      <i className=\"icon-search\" />\n                    </button>\n                    <label className=\"label\" htmlFor=\"name_search\">\n                      Search\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, sortOptions)}\n                        onChange={(event) => this.handleFilterChange(event, 'sort')}\n                        options={sortOptions}\n                        label=\"Sort\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 hide-on-med-and-down show-on-large\">\n                &nbsp;\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\" style = {{marginTop:\"50px\"}}>\n                  <div className=\"option-item clear\">\n                    <a href=\"#\" onClick={this.onClearFilters}>Clear Filters</a>\n                  </div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">\n                        {open ? \"Hide Filters\" : \"Open Filters\"}\n                      </span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTyes = {\n    onSetSort:PropTypes.func.isRequired,\n    onSetFilteredState:PropTypes.func.isRequired,\n    onUnsetFilteredState:PropTypes.func.isRequired,\n    onSetFilteredLocationState: PropTypes.func.isRequired,\n    onUnsetFilteredLocationState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}