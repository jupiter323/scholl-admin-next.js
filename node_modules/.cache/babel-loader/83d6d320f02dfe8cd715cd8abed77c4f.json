{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nimport { Component } from 'react';\n\nvar DashboardCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboardCard, _Component);\n\n  function DashboardCard(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardCard).call(this, props));\n    var sessionStats = props.sessionStats,\n        testStats = props.testStats,\n        user = props.user;\n    _this.state = {\n      menuOpacity: 0,\n      collapseStyle: {},\n      dropDownActive: false,\n      listClasses: \"card-collapsible-holder\"\n    };\n    _this.sessionStats = sessionStats;\n    _this.testStats = testStats;\n    _this.user = user;\n    return _this;\n  }\n\n  _createClass(DashboardCard, [{\n    key: \"cycleMenuOpacity\",\n    value: function cycleMenuOpacity() {\n      if (this.state.menuOpacity === 0) {\n        this.setState({\n          menuOpacity: 1\n        });\n      } else {\n        this.setState({\n          menuOpacity: 0\n        });\n      }\n    }\n  }, {\n    key: \"cycleDropDown\",\n    value: function cycleDropDown() {\n      if (!this.state.dropDownActive) {\n        this.setState({\n          collapseStyle: {\n            \"display\": \"block\"\n          },\n          listClasses: \"card-collapsible-holder active\",\n          dropDownActive: true\n        });\n      } else {\n        this.setState({\n          collapseStyle: {},\n          listClasses: \"card-collapsible-holder\",\n          dropDownActive: false\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.addEventListener('mousedown', function () {\n        return _this2.handleClickOutside();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      document.removeEventListener('mousedown', function () {\n        return _this3.handleClickOutside();\n      });\n    }\n  }, {\n    key: \"handleClickOutside\",\n    value: function handleClickOutside() {\n      if (this.state.menuOpacity === 1) {\n        this.cycleMenuOpacity();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"ul\", {\n        className: \"card-dashboard-session card-main card expandable\"\n      }, React.createElement(\"li\", {\n        className: this.state.listClasses\n      }, React.createElement(\"div\", {\n        className: \"collapsible-card owner-box card-panel\",\n        style: {\n          \"backgroundColor\": \"#14b04b\",\n          \"color\": \"#fff\"\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"span\", {\n        className: \"meta-info\"\n      }, React.createElement(\"time\", {\n        dateTime: \"2018-12-09T15:30\"\n      }, this.sessionStats.datetime), React.createElement(\"span\", {\n        className: \"amount\"\n      }, \" (10 of 12)\")), React.createElement(\"h3\", {\n        className: \"collapsible-title hidden-active\"\n      }, \"\".concat(this.user.lastName, \", \").concat(this.user.firstName))), React.createElement(\"div\", {\n        className: \"col s2 right-align\"\n      }, React.createElement(\"span\", {\n        className: \"badge-rounded-sm badge red darken-2 white-text\"\n      }, React.createElement(\"b\", {\n        className: \"badge-text\"\n      }, this.sessionStats.numberOfFlags), \" \", React.createElement(\"i\", {\n        className: \"icon-flag\"\n      }))), React.createElement(\"div\", {\n        className: \"col s2 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this4.cycleMenuOpacity();\n        },\n        className: \"dropdown-trigger btn\",\n        href: \"#\",\n        \"data-target\": \"dropdown01_01\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), React.createElement(\"ul\", {\n        id: \"dropdown01_01\",\n        className: \"dropdown-content dropdown-wide\",\n        tabIndex: \"0\",\n        style: {\n          \"display\": \"block\",\n          \"width\": \"120px\",\n          \"left\": \"133px\",\n          \"top\": \"8px\",\n          \"height\": \"104px\",\n          \"transformOrigin\": \"0px 0px\",\n          \"opacity\": this.state.menuOpacity,\n          \"transform\": \"scaleX(1) scaleY(1)\"\n        }\n      }, React.createElement(\"li\", {\n        tabIndex: \"0\"\n      }, React.createElement(\"a\", {\n        href: \"#modal_user_edit\",\n        className: \"modal-trigger link-block\"\n      }, \"Edit\")), React.createElement(\"li\", {\n        tabIndex: \"0\"\n      }, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Clone\")), React.createElement(\"li\", {\n        tabIndex: \"0\"\n      }, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Impersonate\")), React.createElement(\"li\", {\n        tabIndex: \"0\"\n      }, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Delete\")))), React.createElement(\"div\", {\n        className: \"col right-align\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header collapsible-opener\",\n        onClick: function onClick() {\n          return _this4.cycleDropDown();\n        }\n      }, React.createElement(\"i\", {\n        className: \"custom-icon-triangle-right color-white\"\n      }))))))), React.createElement(\"div\", {\n        className: \"card-content collapsible-body\",\n        style: this.state.collapseStyle\n      }, React.createElement(\"div\", {\n        className: \"owner-box card-panel\",\n        style: {\n          \"backgroundColor\": \"#14b04b\",\n          \"color\": \"#fff\"\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s12\"\n      }, React.createElement(\"div\", {\n        className: \"user-block\"\n      }, React.createElement(\"div\", {\n        className: \"user-circle\",\n        style: {\n          \"backgroundColor\": \"#af1e90\",\n          \"color\": \"#fff\"\n        }\n      }, React.createElement(\"span\", {\n        className: \"initials\"\n      }, this.user.initials)), React.createElement(\"div\", {\n        className: \"user-text\",\n        style: {\n          \"color\": \"#fff\"\n        }\n      }, React.createElement(\"h4\", {\n        className: \"h3\"\n      }, \"\".concat(this.user.firstName, \", \").concat(this.user.lastName)), React.createElement(\"a\", {\n        href: \"mailto:arnold.studently@gmail.com\"\n      }, this.user.email)))))), React.createElement(\"div\", {\n        className: \"row d-flex align-items-center mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m6\"\n      }, React.createElement(\"div\", {\n        className: \"chart-container chart-container-large start-anim\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, React.createElement(\"span\", {\n        className: \"svg-curved-bar\",\n        \"data-values\": \"{\\\"from\\\": 1040, \\\"to\\\": 1510, \\\"current\\\": 1270}\",\n        \"data-duration\": \"1\"\n      }, React.createElement(\"svg\", {\n        width: \"146px\",\n        height: \"146px\",\n        viewBox: \"0 0 146 146\"\n      }, React.createElement(\"path\", {\n        fill: \"none\",\n        style: {\n          \"strokeWidth\": 30,\n          \"stroke\": \"#eaeaea\"\n        },\n        d: \"M 19.154659885067794 94.556422428299 A 58 58 0 1 1 126.84534011493221 94.556422428299\"\n      }), React.createElement(\"path\", {\n        \"data-dinamic\": \"\",\n        fill: \"none\",\n        style: {\n          \"strokeWidth\": 30,\n          \"stroke\": \"#0085ce\"\n        },\n        d: \"M 19.154659885067794 94.556422428299 A 58 58 0 0 1 69.48595978278411 15.106550272489471\"\n      })), React.createElement(\"span\", {\n        className: \"js-diff-holder\"\n      }, React.createElement(\"span\", {\n        className: \"js-diff visible\",\n        \"data-position\": \"position-2\"\n      }, React.createElement(\"span\", {\n        className: \"txt\",\n        style: {\n          \"top\": \"-56px\",\n          \"left\": \"-16px\"\n        }\n      }, \"+\".concat(this.testStats.currentScore - this.testStats.initial))))), React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          \"backgroundColor\": \"#0085ce\"\n        }\n      }, React.createElement(\"span\", {\n        \"data-count-up\": \"\",\n        \"data-start-val\": \"1040\",\n        \"data-end-val\": \"1270\",\n        \"data-duration\": \"1\"\n      }, this.testStats.currentScore))), React.createElement(\"div\", {\n        className: \"chart-row\"\n      }, React.createElement(\"div\", {\n        className: \"chart-col chart-start\"\n      }, React.createElement(\"span\", {\n        className: \"amount\"\n      }, this.testStats.initial), React.createElement(\"span\", {\n        className: \"amount-text\"\n      }, \"initial\")), React.createElement(\"div\", {\n        className: \"chart-col chart-end\"\n      }, React.createElement(\"span\", {\n        className: \"amount\"\n      }, this.testStats.target), React.createElement(\"span\", {\n        className: \"amount-text\"\n      }, \"target\"))))), React.createElement(\"div\", {\n        className: \"col s12 m6\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list-bordered\"\n      }, React.createElement(\"li\", {\n        className: \"style-green\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, this.sessionStats.complete), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"complete\")), React.createElement(\"li\", {\n        className: \"style-red\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, this.sessionStats.overdue), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"overdue\")), React.createElement(\"li\", {\n        className: \"style-orange\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, this.sessionStats.practiceTests), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"practice tests\")), React.createElement(\"li\", {\n        className: \"style-blue-lighter\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, React.createElement(\"span\", null, this.sessionStats.sessions), \" \", React.createElement(\"span\", {\n        className: \"of\"\n      }, \"of 23\")), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"sessions\")))))))));\n    }\n  }]);\n\n  return DashboardCard;\n}(Component);\n\nexport default DashboardCard;","map":null,"metadata":{},"sourceType":"module"}