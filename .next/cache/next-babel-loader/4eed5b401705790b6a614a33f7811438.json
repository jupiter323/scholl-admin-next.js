{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport InstructorDetailsModal from '../InstructorDetailsModal';\nimport Modal from '../../../../Modal';\n\nconst data = (total, current) => ({\n  datasets: [{\n    data: [current, total - current],\n    backgroundColor: ['rgb(49, 131, 122)', '#eaeaea']\n  }]\n});\n\nclass InstructorCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenInstructorDetailsModal\", () => {\n      this.props.onCloseDropdown();\n      this.setState({\n        instructorDetailsModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"onCloseInstructorDetailsModal\", () => this.setState({\n      instructorDetailsModalOpen: false\n    }));\n\n    _defineProperty(this, \"onCloneInstructor\", () => this.props.onCloneInstructor(this.props.instructor));\n\n    _defineProperty(this, \"onOpenDeleteModal\", () => this.setState({\n      deleteModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDeleteModal\", () => this.setState({\n      deleteModalOpen: false\n    }));\n\n    _defineProperty(this, \"onConfirmDeleteInstructor\", () => {\n      const {\n        onDeleteInstructor,\n        instructor,\n        onCloseDropdown\n      } = this.props;\n      onDeleteInstructor(instructor);\n      onCloseDropdown();\n      this.onCloseDeleteModal();\n    });\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    this.state = {\n      instructorDetailsModalOpen: false,\n      deleteModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      deleteModalOpen,\n      instructorDetailsModalOpen\n    } = this.state;\n    const {\n      dropdownIsOpen,\n      dropdownIndex,\n      index,\n      instructor,\n      onSaveInstructorChanges\n    } = this.props;\n    const {\n      accountInfo: {\n        lastName,\n        firstName,\n        email\n      } = {},\n      basicInfo: {\n        activeStudents,\n        pastStudents,\n        unactivatedStudents,\n        averageImprovement,\n        averageInitialScore,\n        averageFinalScore,\n        studentsAchievingTargetScore\n      } = {}\n    } = instructor;\n    return React.createElement(React.Fragment, null, React.createElement(InstructorDetailsModal, {\n      instructor: instructor,\n      open: instructorDetailsModalOpen,\n      onClose: this.onCloseInstructorDetailsModal,\n      onSaveInstructorChanges: onSaveInstructorChanges,\n      onOpenDeleteModal: this.onOpenDeleteModal,\n      deleteModalOpen: deleteModalOpen\n    }), React.createElement(Modal, {\n      open: deleteModalOpen,\n      onConfirm: this.onConfirmDeleteInstructor,\n      onClose: this.onCloseDeleteModal,\n      header: \"Are You Sure?\",\n      body: \"Deleting this instructor will be permanent\"\n    }), React.createElement(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\"\n    }, React.createElement(\"div\", {\n      className: \"card-main card-location card card-large\"\n    }, React.createElement(\"div\", {\n      className: \"owner-box card-panel\",\n      style: {\n        backgroundColor: '#31837a',\n        color: '#fff'\n      }\n    }, React.createElement(\"div\", {\n      className: \"card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"col s9\"\n    }, React.createElement(\"div\", {\n      className: \"user-block\"\n    }, React.createElement(\"div\", {\n      className: \"user-circle\",\n      style: {\n        backgroundColor: '#18b5e9',\n        color: '#fff'\n      }\n    }, React.createElement(\"span\", {\n      className: \"initials\"\n    }, \"NT\")), React.createElement(\"div\", {\n      className: \"user-text\",\n      style: {\n        color: '#fff'\n      }\n    }, React.createElement(\"h4\", {\n      className: \"h3\"\n    }, lastName, \", \", firstName), React.createElement(\"a\", {\n      href: `mailto:${email}`\n    }, email)))), React.createElement(\"div\", {\n      className: \"col s3 right-align\"\n    }, React.createElement(\"div\", {\n      className: \"row icons-row\"\n    }, React.createElement(\"div\", {\n      className: \"col right-align\"\n    }, React.createElement(\"span\", {\n      className: \"block-icon\"\n    }, React.createElement(\"i\", {\n      className: \"icon-user\"\n    }), React.createElement(\"span\", {\n      className: \"text-icon\"\n    }, \"Instructor\"))), React.createElement(\"div\", {\n      className: \"dropdown-block col\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.handleDropdownClick,\n      className: \"dropdown-trigger btn\",\n      \"data-target\": \"dropdown05\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n      id: \"dropdown05\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        width: '103.991px',\n        left: '116.974px',\n        top: '7.99716px',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenInstructorDetailsModal,\n      className: \"modal-trigger link-block\"\n    }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onCloneInstructor\n    }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#!\"\n    }, \"Impersonate\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenDeleteModal\n    }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"div\", {\n      className: \"row d-flex align-items-center mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m5\"\n    }, React.createElement(\"div\", {\n      className: \"chart-container\"\n    }, React.createElement(\"div\", {\n      className: \"chart-holder\"\n    }, React.createElement(Doughnut, {\n      data: () => data(activeStudents, studentsAchievingTargetScore),\n      height: 110,\n      width: 110,\n      options: {\n        circumference: 4,\n        rotation: -3.58,\n        cutoutPercentage: 50,\n        tooltips: false\n      }\n    }), React.createElement(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: '#31837a',\n        bottom: '-22px'\n      }\n    }, React.createElement(\"span\", {\n      \"data-count-up\": true,\n      \"data-start-val\": \"0\",\n      \"data-end-val\": \"71\",\n      \"data-duration\": \"1\"\n    }), Math.floor(studentsAchievingTargetScore / activeStudents * 100), \"%\")), React.createElement(\"div\", {\n      className: \"chart-description\",\n      style: {\n        color: '#31837a',\n        marginTop: '36px'\n      }\n    }, \"Students Who Achieved Target Score\"))), React.createElement(\"div\", {\n      className: \"col s12 m7\"\n    }, React.createElement(\"ul\", {\n      className: \"points-list\"\n    }, React.createElement(\"li\", {\n      className: \"style-red-darken\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, activeStudents), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"active students\")), React.createElement(\"li\", {\n      className: \"style-pink-darken\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, pastStudents), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"past students\")), React.createElement(\"li\", null, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, unactivatedStudents), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"unactivated students\")), React.createElement(\"li\", {\n      className: \"style-blue-light\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, \"+\", averageImprovement), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"average improvement\")), React.createElement(\"li\", {\n      className: \"style-blue\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, averageInitialScore), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"average initial score\")), React.createElement(\"li\", {\n      className: \"style-blue-dark\"\n    }, React.createElement(\"span\", {\n      className: \"badge-circle\"\n    }, averageFinalScore), React.createElement(\"span\", {\n      className: \"point-text\"\n    }, \"average final score\"))))), React.createElement(\"div\", {\n      className: \"card-footer\"\n    }, React.createElement(\"div\", {\n      className: \"meta-info\"\n    }, React.createElement(\"p\", {\n      className: \"truncate\"\n    }, \"First Location,  Second Location, Possible Additional Truncated More Locatioa...\")))))));\n  }\n\n}\n\nexport default InstructorCard;","map":null,"metadata":{},"sourceType":"module"}