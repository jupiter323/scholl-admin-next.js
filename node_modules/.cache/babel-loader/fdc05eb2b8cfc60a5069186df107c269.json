{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport update from 'immutability-helper';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport InstructorCard from './components/InstructorCard';\nimport FilterSection from './components/FilterSection';\nimport NewInstructorModal from './components/NewInstructorModal';\nimport sampleInstructorList from '../utils/sampleInstructorList'; // import { saveNewSuccess as savePracticeTestSuccess, saveChangesSuccess, saveNewError as savePracticeTestError } from '../../utils/fieldValidation';\n\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\n\nvar InstructorListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorListPage, _React$Component);\n\n  function InstructorListPage(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIsOpen: true,\n        dropdownIndex: dropdownIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddNewInstructor\", function (newInstructor) {\n      return _this.setState(function (_ref) {\n        var instructors = _ref.instructors;\n        return {\n          instructors: [].concat(_toConsumableArray(instructors), [newInstructor])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteInstructor\", function (deletedInstructor) {\n      var updatedState = update(_this.state, {\n        instructors: function instructors(unfilteredInstructors) {\n          return unfilteredInstructors.filter(function (instructor) {\n            return instructor.id !== deletedInstructor.id;\n          });\n        }\n      });\n\n      _this.setState({\n        instructors: updatedState.instructors\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneInstructor\", function (instructor) {\n      var cloneIndex = _this.state.instructors.indexOf(instructor);\n\n      var instructors = update(_this.state.instructors, {\n        $splice: [[cloneIndex, 0, instructor]]\n      });\n\n      _this.setState({\n        instructors: instructors\n      }, _this.onCloseDropdown);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveInstructorChanges\", function (updatedInstructor) {\n      var originalInstructors = _this.state.instructors;\n      var instructorToUpdate = originalInstructors.filter(function (instructor) {\n        return instructor.id === updatedInstructor.id;\n      })[0];\n      var updatedInstructorIndex = originalInstructors.indexOf(instructorToUpdate);\n      var instructors = update(originalInstructors, {\n        $splice: [[updatedInstructorIndex, 1, updatedInstructor]]\n      }); // saveChangesSuccess();\n\n      _this.setState({\n        instructors: instructors\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        instructorsAreFiltered: false,\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredLocationState\", function (filterLocation) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterLocation: filterLocation\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredLocationState\", function () {\n      return _this.setState({\n        filterLocation: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          instructors = _this$state.instructors,\n          filterName = _this$state.filterName;\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var _currentInstructor$ac = currentInstructor.accountInfo,\n            lastName = _currentInstructor$ac.lastName,\n            firstName = _currentInstructor$ac.firstName;\n        var instructorString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (instructorString.indexOf(filterName) !== -1 && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByLocation\", function () {\n      var preFilteredInstructors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allInstructors = _this$state2.instructors,\n          filterLocation = _this$state2.filterLocation;\n      var instructors;\n\n      if (preFilteredInstructors.length) {\n        instructors = preFilteredInstructors;\n      } else {\n        instructors = allInstructors;\n      }\n\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var city = currentInstructor.contactInfo.city;\n\n        if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortInstructors\", function (instructors) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'firstNameAscending':\n          return instructors.sort(firstNameAscending);\n\n        case 'firstNameDescending':\n          return instructors.sort(firstNameDescending);\n\n        case 'lastNameAscending':\n          return instructors.sort(lastNameAscending);\n\n        case 'lastNameDescending':\n          return instructors.sort(lastNameDescending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableInstructors\", function () {\n      var _this$state3 = _this.state,\n          filterName = _this$state3.filterName,\n          filterLocation = _this$state3.filterLocation,\n          allInstructors = _this$state3.instructors,\n          sort = _this$state3.sort;\n      var instructors;\n\n      if (filterName.length && !filterLocation.length) {\n        instructors = _this.onFilterByName();\n      } else if (!filterName.length && filterLocation.length) {\n        instructors = _this.onFilterByLocation();\n      } else if (filterName.length && filterLocation.length) {\n        var filteredByName = _this.onFilterByName();\n\n        instructors = _this.onFilterByLocation(filteredByName);\n      } else {\n        instructors = allInstructors;\n      }\n\n      if (sort) {\n        return _this.onSortInstructors(instructors);\n      }\n\n      return instructors;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForFilteredState\", function () {\n      var _this$state4 = _this.state,\n          filterName = _this$state4.filterName,\n          filterLocation = _this$state4.filterLocation;\n\n      if (!filterName.length && !filterLocation.length) {\n        _this.setState({\n          instructorsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapInstructors\", function () {\n      var instructors = _this.getMappableInstructors();\n\n      return instructors.map(function (instructor, index) {\n        return React.createElement(InstructorCard, {\n          index: index,\n          key: instructor.id,\n          instructor: instructor,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          onSetDropdown: _this.onSetDropdown,\n          onCloseDropdown: _this.onCloseDropdown,\n          dropdownIndex: _this.state.dropdownIndex,\n          onDeleteInstructor: _this.onDeleteInstructor,\n          onCloneInstructor: _this.onCloneInstructor,\n          onSaveInstructorChanges: _this.onSaveInstructorChanges\n        });\n      });\n    });\n\n    _this.state = {\n      instructorModalOpen: false,\n      instructors: sampleInstructorList,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      instructorsAreFiltered: false,\n      filterName: '',\n      filterLocation: '',\n      sort: ''\n    };\n    return _this;\n  }\n\n  _createClass(InstructorListPage, [{\n    key: \"render\",\n    value: function render() {\n      var instructorModalOpen = this.state.instructorModalOpen;\n      return React.createElement(React.Fragment, null, React.createElement(NewInstructorModal, {\n        open: instructorModalOpen,\n        onClose: this.onCloseInstructorModal,\n        onAddNewInstructor: this.onAddNewInstructor\n      }), React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(StickyContainer, null, React.createElement(Sticky, null, function (_ref2) {\n        var style = _ref2.style;\n        return React.createElement(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread({}, style, {\n            zIndex: 1999\n          })\n        }, React.createElement(\"div\", {\n          className: \"mobile-header\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\"\n        }, React.createElement(\"i\", {\n          className: \"material-icons\"\n        }, \"menu\"))), React.createElement(\"h2\", {\n          className: \"h1 white-text\"\n        }, React.createElement(\"span\", {\n          className: \"heading-holder\"\n        }, React.createElement(\"i\", {\n          className: \"icon-instructors\"\n        }), React.createElement(\"span\", {\n          className: \"heading-block\"\n        }, \"Instructors\"))));\n      }), React.createElement(FilterSection, {\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredLocationState: this.onSetFilteredLocationState,\n        onUnsetFilteredLocationState: this.onUnsetFilteredLocationState\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content\"\n      }, this.mapInstructors())))), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenInstructorModal,\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Location\"));\n    }\n  }]);\n\n  return InstructorListPage;\n}(React.Component);\n\nexport default InstructorListPage;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/ListPage/index.js"],"names":["React","update","Sticky","StickyContainer","InstructorCard","FilterSection","NewInstructorModal","sampleInstructorList","firstNameAscending","firstNameDescending","lastNameAscending","lastNameDescending","InstructorListPage","props","dropdownIndex","setState","dropdownIsOpen","instructorModalOpen","newInstructor","instructors","deletedInstructor","updatedState","state","unfilteredInstructors","filter","instructor","id","cloneIndex","indexOf","$splice","onCloseDropdown","updatedInstructor","originalInstructors","instructorToUpdate","updatedInstructorIndex","filterName","instructorsAreFiltered","filterLocation","checkForFilteredState","sort","reduce","finalArr","currentInstructor","accountInfo","lastName","firstName","instructorString","toLowerCase","push","preFilteredInstructors","allInstructors","length","city","contactInfo","onFilterByName","onFilterByLocation","filteredByName","onSortInstructors","getMappableInstructors","map","index","onSetDropdown","onDeleteInstructor","onCloneInstructor","onSaveInstructorChanges","onCloseInstructorModal","onAddNewInstructor","style","zIndex","onSetSort","onSetFilteredState","onUnsetFilteredState","onSetFilteredLocationState","onUnsetFilteredLocationState","mapInstructors","onOpenInstructorModal","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport InstructorCard from './components/InstructorCard';\nimport FilterSection from './components/FilterSection';\nimport NewInstructorModal from './components/NewInstructorModal';\n\nimport sampleInstructorList from '../utils/sampleInstructorList';\n// import { saveNewSuccess as savePracticeTestSuccess, saveChangesSuccess, saveNewError as savePracticeTestError } from '../../utils/fieldValidation';\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\n\nclass InstructorListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instructorModalOpen: false,\n      instructors: sampleInstructorList,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      instructorsAreFiltered: false,\n      filterName: '',\n      filterLocation: '',\n      sort: '',\n    };\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIsOpen: true, dropdownIndex });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false, dropdownIndex: null });\n\n  onOpenInstructorModal = () => this.setState({ instructorModalOpen: true });\n  onCloseInstructorModal = () => this.setState({ instructorModalOpen: false });\n\n  onAddNewInstructor = (newInstructor) => this.setState(({ instructors }) => ({ instructors: [...instructors, newInstructor] }))\n\n  onDeleteInstructor = (deletedInstructor) => {\n    const updatedState = update(this.state, {\n      instructors: unfilteredInstructors => unfilteredInstructors.filter(instructor => instructor.id !== deletedInstructor.id),\n    });\n    this.setState({ instructors: updatedState.instructors });\n  }\n\n  onCloneInstructor = (instructor) => {\n    const cloneIndex = this.state.instructors.indexOf(instructor);\n    const instructors = update(this.state.instructors, {\n      $splice: [[cloneIndex, 0, instructor]],\n    });\n    this.setState({ instructors }, this.onCloseDropdown);\n  }\n\n  onSaveInstructorChanges = (updatedInstructor) => {\n    const { instructors: originalInstructors } = this.state;\n    const instructorToUpdate = originalInstructors.filter(instructor => instructor.id === updatedInstructor.id)[0];\n    const updatedInstructorIndex = originalInstructors.indexOf(instructorToUpdate);\n    const instructors = update(originalInstructors, {\n      $splice: [[updatedInstructorIndex, 1, updatedInstructor]],\n    });\n    // saveChangesSuccess();\n    this.setState({ instructors });\n  }\n\n  onSetFilteredState = (filterName) => this.setState({ instructorsAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ instructorsAreFiltered: false, filterName: '' })\n\n  onSetFilteredLocationState = (filterLocation) => this.setState({ instructorsAreFiltered: true, filterLocation })\n  onUnsetFilteredLocationState = () => this.setState({ filterLocation: '' }, this.checkForFilteredState)\n\n  onSetSort = (sort) => this.setState({ sort })\n\n  onFilterByName = () => {\n    const { instructors, filterName } = this.state;\n    return instructors.reduce((finalArr, currentInstructor) => {\n      const { accountInfo: { lastName, firstName } } = currentInstructor;\n      const instructorString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (instructorString.indexOf(filterName) !== -1 && finalArr.indexOf(currentInstructor) === -1) {\n        finalArr.push(currentInstructor);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByLocation = (preFilteredInstructors = []) => {\n    const { instructors: allInstructors, filterLocation } = this.state;\n    let instructors;\n    if (preFilteredInstructors.length) {\n      instructors = preFilteredInstructors;\n    } else {\n      instructors = allInstructors;\n    }\n    return instructors.reduce((finalArr, currentInstructor) => {\n      const { contactInfo: { city } } = currentInstructor;\n      if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n        finalArr.push(currentInstructor);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortInstructors = (instructors) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'firstNameAscending':\n        return instructors.sort(firstNameAscending);\n      case 'firstNameDescending':\n        return instructors.sort(firstNameDescending);\n      case 'lastNameAscending':\n        return instructors.sort(lastNameAscending);\n      case 'lastNameDescending':\n        return instructors.sort(lastNameDescending);\n      default:\n        break;\n    }\n  }\n\n  getMappableInstructors = () => {\n    const { filterName, filterLocation, instructors: allInstructors, sort } = this.state;\n    let instructors;\n    if (filterName.length && !filterLocation.length) {\n      instructors = this.onFilterByName();\n    } else if (!filterName.length && filterLocation.length) {\n      instructors = this.onFilterByLocation();\n    } else if (filterName.length && filterLocation.length) {\n      const filteredByName = this.onFilterByName();\n      instructors = this.onFilterByLocation(filteredByName);\n    } else {\n      instructors = allInstructors;\n    }\n    if (sort) {\n      return this.onSortInstructors(instructors);\n    }\n    return instructors;\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterLocation } = this.state;\n    if (!filterName.length && !filterLocation.length) {\n      this.setState({ instructorsAreFiltered: false });\n    }\n  }\n\n  mapInstructors = () => {\n    const instructors = this.getMappableInstructors();\n    return instructors.map((instructor, index) => (\n      <InstructorCard\n        index={index}\n        key={instructor.id}\n        instructor={instructor}\n        dropdownIsOpen={this.state.dropdownIsOpen}\n        onSetDropdown={this.onSetDropdown}\n        onCloseDropdown={this.onCloseDropdown}\n        dropdownIndex={this.state.dropdownIndex}\n        onDeleteInstructor={this.onDeleteInstructor}\n        onCloneInstructor={this.onCloneInstructor}\n        onSaveInstructorChanges={this.onSaveInstructorChanges}\n      />\n    ));\n  }\n\n  render() {\n    const { instructorModalOpen } = this.state;\n    return (\n      <React.Fragment>\n        <NewInstructorModal\n          open={instructorModalOpen}\n          onClose={this.onCloseInstructorModal}\n          onAddNewInstructor={this.onAddNewInstructor}\n        />\n        <div className=\"main-holder grey lighten-5\">\n          <StickyContainer>\n          <Sticky>\n        {({ style }) => (\n          <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n            <div className=\"mobile-header\">\n              <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            </div>\n            <h2 className=\"h1 white-text\">\n              <span className=\"heading-holder\">\n                <i className=\"icon-instructors\"></i>\n                <span className=\"heading-block\">Instructors</span>\n              </span>\n            </h2>\n          </div>\n        )}\n        </Sticky>\n          <FilterSection\n            onSetSort={this.onSetSort}\n            onSetFilteredState={this.onSetFilteredState}\n            onUnsetFilteredState={this.onUnsetFilteredState}\n            onSetFilteredLocationState={this.onSetFilteredLocationState}\n            onUnsetFilteredLocationState={this.onUnsetFilteredLocationState}\n          />\n          <div className=\"content-section\">\n            <div className=\"row d-flex-content\">\n              {this.mapInstructors()}\n            </div>\n          </div>\n          </StickyContainer>\n        </div>\n        <a\n          href=\"#\"\n          onClick={this.onOpenInstructorModal}\n          className=\"waves-effect waves-teal btn add-btn\"\n        >\n          <i className=\"material-icons\">add</i>\n          New Location\n        </a>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default InstructorListPage;\n"]},"metadata":{},"sourceType":"module"}