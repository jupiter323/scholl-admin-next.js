{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TableHeader from './components/TableHeader';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap from '../../utils/statusColorMap';\n\nclass ListView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetDropdown\", dropdownIndex => this.setState({\n      dropdownIndex,\n      dropdownIsOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDropdown\", () => this.setState({\n      dropdownIsOpen: false\n    }));\n\n    _defineProperty(this, \"handleDropdownClick\", (event, index) => {\n      const {\n        dropdownIsOpen\n      } = this.state;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return this.onCloseDropdown();\n      }\n\n      return this.onSetDropdown(index);\n    });\n\n    _defineProperty(this, \"mapWorksheetRows\", () => {\n      const {\n        worksheets,\n        onToggleDetailModalOpen\n      } = this.props;\n      const {\n        dropdownIndex,\n        dropdownIsOpen\n      } = this.state;\n      return worksheets.map((worksheet, index) => {\n        const {\n          disabled,\n          worksheetName,\n          score,\n          status,\n          problems,\n          timeEstimate,\n          assignDate,\n          dueDate,\n          completed,\n          flags\n        } = worksheet;\n        return React.createElement(\"div\", {\n          className: disabled ? 'card card-disabled list-table-row' : 'card list-table-row',\n          key: worksheet.id\n        }, React.createElement(\"div\", {\n          className: \"list-table-cell icon-cell\"\n        }, React.createElement(\"span\", {\n          className: \"block-icon\"\n        }, React.createElement(\"i\", {\n          className: \"icon-sheets-w\"\n        }))), React.createElement(\"div\", {\n          className: \"list-table-cell name-cell\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel-text truncate\"\n        }, React.createElement(\"div\", {\n          className: \"text-large truncate\"\n        }, worksheetName))), React.createElement(\"div\", {\n          className: \"list-table-cell graph-cell\"\n        }, score && React.createElement(\"span\", {\n          className: `chart-bar ${statusColorMap[status]} white-text`\n        }, score, \"%\")), React.createElement(\"div\", {\n          className: \"list-table-cell description-cell\"\n        }, problems), React.createElement(\"div\", {\n          className: \"list-table-cell time-cell\"\n        }, formatTimeEstimate(timeEstimate)), React.createElement(\"div\", {\n          className: \"list-table-cell date-cell\"\n        }, React.createElement(\"time\", {\n          dateTime: \"2019-01-27\"\n        }, assignDate)), React.createElement(\"div\", {\n          className: \"list-table-cell date-cell\"\n        }, React.createElement(\"time\", {\n          dateTime: \"2019-01-27\"\n        }, dueDate)), React.createElement(\"div\", {\n          className: \"list-table-cell completed-cell\"\n        }, completed && React.createElement(React.Fragment, null, completed, \" of \", problems)), React.createElement(\"div\", {\n          className: \"list-table-cell flags-cell\"\n        }, flags.length > 0 && React.createElement(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, React.createElement(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", React.createElement(\"i\", {\n          className: \"icon-flag\"\n        }))), React.createElement(\"div\", {\n          className: \"list-table-cell status-cell\"\n        }, React.createElement(\"span\", {\n          className: `badge badge-rounded-md ${statusColorMap[status]} white-text`\n        }, status)), React.createElement(\"div\", {\n          className: \"list-table-cell drop-cell\"\n        }, React.createElement(\"div\", {\n          className: \"dropdown-block\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown01\",\n          className: \"dropdown-trigger btn\",\n          onClick: event => this.handleDropdownClick(event, index)\n        }, React.createElement(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: 'block',\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"modal-trigger link-block\",\n          onClick: () => onToggleDetailModalOpen(index)\n        }, \"View Details\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Dismiss Flags\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Reset\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"link-delete\"\n        }, \"Delete\"))) : null)));\n      });\n    });\n\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    };\n  }\n\n  render() {\n    const {\n      worksheets\n    } = this.props;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"content-section\"\n    }, React.createElement(\"div\", {\n      className: \"container-md\"\n    }, React.createElement(\"div\", {\n      className: \"result-row center-align\"\n    }, React.createElement(\"b\", {\n      className: \"result\"\n    }, \" - \", worksheets.length, \" results -\")), React.createElement(\"div\", {\n      className: \"list-view-section\"\n    }, React.createElement(\"div\", {\n      className: \"list-table\"\n    }, React.createElement(TableHeader, null), React.createElement(\"div\", {\n      className: \"list-table-body\"\n    }, this.mapWorksheetRows()))))));\n  }\n\n}\n\nListView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired\n};\nexport default ListView;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailWorksheetPage/components/ListView/index.js"],"names":["React","PropTypes","TableHeader","formatTimeEstimate","statusColorMap","ListView","Component","constructor","props","dropdownIndex","setState","dropdownIsOpen","event","index","state","preventDefault","onCloseDropdown","onSetDropdown","worksheets","onToggleDetailModalOpen","map","worksheet","disabled","worksheetName","score","status","problems","timeEstimate","assignDate","dueDate","completed","flags","id","length","handleDropdownClick","display","opacity","transform","render","mapWorksheetRows","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableHeader from './components/TableHeader';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap from '../../utils/statusColorMap';\n\nclass ListView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    };\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetRows = () => {\n    const { worksheets, onToggleDetailModalOpen } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { disabled, worksheetName, score, status, problems, timeEstimate, assignDate, dueDate, completed, flags } = worksheet;\n      return (\n        <div className={disabled ? 'card card-disabled list-table-row' : 'card list-table-row'} key={worksheet.id}>\n          <div className=\"list-table-cell icon-cell\">\n            <span className=\"block-icon\">\n              <i className=\"icon-sheets-w\"></i>\n            </span>\n          </div>\n          <div className=\"list-table-cell name-cell\">\n            <div className=\"card-panel-text truncate\">\n              <div className=\"text-large truncate\">{worksheetName}</div>\n            </div>\n          </div>\n          <div className=\"list-table-cell graph-cell\">\n            {score && (\n              <span className={`chart-bar ${statusColorMap[status]} white-text`}>{score}%</span>\n            )}\n          </div>\n          <div className=\"list-table-cell description-cell\">{problems}</div>\n          <div className=\"list-table-cell time-cell\">{formatTimeEstimate(timeEstimate)}</div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{assignDate}</time></div>\n          <div className=\"list-table-cell date-cell\"><time dateTime=\"2019-01-27\">{dueDate}</time></div>\n          <div className=\"list-table-cell completed-cell\">\n            {completed && (\n              <React.Fragment>\n                {completed} of {problems}\n              </React.Fragment>\n            )}\n          </div>\n          <div className=\"list-table-cell flags-cell\">\n            {flags.length > 0 && (\n              <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n            )}\n          </div>\n          <div className=\"list-table-cell status-cell\">\n            <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n          </div>\n          <div className=\"list-table-cell drop-cell\">\n            <div className=\"dropdown-block\">\n              <a\n                href='#'\n                data-target='dropdown01'\n                className='dropdown-trigger btn'\n                onClick={(event) => this.handleDropdownClick(event, index)}\n              >\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n              <If condition={dropdownIsOpen && dropdownIndex === index}>\n                <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                  <li>\n                    <a\n                      href=\"#\"\n                      className=\"modal-trigger link-block\"\n                      onClick={() => onToggleDetailModalOpen(index)}\n                    >\n                      View Details\n                    </a>\n                  </li>\n                  <li><a href=\"#!\">Dismiss Flags</a></li>\n                  <li><a href=\"#!\">Reset</a></li>\n                  <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                </ul>\n              </If>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"content-section\">\n          <div className=\"container-md\">\n            <div className=\"result-row center-align\">\n              <b className=\"result\"> - {worksheets.length} results -</b>\n            </div>\n            <div className=\"list-view-section\">\n              <div className=\"list-table\">\n                <TableHeader />\n                <div className=\"list-table-body\">\n                  {this.mapWorksheetRows()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nListView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired,\n}\n\nexport default ListView;\n"]},"metadata":{},"sourceType":"module"}