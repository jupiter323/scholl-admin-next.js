{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nconst styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  }\n};\n\nclass BubbleGroup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      const {\n        question: {\n          studentChoice\n        }\n      } = this.props;\n      this.setState({\n        selected: studentChoice\n      }, () => this.checkIfCorrect(this.state.selected));\n    });\n\n    _defineProperty(this, \"onHandleBubbleChange\", (event, letter) => {\n      if (this.props.question.studentChoice === \"\") {\n        this.setState({\n          selected: event.target.value\n        }, () => this.checkIfCorrect(letter));\n      }\n    });\n\n    _defineProperty(this, \"onSelectedBubbleClick\", event => {\n      const {\n        selected\n      } = this.state;\n\n      if (this.props.question.studentChoice === \"\") {\n        if (selected === event.target.value) {\n          this.setState({\n            selected: \"\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(this, \"checkIfCorrect\", letter => {\n      const {\n        question\n      } = this.props;\n\n      if (letter === question.answer) {\n        this.setState({\n          correct: true\n        });\n      } else {\n        this.setState({\n          correct: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"mapEmptyBubbles\", id => {\n      const letters = [\"A\", \"B\", \"C\", \"D\"];\n      return letters.map(letter => React.createElement(\"li\", {\n        key: letter\n      }, React.createElement(\"form\", null, React.createElement(\"input\", {\n        type: \"radio\",\n        id: `${id}${letter}`,\n        name: \"letter\",\n        value: letter,\n        checked: this.state.selected === letter,\n        onChange: event => this.onHandleBubbleChange(event, letter),\n        onClick: event => this.onSelectedBubbleClick(event)\n      }), React.createElement(\"label\", {\n        htmlFor: `${id}${letter}`,\n        style: this.state.selected ? this.renderBubbleStyle(letter) : styles.plain\n      }, React.createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginTop: '2px',\n          paddingLeft: \"4.5px\"\n        }\n      }, letter)))));\n    });\n\n    _defineProperty(this, \"renderBubbleStyle\", letter => {\n      const {\n        correct,\n        selected\n      } = this.state;\n      const {\n        question: {\n          answer\n        }\n      } = this.props;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    this.state = {\n      selected: this.props.question.studentChoice,\n      correct: null\n    };\n  }\n\n  render() {\n    const {\n      question: {\n        id\n      }\n    } = this.props;\n    return React.createElement(React.Fragment, null, this.mapEmptyBubbles(id));\n  }\n\n}\n\nBubbleGroup.propTypes = {\n  question: PropTypes.object.isRequired\n};\nexport default BubbleGroup;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/Bubble/index.js"],"names":["React","PropTypes","styles","red","position","color","borderColor","border","backgroundColor","height","width","borderRadius","greenFilled","greenBorderOnly","plain","BubbleGroup","Component","constructor","props","question","studentChoice","setState","selected","checkIfCorrect","state","event","letter","target","value","answer","correct","id","letters","map","onHandleBubbleChange","onSelectedBubbleClick","renderBubbleStyle","display","marginTop","paddingLeft","render","mapEmptyBubbles","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  red: { position: 'relative', color: '#fff', borderColor: '#fff', border: '1px solid', backgroundColor: '#db1d41', height: '19px', width: '19px', borderRadius: '50%' },\n  greenFilled: { position: 'relative', color: '#fff', borderColor: '#32955c', border: '1px solid', backgroundColor: '#32955c', height: '19px', width: '19px', borderRadius: '50%' },\n  greenBorderOnly: { position: 'relative', color: '#32955c', borderColor: '#32955c', border: '1px solid', backgroundColor: '#fff', height: '19px', width: '19px', borderRadius: '50%' },\n  plain: { position: 'relative', color: '#a6a8ab', border: '1px solid', borderColor: '#a6a8ab', height: '19px', width: '19px', borderRadius: '50%' },\n}\n\nclass BubbleGroup extends React.Component {\n  constructor(props){\n    super(props)\n    this.state= {\n      selected: this.props.question.studentChoice,\n      correct: null,\n    }\n  }\n\n  componentDidMount = () => {\n    const { question: {studentChoice } }= this.props\n    this.setState({selected: studentChoice}, () => this.checkIfCorrect(this.state.selected));\n  }\n\n  onHandleBubbleChange = (event, letter) => {\n    if (this.props.question.studentChoice === \"\"){\n      this.setState({selected: event.target.value},\n       () => this.checkIfCorrect(letter))\n    }\n  }\n\n// clears state when selected button is clicked again, unless it was studentChoice from props\n  onSelectedBubbleClick = (event) => {\n    const { selected } = this.state;\n    if (this.props.question.studentChoice === \"\"){\n      if (selected === event.target.value){\n        this.setState({selected: \"\"})\n      }\n    }\n  }\n\n  checkIfCorrect = (letter) => {\n    const { question } = this.props;\n    if(letter === question.answer) {\n      this.setState({correct: true});\n    }else{\n      this.setState({correct: false})\n    }\n  }\n\n  mapEmptyBubbles = (id) => {\n    const letters = [\"A\", \"B\", \"C\", \"D\"];\n    return letters.map(letter => (\n      <li key={letter}>\n        <form>\n          <input\n            type=\"radio\"\n            id={`${id}${letter}`}\n            name=\"letter\"\n            value={letter}\n            checked={this.state.selected === letter}\n            onChange={(event) => this.onHandleBubbleChange(event, letter)}\n            onClick={(event)=> this.onSelectedBubbleClick(event)}\n            />\n          <label\n            htmlFor={`${id}${letter}`}\n            style={this.state.selected ? this.renderBubbleStyle(letter) : styles.plain}\n            >\n          <span style={{ display: 'block', marginTop: '2px', paddingLeft: \"4.5px\" }}>{letter}</span>\n          </label>\n        </form>\n      </li>\n    ))\n  }\n\n  renderBubbleStyle = ( letter ) => {\n    const { correct, selected } = this.state;\n    const { question: { answer } } = this.props;\n    if (selected === letter && correct) {\n      return styles.greenFilled\n    }\n    if (selected === letter && !correct) {\n      return styles.red\n    }\n    if (letter !== selected && letter === !answer) {\n      return styles.plain\n    }if(letter !== selected && letter === answer){\n      return styles.greenBorderOnly\n    }\n    return styles.plain\n  }\n\n\n  render() {\n    const { question: { id } } = this.props\n      return (\n        <React.Fragment>\n          {this.mapEmptyBubbles(id)}\n        </React.Fragment>\n      )\n  }\n}\n\nBubbleGroup.propTypes = {\n  question: PropTypes.object.isRequired,\n}\n\nexport default BubbleGroup;\n"]},"metadata":{},"sourceType":"module"}