{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Core/SideNav.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/img-redundant-alt */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Link from \"next/link\";\nimport ActiveLink from \"../../utils/ActiveLink\";\nimport { makeSelectUserIsLogged, makeSelectCurrentUser } from \"../User/index/selectors\";\nimport { loggedIn } from \"../../utils/AuthService\";\nimport { setUserIsLogged, getCurrentUser } from \"../User/index/actions\";\nimport { LogoutApi } from \"../User/index/api\";\nimport $ from \"jquery\";\nimport Router from \"next/router\";\n\nif (false) {\n  window.$ = $;\n  window.jQuery = $; // eslint-disable-next-line global-require\n\n  require(\"materialize-css\");\n}\n\nconst menuItems = [{\n  key: \"dashboard\",\n  page: \"dashboard\"\n}, {\n  key: \"students\",\n  page: \"students\"\n}, {\n  key: \"instructors\",\n  page: \"all-instructors\"\n}, {\n  key: \"classes\",\n  page: \"classes\"\n}, {\n  key: \"locations\",\n  page: \"all-locations\"\n}, {\n  key: \"worksheets\",\n  page: \"worksheets\"\n}, {\n  key: \"course templates\",\n  page: \"courseTemplates\"\n}, {\n  key: \"help\",\n  page: \"help\"\n}];\nconst menuIconMap = {\n  dashboard: \"icon-speed\",\n  students: \"icon-student\",\n  instructors: \"icon-instructors\",\n  classes: \"icon-members\",\n  locations: \"icon-location\",\n  worksheets: \"icon-sheets-w\",\n  \"course templates\": \"icon-module\",\n  help: \"icon-help\"\n};\n\nclass SideNav extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleLogout\", () => {\n      const {\n        onSetUserIsLogged\n      } = this.props;\n      onSetUserIsLogged(false);\n      LogoutApi();\n      Router.push(\"/login\");\n    });\n  }\n\n  componentDidMount() {\n    const isLogged = loggedIn();\n    const {\n      onSetUserIsLogged,\n      onFetchCurrentUser,\n      currentUser\n    } = this.props;\n\n    if (!currentUser && isLogged) {\n      onFetchCurrentUser();\n    }\n\n    onSetUserIsLogged(isLogged);\n    $(\".sidenav\").sidenav();\n  }\n\n  render() {\n    const {\n      isLogged,\n      currentUser\n    } = this.props;\n    return __jsx(\"aside\", {\n      id: \"slide-out\",\n      className: \"sidenav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"sidenav-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      className: \"white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"/static/images/logo.jpg\",\n      alt: \"image description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, menuItems.map(menuItem => __jsx(ActiveLink, {\n      href: `/${menuItem.page}`,\n      key: menuItem.key,\n      activeClassName: \"active\",\n      scroll: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      key: menuItem.key,\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: menuIconMap[menuItem.key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), menuItem.key.charAt(0).toUpperCase() + menuItem.key.slice(1)))))), __jsx(\"div\", {\n      className: \"log-block white-text\",\n      style: {\n        cursor: \"hand\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"block white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, isLogged ? \"Log Out\" : \"\")), __jsx(Link, {\n      href: \"/account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"block white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, isLogged && currentUser ? `${currentUser.first_name} ${currentUser.last_name}` : \"Loading...\")))))));\n  }\n\n}\n\nSideNav.propTypes = {\n  isLogged: PropTypes.bool,\n  onSetUserIsLogged: PropTypes.func,\n  user: PropTypes.object.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetUserIsLogged: value => dispatch(setUserIsLogged(value)),\n    onFetchCurrentUser: () => dispatch(getCurrentUser())\n  };\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isLogged: makeSelectUserIsLogged(),\n  currentUser: makeSelectCurrentUser()\n});\nconst withConnect = connect(mapStateToProps, mapDispatchToProps, null, {\n  pure: false\n});\nexport default compose(withConnect)(SideNav);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Core/SideNav.js"],"names":["React","Component","PropTypes","compose","connect","createStructuredSelector","Link","ActiveLink","makeSelectUserIsLogged","makeSelectCurrentUser","loggedIn","setUserIsLogged","getCurrentUser","LogoutApi","$","Router","window","jQuery","require","menuItems","key","page","menuIconMap","dashboard","students","instructors","classes","locations","worksheets","help","SideNav","constructor","props","onSetUserIsLogged","push","componentDidMount","isLogged","onFetchCurrentUser","currentUser","sidenav","render","map","menuItem","cursor","charAt","toUpperCase","slice","handleLogout","first_name","last_name","propTypes","bool","func","user","object","isRequired","mapDispatchToProps","dispatch","value","mapStateToProps","withConnect","pure"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport Link from \"next/link\";\nimport ActiveLink from \"../../utils/ActiveLink\";\nimport {\n  makeSelectUserIsLogged,\n  makeSelectCurrentUser,\n} from \"../User/index/selectors\";\nimport { loggedIn } from \"../../utils/AuthService\";\n\nimport { setUserIsLogged, getCurrentUser } from \"../User/index/actions\";\nimport { LogoutApi } from \"../User/index/api\";\nimport $ from \"jquery\";\nimport Router from \"next/router\";\nif (typeof window !== \"undefined\") {\n  window.$ = $;\n  window.jQuery = $;\n  // eslint-disable-next-line global-require\n  require(\"materialize-css\");\n}\n\nconst menuItems = [\n  {\n    key: \"dashboard\",\n    page: \"dashboard\",\n  },\n  {\n    key: \"students\",\n    page: \"students\",\n  },\n  {\n    key: \"instructors\",\n    page: \"all-instructors\",\n  },\n  {\n    key: \"classes\",\n    page: \"classes\",\n  },\n  {\n    key: \"locations\",\n    page: \"all-locations\",\n  },\n  {\n    key: \"worksheets\",\n    page: \"worksheets\",\n  },\n  {\n    key: \"course templates\",\n    page: \"courseTemplates\",\n  },\n  {\n    key: \"help\",\n    page: \"help\",\n  },\n];\n\nconst menuIconMap = {\n  dashboard: \"icon-speed\",\n  students: \"icon-student\",\n  instructors: \"icon-instructors\",\n  classes: \"icon-members\",\n  locations: \"icon-location\",\n  worksheets: \"icon-sheets-w\",\n  \"course templates\": \"icon-module\",\n  help: \"icon-help\",\n};\n\nclass SideNav extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const isLogged = loggedIn();\n    const { onSetUserIsLogged, onFetchCurrentUser, currentUser } = this.props;\n    if (!currentUser && isLogged) {\n      onFetchCurrentUser();\n    }\n    onSetUserIsLogged(isLogged);\n    $(\".sidenav\").sidenav();\n  }\n\n  handleLogout = () => {\n    const { onSetUserIsLogged } = this.props;\n    onSetUserIsLogged(false);\n    LogoutApi();\n    Router.push(\"/login\");\n  }\n\n  render() {\n    const { isLogged, currentUser } = this.props;\n    return (\n      <aside id=\"slide-out\" className=\"sidenav\">\n        <div className=\"sidenav-holder\">\n          <h1 className=\"white-text\">\n            <img src=\"/static/images/logo.jpg\" alt=\"image description\" />\n          </h1>\n          <ul>\n            {menuItems.map(menuItem => (\n              <ActiveLink\n                href={`/${menuItem.page}`}\n                key={menuItem.key}\n                activeClassName=\"active\"\n                scroll\n              >\n                <li key={menuItem.key} style={{ cursor: \"pointer\" }}>\n                  <a>\n                    <i className={menuIconMap[menuItem.key]}></i>\n                    {menuItem.key.charAt(0).toUpperCase() +\n                      menuItem.key.slice(1)}\n                  </a>\n                </li>\n              </ActiveLink>\n            ))}\n          </ul>\n          <div className=\"log-block white-text\" style={{ cursor: \"hand\" }}>\n            <div className=\"text\">\n              <a href=\"#\" onClick={this.handleLogout}>\n                <div className=\"block white-text\">{isLogged ? \"Log Out\" : \"\"}</div>\n              </a>\n              <Link href=\"/account\">\n                <a>\n                  <div className=\"block white-text\">\n                    {isLogged && currentUser ? `${currentUser.first_name} ${currentUser.last_name}` : \"Loading...\"}\n                  </div>\n                </a>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </aside>\n    );\n  }\n}\n\nSideNav.propTypes = {\n  isLogged: PropTypes.bool,\n  onSetUserIsLogged: PropTypes.func,\n  user: PropTypes.object.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetUserIsLogged: (value) => dispatch(setUserIsLogged(value)),\n    onFetchCurrentUser: () => dispatch(getCurrentUser()),\n  };\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isLogged: makeSelectUserIsLogged(),\n  currentUser: makeSelectCurrentUser(),\n});\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { pure: false },\n);\n\nexport default compose(withConnect)(SideNav);\n"]},"metadata":{},"sourceType":"module"}