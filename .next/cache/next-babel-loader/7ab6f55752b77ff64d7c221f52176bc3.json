{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nclass ChallengeQuestions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"mapQuestions\", () => this.props.questions.map(question => React.createElement(Question, {\n      key: question.id,\n      question: question,\n      questionDropdownIndex: this.props.questionDropdownIndex,\n      questionDropdownOpen: this.props.questionDropdownOpen,\n      answerSheetComplete: this.props.answerSheetComplete,\n      onOpenQuestionModal: this.props.onOpenQuestionModal,\n      handleQuestionDropdownClick: this.props.handleQuestionDropdownClick\n    })));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col s12 l6\"\n    }, React.createElement(\"div\", {\n      className: \"card-block\"\n    }, React.createElement(\"h2\", null, \"Challenge\"), React.createElement(\"div\", {\n      className: \"card-answer card\"\n    }, React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"ol\", {\n      className: \"answers-list\"\n    }, this.mapQuestions())))));\n  }\n\n}\n\nChallengeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  questionDropdownIndex: PropTypes.number,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired,\n  questionDropdownOpen: PropTypes.bool.isRequired,\n  handleQuestionDropdownClick: PropTypes.func.isRequired\n};\nexport default ChallengeQuestions;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/LessonWorksheetTestSection/components/ChallengeQuestions/index.js"],"names":["React","PropTypes","Question","ChallengeQuestions","Component","props","questions","map","question","id","questionDropdownIndex","questionDropdownOpen","answerSheetComplete","onOpenQuestionModal","handleQuestionDropdownClick","render","mapQuestions","propTypes","array","isRequired","number","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,kBAAN,SAAiCH,KAAK,CAACI,SAAvC,CAAiD;AAAA;AAAA;;AAAA,0CAChC,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyBC,QAAQ,IACpD,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACC,EADhB;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,qBAAqB,EAAE,KAAKH,KAAL,CAAWK,qBAHpC;AAIE,MAAA,oBAAoB,EAAE,KAAKL,KAAL,CAAWM,oBAJnC;AAKE,MAAA,mBAAmB,EAAE,KAAKN,KAAL,CAAWO,mBALlC;AAME,MAAA,mBAAmB,EAAE,KAAKP,KAAL,CAAWQ,mBANlC;AAOE,MAAA,2BAA2B,EAAE,KAAKR,KAAL,CAAWS;AAP1C,MADmB,CAD0B;AAAA;;AAa/CC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,4CADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAI,MAAA,SAAS,EAAC;AAAd,OACG,KAAKC,YAAL,EADH,CADF,CADF,CAFF,CADF,CADF;AAcD;;AA5B8C;;AA+BjDb,kBAAkB,CAACc,SAAnB,GAA+B;AAC7BX,EAAAA,SAAS,EAAEL,SAAS,CAACiB,KAAV,CAAgBC,UADE;AAE7BT,EAAAA,qBAAqB,EAAET,SAAS,CAACmB,MAFJ;AAG7BR,EAAAA,mBAAmB,EAAEX,SAAS,CAACoB,IAAV,CAAeF,UAHP;AAI7BN,EAAAA,mBAAmB,EAAEZ,SAAS,CAACqB,IAAV,CAAeH,UAJP;AAK7BR,EAAAA,oBAAoB,EAAEV,SAAS,CAACoB,IAAV,CAAeF,UALR;AAM7BL,EAAAA,2BAA2B,EAAEb,SAAS,CAACqB,IAAV,CAAeH;AANf,CAA/B;AASA,eAAehB,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nclass ChallengeQuestions extends React.Component {\n  mapQuestions = () => this.props.questions.map(question => (\n    <Question\n      key={question.id}\n      question={question}\n      questionDropdownIndex={this.props.questionDropdownIndex}\n      questionDropdownOpen={this.props.questionDropdownOpen}\n      answerSheetComplete={this.props.answerSheetComplete}\n      onOpenQuestionModal={this.props.onOpenQuestionModal}\n      handleQuestionDropdownClick={this.props.handleQuestionDropdownClick}\n    />\n  ))\n\n  render() {\n    return (\n      <div className=\"col s12 l6\">\n        <div className=\"card-block\">\n          <h2>Challenge</h2>\n          <div className=\"card-answer card\">\n            <div className=\"card-content\">\n              <ol className=\"answers-list\">\n                {this.mapQuestions()}\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nChallengeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  questionDropdownIndex: PropTypes.number,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired,\n  questionDropdownOpen: PropTypes.bool.isRequired,\n  handleQuestionDropdownClick: PropTypes.func.isRequired,\n};\n\nexport default ChallengeQuestions;\n"]},"metadata":{},"sourceType":"module"}