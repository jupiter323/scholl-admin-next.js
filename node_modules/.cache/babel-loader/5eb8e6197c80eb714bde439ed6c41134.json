{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap, { chartColorMap } from '../../utils/statusColorMap';\n\nvar _data = function data(percentage, status) {\n  return {\n    datasets: [{\n      data: [percentage, 100 - percentage],\n      backgroundColor: [chartColorMap[status], '#eaeaea']\n    }]\n  };\n};\n\nvar FullView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullView, _React$Component);\n\n  function FullView(props) {\n    var _this;\n\n    _classCallCheck(this, FullView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullView).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event, index) {\n      var dropdownIsOpen = _this.state.dropdownIsOpen;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return _this.onCloseDropdown();\n      }\n\n      return _this.onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapWorksheetCards\", function () {\n      var _this$props = _this.props,\n          worksheets = _this$props.worksheets,\n          onToggleDetailModalOpen = _this$props.onToggleDetailModalOpen;\n      var _this$state = _this.state,\n          dropdownIndex = _this$state.dropdownIndex,\n          dropdownIsOpen = _this$state.dropdownIsOpen;\n      return worksheets.map(function (worksheet, index) {\n        var disabled = worksheet.disabled,\n            worksheetName = worksheet.worksheetName,\n            worksheetSource = worksheet.worksheetSource,\n            subject = worksheet.subject,\n            problemType = worksheet.problemType,\n            difficulty = worksheet.difficulty,\n            score = worksheet.score,\n            status = worksheet.status,\n            problems = worksheet.problems,\n            timeEstimate = worksheet.timeEstimate,\n            availableDate = worksheet.availableDate,\n            dueDate = worksheet.dueDate,\n            classifications = worksheet.classifications,\n            flags = worksheet.flags,\n            late = worksheet.late;\n        return React.createElement(\"div\", {\n          className: \"card-main-col col s12 m8 l7 xl5\",\n          key: worksheet.id\n        }, React.createElement(\"div\", {\n          className: disabled ? 'card-main work-card card-disabled card' : 'card-main work-card card'\n        }, React.createElement(\"div\", {\n          className: \"card-panel panel-border\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel-row row\"\n        }, React.createElement(\"div\", {\n          className: \"icon-col col s2\"\n        }, React.createElement(\"span\", {\n          className: \"block-icon\"\n        }, React.createElement(\"i\", {\n          className: \"icon-sheets-w\"\n        }))), React.createElement(\"div\", {\n          className: \"col s8\"\n        }, React.createElement(\"div\", {\n          className: \"card-panel-text\"\n        }, React.createElement(\"div\", {\n          className: \"text-small truncate\"\n        }, \"Worksheet (\", subject, \")\"), React.createElement(\"div\", {\n          className: \"text-large truncate\"\n        }, worksheetName))), React.createElement(\"div\", {\n          className: \"position-top right-align\"\n        }, React.createElement(\"div\", {\n          className: \"icons-row\"\n        }, flags.length > 0 && React.createElement(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, React.createElement(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", React.createElement(\"i\", {\n          className: \"icon-flag\"\n        })), React.createElement(\"div\", {\n          className: \"dropdown-block col\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown01\",\n          className: \"dropdown-trigger btn\",\n          onClick: function onClick(event) {\n            return _this.handleDropdownClick(event, index);\n          }\n        }, React.createElement(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: 'block',\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"modal-trigger link-block\",\n          onClick: function onClick() {\n            return onToggleDetailModalOpen(index);\n          }\n        }, \"View Details\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Dismiss Flags\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\"\n        }, \"Reset\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n          href: \"#!\",\n          className: \"link-delete\"\n        }, \"Delete\"))) : null)))), React.createElement(\"div\", {\n          className: \"card-top-block\"\n        }, React.createElement(\"div\", {\n          className: \"d-flex row mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"left-col col s7\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Problem Type:\"), React.createElement(\"dd\", null, problemType))), React.createElement(\"div\", {\n          className: \"right-col col s5 right-align\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Di\\uFB03culty:\"), React.createElement(\"dd\", null, difficulty)))))), React.createElement(\"div\", {\n          className: \"card-content\"\n        }, React.createElement(\"div\", {\n          className: \"d-flex sameheight-all row mb-0\"\n        }, React.createElement(\"div\", {\n          className: \"col s6\"\n        }, React.createElement(\"div\", {\n          className: \"chart-container\"\n        }, React.createElement(\"div\", {\n          className: \"chart-holder\"\n        }, React.createElement(Doughnut, {\n          data: function data() {\n            return _data(score, status);\n          },\n          options: {\n            circumference: 1 * Math.PI,\n            rotation: 1 * Math.PI,\n            cutoutPercentage: 60,\n            tooltips: false\n          }\n        }), React.createElement(\"span\", {\n          className: \"chart-value\",\n          style: {\n            backgroundColor: chartColorMap[status]\n          }\n        }, React.createElement(\"span\", {\n          \"data-count-up\": true,\n          \"data-start-val\": \"0\",\n          \"data-end-val\": \"96\",\n          \"data-duration\": \"1\"\n        }), React.createElement(\"span\", {\n          className: \"percentage\"\n        }, score && \"\".concat(score, \"%\")))), React.createElement(\"div\", {\n          className: \"chart-row\"\n        }, React.createElement(\"div\", {\n          className: \"chart-col chart-start\"\n        }, \"\\xA0\"), React.createElement(\"div\", {\n          className: \"chart-col chart-end\"\n        }, React.createElement(\"span\", {\n          className: \"amount\",\n          style: {\n            color: chartColorMap[status]\n          }\n        }, problems))), React.createElement(\"div\", {\n          className: \"chart-description\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Time Est:\"), React.createElement(\"dd\", null, formatTimeEstimate(timeEstimate))), React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Problems:\"), React.createElement(\"dd\", null, problems))))), React.createElement(\"div\", {\n          className: \"col s6 right-align justify-end\"\n        }, React.createElement(\"div\", {\n          className: \"chart-description\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Available:\"), React.createElement(\"dd\", null, React.createElement(\"time\", {\n          dateTime: availableDate\n        }, availableDate))), React.createElement(\"dl\", {\n          className: late ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal'\n        }, disabled ? React.createElement(\"dt\", null, \"No Due Date\") : [React.createElement(\"dt\", {\n          key: \"0\"\n        }, \"Due:\"), React.createElement(\"dd\", {\n          key: \"1\"\n        }, React.createElement(\"time\", {\n          dateTime: dueDate\n        }, dueDate))])), React.createElement(\"div\", {\n          className: \"align-self-end\"\n        }, React.createElement(\"span\", {\n          className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\")\n        }, status)))), React.createElement(\"div\", {\n          className: \"card-text\"\n        }, React.createElement(\"dl\", {\n          className: \"dl-horizontal\"\n        }, React.createElement(\"dt\", null, \"Worksheet Source:\"), React.createElement(\"dd\", null, worksheetSource))), React.createElement(\"div\", {\n          className: \"card-inner-row\"\n        }, React.createElement(\"div\", {\n          className: \"row-holder\"\n        }, React.createElement(\"ul\", {\n          className: \"classification-list\"\n        }, classifications.map(function (classification) {\n          return React.createElement(\"li\", {\n            className: \"class-box\",\n            key: classification\n          }, classification);\n        })))))));\n      });\n    });\n\n    _this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    };\n    return _this;\n  }\n\n  _createClass(FullView, [{\n    key: \"render\",\n    value: function render() {\n      var worksheets = this.props.worksheets;\n      return React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"result-row center-align\"\n      }, React.createElement(\"b\", {\n        className: \"result\"\n      }, \" - \", worksheets.length, \" results -\")), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-272\"\n      }, this.mapWorksheetCards()));\n    }\n  }]);\n\n  return FullView;\n}(React.Component);\n\nFullView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired\n};\nexport default FullView;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/DetailWorksheetPage/components/FullView/index.js"],"names":["React","PropTypes","Doughnut","formatTimeEstimate","statusColorMap","chartColorMap","data","percentage","status","datasets","backgroundColor","FullView","props","dropdownIndex","setState","dropdownIsOpen","event","index","state","preventDefault","onCloseDropdown","onSetDropdown","worksheets","onToggleDetailModalOpen","map","worksheet","disabled","worksheetName","worksheetSource","subject","problemType","difficulty","score","problems","timeEstimate","availableDate","dueDate","classifications","flags","late","id","length","handleDropdownClick","display","opacity","transform","circumference","Math","PI","rotation","cutoutPercentage","tooltips","color","classification","mapWorksheetCards","Component","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap, { chartColorMap } from '../../utils/statusColorMap';\n\nconst data = (percentage, status) => ({\n  datasets: [{\n    data: [percentage, 100 - percentage],\n    backgroundColor: [\n      chartColorMap[status],\n      '#eaeaea',\n    ],\n  }],\n});\n\nclass FullView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n    }\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen } = this.state;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return this.onCloseDropdown();\n    }\n    return this.onSetDropdown(index);\n  }\n\n  mapWorksheetCards = () => {\n    const { worksheets, onToggleDetailModalOpen } = this.props;\n    const { dropdownIndex, dropdownIsOpen } = this.state;\n    return worksheets.map((worksheet, index) => {\n      const { disabled, worksheetName, worksheetSource, subject, problemType, difficulty, score, status, problems, timeEstimate, availableDate, dueDate, classifications, flags, late } = worksheet;\n      return (\n        <div className=\"card-main-col col s12 m8 l7 xl5\" key={worksheet.id}>\n          <div className={disabled ? 'card-main work-card card-disabled card' : 'card-main work-card card'}>\n            <div className=\"card-panel panel-border\">\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-sheets-w\"></i>\n                  </span>\n                </div>\n                <div className=\"col s8\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small truncate\">Worksheet ({subject})</div>\n                    <div className=\"text-large truncate\">{worksheetName}</div>\n                  </div>\n                </div>\n                <div className=\"position-top right-align\">\n                  <div className=\"icons-row\">\n                    {flags.length > 0 && (\n                      <span className=\"badge-rounded-xs badge red darken-2 white-text\">\n                        <b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i>\n                      </span>\n                    )}\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        data-target='dropdown01'\n                        className='dropdown-trigger btn'\n                        onClick={(event) => this.handleDropdownClick(event, index)}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: 'block', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\n                          <li>\n                            <a\n                              href=\"#\"\n                              className=\"modal-trigger link-block\"\n                              onClick={() => onToggleDetailModalOpen(index)}\n                            >\n                              View Details\n                            </a>\n                          </li>\n                          <li><a href=\"#!\">Dismiss Flags</a></li>\n                          <li><a href=\"#!\">Reset</a></li>\n                          <li><a href=\"#!\" className=\"link-delete\">Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-top-block\">\n                <div className=\"d-flex row mb-0\">\n                  <div className=\"left-col col s7\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problem Type:</dt>\n                      <dd>{problemType}</dd>\n                    </dl>\n                  </div>\n                  <div className=\"right-col col s5 right-align\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Diﬃculty:</dt>\n                      <dd>{difficulty}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"d-flex sameheight-all row mb-0\">\n                <div className=\"col s6\">\n                  <div className=\"chart-container\">\n                    <div className=\"chart-holder\">\n                      <Doughnut\n                        data={() => data(score, status)}\n                        options={{\n                          circumference: 1 * Math.PI,\n                          rotation: 1 * Math.PI,\n                          cutoutPercentage: 60,\n                          tooltips: false,\n                        }}\n                      />\n                      <span className=\"chart-value\" style={{ backgroundColor: chartColorMap[status] }}><span data-count-up data-start-val=\"0\" data-end-val=\"96\" data-duration=\"1\"></span><span className=\"percentage\">{score && `${score}%`}</span></span>\n                    </div>\n                    <div className=\"chart-row\">\n                      <div className=\"chart-col chart-start\">&nbsp;</div>\n                      <div className=\"chart-col chart-end\">\n                        <span className=\"amount\" style={{ color: chartColorMap[status] }}>{problems}</span>\n                      </div>\n                    </div>\n                    <div className=\"chart-description\">\n                      <dl className=\"dl-horizontal\">\n                        <dt>Time Est:</dt>\n                        <dd>{formatTimeEstimate(timeEstimate)}</dd>\n                      </dl>\n                      <dl className=\"dl-horizontal\">\n                        <dt>Problems:</dt>\n                        <dd>{problems}</dd>\n                      </dl>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s6 right-align justify-end\">\n                  <div className=\"chart-description\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Available:</dt>\n                      <dd><time dateTime={availableDate}>{availableDate}</time></dd>\n                    </dl>\n                    <dl className={late ? 'dl-horizontal red-text text-darken-3' : 'dl-horizontal'}>\n                      <Choose>\n                        <When condition={disabled}>\n                          <dt>No Due Date</dt>\n                        </When>\n                        <Otherwise>\n                          <dt>Due:</dt>\n                          <dd><time dateTime={dueDate}>{dueDate}</time></dd>\n                        </Otherwise>\n                      </Choose>\n                    </dl>\n                  </div>\n                  <div className=\"align-self-end\">\n                    <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-text\">\n                <dl className=\"dl-horizontal\">\n                  <dt>Worksheet Source:</dt>\n                  <dd>{worksheetSource}</dd>\n                </dl>\n              </div>\n              <div className=\"card-inner-row\">\n                <div className=\"row-holder\">\n                  <ul className=\"classification-list\">\n                    {classifications.map(classification => (\n                      <li className=\"class-box\" key={classification}>\n                        {classification}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    const { worksheets } = this.props;\n    return (\n      <div className=\"content-section\">\n          <div className=\"result-row center-align\">\n            <b className=\"result\"> - {worksheets.length} results -</b>\n          </div>\n          <div className=\"row d-flex-content card-width-272\">\n            {this.mapWorksheetCards()}\n          </div>\n        </div>\n    )\n  }\n}\n\nFullView.propTypes = {\n  worksheets: PropTypes.array.isRequired,\n  onToggleDetailModalOpen: PropTypes.func.isRequired,\n};\n\nexport default FullView;\n"]},"metadata":{},"sourceType":"module"}