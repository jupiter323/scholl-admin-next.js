{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nclass ReassignModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onResetModal\", () => this.setState({\n      assignDate: '',\n      assignTime: '',\n      dueDate: '',\n      dueTime: ''\n    }));\n\n    _defineProperty(this, \"onCloseModal\", () => {\n      const {\n        onClose\n      } = this.props;\n      onClose();\n      this.onResetModal();\n    });\n\n    _defineProperty(this, \"reassignDate\", () => {\n      const {\n        onReassignDate\n      } = this.props;\n      const {\n        assignDate: unformattedAssignDate,\n        assignTime: unformattedAssignTime,\n        dueDate: unformattedDueDate,\n        dueTime: unformattedDueTime\n      } = this.state;\n      const assignDate = moment(unformattedAssignDate).format('MM/DD/YY');\n      const assignTime = moment(unformattedAssignTime).format('hh:mm');\n      const dueDate = moment(unformattedDueDate).format('MM/DD/YY');\n      const dueTime = moment(unformattedDueTime).format('hh:mm');\n      onReassignDate({\n        assignDate,\n        assignTime,\n        dueDate,\n        dueTime\n      });\n      this.onResetModal();\n    });\n\n    _defineProperty(this, \"handleDatePickerChange\", (field, value) => this.setState({\n      [field]: value\n    }));\n\n    this.state = {\n      assignDate: '',\n      assignTime: '',\n      dueDate: '',\n      dueTime: ''\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.props;\n    const {\n      assignDate,\n      assignTime,\n      dueDate,\n      dueTime\n    } = this.state;\n    return React.createElement(Portal, {\n      selector: \"#modal\"\n    }, open && React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"overlay\"\n    }, React.createElement(ClickOffComponentWrapper, {\n      onOuterClick: this.onCloseModal\n    }, React.createElement(\"div\", {\n      id: \"modal_reschedule\",\n      className: \"jsx-1282990627\" + \" \" + \"modal modal-custom modal-calendar\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"card-modal card\"\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#25bbf7',\n        color: '#fff'\n      },\n      className: \"jsx-1282990627\" + \" \" + \"card-panel card-panel-title\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"col\"\n    }, React.createElement(\"h2\", {\n      className: \"jsx-1282990627\"\n    }, React.createElement(\"span\", {\n      className: \"jsx-1282990627\" + \" \" + \"heading-holder\"\n    }, React.createElement(\"span\", {\n      className: \"jsx-1282990627\" + \" \" + \"heading-block\"\n    }, \"Reschedule\")))), React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"col right-align\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"jsx-1282990627\" + \" \" + \"panel-link close modal-close\"\n    }, React.createElement(\"i\", {\n      className: \"jsx-1282990627\" + \" \" + \"icon-close-thin\"\n    }))))), React.createElement(\"div\", {\n      style: {\n        height: '410px'\n      },\n      className: \"jsx-1282990627\" + \" \" + \"card-content\"\n    }, React.createElement(\"div\", {\n      style: {\n        height: '335px'\n      },\n      className: \"jsx-1282990627\" + \" \" + \"card-body\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"modal-row row\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"col s6\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"datepicker-field input-field\"\n    }, React.createElement(\"i\", {\n      className: \"jsx-1282990627\" + \" \" + \"icon-calendar\"\n    }), React.createElement(DatePicker, {\n      selected: assignDate,\n      withPortal: true,\n      dateFormat: \"MM/dd/yy\",\n      id: \"assignDate\",\n      name: \"assignDate\",\n      onChange: event => this.handleDatePickerChange('assignDate', event)\n    }), React.createElement(\"label\", {\n      htmlFor: \"new_test_section_assign_date\",\n      className: \"jsx-1282990627\" + \" \" + ((assignDate ? 'label active' : 'label') || \"\")\n    }, \"Assign For\"))), React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"col s6\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"datepicker-field input-field\"\n    }, React.createElement(\"i\", {\n      className: \"jsx-1282990627\" + \" \" + \"icon-clock2\"\n    }), React.createElement(DatePicker, {\n      selected: assignTime,\n      withPortal: true,\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      timeIntervals: 15,\n      dateFormat: \"h:mm aa\",\n      timeCaption: \"Time\",\n      id: \"assignTime\",\n      name: \"assignTime\",\n      onChange: event => this.handleDatePickerChange('assignTime', event)\n    }), React.createElement(\"label\", {\n      htmlFor: \"assignTime\",\n      className: \"jsx-1282990627\" + \" \" + ((assignTime ? 'label active' : 'label') || \"\")\n    }, \"Time\")))), React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"modal-row row\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"col s6\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"datepicker-field input-field\"\n    }, React.createElement(\"i\", {\n      className: \"jsx-1282990627\" + \" \" + \"icon-calendar\"\n    }), React.createElement(DatePicker, {\n      selected: dueDate,\n      withPortal: true,\n      dateFormat: \"MM/dd/yy\",\n      id: \"dueDate\",\n      name: \"dueDate\",\n      onChange: event => this.handleDatePickerChange('dueDate', event)\n    }), React.createElement(\"label\", {\n      htmlFor: \"dueDate\",\n      className: \"jsx-1282990627\" + \" \" + ((dueDate ? 'label active' : 'label') || \"\")\n    }, \"Due (optional)\"))), React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"col s6\"\n    }, React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"datepicker-field input-field\"\n    }, React.createElement(\"i\", {\n      className: \"jsx-1282990627\" + \" \" + \"icon-clock2\"\n    }), React.createElement(DatePicker, {\n      selected: dueTime,\n      withPortal: true,\n      showTimeSelect: true,\n      showTimeSelectOnly: true,\n      timeIntervals: 15,\n      dateFormat: \"h:mm aa\",\n      timeCaption: \"Time\",\n      id: \"dueTime\",\n      name: \"dueTime\",\n      onChange: event => this.handleDatePickerChange('dueTime', event)\n    }), React.createElement(\"label\", {\n      htmlFor: \"dueTime\",\n      className: \"jsx-1282990627\" + \" \" + ((dueTime ? 'label active' : 'label') || \"\")\n    }, \"Time\")))), React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"modal-row row\"\n    }, React.createElement(\"p\", {\n      className: \"jsx-1282990627\"\n    }, \"\\xA0\"))), React.createElement(\"div\", {\n      className: \"jsx-1282990627\" + \" \" + \"modal-footer modal-footer-width\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"jsx-1282990627\" + \" \" + \"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n    }, \"Cancel\"), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"jsx-1282990627\" + \" \" + \"link-btn waves-effect waves-teal btn-flat\"\n    }, \"Save Changes\"))))))), React.createElement(_JSXStyle, {\n      id: \"1282990627\"\n    }, [\".card-modal.jsx-1282990627{margin:0;border-radius:6px;}\", \".overlay.jsx-1282990627{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:1003;}\", \".modal-custom.jsx-1282990627{opacity:1;visibility:visible;}\", \".modal-footer.jsx-1282990627{background-color:white;}\", \"#modal_reschedule.jsx-1282990627{top:10%;}\", \"div.react-datepicker__portal.jsx-1282990627{height:100%!important;width:100%!important;}\"]));\n  }\n\n}\n\nexport default ReassignModal;","map":null,"metadata":{},"sourceType":"module"}