{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/common/GroupBlock.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SubBlock from './SubBlock';\nimport { getScoreStatus } from '../common/GetScoreStatus';\n\nvar GroupBlock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GroupBlock, _React$Component);\n\n  function GroupBlock(props) {\n    var _this;\n\n    _classCallCheck(this, GroupBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupBlock).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapGroupRow\", function () {\n      var children = _this.props.data.children;\n\n      if (children.length !== 0) {\n        return children.map(function (children) {\n          return __jsx(SubBlock, {\n            data: children,\n            key: children.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          });\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(GroupBlock, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$data = this.props.data,\n          name = _this$props$data.name,\n          _this$props$data$scor = _this$props$data.score,\n          percent_correct = _this$props$data$scor.percent_correct,\n          correct = _this$props$data$scor.correct,\n          incorrect = _this$props$data$scor.incorrect,\n          total = _this$props$data$scor.total;\n      return __jsx(\"div\", {\n        className: \"graphs-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"graph-row graph-row-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"graph-col text-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        className: \"graph-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: getScoreStatus(percent_correct.toFixed(0)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, percent_correct.toFixed(0), \"%\"), name)), __jsx(\"div\", {\n        className: \"graph-col graph-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"graph-linear-students\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"graph-holder\",\n        style: {\n          width: \"\".concat((correct / total * 100).toFixed(0), \"%\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"graph-admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"part-red\",\n        style: {\n          width: \"\".concat((incorrect / total * 100).toFixed(0), \"%\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))))), __jsx(\"div\", {\n        className: \"graph-col graph-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"text-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, correct), __jsx(\"span\", {\n        className: \"text-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"out of\"), __jsx(\"span\", {\n        className: \"text-large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, total))), this.props.data.children && this.mapGroupRow());\n    }\n  }]);\n\n  return GroupBlock;\n}(React.Component);\n\nGroupBlock.propTypes = {};\nexport default GroupBlock;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/common/GroupBlock.js"],"names":["React","PropTypes","SubBlock","getScoreStatus","GroupBlock","props","children","data","length","map","id","name","score","percent_correct","correct","incorrect","total","toFixed","width","mapGroupRow","Component","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SubBlock from './SubBlock';\n\nimport { getScoreStatus } from '../common/GetScoreStatus';\n\nclass GroupBlock extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mapGroupRow = () => {\n    const { data: { children } } = this.props;\n    if (children.length !== 0) {\n      return children.map(children => <SubBlock data={children} key={children.id} />);\n    }\n  };\n\n  render() {\n    const { data: { name, score: { percent_correct, correct, incorrect, total } } } = this.props;\n    return (\n      <div className=\"graphs-block\">\n        <div className=\"graph-row graph-row-title\">\n          <div className=\"graph-col text-column\">\n            <h3 className=\"graph-title\">\n              <span className={getScoreStatus((percent_correct).toFixed(0))}>\n                {(percent_correct).toFixed(0)}%\n              </span>\n              {name}\n            </h3>\n          </div>\n          <div className=\"graph-col graph-container\">\n            <div className=\"graph-linear-students\">\n              <div\n                className=\"graph-holder\"\n                style={{ width: `${(correct / total * 100).toFixed(0)}%` }}\n              >\n                <div className=\"graph-admin\">\n                  <div\n                    className=\"part-red\"\n                    style={{ width: `${(incorrect / total * 100).toFixed(0)}%` }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"graph-col graph-info\">\n            <span className=\"text-large\">\n              {correct}\n            </span>\n            <span className=\"text-small\">out of</span>\n            <span className=\"text-large\">\n              {total}\n            </span>\n          </div>\n        </div>\n        {this.props.data.children && this.mapGroupRow()}\n      </div>\n    );\n  }\n}\n\nGroupBlock.propTypes = {};\n\nexport default GroupBlock;\n"]},"metadata":{},"sourceType":"module"}