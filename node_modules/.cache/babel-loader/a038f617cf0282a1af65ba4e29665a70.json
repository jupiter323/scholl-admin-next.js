{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Owner from './components/Owner';\nimport LocationContactInfo from './components/LocationContactInfo';\nimport LocationEmailSettings from './components/LocationEmailSettings';\nimport { nestedEditFieldValidation } from '../../utils/fieldValidation';\n\nvar DetailAccountPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailAccountPage, _React$Component);\n\n  function DetailAccountPage(props) {\n    var _this;\n\n    _classCallCheck(this, DetailAccountPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailAccountPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (!_this.state.originalLocation || nextProps.location.id !== _this.state.originalLocation.id) {\n        var _nextProps$location = nextProps.location;\n        _nextProps$location = _nextProps$location === void 0 ? {} : _nextProps$location;\n        var id = _nextProps$location.id,\n            owner = _nextProps$location.owner,\n            locationEmailSettings = _nextProps$location.locationEmailSettings,\n            locationContactInfo = _nextProps$location.locationContactInfo;\n        var updatedLocation = {\n          id: id,\n          locationEmailSettings: locationEmailSettings,\n          locationContactInfo: locationContactInfo\n        };\n        var originalLocationState = _this.state.originalLocation;\n        var originalLocation = update(originalLocationState, {\n          $merge: nextProps.location\n        });\n\n        _this.setState({\n          originalLocation: originalLocation,\n          updatedLocation: updatedLocation,\n          owner: owner\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetValidation\", function (validation, cb) {\n      return _this.setState({\n        validation: validation\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveChanges\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedLocation, valid;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n\n                updatedLocation = _this.state.updatedLocation;\n                _context.next = 4;\n                return nestedEditFieldValidation(_this.state, _this.state.updatedLocation, _this.onSetValidation, function (validation) {\n                  return console.warn('validation', validation);\n                });\n\n              case 4:\n                valid = _context.sent;\n\n                if (!valid) {\n                  // return onSaveChangesError();\n                  console.warn('not valid');\n                }\n\n                _this.setState({\n                  originalLocation: updatedLocation\n                }); // return onSavePassageChanges(updatedLocation);\n\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"initialLocationMount\", function () {\n      return _this.state.originalLocation.id !== _this.props.location.id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (event, name, section) {\n      var previousLocationState = _this.state.updatedLocation;\n      var value = event.target ? event.target.value : event;\n      var updatedLocation = update(previousLocationState, _defineProperty({}, section, {\n        $merge: _defineProperty({}, name, value)\n      }));\n\n      _this.setState({\n        updatedLocation: updatedLocation\n      });\n    });\n\n    _this.state = {\n      owner: {\n        firstName: '',\n        lastName: '',\n        email: ''\n      },\n      originalLocation: {\n        locationEmailSettings: {\n          automatedEmailOriginAddress: '',\n          automatedEmailSalutation: ''\n        },\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhone: '',\n          website: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: ''\n        }\n      },\n      updatedLocation: {\n        locationEmailSettings: {\n          automatedEmailOriginAddress: '',\n          automatedEmailSalutation: ''\n        },\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhone: '',\n          website: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: ''\n        }\n      },\n      validation: {\n        locationEmailSettings: {\n          automatedEmailOriginAddress: true,\n          automatedEmailSalutation: true\n        },\n        locationContactInfo: {\n          locationName: true,\n          locationNickname: true,\n          locationEmail: true\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DetailAccountPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$location = this.props.location;\n      _this$props$location = _this$props$location === void 0 ? {} : _this$props$location;\n      var id = _this$props$location.id,\n          owner = _this$props$location.owner,\n          locationEmailSettings = _this$props$location.locationEmailSettings,\n          locationContactInfo = _this$props$location.locationContactInfo;\n      var updatedLocation = {\n        id: id,\n        locationEmailSettings: locationEmailSettings,\n        locationContactInfo: locationContactInfo\n      };\n      var originalLocationState = this.state.originalLocation;\n      var originalLocation = update(originalLocationState, {\n        $merge: updatedLocation\n      });\n      this.setState({\n        originalLocation: originalLocation,\n        updatedLocation: updatedLocation,\n        owner: owner\n      }); // eslint-disable-line\n    } // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the location edit page\n    // This resets the component state to reflect the details of the next location the location clicks on\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // TODO: Update navbar info with actual sample location data\n      var _this$state$updatedLo = this.state.updatedLocation,\n          updatedLocationEmailSettings = _this$state$updatedLo.locationEmailSettings,\n          updatedLocationContactInfo = _this$state$updatedLo.locationContactInfo;\n      var _this$props$location2 = this.props.location,\n          owner = _this$props$location2.owner,\n          locationEmailSettings = _this$props$location2.locationEmailSettings,\n          locationContactInfo = _this$props$location2.locationContactInfo;\n      return React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0 d-flex-content large\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l5\"\n      }, React.createElement(Owner, {\n        state: owner\n      }), React.createElement(LocationEmailSettings, {\n        state: this.initialLocationMount() ? locationEmailSettings : updatedLocationEmailSettings,\n        handleDetailsChange: this.handleDetailsChange\n      })), React.createElement(LocationContactInfo, {\n        state: this.initialLocationMount() ? locationContactInfo : updatedLocationContactInfo,\n        handleDetailsChange: this.handleDetailsChange\n      })), React.createElement(\"div\", {\n        className: \"btn-holder align-right-sm\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn\",\n        onClick: this.onSaveChanges\n      }, \"Save\"))));\n    }\n  }]);\n\n  return DetailAccountPage;\n}(React.Component);\n\nDetailAccountPage.propTypes = {\n  location: PropTypes.object.isRequired\n};\nexport default DetailAccountPage;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Location\\DetailAccountPage\\index.js"],"names":["React","PropTypes","update","Owner","LocationContactInfo","LocationEmailSettings","nestedEditFieldValidation","DetailAccountPage","props","nextProps","state","originalLocation","location","id","owner","locationEmailSettings","locationContactInfo","updatedLocation","originalLocationState","$merge","setState","validation","cb","event","preventDefault","onSetValidation","console","warn","valid","name","section","previousLocationState","value","target","firstName","lastName","email","automatedEmailOriginAddress","automatedEmailSalutation","locationName","locationNickname","locationEmail","locationPhone","website","streetAddress","city","zip","updatedLocationEmailSettings","updatedLocationContactInfo","initialLocationMount","handleDetailsChange","onSaveChanges","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Owner from './components/Owner';\nimport LocationContactInfo from './components/LocationContactInfo';\nimport LocationEmailSettings from './components/LocationEmailSettings';\n\nimport { nestedEditFieldValidation } from '../../utils/fieldValidation';\n\nclass DetailAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner: {\n        firstName: '',\n        lastName: '',\n        email: '',\n      },\n      originalLocation: {\n        locationEmailSettings: {\n          automatedEmailOriginAddress: '',\n          automatedEmailSalutation: '',\n        },\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhone: '',\n          website: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: '',\n        },\n      },\n      updatedLocation: {\n        locationEmailSettings: {\n          automatedEmailOriginAddress: '',\n          automatedEmailSalutation: '',\n        },\n        locationContactInfo: {\n          locationName: '',\n          locationNickname: '',\n          locationEmail: '',\n          locationPhone: '',\n          website: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: '',\n        },\n      },\n      validation: {\n        locationEmailSettings: {\n          automatedEmailOriginAddress: true,\n          automatedEmailSalutation: true,\n        },\n        locationContactInfo: {\n          locationName: true,\n          locationNickname: true,\n          locationEmail: true,\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { location: { id, owner, locationEmailSettings, locationContactInfo } = {} } = this.props;\n    const updatedLocation = { id, locationEmailSettings, locationContactInfo };\n    const { originalLocation: originalLocationState } = this.state;\n    const originalLocation = update(originalLocationState, {\n      $merge: updatedLocation,\n    });\n    this.setState({ originalLocation, updatedLocation, owner }); // eslint-disable-line\n  }\n\n  // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the location edit page\n  // This resets the component state to reflect the details of the next location the location clicks on\n  componentWillReceiveProps = (nextProps) => {\n    if ((!this.state.originalLocation || nextProps.location.id !== this.state.originalLocation.id)) {\n      const { location: { id, owner, locationEmailSettings, locationContactInfo } = {} } = nextProps;\n      const updatedLocation = { id, locationEmailSettings, locationContactInfo };\n      const { originalLocation: originalLocationState } = this.state;\n      const originalLocation = update(originalLocationState, {\n        $merge: nextProps.location,\n      });\n      this.setState({ originalLocation, updatedLocation, owner });\n    }\n  }\n\n  // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n  onSetValidation = (validation, cb) => this.setState({ validation }, cb);\n\n  // TODO: Clean this up once the react toast bugs are fixed. Just logging the validation response for now\n  onSaveChanges = async (event) => {\n    event.preventDefault();\n    // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n    const { updatedLocation } = this.state;\n    const valid = await nestedEditFieldValidation(this.state, this.state.updatedLocation, this.onSetValidation, (validation) => console.warn('validation', validation));\n    if (!valid) {\n      // return onSaveChangesError();\n      console.warn('not valid');\n    }\n    this.setState({ originalLocation: updatedLocation });\n    // return onSavePassageChanges(updatedLocation);\n  }\n\n  initialLocationMount = () => this.state.originalLocation.id !== this.props.location.id;\n\n  // We pull the value based on the field type then merge that updated key/value pair with the last version of component state\n  handleDetailsChange = (event, name, section) => {\n    const { updatedLocation: previousLocationState } = this.state;\n    const value = event.target ? event.target.value : event;\n    const updatedLocation = update(previousLocationState, {\n      [section]: { $merge: { [name]: value } },\n    });\n    this.setState({ updatedLocation });\n  }\n\n  render() {\n    // TODO: Update navbar info with actual sample location data\n    const { updatedLocation: { locationEmailSettings: updatedLocationEmailSettings, locationContactInfo: updatedLocationContactInfo } } = this.state;\n    const { location: { owner, locationEmailSettings, locationContactInfo } } = this.props;\n    return (\n      <div className=\"content-section\">\n        <div className=\"content-section-holder\">\n          <div className=\"row mb-0 d-flex-content large\">\n            <div className=\"col s12 l5\">\n              <Owner\n                state={owner}\n              />\n              <LocationEmailSettings\n                state={this.initialLocationMount() ? locationEmailSettings : updatedLocationEmailSettings}\n                handleDetailsChange={this.handleDetailsChange}\n              />\n            </div>\n            <LocationContactInfo\n              state={this.initialLocationMount() ? locationContactInfo : updatedLocationContactInfo}\n              handleDetailsChange={this.handleDetailsChange}\n            />\n          </div>\n          <div className=\"btn-holder align-right-sm\">\n            <a\n              href=\"#\"\n              className=\"btn\"\n              onClick={this.onSaveChanges}\n            >\n              Save\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDetailAccountPage.propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default DetailAccountPage;\n"]},"metadata":{},"sourceType":"module"}