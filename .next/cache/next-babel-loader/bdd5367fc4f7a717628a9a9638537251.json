{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport update from 'immutability-helper';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport InstructorCard from './components/InstructorCard';\nimport FilterSection from './components/FilterSection';\nimport NewInstructorModal from './components/NewInstructorModal'; // import { saveNewSuccess as savePracticeTestSuccess, saveChangesSuccess, saveNewError as savePracticeTestError } from '../../utils/fieldValidation';\n\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\nimport { fetchInstructorsApi, createNewInstructorApi } from '../index/api';\nimport { setInstructors } from '../index/actions';\nimport { makeSelectInstructors } from '../index/selectors';\n\nvar InstructorListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorListPage, _React$Component);\n\n  function InstructorListPage(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function _callee() {\n      var _this$props, onSetInstructors, instructors, _ref, _instructors;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, onSetInstructors = _this$props.onSetInstructors, instructors = _this$props.instructors;\n\n              if (!(instructors.length === 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetchInstructorsApi());\n\n            case 4:\n              _ref = _context.sent;\n              _instructors = _ref.formattedInstructors;\n\n              _this.setState({\n                instructors: _instructors\n              });\n\n              onSetInstructors(_instructors);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIsOpen: true,\n        dropdownIndex: dropdownIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddNewInstructor\", function (newInstructor) {\n      _this.onCreateNewInstructorApi(newInstructor);\n\n      var _this$props2 = _this.props,\n          instructors = _this$props2.instructors,\n          onSetInstructors = _this$props2.onSetInstructors;\n      var tempBasicInfo = {\n        activeStudents: 15,\n        pastStudents: 24,\n        unactivatedStudents: 29,\n        averageImprovement: 185,\n        averageInitialScore: 1037,\n        averageFinalScore: 1218,\n        studentsAchievingTargetScore: 12\n      };\n      var formattedNewInstructor = update(newInstructor, {\n        basicInfo: {\n          $set: tempBasicInfo\n        }\n      });\n      var updatedInstructors = update(instructors, {\n        $push: [formattedNewInstructor]\n      });\n      onSetInstructors(updatedInstructors);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteInstructor\", function (deletedInstructor) {\n      var updatedProps = update(_this.props, {\n        instructors: function instructors(unfilteredInstructors) {\n          return unfilteredInstructors.filter(function (instructor) {\n            return instructor.id !== deletedInstructor.id;\n          });\n        }\n      });\n      var onSetInstructors = _this.props.onSetInstructors;\n      onSetInstructors(updatedProps.instructors);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneInstructor\", function (instructor) {\n      var cloneIndex = _this.props.instructors.indexOf(instructor);\n\n      var newId = _this.props.instructors.length + 1;\n      var updatedInstructor = update(instructor, {\n        id: {\n          $set: newId\n        }\n      });\n      var instructors = update(_this.props.instructors, {\n        $splice: [[cloneIndex, 0, updatedInstructor]]\n      });\n\n      _this.onCloseDropdown();\n\n      var onSetInstructors = _this.props.onSetInstructors;\n      onSetInstructors(instructors);\n\n      _this.onCreateNewInstructorApi(instructor);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCreateNewInstructorApi\", function _callee2(instructor) {\n      var newId, _instructor$accountIn, firstName, lastName, email, gender, _instructor$contactIn, state, phone, streetAddress, city, zip, formattedBody;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newId = _this.props.instructors.length + 1;\n              _instructor$accountIn = instructor.accountInfo, firstName = _instructor$accountIn.firstName, lastName = _instructor$accountIn.lastName, email = _instructor$accountIn.email, gender = _instructor$accountIn.gender, _instructor$contactIn = instructor.contactInfo, state = _instructor$contactIn.state, phone = _instructor$contactIn.phone, streetAddress = _instructor$contactIn.streetAddress, city = _instructor$contactIn.city, zip = _instructor$contactIn.zip;\n              formattedBody = {\n                id: newId,\n                first_name: firstName,\n                last_name: lastName,\n                email: email,\n                gender: gender,\n                state: state,\n                locations: [],\n                phone: phone,\n                address: streetAddress,\n                city: city,\n                zip: zip\n              };\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(createNewInstructorApi(formattedBody));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveInstructorChanges\", function (updatedInstructor) {\n      var _this$props3 = _this.props,\n          originalInstructors = _this$props3.instructors,\n          onSetInstructors = _this$props3.onSetInstructors;\n      var instructorToUpdate = originalInstructors.filter(function (instructor) {\n        return instructor.id === updatedInstructor.id;\n      })[0];\n      var updatedInstructorIndex = originalInstructors.indexOf(instructorToUpdate);\n      var instructors = update(originalInstructors, {\n        $splice: [[updatedInstructorIndex, 1, updatedInstructor]]\n      }); // saveChangesSuccess();\n      // this.setState({ instructors });\n\n      onSetInstructors(instructors);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        instructorsAreFiltered: false,\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredLocationState\", function (filterLocation) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterLocation: filterLocation\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredLocationState\", function () {\n      return _this.setState({\n        filterLocation: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var instructors = _this.props.instructors;\n      var filterName = _this.state.filterName;\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var _currentInstructor$ac = currentInstructor.accountInfo,\n            lastName = _currentInstructor$ac.lastName,\n            firstName = _currentInstructor$ac.firstName;\n        var instructorString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (instructorString.indexOf(filterName) !== -1 && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByLocation\", function () {\n      var preFilteredInstructors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var allInstructors = _this.props.instructors;\n      var filterLocation = _this.state.filterLocation;\n      var instructors;\n\n      if (preFilteredInstructors.length) {\n        instructors = preFilteredInstructors;\n      } else {\n        instructors = allInstructors;\n      }\n\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var city = currentInstructor.contactInfo.city;\n\n        if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortInstructors\", function (instructors) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'firstNameAscending':\n          return instructors.sort(firstNameAscending);\n\n        case 'firstNameDescending':\n          return instructors.sort(firstNameDescending);\n\n        case 'lastNameAscending':\n          return instructors.sort(lastNameAscending);\n\n        case 'lastNameDescending':\n          return instructors.sort(lastNameDescending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableInstructors\", function () {\n      var _this$state = _this.state,\n          filterName = _this$state.filterName,\n          filterLocation = _this$state.filterLocation,\n          sort = _this$state.sort;\n      var allInstructors = _this.props.instructors;\n      var instructors;\n\n      if (filterName.length && !filterLocation.length) {\n        instructors = _this.onFilterByName();\n      } else if (!filterName.length && filterLocation.length) {\n        instructors = _this.onFilterByLocation();\n      } else if (filterName.length && filterLocation.length) {\n        var filteredByName = _this.onFilterByName();\n\n        instructors = _this.onFilterByLocation(filteredByName);\n      } else {\n        instructors = allInstructors;\n      }\n\n      if (sort) {\n        return _this.onSortInstructors(instructors);\n      }\n\n      return instructors || [];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForFilteredState\", function () {\n      var _this$state2 = _this.state,\n          filterName = _this$state2.filterName,\n          filterLocation = _this$state2.filterLocation;\n\n      if (!filterName.length && !filterLocation.length) {\n        _this.setState({\n          instructorsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapInstructors\", function () {\n      var instructors = _this.getMappableInstructors();\n\n      return instructors.map(function (instructor, index) {\n        return __jsx(InstructorCard, {\n          index: index,\n          key: instructor.id,\n          instructor: instructor,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          onSetDropdown: _this.onSetDropdown,\n          onCloseDropdown: _this.onCloseDropdown,\n          dropdownIndex: _this.state.dropdownIndex,\n          onDeleteInstructor: _this.onDeleteInstructor,\n          onCloneInstructor: _this.onCloneInstructor,\n          onSaveInstructorChanges: _this.onSaveInstructorChanges\n        });\n      });\n    });\n\n    _this.state = {\n      instructorModalOpen: false,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      instructorsAreFiltered: false,\n      filterName: '',\n      filterLocation: '',\n      sort: ''\n    };\n    return _this;\n  }\n\n  _createClass(InstructorListPage, [{\n    key: \"render\",\n    value: function render() {\n      var instructorModalOpen = this.state.instructorModalOpen;\n      return __jsx(React.Fragment, null, __jsx(NewInstructorModal, {\n        open: instructorModalOpen,\n        onClose: this.onCloseInstructorModal,\n        onAddNewInstructor: this.onAddNewInstructor\n      }), __jsx(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, __jsx(StickyContainer, null, __jsx(Sticky, null, function (_ref2) {\n        var style = _ref2.style;\n        return __jsx(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread2({}, style, {\n            zIndex: 1999\n          })\n        }, __jsx(\"div\", {\n          className: \"mobile-header\"\n        }, __jsx(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\"\n        }, __jsx(\"i\", {\n          className: \"material-icons\"\n        }, \"menu\"))), __jsx(\"h2\", {\n          className: \"h1 white-text\"\n        }, __jsx(\"span\", {\n          className: \"heading-holder\"\n        }, __jsx(\"i\", {\n          className: \"icon-instructors\"\n        }), __jsx(\"span\", {\n          className: \"heading-block\"\n        }, \"Instructors\"))));\n      }), __jsx(FilterSection, {\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredLocationState: this.onSetFilteredLocationState,\n        onUnsetFilteredLocationState: this.onUnsetFilteredLocationState\n      }), __jsx(\"div\", {\n        className: \"content-section\"\n      }, __jsx(\"div\", {\n        className: \"row d-flex-content\"\n      }, this.mapInstructors())))), __jsx(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenInstructorModal,\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, __jsx(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Instructor\"));\n    }\n  }]);\n\n  return InstructorListPage;\n}(React.Component);\n\nvar mapStateToProps = createStructuredSelector({\n  instructors: makeSelectInstructors()\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetInstructors: function onSetInstructors(instructors) {\n      return dispatch(setInstructors(instructors));\n    }\n  };\n}\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(InstructorListPage);","map":null,"metadata":{},"sourceType":"module"}