{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonDetailAnswerSheet/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport DrillQuestions from './components/DrillQuestions';\nimport moment from \"moment\";\nimport { fetchStudentLessonSectionApi } from \"../index/api\";\nimport { makeSelectUnitFilterOptions } from \"../index/selectors\";\nimport DropDownMenu from '../DropDownMenu';\n\nconst data = (value, total) => ({\n  datasets: [{\n    data: [value, total - value],\n    backgroundColor: [getValuesByScore(value, total, 'color'), \"#eaeaea\"]\n  }]\n});\n\nconst getValuesByScore = (value, max, target) => {\n  let activeIndex = 0;\n\n  if (max === 0) {\n    activeIndex = 4;\n  } else {\n    const score = value / max * 100;\n\n    if (score >= 90) {\n      activeIndex = 0;\n    } else if (score < 90 && score > 75) {\n      activeIndex = 1;\n    } else if (score > 60 && score < 76) {\n      activeIndex = 2;\n    } else if (score >= 40 && score <= 60) {\n      activeIndex = 3;\n    } else if (score < 40) {\n      activeIndex = 4;\n    }\n  }\n\n  const colorList = [{\n    label: \"Great\",\n    color: \"#74b287\"\n  }, {\n    label: \"Above Average\",\n    color: \"#a9c466\"\n  }, {\n    label: \"Average\",\n    color: \"d8c539\"\n  }, {\n    label: \"Below Average\",\n    color: \"#e89258\"\n  }, {\n    label: \"Poor\",\n    color: \"#f27c7c\"\n  }];\n\n  if (target === 'color') {\n    return colorList[activeIndex].color;\n  }\n\n  return colorList[activeIndex].label;\n};\n\nclass LessonDetailAnswerSheet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const {\n        lesson,\n        user: {\n          id: student_id\n        }\n      } = this.props;\n\n      if (lesson.sections) {\n        // lesson module type\n        this.setState({\n          currentType: \"Module\"\n        });\n        const lesson_id = this.props.lesson.id;\n        const {\n          sections\n        } = this.props.lesson;\n        sections.map(async section => {\n          const section_id = section.id;\n          const currentSectionName = section.name;\n\n          if (currentSectionName === \"challenge\") {\n            this.setState({\n              hasChallenge: true\n            });\n            const challengeProblems = await fetchStudentLessonSectionApi(student_id, lesson_id, section_id);\n            this.setState({\n              challengeProblems: challengeProblems.lesson_problems\n            });\n          } else {\n            this.setState({\n              hasPractice: true\n            });\n            const practiceProblems = await fetchStudentLessonSectionApi(student_id, lesson_id, section_id);\n            if (!practiceProblems) return;\n            this.setState({\n              practiceProlems: practiceProblems.lesson_problems\n            });\n          }\n        });\n      }\n\n      if (lesson.problems && lesson.problems.length !== 0) {\n        this.setState({\n          currentType: \"Drill\",\n          hasDrill: true\n        });\n\n        if (this.props.lessonIdsToUnFlag.includes(lesson.id)) {\n          lesson.problems.map(problem => {\n            if (problem.flag_status === 'FLAGGED') {\n              problem.flag_status = 'REVIEWED';\n              return problem;\n            }\n\n            return problem;\n          });\n        }\n\n        this.setState({\n          drillProblems: lesson.problems\n        });\n      }\n    });\n\n    _defineProperty(this, \"getProblemsAmount\", () => {\n      if (this.state.currentType === \"Module\") {\n        return this.state.challengeProblems.length + this.state.practiceProlems.length;\n      }\n\n      if (this.state.currentType === \"Drill\") {\n        return this.state.drillProblems.length;\n      }\n    });\n\n    _defineProperty(this, \"getReviewedAndFlaggedProblemAmount\", type => {\n      let amount = 0;\n\n      if (this.props.lesson.problems && this.props.lesson.problems.length !== 0) {\n        this.props.lesson.problems.map(section => {\n          if (section.flag_status === type) {\n            amount += 1;\n          }\n        });\n      }\n\n      if (this.props.lesson.sections && this.props.lesson.sections.length !== 0) {\n        const {\n          challengeProblems,\n          practiceProlems\n        } = this.state;\n        challengeProblems.length !== 0 && challengeProblems.map(section => {\n          if (section.flag_status === type) {\n            amount += 1;\n          }\n        });\n        practiceProlems.length !== 0 && practiceProlems.map(section => {\n          if (section.flag_status === type) {\n            amount += 1;\n          }\n        });\n      }\n\n      return amount;\n    });\n\n    _defineProperty(this, \"getTypeLabel\", () => {\n      let typeLabel = \"\";\n\n      if (this.state.hasChallenge && this.state.hasPractice) {\n        typeLabel = \"Challenge + Practice\";\n      } else {\n        if (this.state.hasChallenge) {\n          typeLabel = \"Challenge\";\n        }\n\n        if (this.state.hasPractice) {\n          typeLabel = \"Practice\";\n        }\n      }\n\n      if (this.state.hasDrill) {\n        typeLabel = \"Drill\";\n      }\n\n      return typeLabel;\n    });\n\n    _defineProperty(this, \"getUnitNameById\", () => {\n      const {\n        units\n      } = this.props;\n\n      if (units && units.length !== 0) {\n        const unitIds = units.map(unit => unit.value);\n        const currentIndex = unitIds.findIndex(this.getUnitIndexMatchedUnitId);\n        const currentUnit = units[currentIndex];\n        return currentUnit.label;\n      }\n\n      return \"Undefind UnitName\";\n    });\n\n    _defineProperty(this, \"getUnitIndexMatchedUnitId\", unitId => unitId === this.props.lesson.unit_id);\n\n    _defineProperty(this, \"onSetDropdown\", () => this.setState({\n      dropdownIsOpen: !this.state.dropdownIsOpen\n    }));\n\n    _defineProperty(this, \"handleAssignLesson\", () => {\n      const {\n        onOpenModal,\n        onAddCheckedLesson,\n        lesson\n      } = this.props;\n      onOpenModal();\n      onAddCheckedLesson(lesson.id);\n    });\n\n    _defineProperty(this, \"updateProblemList\", (problemsType, updatedProblem) => {\n      const problems = this.state[problemsType];\n      const newProblems = problems.map(problem => {\n        if (problem.id === updatedProblem.id) return updatedProblem;\n        return problem;\n      });\n      this.setState({\n        [problemsType]: [...newProblems]\n      });\n    });\n\n    _defineProperty(this, \"getCurrentProblemList\", () => {\n      const {\n        currentType,\n        drillProblems,\n        practiceProlems,\n        challengeProblems\n      } = this.state;\n      if (currentType === 'Drill') return [{\n        problems: drillProblems,\n        type: \"drillProblems\"\n      }];\n      if (currentType === 'Module') return [{\n        problems: challengeProblems,\n        type: \"challengeProblems\"\n      }, {\n        problems: practiceProlems,\n        type: \"practiceProlems\"\n      }];\n    });\n\n    this.state = {\n      challengeProblems: [],\n      practiceProlems: [],\n      drillProblems: [],\n      currentType: \"\",\n      hasChallenge: false,\n      hasPractice: false,\n      hasDrill: false,\n      dropdownIsOpen: false\n    };\n  }\n\n  render() {\n    const {\n      challengeProblems,\n      practiceProlems,\n      drillProblems\n    } = this.state;\n    const {\n      onCloseDetailModal,\n      user,\n      lesson: {\n        name,\n        starting_page,\n        ending_page,\n        completed_at,\n        assignTime,\n        assignment_date,\n        due_date,\n        dueTime\n      }\n    } = this.props;\n    const {\n      studentInformation: {\n        firstName,\n        lastName\n      }\n    } = user;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-modal card-main card switcher-section grey lighten-5 modal\",\n      style: {\n        zIndex: \"1004\",\n        display: \"block\",\n        position: \"absolute\",\n        top: \"0\",\n        minHeight: \"100%\",\n        minWidth: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"header-box card-panel light-blue lighten-1 white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"header-flex-row row mb-0\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m7 xl8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"header-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"header-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"icon-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"text-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Lesson\"))), __jsx(\"div\", {\n      className: \"header-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-panel-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, this.getUnitNameById()), __jsx(\"h1\", {\n      className: \"text-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, name), __jsx(\"div\", {\n      className: \"text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"p.\", starting_page, ending_page > starting_page ? `-${ending_page}` : \"\", \"(Reading)\"))))), __jsx(\"div\", {\n      className: \"col s9 m4 xl3 position-mobile-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-panel-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"text-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, firstName, \" \", lastName), assignment_date && __jsx(\"dl\", {\n      className: \"text-small dl-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Assigned:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, __jsx(\"time\", {\n      dateTime: \"2019-01-06T08:00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, `${moment(assignment_date).format(\"MM/DD/YY\")} at ${moment(assignTime).format(\"hh:mm\")}`))), due_date && __jsx(\"dl\", {\n      className: \"text-small dl-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Due:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, __jsx(\"time\", {\n      dateTime: \"2019-01-06T16:00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, `${moment(due_date).format(\"MM/DD/YY\")} at ${moment(dueTime).format(\"hh:mm\")}`))), completed_at && __jsx(\"dl\", {\n      className: \"text-small dl-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Completed:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, __jsx(\"time\", {\n      dateTime: \"2019-09-01T06:59\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, `${moment(completed_at).format(\"MM/DD/YY\")} at ${moment(completed_at).format(\"hh:mm\")}`))))), __jsx(\"div\", {\n      className: \"col s2 m1 right-align position-mobile-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"dropdown-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"dropdown-trigger btn\",\n      href: \"#\",\n      \"data-target\": \"dropdown_top\",\n      onClick: e => {\n        e.preventDefault();\n        this.onSetDropdown();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"more_vert\")), __jsx(DropDownMenu, {\n      onOpenModal: this.props.onOpenModal,\n      onAddCheckedLesson: this.props.onAddCheckedLesson,\n      lesson: this.props.lesson,\n      dropdownIsOpen: this.state.dropdownIsOpen,\n      onSetDropdown: this.onSetDropdown,\n      onCloseDetailModal: this.props.onCloseDetailModal,\n      onCloseDropdown: this.props.onCloseDropdown,\n      resetLessonSelections: this.props.resetLessonSelections,\n      handleMarkAllFlagsReviewed: this.props.handleMarkAllFlagsReviewed,\n      updateProblemList: this.updateProblemList,\n      problems: this.getCurrentProblemList(),\n      handleExcuseLessonLateness: this.props.handleExcuseLessonLateness,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"close-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"modal-close close\",\n      onClick: onCloseDetailModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-close-thin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }))))), __jsx(\"div\", {\n      className: \"header-row-block card-panel-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 right-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: \"text-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"DownloadPDF\")))), __jsx(\"div\", {\n      className: \"content-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, this.props.lesson.status === \"COMPLETED\" && __jsx(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-block\",\n      style: {\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Performance\"), __jsx(\"div\", {\n      className: \"card-answer card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chart-container\",\n      style: {\n        width: 140\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chart-holder\",\n      style: {\n        width: 140\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, __jsx(Doughnut, {\n      data: () => data(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count),\n      height: 140,\n      width: 140,\n      options: {\n        circumference: 1.45 * Math.PI,\n        rotation: -3.85,\n        cutoutPercentage: 55,\n        tooltips: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"color\"),\n        marginBottom: \"-40px\",\n        width: \"50px\",\n        height: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, Math.floor(this.props.lesson.scoring.percentage_correct ? this.props.lesson.scoring.percentage_correct : 0), \"%\")), __jsx(\"div\", {\n      style: {\n        color: getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"color\"),\n        margin: \"45px 45px 0 45px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, this.props.lesson.scoring.correct_count, \" of\", \" \", this.props.lesson.scoring.question_count))), __jsx(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chart-description\",\n      style: {\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\",\n      style: {\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Time Est:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, this.props.lesson.time_estimate ? this.props.lesson.time_estimate : 0, \"min\")), __jsx(\"dl\", {\n      className: \"dl-horizontal\",\n      style: {\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Problems:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, this.getProblemsAmount())), __jsx(\"dl\", {\n      className: \"dl-horizontal\",\n      style: {\n        fontSize: 16,\n        margin: 30,\n        padding: 10,\n        backgroundColor: getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"color\"),\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, getValuesByScore(this.props.lesson.scoring.correct_count, this.props.lesson.scoring.question_count, \"label\")))))))))), __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-block\",\n      style: {\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \"Flagged For Review\"), __jsx(\"div\", {\n      className: \"card-answer card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row-bordered d-flex row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s6 badge-block-column red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-rounded-xlg badge red darken-2 white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, this.getReviewedAndFlaggedProblemAmount(\"FLAGGED\")), \" \", __jsx(\"i\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      style: {\n        marginLeft: 10,\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"To Review\")), __jsx(\"div\", {\n      className: \"col s6 badge-block-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-rounded-xlg badge grey darken-2 white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, this.getReviewedAndFlaggedProblemAmount(\"REVIEWED\")), \" \", __jsx(\"i\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    })), __jsx(\"span\", {\n      style: {\n        marginLeft: 10,\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \"Reviewed\"))))))))), this.props.lesson.status === \"COMPLETED\" ? __jsx(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-block\",\n      style: {\n        margin: \"0 auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, challengeProblems.length !== 0 && __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, __jsx(ChallengeQuestions, {\n      questions: challengeProblems,\n      updateProblemList: this.updateProblemList,\n      problemType: 'challengeProblems',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    })), practiceProlems.length !== 0 && __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, __jsx(PracticeQuestions, {\n      questions: practiceProlems,\n      updateProblemList: this.updateProblemList,\n      problemType: 'practiceProlems',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    })), drillProblems.length !== 0 && __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, __jsx(DrillQuestions, {\n      questions: drillProblems,\n      updateProblemList: this.updateProblemList,\n      problemType: 'drillProblems',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }))))) : [__jsx(\"div\", {\n      className: \"col s12 m6 card-block\",\n      style: {\n        margin: \"0 auto\"\n      },\n      key: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, challengeProblems.length !== 0 && __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, __jsx(ChallengeQuestions, {\n      questions: challengeProblems,\n      updateProblemList: this.updateProblemList,\n      problemType: 'challengeProblems',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col s12 m6 card-block\",\n      style: {\n        margin: \"0 auto\"\n      },\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, practiceProlems.length !== 0 && __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, __jsx(PracticeQuestions, {\n      questions: practiceProlems,\n      updateProblemList: this.updateProblemList,\n      problemType: 'practiceProlems',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }))), drillProblems.length !== 0 && __jsx(\"div\", {\n      className: \"main-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, __jsx(DrillQuestions, {\n      questions: drillProblems,\n      updateProblemList: this.updateProblemList,\n      problemType: 'drillProblems',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }))]))))));\n  }\n\n}\n\nLessonDetailAnswerSheet.propTypes = {\n  open: PropTypes.bool.isRequired,\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  onCloseDetailModal: PropTypes.func.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  units: makeSelectUnitFilterOptions()\n});\nconst withConnect = connect(mapStateToProps, null);\nexport default compose(withConnect)(LessonDetailAnswerSheet);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonDetailAnswerSheet/index.js"],"names":["React","compose","createStructuredSelector","connect","PropTypes","Doughnut","PracticeQuestions","ChallengeQuestions","DrillQuestions","moment","fetchStudentLessonSectionApi","makeSelectUnitFilterOptions","DropDownMenu","data","value","total","datasets","backgroundColor","getValuesByScore","max","target","activeIndex","score","colorList","label","color","LessonDetailAnswerSheet","Component","constructor","props","lesson","user","id","student_id","sections","setState","currentType","lesson_id","map","section","section_id","currentSectionName","name","hasChallenge","challengeProblems","lesson_problems","hasPractice","practiceProblems","practiceProlems","problems","length","hasDrill","lessonIdsToUnFlag","includes","problem","flag_status","drillProblems","state","type","amount","typeLabel","units","unitIds","unit","currentIndex","findIndex","getUnitIndexMatchedUnitId","currentUnit","unitId","unit_id","dropdownIsOpen","onOpenModal","onAddCheckedLesson","problemsType","updatedProblem","newProblems","render","onCloseDetailModal","starting_page","ending_page","completed_at","assignTime","assignment_date","due_date","dueTime","studentInformation","firstName","lastName","zIndex","display","position","top","minHeight","minWidth","width","getUnitNameById","format","e","preventDefault","onSetDropdown","onCloseDropdown","resetLessonSelections","handleMarkAllFlagsReviewed","updateProblemList","getCurrentProblemList","handleExcuseLessonLateness","status","margin","scoring","correct_count","question_count","circumference","Math","PI","rotation","cutoutPercentage","tooltips","marginBottom","height","floor","percentage_correct","marginTop","fontSize","time_estimate","getProblemsAmount","padding","getReviewedAndFlaggedProblemAmount","marginLeft","propTypes","open","bool","isRequired","object","func","mapStateToProps","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport DrillQuestions from './components/DrillQuestions';\nimport moment from \"moment\";\nimport { fetchStudentLessonSectionApi } from \"../index/api\";\nimport { makeSelectUnitFilterOptions } from \"../index/selectors\";\nimport DropDownMenu from '../DropDownMenu';\n\n\nconst data = (value, total) => ({\n  datasets: [{\n    data: [value, total - value],\n    backgroundColor: [\n      getValuesByScore(value, total, 'color'),\n      \"#eaeaea\",\n    ],\n  }],\n});\nconst getValuesByScore = (value, max, target) => {\n  let activeIndex = 0;\n  if (max === 0) {\n    activeIndex = 4;\n  } else {\n    const score = (value / max) * 100;\n    if (score >= 90) {\n      activeIndex = 0;\n    } else if (score < 90 && score > 75) {\n      activeIndex = 1;\n    } else if (score > 60 && score < 76) {\n      activeIndex = 2;\n    } else if (score >= 40 && score <= 60) {\n      activeIndex = 3;\n    } else if (score < 40) {\n      activeIndex = 4;\n    }\n  }\n  const colorList = [\n    { label: \"Great\", color: \"#74b287\" },\n    { label: \"Above Average\", color: \"#a9c466\" },\n    { label: \"Average\", color: \"d8c539\" },\n    { label: \"Below Average\", color: \"#e89258\" },\n    { label: \"Poor\", color: \"#f27c7c\" },\n  ];\n  if (target === 'color') {\n    return colorList[activeIndex].color;\n  }\n  return colorList[activeIndex].label;\n};\n\nclass LessonDetailAnswerSheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      challengeProblems: [],\n      practiceProlems: [],\n      drillProblems: [],\n      currentType: \"\",\n      hasChallenge: false,\n      hasPractice: false,\n      hasDrill: false,\n      dropdownIsOpen: false,\n    };\n  }\n\n\n  componentDidMount = async () => {\n    const { lesson, user: { id: student_id } } = this.props;\n    if (lesson.sections) { // lesson module type\n      this.setState({\n        currentType: \"Module\",\n      });\n      const lesson_id = this.props.lesson.id;\n      const { sections } = this.props.lesson;\n      sections.map(async section => {\n        const section_id = section.id;\n        const currentSectionName = section.name;\n        if (currentSectionName === \"challenge\") {\n          this.setState({\n            hasChallenge: true,\n          });\n          const challengeProblems = await fetchStudentLessonSectionApi(student_id, lesson_id, section_id);\n          this.setState({\n            challengeProblems: challengeProblems.lesson_problems,\n          });\n        } else {\n          this.setState({\n            hasPractice: true,\n          });\n          const practiceProblems = await fetchStudentLessonSectionApi(student_id, lesson_id, section_id);\n          if (!practiceProblems) return;\n          this.setState({\n            practiceProlems: practiceProblems.lesson_problems,\n          });\n        }\n      });\n    }\n    if (lesson.problems && lesson.problems.length !== 0) {\n      this.setState({\n        currentType: \"Drill\",\n        hasDrill: true,\n      });\n      if (this.props.lessonIdsToUnFlag.includes(lesson.id)) {\n        lesson.problems.map(problem => {\n          if (problem.flag_status === 'FLAGGED') {\n            problem.flag_status = 'REVIEWED';\n            return problem;\n          }\n          return problem;\n        });\n      }\n      this.setState({\n        drillProblems: lesson.problems,\n      });\n    }\n  }\n\n  getProblemsAmount = () => {\n    if (this.state.currentType === \"Module\") {\n      return this.state.challengeProblems.length + this.state.practiceProlems.length;\n    }\n    if (this.state.currentType === \"Drill\") {\n      return this.state.drillProblems.length;\n    }\n  }\n\n  getReviewedAndFlaggedProblemAmount = (type) => {\n    let amount = 0;\n    if (this.props.lesson.problems && this.props.lesson.problems.length !== 0) {\n      this.props.lesson.problems.map(section => {\n        if (section.flag_status === type) {\n          amount += 1;\n        }\n      });\n    }\n    if (this.props.lesson.sections && this.props.lesson.sections.length !== 0) {\n      const { challengeProblems, practiceProlems } = this.state;\n      challengeProblems.length !== 0 && challengeProblems.map(section => {\n        if (section.flag_status === type) {\n          amount += 1;\n        }\n      });\n      practiceProlems.length !== 0 && practiceProlems.map(section => {\n        if (section.flag_status === type) {\n          amount += 1;\n        }\n      });\n    }\n    return amount;\n  }\n\n  getTypeLabel = () => {\n    let typeLabel = \"\";\n    if (this.state.hasChallenge && this.state.hasPractice) {\n      typeLabel = \"Challenge + Practice\";\n    } else {\n      if (this.state.hasChallenge) {\n        typeLabel = \"Challenge\";\n      }\n      if (this.state.hasPractice) {\n        typeLabel = \"Practice\";\n      }\n    }\n\n    if (this.state.hasDrill) {\n      typeLabel = \"Drill\";\n    }\n\n    return typeLabel;\n  }\n\n  getUnitNameById = () => {\n    const { units } = this.props;\n    if (units && units.length !== 0) {\n      const unitIds = units.map(unit => unit.value);\n      const currentIndex = unitIds.findIndex(this.getUnitIndexMatchedUnitId);\n      const currentUnit = units[currentIndex];\n      return currentUnit.label;\n    }\n    return \"Undefind UnitName\";\n  }\n\n  getUnitIndexMatchedUnitId = unitId => unitId === this.props.lesson.unit_id;\n\n  onSetDropdown = () => this.setState({ dropdownIsOpen: !this.state.dropdownIsOpen });\n\n  handleAssignLesson = () => {\n    const { onOpenModal, onAddCheckedLesson, lesson } = this.props;\n    onOpenModal();\n    onAddCheckedLesson(lesson.id);\n  }\n\n  updateProblemList = (problemsType, updatedProblem) => {\n    const problems = this.state[problemsType];\n    const newProblems = problems.map(problem => {\n      if (problem.id === updatedProblem.id) return updatedProblem;\n      return problem;\n    });\n    this.setState({ [problemsType]: [...newProblems] });\n  }\n\n  getCurrentProblemList = () => {\n    const { currentType, drillProblems, practiceProlems, challengeProblems } = this.state;\n    if (currentType === 'Drill') return [{ problems: drillProblems, type: \"drillProblems\" }];\n    if (currentType === 'Module') return [{ problems: challengeProblems, type: \"challengeProblems\" }, { problems: practiceProlems, type: \"practiceProlems\" }];\n  }\n\n  render() {\n    const { challengeProblems, practiceProlems, drillProblems } = this.state;\n    const { onCloseDetailModal, user,\n      lesson: { name, starting_page, ending_page, completed_at, assignTime, assignment_date, due_date, dueTime } } = this.props;\n    const { studentInformation: { firstName, lastName } } = user;\n    return (\n      <React.Fragment>\n        <div className=\"wrapper\">\n          <div\n            className=\"card-modal card-main card switcher-section grey lighten-5 modal\"\n            style={{\n              zIndex: \"1004\",\n              display: \"block\",\n              position: \"absolute\",\n              top: \"0\",\n              minHeight: \"100%\",\n              minWidth: \"100%\",\n            }}\n          >\n            <div className=\"header-box card-panel light-blue lighten-1 white-text\">\n              <div className=\"header-flex-row row mb-0\" style={{ width: \"100%\" }}>\n                <div className=\"col s12 m7 xl8\">\n                  <div className=\"header-holder\">\n                    <div className=\"header-col\">\n                      <div className=\"icon-col\">\n                        <i className=\"icon-books\" />\n                        <span className=\"text-icon\">Lesson</span>\n                      </div>\n                    </div>\n                    <div className=\"header-col\">\n                      <div className=\"card-panel-text\">\n                        <div className=\"text-small\">{this.getUnitNameById()}</div>\n                        <h1 className=\"text-large\">{name}</h1>\n                        <div className=\"text-small\">\n                          p.{starting_page}\n                          {ending_page > starting_page ? `-${ending_page}` : \"\"}(Reading)\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col s9 m4 xl3 position-mobile-left\">\n                  <div className=\"card-panel-text\">\n                    <h2 className=\"text-large\">\n                      {firstName} {lastName}\n                    </h2>\n                    {assignment_date && (\n                      <dl className=\"text-small dl-horizontal\">\n                        <dt>Assigned:</dt>\n                        <dd>\n                          <time dateTime=\"2019-01-06T08:00\">{`${moment(assignment_date).format(\n                            \"MM/DD/YY\",\n                          )} at ${moment(assignTime).format(\"hh:mm\")}`}</time>\n                        </dd>\n                      </dl>\n                    )}\n                    {due_date && (\n                      <dl className=\"text-small dl-horizontal\">\n                        <dt>Due:</dt>\n                        <dd>\n                          <time dateTime=\"2019-01-06T16:00\">{`${moment(due_date).format(\n                            \"MM/DD/YY\",\n                          )} at ${moment(dueTime).format(\"hh:mm\")}`}</time>\n                        </dd>\n                      </dl>\n                    )}\n                    {completed_at && (\n                      <dl className=\"text-small dl-horizontal\">\n                        <dt>Completed:</dt>\n                        <dd>\n                          <time dateTime=\"2019-09-01T06:59\">{`${moment(completed_at).format(\n                            \"MM/DD/YY\",\n                          )} at ${moment(completed_at).format(\"hh:mm\")}`}</time>\n                        </dd>\n                      </dl>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col s2 m1 right-align position-mobile-right\">\n                  <div className=\"dropdown-block\">\n                    <a\n                      className=\"dropdown-trigger btn\"\n                      href=\"#\"\n                      data-target=\"dropdown_top\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        this.onSetDropdown();\n                      }}\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <DropDownMenu\n                      onOpenModal={this.props.onOpenModal}\n                      onAddCheckedLesson={this.props.onAddCheckedLesson}\n                      lesson={this.props.lesson}\n                      dropdownIsOpen={this.state.dropdownIsOpen}\n                      onSetDropdown={this.onSetDropdown}\n                      onCloseDetailModal={this.props.onCloseDetailModal}\n                      onCloseDropdown={this.props.onCloseDropdown}\n                      resetLessonSelections={this.props.resetLessonSelections}\n                      handleMarkAllFlagsReviewed={this.props.handleMarkAllFlagsReviewed}\n                      updateProblemList={this.updateProblemList}\n                      problems={this.getCurrentProblemList()}\n                      handleExcuseLessonLateness={this.props.handleExcuseLessonLateness}\n                    />\n                  </div>\n                  <div className=\"close-block\">\n                    <a href=\"#\" className=\"modal-close close\" onClick={onCloseDetailModal}>\n                      <i className=\"icon-close-thin\" />\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"header-row-block card-panel-row row\">\n                <div className=\"col s12 right-align\">\n                  <h2 className=\"text-large\">DownloadPDF</h2>\n                </div>\n              </div>\n            </div>\n            <div className=\"content-section\">\n              <div className=\"row\">\n                <div className=\"container-sm\">\n                  {this.props.lesson.status === \"COMPLETED\" && (\n                    <div className=\"col s12 m6\">\n                      <div className=\"main-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"card-block\" style={{ margin: \"0 auto\" }}>\n                            <h3>Performance</h3>\n                            <div className=\"card-answer card\">\n                              <div className=\"card-content\">\n                                <div className=\"row\">\n                                  <div className=\"col s6\">\n                                    <div className=\"chart-container\" style={{ width: 140 }}>\n                                      <div className=\"chart-holder\" style={{ width: 140 }}>\n                                        <Doughnut\n                                          data={() =>\n                                            data(\n                                              this.props.lesson.scoring.correct_count,\n                                              this.props.lesson.scoring.question_count,\n                                            )\n                                          }\n                                          height={140}\n                                          width={140}\n                                          options={{\n                                            circumference: 1.45 * Math.PI,\n                                            rotation: -3.85,\n                                            cutoutPercentage: 55,\n                                            tooltips: false,\n                                          }}\n                                        />\n                                        <span\n                                          className=\"chart-value\"\n                                          style={{\n                                            backgroundColor: getValuesByScore(\n                                              this.props.lesson.scoring.correct_count,\n                                              this.props.lesson.scoring.question_count,\n                                              \"color\",\n                                            ),\n                                            marginBottom: \"-40px\",\n                                            width: \"50px\",\n                                            height: \"50px\",\n                                          }}\n                                        >\n                                          {Math.floor(\n                                            this.props.lesson.scoring.percentage_correct ? this.props.lesson.scoring.percentage_correct : 0,\n                                          )}\n                                          %\n                                        </span>\n                                      </div>\n                                      <div\n                                        style={{\n                                          color: getValuesByScore(\n                                            this.props.lesson.scoring.correct_count,\n                                            this.props.lesson.scoring.question_count,\n                                            \"color\",\n                                          ),\n                                          margin: \"45px 45px 0 45px\",\n                                        }}\n                                      >\n                                        {this.props.lesson.scoring.correct_count} of{\" \"}\n                                        {this.props.lesson.scoring.question_count}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div className=\"col s6\">\n                                    <div\n                                      className=\"chart-description\"\n                                      style={{ marginTop: \"10px\" }}\n                                    >\n                                      <dl className=\"dl-horizontal\" style={{ fontSize: 16 }}>\n                                        <dt>Time Est:</dt>\n                                        <dd>\n                                          {this.props.lesson.time_estimate\n                                            ? this.props.lesson.time_estimate\n                                            : 0}\n                                          min\n                                        </dd>\n                                      </dl>\n                                      <dl className=\"dl-horizontal\" style={{ fontSize: 16 }}>\n                                        <dt>Problems:</dt>\n                                        <dd>{this.getProblemsAmount()}</dd>\n                                      </dl>\n                                      <dl\n                                        className=\"dl-horizontal\"\n                                        style={{\n                                          fontSize: 16,\n                                          margin: 30,\n                                          padding: 10,\n                                          backgroundColor: getValuesByScore(\n                                            this.props.lesson.scoring.correct_count,\n                                            this.props.lesson.scoring.question_count,\n                                            \"color\",\n                                          ),\n                                          color: \"white\",\n                                        }}\n                                      >\n                                        {getValuesByScore(\n                                          this.props.lesson.scoring.correct_count,\n                                          this.props.lesson.scoring.question_count,\n                                          \"label\",\n                                        )}\n                                      </dl>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"main-row row\">\n                        <div className=\"col s12\">\n                          <div className=\"card-block\" style={{ margin: \"0 auto\" }}>\n                            <h3>Flagged For Review</h3>\n                            <div className=\"card-answer card\">\n                              <div className=\"card-content\">\n                                <div className=\"row-bordered d-flex row\">\n                                  <div className=\"col s6 badge-block-column red-text\">\n                                    <span className=\"badge-rounded-xlg badge red darken-2 white-text\">\n                                      <b className=\"badge-text\">\n                                        {this.getReviewedAndFlaggedProblemAmount(\"FLAGGED\")}\n                                      </b>{\" \"}\n                                      <i className=\"icon-flag\"></i>\n                                    </span>\n                                    <span style={{ marginLeft: 10, fontSize: 16 }}>To Review</span>\n                                  </div>\n                                  <div className=\"col s6 badge-block-column\">\n                                    <span className=\"badge-rounded-xlg badge grey darken-2 white-text\">\n                                      <b className=\"badge-text\">\n                                        {this.getReviewedAndFlaggedProblemAmount(\"REVIEWED\")}\n                                      </b>{\" \"}\n                                      <i className=\"icon-flag\"></i>\n                                    </span>\n                                    <span style={{ marginLeft: 10, fontSize: 16 }}>Reviewed</span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <Choose>\n                    <When condition={this.props.lesson.status === \"COMPLETED\"}>\n                      <div className=\"col s12 m6\">\n                        <div className=\"row\" style={{ margin: 0 }}>\n                          <div className=\"card-block\" style={{ margin: \"0 auto\" }}>\n                            {challengeProblems.length !== 0 && (\n                              <div className=\"main-row row\">\n                                <ChallengeQuestions questions={challengeProblems} updateProblemList={this.updateProblemList} problemType={'challengeProblems'} />\n                              </div>\n                            )}\n                            {practiceProlems.length !== 0 && (\n                              <div className=\"main-row row\">\n                                <PracticeQuestions questions={practiceProlems} updateProblemList={this.updateProblemList} problemType={'practiceProlems'} />\n                              </div>\n                            )}\n                            {drillProblems.length !== 0 && (\n                              <div className=\"main-row row\">\n                                <DrillQuestions questions={drillProblems} updateProblemList={this.updateProblemList} problemType={'drillProblems'} />\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </When>\n                    <Otherwise>\n                      <div className=\"col s12 m6 card-block\" style={{ margin: \"0 auto\" }}>\n                        {challengeProblems.length !== 0 && (\n                          <div className=\"main-row row\">\n                            <ChallengeQuestions questions={challengeProblems} updateProblemList={this.updateProblemList} problemType={'challengeProblems'} />\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"col s12 m6 card-block\" style={{ margin: \"0 auto\" }}>\n                        {practiceProlems.length !== 0 && (\n                          <div className=\"main-row row\">\n                            <PracticeQuestions questions={practiceProlems} updateProblemList={this.updateProblemList} problemType={'practiceProlems'} />\n                          </div>\n                        )}\n                      </div>\n                      {drillProblems.length !== 0 && (\n                        <div className=\"main-row row\">\n                          <DrillQuestions questions={drillProblems} updateProblemList={this.updateProblemList} problemType={'drillProblems'} />\n                        </div>\n                      )}\n                    </Otherwise>\n                  </Choose>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nLessonDetailAnswerSheet.propTypes = {\n  open: PropTypes.bool.isRequired,\n  lesson: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  onCloseDetailModal: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n  units: makeSelectUnitFilterOptions(),\n});\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect)(LessonDetailAnswerSheet);\n"]},"metadata":{},"sourceType":"module"}