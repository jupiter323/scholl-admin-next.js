{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../../utils/getValueFromState';\nimport sampleTopics from '../../../../../../utils/sampleTopics';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      topic: ''\n    }, this.props.onClearFilters));\n\n    _defineProperty(this, \"handleTopicFilterChange\", event => {\n      const {\n        onSetFilteredTopicState\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          topic: value\n        }\n      });\n      this.setState(updatedState);\n      return onSetFilteredTopicState(event);\n    });\n\n    this.state = {\n      open: true,\n      topic: ''\n    };\n  }\n\n  render() {\n    const {\n      open,\n      topic\n    } = this.state;\n    const {\n      sortBySubject,\n      toggleSelectAllProblemsOrPassages,\n      handleFilterClick,\n      subjectFilters,\n      difficultyFilters,\n      typeFilters,\n      workbookFilters\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"filter-form-holder\"\n    }, React.createElement(\"ul\", {\n      className: \"collapsible expandable\",\n      style: {\n        minHeight: '0'\n      }\n    }, React.createElement(\"li\", null, React.createElement(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      }\n    }, React.createElement(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\"\n    }, React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"reading_problems\",\n      checked: subjectFilters.indexOf('reading') !== -1,\n      onChange: () => handleFilterClick('subject', 'reading')\n    }), React.createElement(\"label\", {\n      htmlFor: \"reading_problems\"\n    }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"writing\",\n      checked: subjectFilters.indexOf('writing') !== -1,\n      onChange: () => handleFilterClick('subject', 'writing')\n    }), React.createElement(\"label\", {\n      htmlFor: \"writing\"\n    }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"math\",\n      checked: subjectFilters.indexOf('math') !== -1,\n      onChange: () => handleFilterClick('subject', 'math')\n    }), React.createElement(\"label\", {\n      htmlFor: \"math\"\n    }, \"Math\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"easy\",\n      checked: difficultyFilters.indexOf('easy') !== -1,\n      onChange: () => handleFilterClick('difficulty', 'easy')\n    }), React.createElement(\"label\", {\n      htmlFor: \"easy\"\n    }, \"Easy\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"medium\",\n      checked: difficultyFilters.indexOf('medium') !== -1,\n      onChange: () => handleFilterClick('difficulty', 'medium')\n    }), React.createElement(\"label\", {\n      htmlFor: \"medium\"\n    }, \"Medium\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"hard\",\n      checked: difficultyFilters.indexOf('hard') !== -1,\n      onChange: () => handleFilterClick('difficulty', 'hard')\n    }), React.createElement(\"label\", {\n      htmlFor: \"hard\"\n    }, \"Hard\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"satPractice\",\n      checked: typeFilters.indexOf('satPractice') !== -1,\n      onChange: () => handleFilterClick('type', 'satPractice')\n    }), React.createElement(\"label\", {\n      htmlFor: \"satPractice\"\n    }, \"SAT Practice\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"skillBuilder\",\n      checked: typeFilters.indexOf('skillBuilder') !== -1,\n      onChange: () => handleFilterClick('type', 'skillBuilder')\n    }), React.createElement(\"label\", {\n      htmlFor: \"skillBuilder\"\n    }, \"Skill Builder\"))), React.createElement(\"ul\", {\n      className: \"filter-form_checkbox-list\"\n    }, React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"inWorkbook\",\n      checked: workbookFilters.indexOf('inWorkbook') !== -1,\n      onChange: () => handleFilterClick('workbook', 'inWorkbook')\n    }), React.createElement(\"label\", {\n      htmlFor: \"inWorkbook\"\n    }, \"In Workbook\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"notInWorkbook\",\n      checked: workbookFilters.indexOf('notInWorkbook') !== -1,\n      onChange: () => handleFilterClick('workbook', 'notInWorkbook')\n    }), React.createElement(\"label\", {\n      htmlFor: \"notInWorkbook\"\n    }, \"Not in Workbook\")))), React.createElement(\"div\", {\n      className: \"d-flex row mb-0 justify-center\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m3\"\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      style: {\n        marginBottom: '0',\n        marginTop: '0'\n      }\n    }, React.createElement(Dropdown, {\n      value: getValueFromState(topic, sampleTopics),\n      onChange: this.handleTopicFilterChange,\n      options: sampleTopics,\n      label: \"Topic\",\n      stateKey: \"topic\",\n      dropdownKey: \"topic\"\n    }))))), React.createElement(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"col s12 l4\"\n    }, React.createElement(\"div\", {\n      className: \"option-filters\"\n    }, React.createElement(\"div\", {\n      className: \"option-item clear\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onClearFilters\n    }, \"Clear Filters\")), React.createElement(\"div\", {\n      className: \"option-item\"\n    }, React.createElement(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters\n    }, React.createElement(\"span\", {\n      className: \"open-text\"\n    }, open ? 'Hide Filters' : 'Open Filters')))))))), React.createElement(\"div\", {\n      className: \"table-header white hide-on-med-and-down\"\n    }, React.createElement(\"div\", {\n      className: \"container-lg\"\n    }, React.createElement(\"div\", {\n      className: \"list-table detail-table\"\n    }, React.createElement(\"div\", {\n      className: \"list-table-header table-header-box\"\n    }, React.createElement(\"div\", {\n      className: \"list-table-row\"\n    }, React.createElement(\"div\", {\n      className: \"list-table-cell checkbox-cell\"\n    }, React.createElement(\"label\", null, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"filled-in\",\n      \"data-check-pattern\": \"[name^='check_']\",\n      onChange: toggleSelectAllProblemsOrPassages\n    }), React.createElement(\"span\", null, \"\\xA0\"))), React.createElement(\"div\", {\n      className: \"list-table-cell subject-cell\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: sortBySubject\n    }, React.createElement(\"span\", {\n      className: \"sort-holder\"\n    }, \"Subject \", React.createElement(\"i\", {\n      className: \"sort-icon custom-icon-traingle-down\"\n    })))), React.createElement(\"div\", {\n      className: \"list-table-cell info-cell\"\n    }, React.createElement(\"b\", null, \"Di\\uFB03culty\")), React.createElement(\"div\", {\n      className: \"list-table-cell type-cell\"\n    }, React.createElement(\"b\", null, \"Type\")), React.createElement(\"div\", {\n      className: \"list-table-cell in-cell\"\n    }, React.createElement(\"b\", null, \"In Workbook\")), React.createElement(\"div\", {\n      className: \"list-table-cell topic-cell\"\n    }, React.createElement(\"b\", null, \"Topic(s)\")), React.createElement(\"div\", {\n      className: \"list-table-cell view-cell\"\n    }, React.createElement(\"b\", null, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"list-table-cell drop-cell\"\n    }, \"\\xA0\")))))));\n  }\n\n}\n\nexport default FilterSection;","map":null,"metadata":{},"sourceType":"module"}