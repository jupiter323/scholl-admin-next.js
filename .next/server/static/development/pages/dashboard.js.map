{"version":3,"file":"static/development/pages/dashboard.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Dashboard/components/DashboardCard/index.js","webpack:///./components/Dashboard/components/SessionList/index.js","webpack:///./components/Dashboard/utils/sampleUpComingSessions.js","webpack:///./pages/dashboard.js","webpack:///external \"faker\"","webpack:///external \"moment\"","webpack:///external \"react\"","webpack:///external \"uuid/v4\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import { Component } from 'react';\n\nclass DashboardCard extends Component {\n    constructor(props) {\n      super(props)\n        const {\n            sessionStats,\n            testStats,\n            user,\n        } = props;\n        this.state = {\n            menuOpacity: 0,\n            collapseStyle: {},\n            dropDownActive: false,\n            listClasses: \"card-collapsible-holder\",\n        }\n        this.sessionStats = sessionStats;\n        this.testStats = testStats;\n        this.user = user;\n    }\n\n    cycleMenuOpacity() {\n        if (this.state.menuOpacity === 0) {\n            this.setState({\n                menuOpacity: 1,\n            })\n        } else {\n            this.setState({\n                menuOpacity: 0,\n            });\n        }\n    }\n\n    cycleDropDown() {\n        if (!this.state.dropDownActive) {\n            this.setState({\n                collapseStyle: {\"display\": \"block\"},\n                listClasses: \"card-collapsible-holder active\",\n                dropDownActive: true,\n            })\n        } else {\n            this.setState({\n                collapseStyle: {},\n                listClasses: \"card-collapsible-holder\",\n                dropDownActive: false,\n            })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', () => this.handleClickOutside());\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', () => this.handleClickOutside());\n    }\n\n    handleClickOutside() {\n        if (this.state.menuOpacity === 1) {\n            this.cycleMenuOpacity();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"card-main-col col s12 m8 l7 xl5\">\n                <ul className=\"card-dashboard-session card-main card expandable\">\n                    <li className={ this.state.listClasses }>\n                        <div\nclassName=\"collapsible-card owner-box card-panel\"\n                             style={{\"backgroundColor\": \"#14b04b\", \"color\": \"#fff\"}}>\n                            <div className=\"card-panel-row row\">\n                                <div className=\"col s9\">\n                                    <span className=\"meta-info\"><time\n                                        dateTime=\"2018-12-09T15:30\">{ this.sessionStats.datetime}</time><span className=\"amount\"> (10 of 12)</span></span>\n                                    <h3 className=\"collapsible-title hidden-active\">{ `${this.user.lastName  }, ${  this.user.firstName}` }</h3>\n                                </div>\n                                <div className=\"col s2 right-align\">\n                                    { this.sessionStats.numberOfFlags > 0 &&\n                                    <span className=\"badge-rounded-sm badge red darken-2 white-text\">\n                                        <b className=\"badge-text\">{this.sessionStats.numberOfFlags}</b>\n                                        <i className=\"icon-flag\"></i>\n                                    </span>\n                                    }\n                                </div>\n                                <div className=\"col s2 right-align\">\n                                    <div className=\"row icons-row\">\n                                        <div className=\"dropdown-block col\">\n                                            <a onClick={() => this.cycleMenuOpacity()} className=\"dropdown-trigger btn\" href=\"#\" data-target=\"dropdown01_01\"><i\n                                                className=\"material-icons dots-icon\">more_vert</i></a>\n                                            <ul\nid=\"dropdown01_01\" className=\"dropdown-content dropdown-wide\"\n                                                tabIndex=\"0\"\n                                                style={{ \"display\": \"block\", \"width\": \"120px\", \"left\": \"133px\", \"top\": \"8px\", \"height\": \"104px\", \"transformOrigin\": \"0px 0px\", \"opacity\": this.state.menuOpacity , \"transform\": \"scaleX(1) scaleY(1)\" }}>\n                                                <li tabIndex=\"0\">\n                                                    <a\nhref=\"#modal_user_edit\"\n                                                       className=\"modal-trigger link-block\">Edit</a>\n                                                </li>\n                                                <li tabIndex=\"0\"><a href=\"#!\">Clone</a></li>\n                                                <li tabIndex=\"0\"><a href=\"#!\">Impersonate</a></li>\n                                                <li tabIndex=\"0\"><a href=\"#!\">Delete</a></li>\n                                            </ul>\n                                        </div>\n                                        <div className=\"col right-align\">\n                                <span className=\"collapsible-header collapsible-opener\" onClick={() => this.cycleDropDown()}>\n                                  <i className=\"custom-icon-triangle-right color-white\"></i>\n                                </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-content collapsible-body\" style={ this.state.collapseStyle }>\n                            <div className=\"owner-box card-panel\" style={{ \"backgroundColor\": \"#14b04b\", \"color\": \"#fff\" }}>\n                                <div className=\"card-panel-row row\">\n                                    <div className=\"col s12\">\n                                        <div className=\"user-block\">\n                                            <div\nclassName=\"user-circle\"\n                                                 style={{ \"backgroundColor\": \"#af1e90\", \"color\": \"#fff\" }}>\n                                                <span className=\"initials\">{this.user.initials}</span>\n                                            </div>\n                                            <div className=\"user-text\" style={{ \"color\": \"#fff\" }}>\n                                                <h4 className=\"h3\">{ `${this.user.firstName  }, ${  this.user.lastName}` }</h4>\n                                                <a href=\"mailto:arnold.studently@gmail.com\">{ this.user.email }</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row d-flex align-items-center mb-0\">\n                                <div className=\"col s12 m6\">\n                                    <div className=\"chart-container chart-container-large start-anim\">\n                                        <div className=\"chart-holder\">\n                                <span\nclassName=\"svg-curved-bar\"\n                                      data-values=\"{&quot;from&quot;: 1040, &quot;to&quot;: 1510, &quot;current&quot;: 1270}\"\n                                      data-duration=\"1\">\n                                  <svg width=\"146px\" height=\"146px\" viewBox=\"0 0 146 146\">\n                                    <path\nfill=\"none\" style={{ \"strokeWidth\":30, \"stroke\": \"#eaeaea\" }}\n                                          d=\"M 19.154659885067794 94.556422428299 A 58 58 0 1 1 126.84534011493221 94.556422428299\"></path>\n                                    <path\ndata-dinamic=\"\" fill=\"none\" style={{ \"strokeWidth\":30, \"stroke\": \"#0085ce\" }}\n                                          d=\"M 19.154659885067794 94.556422428299 A 58 58 0 0 1 69.48595978278411 15.106550272489471\"></path></svg>\n                                  <span className=\"js-diff-holder\"><span\nclassName=\"js-diff visible\"\n                                                                         data-position=\"position-2\"><span\n                                      className=\"txt\" style={{ \"top\": \"-56px\", \"left\": \"-16px\" }}>{`+${  this.testStats.currentScore - this.testStats.initial}`}</span></span></span>\n                                </span>\n                                            <span className=\"chart-value\" style={{ \"backgroundColor\": \"#0085ce\" }}><span\n                                                data-count-up=\"\" data-start-val=\"1040\" data-end-val=\"1270\"\n                                                data-duration=\"1\">{this.testStats.currentScore}</span></span>\n                                        </div>\n                                        <div className=\"chart-row\">\n                                            <div className=\"chart-col chart-start\">\n                                                <span className=\"amount\">{this.testStats.initial}</span>\n                                                <span className=\"amount-text\">initial</span>\n                                            </div>\n                                            <div className=\"chart-col chart-end\">\n                                                <span className=\"amount\">{this.testStats.target}</span>\n                                                <span className=\"amount-text\">target</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col s12 m6\">\n                                    <ul className=\"points-list-bordered\">\n                                        <li className=\"style-green\">\n                                            <span className=\"badge-circle\">{this.sessionStats.complete}</span>\n                                            <span className=\"point-text\">complete</span>\n                                        </li>\n                                        <li className=\"style-red\">\n                                            <span className=\"badge-circle\">{this.sessionStats.overdue}</span>\n                                            <span className=\"point-text\">overdue</span>\n                                        </li>\n                                        <li className=\"style-orange\">\n                                            <span className=\"badge-circle\">{this.sessionStats.practiceTests}</span>\n                                            <span className=\"point-text\">practice tests</span>\n                                        </li>\n                                        <li className=\"style-blue-lighter\">\n                                            <span className=\"badge-circle\"><span>{this.sessionStats.sessions}</span> <span\n                                                className=\"of\">of 23</span></span>\n                                            <span className=\"point-text\">sessions</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard';\nimport sampleSessions from '../../utils/sampleUpComingSessions';\nimport * as moment from 'moment';\n\nclass SessionList extends Component {\n\n    render() {\n\n        return (<div className=\"dashboard-card card\">\n            { sampleSessions.sessions.map(function(element, key) {\n                console.log(element)\n                return (\n                    <div className=\"card-content\" key={element.key}>\n                        <h2 className=\"dashboard-title\">\n                            <time dateTime=\"2019-02-02\">{ element.datetime }</time>\n                            <span className=\"small\"> { SessionList.getDateName(moment(element.datetime, 'M/D/YYYY')) }</span>\n                        </h2>\n                        <div className=\"row d-flex-content card-width-366 mb-0\">\n                            { element.sessions.map(function(session) {\n                                return (<DashboardCard sessionStats={session.sessionStats} testStats={session.testStats} user={session.user} key={session.uuid}/>);\n                            }) }\n                        </div>\n                    </div>\n                )\n            })}\n        </div>);\n    }\n\n    static getDateName(datetime) {\n        if (moment().isSame(moment(datetime, 'M/D/YYYY'), 'day')) {\n            return 'Today';\n        } else if (moment().add(1, 'days').isSame(moment(datetime, 'M/D/YYYY'), 'day')) {\n            return 'Tomorrow';\n        }\n            return 'Other';\n\n    }\n}\n\nexport default SessionList;","const moment = require('moment');\nconst uuidv4 = require('uuid/v4');\nconst faker = require('faker');\n\nexport default {\n    sessions: [\n        {\n            key: uuidv4(),\n            datetime: moment().format('M/D/YYYY'),\n            // datetime: \"2/6/2019\",\n            sessions: [\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n            ],\n        },\n        {\n            key: uuidv4(),\n            datetime: moment().add(1, 'd').format('M/D/YYYY'),\n            sessions: [\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n            ],\n        },\n    ],\n\n}","import React, { Component } from 'react';\nimport SessionList from \"../components/Dashboard/components/SessionList\";\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <main id=\"main\" role=\"main\">\n                <div className=\"main-holder grey lighten-5\">\n                    <div className=\"title-row card-panel\">\n                        <div className=\"mobile-header\">\n                            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                        </div>\n                        <h2 className=\"h1 white-text\">\n                          <span className=\"heading-holder\">\n                            <i className=\"icon-speed\"></i>\n                            <span className=\"heading-block\">Dashboard</span>\n                          </span>\n                        </h2>\n                        <nav className=\"nav-additional\">\n                            <ul className=\"menu-additional\">\n                                <li><a className=\"active\" href=\"#\">Upcoming Sessions</a></li>\n                                <li><a href=\"#\">Stats</a></li>\n                            </ul>\n                        </nav>\n                    </div>\n                    <div className=\"content-section\">\n                        <SessionList/>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Dashboard","module.exports = require(\"faker\");","module.exports = require(\"moment\");","module.exports = require(\"react\");","module.exports = require(\"uuid/v4\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAIA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAGA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAAA;AAUA;AACA;AAjMA;AACA;AAkMA;;;;;;;;;;;;ACrMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAjCA;AACA;AAkCA;;;;;;;;;;;;ACxCA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AA7KA;AAwMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAjBA;AApJA;AAzMA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAMA;AACA;AA7BA;AACA;AA8BA;;;;;;;;;;;;;;;;;;;;;;;AClCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}