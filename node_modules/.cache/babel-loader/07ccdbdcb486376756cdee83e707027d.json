{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport update from 'immutability-helper';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport InstructorCard from './components/InstructorCard';\nimport FilterSection from './components/FilterSection';\nimport NewInstructorModal from './components/NewInstructorModal'; // import { saveNewSuccess as savePracticeTestSuccess, saveChangesSuccess, saveNewError as savePracticeTestError } from '../../utils/fieldValidation';\n\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\nimport { fetchInstructorsApi, createNewInstructorApi } from '../index/api';\nimport { setInstructors } from '../index/actions';\nimport { makeSelectInstructors } from '../index/selectors';\n\nvar InstructorListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorListPage, _React$Component);\n\n  function InstructorListPage(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, onSetInstructors, instructors, _ref2, _instructors;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, onSetInstructors = _this$props.onSetInstructors, instructors = _this$props.instructors;\n\n              if (!(instructors.length === 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 4;\n              return fetchInstructorsApi();\n\n            case 4:\n              _ref2 = _context.sent;\n              _instructors = _ref2.formattedInstructors;\n\n              _this.setState({\n                instructors: _instructors\n              });\n\n              onSetInstructors(_instructors);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIsOpen: true,\n        dropdownIndex: dropdownIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddNewInstructor\", function (newInstructor) {\n      _this.onCreateNewInstructorApi(newInstructor);\n\n      var _this$props2 = _this.props,\n          instructors = _this$props2.instructors,\n          onSetInstructors = _this$props2.onSetInstructors;\n      var tempBasicInfo = {\n        activeStudents: 15,\n        pastStudents: 24,\n        unactivatedStudents: 29,\n        averageImprovement: 185,\n        averageInitialScore: 1037,\n        averageFinalScore: 1218,\n        studentsAchievingTargetScore: 12\n      };\n      var formattedNewInstructor = update(newInstructor, {\n        basicInfo: {\n          $set: tempBasicInfo\n        }\n      });\n      var updatedInstructors = update(instructors, {\n        $push: [formattedNewInstructor]\n      });\n      onSetInstructors(updatedInstructors);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteInstructor\", function (deletedInstructor) {\n      var updatedProps = update(_this.props, {\n        instructors: function instructors(unfilteredInstructors) {\n          return unfilteredInstructors.filter(function (instructor) {\n            return instructor.id !== deletedInstructor.id;\n          });\n        }\n      });\n      var onSetInstructors = _this.props.onSetInstructors;\n      onSetInstructors(updatedProps.instructors);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneInstructor\", function (instructor) {\n      var cloneIndex = _this.props.instructors.indexOf(instructor);\n\n      var newId = _this.props.instructors.length + 1;\n      var updatedInstructor = update(instructor, {\n        id: {\n          $set: newId\n        }\n      });\n      var instructors = update(_this.props.instructors, {\n        $splice: [[cloneIndex, 0, updatedInstructor]]\n      });\n\n      _this.onCloseDropdown();\n\n      var onSetInstructors = _this.props.onSetInstructors;\n      onSetInstructors(instructors);\n\n      _this.onCreateNewInstructorApi(instructor);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCreateNewInstructorApi\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(instructor) {\n        var newId, _instructor$accountIn, firstName, lastName, email, gender, _instructor$contactIn, state, phone, streetAddress, city, zip, formattedBody;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newId = _this.props.instructors.length + 1;\n                _instructor$accountIn = instructor.accountInfo, firstName = _instructor$accountIn.firstName, lastName = _instructor$accountIn.lastName, email = _instructor$accountIn.email, gender = _instructor$accountIn.gender, _instructor$contactIn = instructor.contactInfo, state = _instructor$contactIn.state, phone = _instructor$contactIn.phone, streetAddress = _instructor$contactIn.streetAddress, city = _instructor$contactIn.city, zip = _instructor$contactIn.zip;\n                formattedBody = {\n                  id: newId,\n                  first_name: firstName,\n                  last_name: lastName,\n                  email: email,\n                  gender: gender,\n                  state: state,\n                  locations: [],\n                  phone: phone,\n                  address: streetAddress,\n                  city: city,\n                  zip: zip\n                };\n                _context2.next = 5;\n                return createNewInstructorApi(formattedBody);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveInstructorChanges\", function (updatedInstructor) {\n      var _this$props3 = _this.props,\n          originalInstructors = _this$props3.instructors,\n          onSetInstructors = _this$props3.onSetInstructors;\n      var instructorToUpdate = originalInstructors.filter(function (instructor) {\n        return instructor.id === updatedInstructor.id;\n      })[0];\n      var updatedInstructorIndex = originalInstructors.indexOf(instructorToUpdate);\n      var instructors = update(originalInstructors, {\n        $splice: [[updatedInstructorIndex, 1, updatedInstructor]]\n      }); // saveChangesSuccess();\n      // this.setState({ instructors });\n\n      onSetInstructors(instructors);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        instructorsAreFiltered: false,\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredLocationState\", function (filterLocation) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterLocation: filterLocation\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredLocationState\", function () {\n      return _this.setState({\n        filterLocation: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var instructors = _this.props.instructors;\n      var filterName = _this.state.filterName;\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var _currentInstructor$ac = currentInstructor.accountInfo,\n            lastName = _currentInstructor$ac.lastName,\n            firstName = _currentInstructor$ac.firstName;\n        var instructorString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (instructorString.indexOf(filterName) !== -1 && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByLocation\", function () {\n      var preFilteredInstructors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var allInstructors = _this.props.instructors;\n      var filterLocation = _this.state.filterLocation;\n      var instructors;\n\n      if (preFilteredInstructors.length) {\n        instructors = preFilteredInstructors;\n      } else {\n        instructors = allInstructors;\n      }\n\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var city = currentInstructor.contactInfo.city;\n\n        if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortInstructors\", function (instructors) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'firstNameAscending':\n          return instructors.sort(firstNameAscending);\n\n        case 'firstNameDescending':\n          return instructors.sort(firstNameDescending);\n\n        case 'lastNameAscending':\n          return instructors.sort(lastNameAscending);\n\n        case 'lastNameDescending':\n          return instructors.sort(lastNameDescending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableInstructors\", function () {\n      var _this$state = _this.state,\n          filterName = _this$state.filterName,\n          filterLocation = _this$state.filterLocation,\n          sort = _this$state.sort;\n      var allInstructors = _this.props.instructors;\n      var instructors;\n\n      if (filterName.length && !filterLocation.length) {\n        instructors = _this.onFilterByName();\n      } else if (!filterName.length && filterLocation.length) {\n        instructors = _this.onFilterByLocation();\n      } else if (filterName.length && filterLocation.length) {\n        var filteredByName = _this.onFilterByName();\n\n        instructors = _this.onFilterByLocation(filteredByName);\n      } else {\n        instructors = allInstructors;\n      }\n\n      if (sort) {\n        return _this.onSortInstructors(instructors);\n      }\n\n      return instructors || [];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForFilteredState\", function () {\n      var _this$state2 = _this.state,\n          filterName = _this$state2.filterName,\n          filterLocation = _this$state2.filterLocation;\n\n      if (!filterName.length && !filterLocation.length) {\n        _this.setState({\n          instructorsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapInstructors\", function () {\n      var instructors = _this.getMappableInstructors();\n\n      return instructors.map(function (instructor, index) {\n        return React.createElement(InstructorCard, {\n          index: index,\n          key: instructor.id,\n          instructor: instructor,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          onSetDropdown: _this.onSetDropdown,\n          onCloseDropdown: _this.onCloseDropdown,\n          dropdownIndex: _this.state.dropdownIndex,\n          onDeleteInstructor: _this.onDeleteInstructor,\n          onCloneInstructor: _this.onCloneInstructor,\n          onSaveInstructorChanges: _this.onSaveInstructorChanges\n        });\n      });\n    });\n\n    _this.state = {\n      instructorModalOpen: false,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      instructorsAreFiltered: false,\n      filterName: '',\n      filterLocation: '',\n      sort: ''\n    };\n    return _this;\n  }\n\n  _createClass(InstructorListPage, [{\n    key: \"render\",\n    value: function render() {\n      var instructorModalOpen = this.state.instructorModalOpen;\n      return React.createElement(React.Fragment, null, React.createElement(NewInstructorModal, {\n        open: instructorModalOpen,\n        onClose: this.onCloseInstructorModal,\n        onAddNewInstructor: this.onAddNewInstructor\n      }), React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(StickyContainer, null, React.createElement(Sticky, null, function (_ref4) {\n        var style = _ref4.style;\n        return React.createElement(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread({}, style, {\n            zIndex: 1999\n          })\n        }, React.createElement(\"div\", {\n          className: \"mobile-header\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\"\n        }, React.createElement(\"i\", {\n          className: \"material-icons\"\n        }, \"menu\"))), React.createElement(\"h2\", {\n          className: \"h1 white-text\"\n        }, React.createElement(\"span\", {\n          className: \"heading-holder\"\n        }, React.createElement(\"i\", {\n          className: \"icon-instructors\"\n        }), React.createElement(\"span\", {\n          className: \"heading-block\"\n        }, \"Instructors\"))));\n      }), React.createElement(FilterSection, {\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredLocationState: this.onSetFilteredLocationState,\n        onUnsetFilteredLocationState: this.onUnsetFilteredLocationState\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content\"\n      }, this.mapInstructors())))), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenInstructorModal,\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Instructor\"));\n    }\n  }]);\n\n  return InstructorListPage;\n}(React.Component);\n\nInstructorListPage.propTypes = {\n  instructors: PropTypes.array.isRequired,\n  onSetInstructors: PropTypes.func.isRequired\n};\nvar mapStateToProps = createStructuredSelector({\n  instructors: makeSelectInstructors()\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSetInstructors: function onSetInstructors(instructors) {\n      return dispatch(setInstructors(instructors));\n    }\n  };\n}\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(InstructorListPage);","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/ListPage/index.js"],"names":["React","PropTypes","connect","compose","createStructuredSelector","update","Sticky","StickyContainer","InstructorCard","FilterSection","NewInstructorModal","firstNameAscending","firstNameDescending","lastNameAscending","lastNameDescending","fetchInstructorsApi","createNewInstructorApi","setInstructors","makeSelectInstructors","InstructorListPage","props","onSetInstructors","instructors","length","formattedInstructors","setState","dropdownIndex","dropdownIsOpen","instructorModalOpen","newInstructor","onCreateNewInstructorApi","tempBasicInfo","activeStudents","pastStudents","unactivatedStudents","averageImprovement","averageInitialScore","averageFinalScore","studentsAchievingTargetScore","formattedNewInstructor","basicInfo","$set","updatedInstructors","$push","deletedInstructor","updatedProps","unfilteredInstructors","filter","instructor","id","cloneIndex","indexOf","newId","updatedInstructor","$splice","onCloseDropdown","accountInfo","firstName","lastName","email","gender","contactInfo","state","phone","streetAddress","city","zip","formattedBody","first_name","last_name","locations","address","originalInstructors","instructorToUpdate","updatedInstructorIndex","filterName","instructorsAreFiltered","filterLocation","checkForFilteredState","sort","reduce","finalArr","currentInstructor","instructorString","toLowerCase","push","preFilteredInstructors","allInstructors","onFilterByName","onFilterByLocation","filteredByName","onSortInstructors","getMappableInstructors","map","index","onSetDropdown","onDeleteInstructor","onCloneInstructor","onSaveInstructorChanges","onCloseInstructorModal","onAddNewInstructor","style","zIndex","onSetSort","onSetFilteredState","onUnsetFilteredState","onSetFilteredLocationState","onUnsetFilteredLocationState","mapInstructors","onOpenInstructorModal","Component","propTypes","array","isRequired","func","mapStateToProps","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector} from 'reselect';\nimport update from 'immutability-helper';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport InstructorCard from './components/InstructorCard';\nimport FilterSection from './components/FilterSection';\nimport NewInstructorModal from './components/NewInstructorModal';\n\n// import { saveNewSuccess as savePracticeTestSuccess, saveChangesSuccess, saveNewError as savePracticeTestError } from '../../utils/fieldValidation';\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\n\nimport {\n  fetchInstructorsApi,\n  createNewInstructorApi,\n} from '../index/api';\n\n\nimport {\n  setInstructors,\n} from '../index/actions';\n\n\nimport {\n  makeSelectInstructors,\n} from '../index/selectors';\n\n\nclass InstructorListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instructorModalOpen: false,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      instructorsAreFiltered: false,\n      filterName: '',\n      filterLocation: '',\n      sort: '',\n    };\n  }\n\n  componentDidMount = async() => {\n    const {onSetInstructors,instructors} = this.props;\n    if(instructors.length === 0) {\n      const {formattedInstructors:instructors} = await fetchInstructorsApi();\n      this.setState({\n        instructors,\n      });\n      onSetInstructors(instructors);\n    }\n  }\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIsOpen: true, dropdownIndex });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false, dropdownIndex: null });\n\n  onOpenInstructorModal = () => this.setState({ instructorModalOpen: true });\n  onCloseInstructorModal = () => this.setState({ instructorModalOpen: false });\n\n  onAddNewInstructor = (newInstructor) => {\n    this.onCreateNewInstructorApi(newInstructor);\n    const { instructors,onSetInstructors } = this.props;\n    const tempBasicInfo = {\n      activeStudents: 15,\n      pastStudents: 24,\n      unactivatedStudents: 29,\n      averageImprovement: 185,\n      averageInitialScore: 1037,\n      averageFinalScore: 1218,\n      studentsAchievingTargetScore: 12,\n    }\n    const formattedNewInstructor = update(newInstructor,{basicInfo:{$set:tempBasicInfo}});\n    const updatedInstructors = update(instructors,{$push:[formattedNewInstructor]});\n    onSetInstructors(updatedInstructors);\n  }\n\n  onDeleteInstructor = (deletedInstructor) => {\n    const updatedProps = update(this.props, {\n      instructors: unfilteredInstructors => unfilteredInstructors.filter(instructor => instructor.id !== deletedInstructor.id),\n    });\n    const { onSetInstructors } = this.props;\n    onSetInstructors(updatedProps.instructors);\n  }\n\n  onCloneInstructor = (instructor) => {\n    const cloneIndex = this.props.instructors.indexOf(instructor);\n    const newId = this.props.instructors.length + 1;\n    const updatedInstructor = update(instructor,{id:{$set:newId}})\n    const instructors = update(this.props.instructors, {\n      $splice: [[cloneIndex, 0, updatedInstructor]],\n    });\n    this.onCloseDropdown();\n    const { onSetInstructors } = this.props;\n    onSetInstructors(instructors);\n    this.onCreateNewInstructorApi(instructor);\n  }\n\n  onCreateNewInstructorApi = async(instructor) => {\n    const newId = this.props.instructors.length + 1;\n    const {accountInfo:{firstName,lastName,email,gender},contactInfo:{state,phone,streetAddress,city,zip}} = instructor;\n    const formattedBody = {\n        id:newId,\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        gender,\n        state,\n        locations: [],\n        phone,\n        address: streetAddress,\n        city,\n        zip,\n      };\n    await createNewInstructorApi(formattedBody);\n  }\n\n  onSaveInstructorChanges = (updatedInstructor) => {\n    const { instructors: originalInstructors,onSetInstructors } = this.props;\n    const instructorToUpdate = originalInstructors.filter(instructor => instructor.id === updatedInstructor.id)[0];\n    const updatedInstructorIndex = originalInstructors.indexOf(instructorToUpdate);\n    const instructors = update(originalInstructors, {\n      $splice: [[updatedInstructorIndex, 1, updatedInstructor]],\n    });\n    // saveChangesSuccess();\n    // this.setState({ instructors });\n    onSetInstructors(instructors);\n  }\n\n  onSetFilteredState = (filterName) => this.setState({ instructorsAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ instructorsAreFiltered: false, filterName: '' })\n\n  onSetFilteredLocationState = (filterLocation) => this.setState({ instructorsAreFiltered: true, filterLocation })\n  onUnsetFilteredLocationState = () => this.setState({ filterLocation: '' }, this.checkForFilteredState)\n\n  onSetSort = (sort) => this.setState({ sort })\n\n  onFilterByName = () => {\n    const { instructors } = this.props;\n    const { filterName } = this.state;\n    return instructors.reduce((finalArr, currentInstructor) => {\n      const { accountInfo: { lastName, firstName } } = currentInstructor;\n      const instructorString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (instructorString.indexOf(filterName) !== -1 && finalArr.indexOf(currentInstructor) === -1) {\n        finalArr.push(currentInstructor);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByLocation = (preFilteredInstructors = []) => {\n    const { instructors: allInstructors } = this.props;\n    const { filterLocation } = this.state;\n    let instructors;\n    if (preFilteredInstructors.length) {\n      instructors = preFilteredInstructors;\n    } else {\n      instructors = allInstructors;\n    }\n    return instructors.reduce((finalArr, currentInstructor) => {\n      const { contactInfo: { city } } = currentInstructor;\n      if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n        finalArr.push(currentInstructor);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortInstructors = (instructors) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'firstNameAscending':\n        return instructors.sort(firstNameAscending);\n      case 'firstNameDescending':\n        return instructors.sort(firstNameDescending);\n      case 'lastNameAscending':\n        return instructors.sort(lastNameAscending);\n      case 'lastNameDescending':\n        return instructors.sort(lastNameDescending);\n      default:\n        break;\n    }\n  }\n\n  getMappableInstructors = () => {\n    const { filterName, filterLocation, sort } = this.state;\n    const { instructors: allInstructors } = this.props;\n    let instructors;\n    if (filterName.length && !filterLocation.length) {\n      instructors = this.onFilterByName();\n    } else if (!filterName.length && filterLocation.length) {\n      instructors = this.onFilterByLocation();\n    } else if (filterName.length && filterLocation.length) {\n      const filteredByName = this.onFilterByName();\n      instructors = this.onFilterByLocation(filteredByName);\n    } else {\n      instructors = allInstructors;\n    }\n    if (sort) {\n      return this.onSortInstructors(instructors);\n    }\n    return instructors || [];\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterLocation } = this.state;\n    if (!filterName.length && !filterLocation.length) {\n      this.setState({ instructorsAreFiltered: false });\n    }\n  }\n\n  mapInstructors = () => {\n    const instructors = this.getMappableInstructors();\n    return instructors.map((instructor, index) => (\n      <InstructorCard\n        index={index}\n        key={instructor.id}\n        instructor={instructor}\n        dropdownIsOpen={this.state.dropdownIsOpen}\n        onSetDropdown={this.onSetDropdown}\n        onCloseDropdown={this.onCloseDropdown}\n        dropdownIndex={this.state.dropdownIndex}\n        onDeleteInstructor={this.onDeleteInstructor}\n        onCloneInstructor={this.onCloneInstructor}\n        onSaveInstructorChanges={this.onSaveInstructorChanges}\n      />\n    ));\n  }\n\n  render() {\n    const { instructorModalOpen } = this.state;\n    return (\n      <React.Fragment>\n        <NewInstructorModal\n          open={instructorModalOpen}\n          onClose={this.onCloseInstructorModal}\n          onAddNewInstructor={this.onAddNewInstructor}\n        />\n        <div className=\"main-holder grey lighten-5\">\n          <StickyContainer>\n          <Sticky>\n        {({ style }) => (\n          <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n            <div className=\"mobile-header\">\n              <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            </div>\n            <h2 className=\"h1 white-text\">\n              <span className=\"heading-holder\">\n                <i className=\"icon-instructors\"></i>\n                <span className=\"heading-block\">Instructors</span>\n              </span>\n            </h2>\n          </div>\n        )}\n        </Sticky>\n          <FilterSection\n            onSetSort={this.onSetSort}\n            onSetFilteredState={this.onSetFilteredState}\n            onUnsetFilteredState={this.onUnsetFilteredState}\n            onSetFilteredLocationState={this.onSetFilteredLocationState}\n            onUnsetFilteredLocationState={this.onUnsetFilteredLocationState}\n          />\n          <div className=\"content-section\">\n            <div className=\"row d-flex-content\">\n              {this.mapInstructors()}\n            </div>\n          </div>\n          </StickyContainer>\n        </div>\n        <a\n          href=\"#\"\n          onClick={this.onOpenInstructorModal}\n          className=\"waves-effect waves-teal btn add-btn\"\n        >\n          <i className=\"material-icons\">add</i>\n          New Instructor\n        </a>\n      </React.Fragment>\n    );\n  }\n}\n\n\nInstructorListPage.propTypes = {\n  instructors:PropTypes.array.isRequired,\n  onSetInstructors:PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = createStructuredSelector({\n  instructors:makeSelectInstructors(),\n})\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    onSetInstructors:instructors => dispatch(setInstructors(instructors)),\n  }\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)\n\nexport default compose(withConnect)(InstructorListPage);\n"]},"metadata":{},"sourceType":"module"}