{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n// TODO: change componentDidMount for when user comes though as props, profile pic change\nimport React from 'react';\nimport update from 'immutability-helper';\nimport Dropdown from '../components/FormComponents/Dropdown';\nimport getValueFromState from '../components/utils/getValueFromState';\nimport stateOptions from '../components/utils/stateOptions';\nimport { nestedEditFieldValidation } from '../components/utils/fieldValidation';\nimport sampleInstructors from \"../components/utils/sampleInstructors\";\nconst timeZoneOptions = [{\n  label: \"(UTC - 10:00) Hawaii Time Zone (US)\",\n  value: \"Hawaii\"\n}, {\n  label: \"(UTC - 9:00) Alaska Time Zone (US)\",\n  value: \"Alaska\"\n}, {\n  label: \"(UTC - 8:00) Paciﬁc/Yukon Time Zone (US & Canada)\",\n  value: \"Pacific\"\n}, {\n  label: \"(UTC - 7:00) Mountain Time Zone (US & Canada)\",\n  value: \"Mountain\"\n}, {\n  label: \"(UTC - 6:00) Central Time Zone (US & Canada)\",\n  value: \"Central\"\n}, {\n  label: \"(UTC - 5:00) Eastern Time Zone (US & Canada)\",\n  value: \"Eastern\"\n}, {\n  label: \"(UTC - 4:00) Atlantic Time Zone (Canada)\",\n  value: \"Atlantic\"\n}, {\n  label: \"(UTC - 3:30) Newfoundland Time Zone (Canada)\",\n  value: \"Newfoundland\"\n}];\n\nclass Account extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetValidation\", (validation, cb) => this.setState({\n      validation\n    }, cb));\n\n    _defineProperty(this, \"onUpdateProfile\", async event => {\n      event.preventDefault(); // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n\n      const {\n        updatedAccount\n      } = this.state;\n      const valid = await nestedEditFieldValidation(this.state, this.state.updatedAccount, this.onSetValidation, validation => console.warn('validation', validation));\n\n      if (!valid) {\n        // return onSaveChangesError();\n        console.warn('not valid');\n      }\n\n      this.setState({\n        originalAccount: updatedAccount\n      }); // return onSavePassageChanges(updatedUser);\n    });\n\n    _defineProperty(this, \"onSendPasswordResetEmail\", event => {\n      event.preventDefault();\n      console.warn('Stubbed out password reset email');\n    });\n\n    _defineProperty(this, \"onResetPassword\", event => {\n      event.preventDefault();\n      const {\n        actions: {\n          password,\n          confirmPassword\n        }\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        console.warn('Toast is broken, have a console log'); // return this.notify\n      }\n\n      if (!confirmPassword.length) {\n        console.warn('Toast is broken, have a console log'); // return this.notify()\n      }\n\n      return console.warn('stubbed out password reset');\n    });\n\n    _defineProperty(this, \"handleDetailsChange\", (event, name) => {\n      const {\n        updatedAccount: previousAccountState\n      } = this.state;\n      const value = event.target ? event.target.value : event;\n      const updatedAccount = update(previousAccountState, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState({\n        updatedAccount\n      });\n    });\n\n    this.state = {\n      originalAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\"\n      },\n      updatedAccount: {\n        firstName: \"\",\n        lastName: \"\",\n        avatarURL: \"\",\n        addressLine1: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\",\n        timeZone: \"\",\n        email: \"\"\n      },\n      actions: {\n        ccAdmin: false,\n        requireUserToChange: false,\n        password: '',\n        confirmPassword: ''\n      },\n      validation: {\n        firstName: true,\n        lastName: true,\n        email: true\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      firstName,\n      lastName,\n      avatarURL,\n      addressLine1,\n      city,\n      state,\n      zipCode,\n      timeZone,\n      email = {}\n    } = sampleInstructors[0];\n    const updatedAccount = {\n      firstName,\n      lastName,\n      avatarURL,\n      addressLine1,\n      city,\n      state,\n      zipCode,\n      timeZone,\n      email\n    };\n    const {\n      originalAccount: originalAccountState\n    } = this.state;\n    const originalAccount = update(originalAccountState, {\n      $merge: updatedAccount\n    });\n    this.setState({\n      originalAccount,\n      updatedAccount\n    }); // eslint-disable-line\n  } // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      avatarURL,\n      addressLine1,\n      city,\n      state,\n      zipCode,\n      timeZone,\n      email = {}\n    } = this.state.updatedAccount;\n    return React.createElement(\"main\", {\n      id: \"main\",\n      role: \"main\"\n    }, React.createElement(\"div\", {\n      className: \"main-holder grey lighten-5\"\n    }, React.createElement(\"div\", {\n      className: \"title-row card-panel\"\n    }, React.createElement(\"div\", {\n      className: \"mobile-header\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      \"data-target\": \"slide-out\",\n      className: \"sidenav-trigger\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons\"\n    }, \"menu\"))), React.createElement(\"h2\", {\n      className: \"h1 white-text\"\n    }, React.createElement(\"span\", {\n      className: \"heading-holder\"\n    }, React.createElement(\"i\", {\n      className: \"icon-student\"\n    }), React.createElement(\"span\", {\n      className: \"heading-block\"\n    }, \"My Account\")))), React.createElement(\"div\", {\n      className: \"content-section\"\n    }, React.createElement(\"div\", {\n      className: \"content-section-holder\"\n    }, React.createElement(\"form\", {\n      action: \"#\",\n      className: \"custom-form\"\n    }, React.createElement(\"fieldset\", null, React.createElement(\"div\", {\n      className: \"container-xs container-align-left\"\n    }, React.createElement(\"div\", {\n      className: \"card-block\"\n    }, React.createElement(\"div\", {\n      className: \"card\"\n    }, React.createElement(\"div\", {\n      className: \"card-content card-account\"\n    }, React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m3 l5\"\n    }, React.createElement(\"div\", {\n      className: \"avatar\"\n    }, React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"\"\n    }), React.createElement(\"span\", {\n      className: \"btn-upload icon-photocam\"\n    }, React.createElement(\"input\", {\n      type: \"file\"\n    })))), React.createElement(\"div\", {\n      className: \"col s12 m9 l7\"\n    }, React.createElement(\"div\", {\n      className: \"input-field input-field-icon\"\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email Address\",\n      value: email,\n      onChange: event => this.handleDetailsChange(event, \"email\")\n    }), React.createElement(\"span\", {\n      className: \"input-icon icon-letter2\"\n    })), React.createElement(\"div\", {\n      className: \"input-field input-field-icon\"\n    }, React.createElement(\"input\", {\n      style: {\n        width: '44%'\n      },\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: event => this.handleDetailsChange(event, \"firstName\")\n    }), React.createElement(\"input\", {\n      style: {\n        width: '44%'\n      },\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: event => this.handleDetailsChange(event, \"lastName\")\n    }), React.createElement(\"span\", {\n      className: \"input-icon icon-user-line\"\n    })), React.createElement(\"div\", {\n      className: \"input-field input-field-icon\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Street Address\",\n      value: addressLine1,\n      onChange: event => this.handleDetailsChange(event, \"addressLine1\")\n    }), React.createElement(\"span\", {\n      className: \"input-icon icon-search\"\n    })), React.createElement(\"div\", {\n      className: \"input-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"City\",\n      value: city,\n      onChange: event => this.handleDetailsChange(event, \"city\")\n    })), React.createElement(\"div\", {\n      className: \"row mb-0\"\n    }, React.createElement(\"div\", {\n      className: \"col s12 m6\"\n    }, React.createElement(\"div\", {\n      className: \"input-field\",\n      style: {\n        zIndex: 1001\n      }\n    }, React.createElement(Dropdown, {\n      value: getValueFromState(state, stateOptions),\n      onChange: event => this.handleDetailsChange(event, 'state'),\n      options: stateOptions,\n      label: \"State\",\n      stateKey: \"state\",\n      dropdownKey: \"state\"\n    }))), React.createElement(\"div\", {\n      className: \"col s12 m6\",\n      style: {\n        marginTop: '9%'\n      }\n    }, React.createElement(\"div\", {\n      className: \"input-field\"\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Zip Code\",\n      value: zipCode,\n      onChange: event => this.handleDetailsChange(event, \"zipCode\")\n    })))), React.createElement(\"div\", {\n      className: \"input-field\"\n    }, React.createElement(Dropdown, {\n      value: getValueFromState(timeZone, timeZoneOptions),\n      options: timeZoneOptions,\n      stateKey: \"timeZone\",\n      dropdownKey: \"timeZone\",\n      label: \"Time Zone\",\n      onChange: event => this.handleDetailsChange(event, 'timeZone')\n    }))))))), React.createElement(\"div\", {\n      className: \"account_btn-holder\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onResetPassword\n    }, \"Reset Password\"), React.createElement(\"a\", {\n      className: \"btn\",\n      href: \"#\",\n      onClick: this.onUpdateProfile\n    }, \"Update Pro\\uFB01le\")))))))));\n  }\n\n}\n\nexport default Account;","map":null,"metadata":{},"sourceType":"module"}