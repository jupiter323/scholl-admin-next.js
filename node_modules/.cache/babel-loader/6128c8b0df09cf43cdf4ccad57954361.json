{"ast":null,"code":"/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nvar LocationsToManage = function LocationsToManage(_ref) {\n  var locations = _ref.state.locations,\n      onOpenLocationModal = _ref.onOpenLocationModal,\n      _onRemoveLocation = _ref.onRemoveLocation;\n  return React.createElement(\"div\", {\n    className: \"col s12 l5\"\n  }, React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h3\", null, \"Locations to Manage\"), React.createElement(\"div\", {\n    className: \"card-main card card-instructor\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"text-block\"\n  }, React.createElement(\"p\", null, \"If this user manages one or more locations/branches, add them below. This user will be able to view and edit the accounts for all instructors and students at selected locations. \")), React.createElement(\"div\", {\n    className: \"box-scrollable\"\n  }, React.createElement(\"div\", {\n    className: \"height-360 jcf-scrollable\"\n  }, React.createElement(\"div\", {\n    className: \"card-location-holder\",\n    style: {\n      height: '100%',\n      overflowY: 'scroll'\n    }\n  }, !locations.length && React.createElement(\"div\", {\n    className: \"add-class-box\"\n  }), locations.map(function (location, index) {\n    return React.createElement(LocationCard, {\n      key: index,\n      location: location,\n      onRemoveLocation: function onRemoveLocation() {\n        return _onRemoveLocation(index, 'locationsToManage', 'locations');\n      }\n    });\n  })))), React.createElement(\"div\", {\n    className: \"card-footer right-align\"\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    onClick: onOpenLocationModal,\n    className: \"modal-trigger link-block\"\n  }, \"Add Location\"))))));\n};\n\nLocationsToManage.propTypes = {\n  state: PropTypes.object.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired\n};\nexport default LocationsToManage;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Instructor\\DetailManagementPage\\components\\LocationsToManage\\index.js"],"names":["React","PropTypes","LocationCard","LocationsToManage","locations","state","onOpenLocationModal","onRemoveLocation","height","overflowY","length","map","location","index","propTypes","object","isRequired","func"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAYC,SAAZ,QAAGC,KAAH,CAAYD,SAAZ;AAAA,MAAyBE,mBAAzB,QAAyBA,mBAAzB;AAAA,MAA8CC,iBAA9C,QAA8CA,gBAA9C;AAAA,SACxB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,sDADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oNADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B;AAA7C,KACG,CAACL,SAAS,CAACM,MAAX,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,IAFJ,EAIGN,SAAS,CAACO,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX;AAAA,WACb,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAnB;AAA0B,MAAA,QAAQ,EAAED,QAApC;AAA8C,MAAA,gBAAgB,EAAE;AAAA,eAAML,iBAAgB,CAACM,KAAD,EAAQ,mBAAR,EAA6B,WAA7B,CAAtB;AAAA;AAAhE,MADa;AAAA,GAAd,CAJH,CADF,CADF,CAJF,EAgBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,OAAO,EAAEP,mBAFX;AAGE,IAAA,SAAS,EAAC;AAHZ,oBADF,CAhBF,CADF,CAFF,CADF,CADwB;AAAA,CAA1B;;AAoCAH,iBAAiB,CAACW,SAAlB,GAA8B;AAC5BT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADI;AAE5BT,EAAAA,gBAAgB,EAAEN,SAAS,CAACgB,IAAV,CAAeD,UAFL;AAG5BV,EAAAA,mBAAmB,EAAEL,SAAS,CAACgB,IAAV,CAAeD;AAHR,CAA9B;AAMA,eAAeb,iBAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nconst LocationsToManage = ({ state: { locations }, onOpenLocationModal, onRemoveLocation }) => (\n  <div className=\"col s12 l5\">\n    <div className=\"card-block\">\n      <h3>Locations to Manage</h3>\n      <div className=\"card-main card card-instructor\">\n        <div className=\"card-content\">\n          <div className=\"text-block\">\n            <p>If this user manages one or more locations/branches, add them below. This user will be able to view and edit the accounts for all instructors and students at selected locations. </p>\n          </div>\n          <div className=\"box-scrollable\">\n            <div className=\"height-360 jcf-scrollable\">\n              <div className=\"card-location-holder\" style={{ height: '100%', overflowY: 'scroll' }}>\n                {!locations.length && (\n                  <div className=\"add-class-box\"></div>\n                )}\n                {locations.map((location, index) => (\n                  <LocationCard key={index} location={location} onRemoveLocation={() => onRemoveLocation(index, 'locationsToManage', 'locations')} />\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-footer right-align\">\n            <a\n              href=\"#\"\n              onClick={onOpenLocationModal}\n              className=\"modal-trigger link-block\"\n            >\n              Add Location\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocationsToManage.propTypes = {\n  state: PropTypes.object.isRequired,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired,\n};\n\nexport default LocationsToManage;\n"]},"metadata":{},"sourceType":"module"}