{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/AssignedTestCard/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nvar AssignedTestCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignedTestCard, _React$Component);\n\n  function AssignedTestCard(props) {\n    var _this;\n\n    _classCallCheck(this, AssignedTestCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignedTestCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    return _this;\n  }\n\n  _createClass(AssignedTestCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          dropdownIndex = _this$props2.dropdownIndex,\n          index = _this$props2.index,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          _this$props2$test = _this$props2.test,\n          test_name = _this$props2$test.test_name,\n          test_description = _this$props2$test.test_description,\n          due_date = _this$props2$test.due_date,\n          assignment_date = _this$props2$test.assignment_date,\n          student_test_id = _this$props2$test.student_test_id,\n          student_id = _this$props2$test.student_id,\n          onEnterAnswers = _this$props2.onEnterAnswers,\n          handleTestSettingModalOpen = _this$props2.handleTestSettingModalOpen,\n          onDeleteTest = _this$props2.onDeleteTest,\n          onTestFlagReviewed = _this$props2.onTestFlagReviewed;\n      var formattedDueDate = moment(due_date).format(\"MM/DD/YY\");\n      var formattedAssignedDate = moment(assignment_date).format(\"MM/DD/YY\");\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-full-width card-scored card\",\n        style: {\n          margin: \"10px\",\n          minWidth: \"580px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \" card-panel-row row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"to-do-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        style: {\n          marginBottom: \"0px !important\",\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        className: \"list-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, test_name)), __jsx(\"div\", {\n        className: \"col s6 m6 right-align\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row icons-row\",\n        style: {\n          marginBottom: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"dropdown-block col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger btn\",\n        onClick: this.handleDropdownClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n        id: \"dropdown01\",\n        style: {\n          display: \"block\",\n          minWidth: \"160px\",\n          transformOrigin: \"0px 0px 0px\",\n          opacity: \"1\",\n          transform: \"scaleX(1) scaleY(1)\",\n          width: \"210px\"\n        },\n        className: \"dropdown-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: handleTestSettingModalOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Edit Test Settings\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return onEnterAnswers(student_test_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Edit/Enter Answers\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Excuse/Unexcuse lateness\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          onTestFlagReviewed(student_test_id, student_id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Mark flags reviewed\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Reset\")), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          onDeleteTest(student_test_id, student_id, \"assignedStudentTests\");\n        },\n        className: \"red-text text-darken-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Unassign\"))) : null)))), __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"info-list info-list-gray  assigned\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"list-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"ico-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"status-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Assigned \", formattedAssignedDate))), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"list-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Due \", formattedDueDate)))), __jsx(\"div\", {\n        className: \"card-meta-block\",\n        style: {\n          padding: \"0px\",\n          marginTop: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(\"dl\", {\n        className: \"dl-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, __jsx(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Version:\"), __jsx(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, test_description))))))))))));\n    }\n  }]);\n\n  return AssignedTestCard;\n}(React.Component);\n\nAssignedTestCard.propTypes = {\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\nexport default AssignedTestCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/AssignedTestCard/index.js"],"names":["React","PropTypes","moment","AssignedTestCard","props","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","dropdownIndex","test","test_name","test_description","due_date","assignment_date","student_test_id","student_id","onEnterAnswers","handleTestSettingModalOpen","onDeleteTest","onTestFlagReviewed","formattedDueDate","format","formattedAssignedDate","margin","minWidth","marginBottom","marginTop","handleDropdownClick","display","transformOrigin","opacity","transform","width","e","padding","Component","propTypes","func","isRequired","bool","onDownloadReport","object"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,0EAIG,UAAAC,KAAK,EAAI;AAAA,wBACqC,MAAKD,KAD1C;AAAA,UACrBE,aADqB,eACrBA,aADqB;AAAA,UACNC,eADM,eACNA,eADM;AAAA,UACWC,cADX,eACWA,cADX;AAAA,UAC2BC,KAD3B,eAC2BA,KAD3B;AAE7BJ,MAAAA,KAAK,CAACK,cAAN;;AACA,UAAIF,cAAJ,EAAoB;AAClB,eAAOD,eAAe,EAAtB;AACD;;AACD,aAAOD,aAAa,CAACG,KAAD,CAApB;AACD,KAXkB;;AAAA;AAElB;;;;6BAWQ;AAAA,yBAUH,KAAKL,KAVF;AAAA,UAELO,aAFK,gBAELA,aAFK;AAAA,UAGLF,KAHK,gBAGLA,KAHK;AAAA,UAILD,cAJK,gBAILA,cAJK;AAAA,2CAKLI,IALK;AAAA,UAKGC,SALH,qBAKGA,SALH;AAAA,UAKcC,gBALd,qBAKcA,gBALd;AAAA,UAKgCC,QALhC,qBAKgCA,QALhC;AAAA,UAK0CC,eAL1C,qBAK0CA,eAL1C;AAAA,UAK2DC,eAL3D,qBAK2DA,eAL3D;AAAA,UAK4EC,UAL5E,qBAK4EA,UAL5E;AAAA,UAMLC,cANK,gBAMLA,cANK;AAAA,UAOLC,0BAPK,gBAOLA,0BAPK;AAAA,UAQLC,YARK,gBAQLA,YARK;AAAA,UASLC,kBATK,gBASLA,kBATK;AAWP,UAAMC,gBAAgB,GAAGrB,MAAM,CAACa,QAAD,CAAN,CAAiBS,MAAjB,CAAwB,UAAxB,CAAzB;AACA,UAAMC,qBAAqB,GAAGvB,MAAM,CAACc,eAAD,CAAN,CAAwBQ,MAAxB,CAA+B,UAA/B,CAA9B;AACA,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE,gBAAhB;AAAkCC,UAAAA,SAAS,EAAE;AAA7C,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgChB,SAAhC,CADF,CAJF,EAOE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAAEe,UAAAA,YAAY,EAAE;AAAhB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,SAAS,EAAC,sBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKE,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAG,QAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,EAQiBtB,cAAc,IAAIG,aAAa,KAAKF,KARrD,GASI;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,KAAK,EAAE;AACLsB,UAAAA,OAAO,EAAE,OADJ;AAELJ,UAAAA,QAAQ,EAAE,OAFL;AAGLK,UAAAA,eAAe,EAAE,aAHZ;AAILC,UAAAA,OAAO,EAAE,GAJJ;AAKLC,UAAAA,SAAS,EAAE,qBALN;AAMLC,UAAAA,KAAK,EAAE;AANF,SAFT;AAUE,QAAA,SAAS,EAAC,kBAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAEf,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAZF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAMD,cAAc,CAACF,eAAD,CAApB;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CAjBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CAtBF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,iBAACmB,CAAD,EAAO;AACdA,UAAAA,CAAC,CAAC1B,cAAF;AACAY,UAAAA,kBAAkB,CAACL,eAAD,EAAkBC,UAAlB,CAAlB;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CA3BF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAtCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,iBAACkB,CAAD,EAAO;AACdA,UAAAA,CAAC,CAAC1B,cAAF;AACAW,UAAAA,YAAY,CAACJ,eAAD,EAAkBC,UAAlB,EAA8B,sBAA9B,CAAZ;AACD,SALH;AAME,QAAA,SAAS,EAAC,wBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CA3CF,CATJ,QADF,CADF,CAPF,CADF,EAgFE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwCO,qBAAxC,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA4BF,gBAA5B,CAFF,CADF,CAPF,CADF,EAeE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AAAEc,UAAAA,OAAO,EAAE,KAAX;AAAkBR,UAAAA,SAAS,EAAE;AAA7B,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKf,gBAAL,CAFF,CAJF,CAfF,CADF,CAhFF,CADF,CADF,CADF,CADF,CAJF,CADF,CADF;AA6HD;;;;EAxJ4Bd,KAAK,CAACsC,S;;AA2JrCnC,gBAAgB,CAACoC,SAAjB,GAA6B;AAC3BjC,EAAAA,aAAa,EAAEL,SAAS,CAACuC,IAAV,CAAeC,UADH;AAE3BjC,EAAAA,cAAc,EAAEP,SAAS,CAACyC,IAAV,CAAeD,UAFJ;AAG3BlC,EAAAA,eAAe,EAAEN,SAAS,CAACuC,IAAV,CAAeC,UAHL;AAI3BE,EAAAA,gBAAgB,EAAE1C,SAAS,CAACuC,IAAV,CAAeC,UAJN;AAK3B7B,EAAAA,IAAI,EAAEX,SAAS,CAAC2C,MAAV,CAAiBH;AALI,CAA7B;AAQA,eAAetC,gBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass AssignedTestCard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleDropdownClick = event => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  };\n\n  render() {\n    const {\n      dropdownIndex,\n      index,\n      dropdownIsOpen,\n      test: { test_name, test_description, due_date, assignment_date, student_test_id, student_id },\n      onEnterAnswers,\n      handleTestSettingModalOpen,\n      onDeleteTest,\n      onTestFlagReviewed,\n    } = this.props;\n    const formattedDueDate = moment(due_date).format(\"MM/DD/YY\");\n    const formattedAssignedDate = moment(assignment_date).format(\"MM/DD/YY\");\n    return (\n      <React.Fragment>\n        <div\n          className=\"card-full-width card-scored card\"\n          style={{ margin: \"10px\", minWidth: \"580px\" }}\n        >\n          <div className=\"card-content\">\n            <div className=\" card-panel-row row mb-0\">\n              <div className=\"col s12\">\n                <ul className=\"to-do-list\">\n                  <li>\n                    <div\n                      className=\"row\"\n                      style={{ marginBottom: \"0px !important\", marginTop: \"20px\" }}\n                    >\n                      <div className=\"col s12 m6\">\n                        <strong className=\"list-title\">{test_name}</strong>\n                      </div>\n                      <div className=\"col s6 m6 right-align\">\n                        <div className=\"row icons-row\" style={{ marginBottom: \"10px\" }}>\n                          <div className=\"dropdown-block col\">\n                            <a\n                              href=\"#\"\n                              className=\"dropdown-trigger btn\"\n                              onClick={this.handleDropdownClick}\n                            >\n                              <i className=\"material-icons dots-icon\">more_vert</i>\n                            </a>\n                            <If condition={dropdownIsOpen && dropdownIndex === index}>\n                              <ul\n                                id=\"dropdown01\"\n                                style={{\n                                  display: \"block\",\n                                  minWidth: \"160px\",\n                                  transformOrigin: \"0px 0px 0px\",\n                                  opacity: \"1\",\n                                  transform: \"scaleX(1) scaleY(1)\",\n                                  width: \"210px\",\n                                }}\n                                className=\"dropdown-content\"\n                              >\n                                <li>\n                                  <a href=\"#\" onClick={handleTestSettingModalOpen}>\n                                    Edit Test Settings\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" onClick={() => onEnterAnswers(student_test_id)}>\n                                    Edit/Enter Answers\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Excuse/Unexcuse lateness\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      onTestFlagReviewed(student_test_id, student_id);\n                                    }}\n                                  >\n                                    Mark flags reviewed\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Reset\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      onDeleteTest(student_test_id, student_id, \"assignedStudentTests\");\n                                    }}\n                                    className=\"red-text text-darken-3\"\n                                  >\n                                    Unassign\n                                  </a>\n                                </li>\n                              </ul>\n                            </If>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col s12 m8\">\n                        <ul className=\"info-list info-list-gray  assigned\">\n                          <li>\n                            <span className=\"list-status\">\n                              <span className=\"ico-mark\" />\n                              <span className=\"status-text\">Assigned {formattedAssignedDate}</span>\n                            </span>\n                          </li>\n                          <li>\n                            <span className=\"list-date\">\n                              <i className=\"icon-calendar\" />\n                              <span className=\"date\">Due {formattedDueDate}</span>\n                            </span>\n                          </li>\n                        </ul>\n                        <div\n                          className=\"card-meta-block\"\n                          style={{ padding: \"0px\", marginTop: \"10px\" }}\n                        >\n                          <dl className=\"dl-horizontal\">\n                            <dt>Version:</dt>\n                            <dd>{test_description}</dd>\n                          </dl>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nAssignedTestCard.propTypes = {\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired,\n};\n\nexport default AssignedTestCard;\n"]},"metadata":{},"sourceType":"module"}