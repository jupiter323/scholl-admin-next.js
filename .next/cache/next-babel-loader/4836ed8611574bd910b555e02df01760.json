{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar AccountSettings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccountSettings, _React$Component);\n\n  function AccountSettings(props) {\n    _classCallCheck(this, AccountSettings);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AccountSettings).call(this, props));\n  }\n\n  _createClass(AccountSettings, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$state = _this$props.state,\n          start_date = _this$props$state.start_date,\n          end_date = _this$props$state.end_date,\n          active = _this$props$state.active,\n          isExclude = _this$props$state.isExclude,\n          handleDetailsChange = _this$props.handleDetailsChange;\n      return __jsx(\"div\", {\n        className: \"card-block\"\n      }, __jsx(\"h3\", null, \"Account Settings\"), __jsx(\"div\", {\n        className: \"card-main card\"\n      }, __jsx(\"div\", {\n        className: \"card-content\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col s6\"\n      }, __jsx(\"div\", {\n        className: \"datepicker-field input-field\"\n      }, __jsx(\"i\", {\n        className: \"icon-calendar\"\n      }), __jsx(DatePicker, {\n        id: \"course_start_date\",\n        selected: start_date,\n        onChange: function onChange(date) {\n          return handleDetailsChange(date, 'start_date', 'accountInfo');\n        },\n        placeholderText: \"Course Start Date\"\n      }))), __jsx(\"div\", {\n        className: \"col s6\"\n      }, __jsx(\"div\", {\n        className: \"datepicker-field input-field\"\n      }, __jsx(\"i\", {\n        className: \"icon-calendar\"\n      }), __jsx(DatePicker, {\n        id: \"course_end_date\",\n        selected: end_date,\n        onChange: function onChange(date) {\n          return handleDetailsChange(date, 'end_date', 'accountInfo');\n        },\n        placeholderText: \"Course End Date\"\n      })))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col s12\"\n      }, __jsx(\"div\", {\n        className: \"check-holder\"\n      }, __jsx(\"p\", null, __jsx(\"label\", null, __jsx(\"input\", {\n        type: \"checkbox\",\n        className: \"filled-in\",\n        checked: active,\n        onChange: function onChange(event) {\n          return handleDetailsChange(event, 'active', 'accountInfo', 'checkBox');\n        }\n      }), __jsx(\"span\", null, \"Inactive\"))), __jsx(\"span\", {\n        className: \"card-note\"\n      }, \"Select this option when you no longer want this student to appear on your list of current students. All student data is retained and, by default, included in instructor and global statistics.\")))), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col s12\"\n      }, __jsx(\"div\", {\n        className: \"input-field\"\n      }, __jsx(\"select\", {\n        id: \"default_session_duration\"\n      }, __jsx(\"option\", null, \"Use organization default\"), __jsx(\"option\", null, \"Use organization default\"), __jsx(\"option\", null, \"Use organization default\")), __jsx(\"label\", {\n        className: \"label\",\n        htmlFor: \"default_session_duration\"\n      }, \"Default Session Duration\")))), __jsx(\"p\", null, __jsx(\"label\", {\n        className: \"label-wrap\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        className: \"filled-in\",\n        checked: isExclude,\n        onChange: function onChange(event) {\n          return handleDetailsChange(event, 'isExclude', 'accountInfo', 'checkBox');\n        }\n      }), __jsx(\"span\", null, \"Exclude Class from Performance Statistics\"))))));\n    }\n  }]);\n\n  return AccountSettings;\n}(React.Component);\n\nAccountSettings.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default AccountSettings;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/SharedModalComponents/AccountSettings/index.js"],"names":["React","PropTypes","DatePicker","AccountSettings","props","state","start_date","end_date","active","isExclude","handleDetailsChange","date","event","Component","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nclass AccountSettings extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      state: { start_date, end_date, active, isExclude },handleDetailsChange,\n    } = this.props;\n    return (\n      <div className=\"card-block\">\n        <h3>Account Settings</h3>\n        <div className=\"card-main card\">\n          <div className=\"card-content\">\n            <div className=\"row\">\n              <div className=\"col s6\">\n                <div className=\"datepicker-field input-field\">\n                  <i className=\"icon-calendar\" />\n                    <DatePicker\n                      id=\"course_start_date\"\n                      selected={start_date}\n                      onChange={(date) => handleDetailsChange(date, 'start_date', 'accountInfo')}\n                      placeholderText=\"Course Start Date\"\n                    />\n                </div>\n              </div>\n              <div className=\"col s6\">\n                <div className=\"datepicker-field input-field\">\n                  <i className=\"icon-calendar\" />\n                    <DatePicker\n                      id=\"course_end_date\"\n                      selected={end_date}\n                      onChange={(date) => handleDetailsChange(date, 'end_date', 'accountInfo')}\n                      placeholderText=\"Course End Date\"\n                    />\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col s12\">\n                <div className=\"check-holder\">\n                  <p>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        className=\"filled-in\"\n                        checked={active}\n                        onChange={(event) => handleDetailsChange(event, 'active', 'accountInfo','checkBox')}\n                      />\n                      <span>Inactive</span>\n                    </label>\n                  </p>\n                  <span className=\"card-note\">\n                    Select this option when you no longer want this student to\n                    appear on your list of current students. All student data is\n                    retained and, by default, included in instructor and global\n                    statistics.\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col s12\">\n                <div className=\"input-field\">\n                  <select id=\"default_session_duration\">\n                    <option>Use organization default</option>\n                    <option>Use organization default</option>\n                    <option>Use organization default</option>\n                  </select>\n                  <label className=\"label\" htmlFor=\"default_session_duration\">\n                    Default Session Duration\n                  </label>\n                </div>\n              </div>\n            </div>\n            <p>\n              <label className=\"label-wrap\">\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={isExclude}\n                  onChange={(event) => handleDetailsChange(event, 'isExclude', 'accountInfo','checkBox')}\n                />\n                <span>Exclude Class from Performance Statistics</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAccountSettings.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange:PropTypes.func.isRequired,\n};\n\nexport default AccountSettings;\n"]},"metadata":{},"sourceType":"module"}