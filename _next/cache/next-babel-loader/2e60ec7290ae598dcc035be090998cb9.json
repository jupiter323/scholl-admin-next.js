{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/common/GroupBlock.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SubBlock from './SubBlock';\nimport { getScoreStatus } from '../common/GetScoreStatus';\n\nclass GroupBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"mapGroupRow\", () => {\n      const {\n        data: {\n          children\n        }\n      } = this.props;\n\n      if (children.length !== 0) {\n        return children.map(children => __jsx(SubBlock, {\n          data: children,\n          key: children.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  render() {\n    const {\n      data: {\n        name,\n        score: {\n          percent_correct,\n          correct,\n          incorrect,\n          total\n        }\n      }\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"graphs-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"graph-row graph-row-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"graph-col text-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"graph-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: getScoreStatus(percent_correct.toFixed(0)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, percent_correct.toFixed(0), \"%\"), name)), __jsx(\"div\", {\n      className: \"graph-col graph-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"graph-linear-students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"graph-holder\",\n      style: {\n        width: `${(correct / total * 100).toFixed(0)}%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"graph-admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"part-red\",\n      style: {\n        width: `${(incorrect / total * 100).toFixed(0)}%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))), __jsx(\"div\", {\n      className: \"graph-col graph-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"text-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, correct), __jsx(\"span\", {\n      className: \"text-small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"out of\"), __jsx(\"span\", {\n      className: \"text-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, total))), this.props.data.children && this.mapGroupRow());\n  }\n\n}\n\nGroupBlock.propTypes = {};\nexport default GroupBlock;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestStrengthsAndWeakesses/components/common/GroupBlock.js"],"names":["React","PropTypes","SubBlock","getScoreStatus","GroupBlock","Component","constructor","props","data","children","length","map","id","render","name","score","percent_correct","correct","incorrect","total","toFixed","width","mapGroupRow","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SubBlock from './SubBlock';\n\nimport { getScoreStatus } from '../common/GetScoreStatus';\n\nclass GroupBlock extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  mapGroupRow = () => {\n    const { data: { children } } = this.props;\n    if (children.length !== 0) {\n      return children.map(children => <SubBlock data={children} key={children.id} />);\n    }\n  };\n\n  render() {\n    const { data: { name, score: { percent_correct, correct, incorrect, total } } } = this.props;\n    return (\n      <div className=\"graphs-block\">\n        <div className=\"graph-row graph-row-title\">\n          <div className=\"graph-col text-column\">\n            <h3 className=\"graph-title\">\n              <span className={getScoreStatus((percent_correct).toFixed(0))}>\n                {(percent_correct).toFixed(0)}%\n              </span>\n              {name}\n            </h3>\n          </div>\n          <div className=\"graph-col graph-container\">\n            <div className=\"graph-linear-students\">\n              <div\n                className=\"graph-holder\"\n                style={{ width: `${(correct / total * 100).toFixed(0)}%` }}\n              >\n                <div className=\"graph-admin\">\n                  <div\n                    className=\"part-red\"\n                    style={{ width: `${(incorrect / total * 100).toFixed(0)}%` }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"graph-col graph-info\">\n            <span className=\"text-large\">\n              {correct}\n            </span>\n            <span className=\"text-small\">out of</span>\n            <span className=\"text-large\">\n              {total}\n            </span>\n          </div>\n        </div>\n        {this.props.data.children && this.mapGroupRow()}\n      </div>\n    );\n  }\n}\n\nGroupBlock.propTypes = {};\n\nexport default GroupBlock;\n"]},"metadata":{},"sourceType":"module"}