{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  }\n};\n\nvar BubbleGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BubbleGroup, _React$Component);\n\n  function BubbleGroup(props) {\n    var _this;\n\n    _classCallCheck(this, BubbleGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BubbleGroup).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var _this$props$question = _this.props.question,\n          studentChoice = _this$props$question.studentChoice,\n          answer = _this$props$question.answer;\n\n      _this.setState({\n        selected: studentChoice\n      }, function () {\n        return _this.checkIfCorrect(_this.state.selected);\n      }); // if(studentChoice === answer) {\n      //   this.setState({correct: true})\n      // }\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleBubbleChange\", function (event, letter) {\n      if (_this.props.question.studentChoice === \"\") {\n        _this.setState({\n          selected: event.target.value\n        }, function () {\n          return _this.checkIfCorrect(letter);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectedBubbleClick\", function (event) {\n      var selected = _this.state.selected;\n\n      if (_this.props.question.studentChoice === \"\") {\n        if (selected === event.target.value) {\n          _this.setState({\n            selected: \"\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkIfCorrect\", function (letter) {\n      var question = _this.props.question;\n\n      if (letter === question.answer) {\n        _this.setState({\n          correct: true\n        });\n      } else {\n        _this.setState({\n          correct: false\n        });\n      } // update counter on writing page\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapEmptyBubbles\", function (id) {\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      return letters.map(function (letter) {\n        return React.createElement(\"li\", {\n          key: letter\n        }, React.createElement(\"form\", null, React.createElement(\"input\", {\n          type: \"radio\",\n          id: \"\".concat(id).concat(letter),\n          name: \"letter\",\n          value: letter,\n          checked: _this.state.selected === letter,\n          onChange: function onChange(event) {\n            return _this.onHandleBubbleChange(event, letter);\n          },\n          onClick: function onClick(event) {\n            return _this.onSelectedBubbleClick(event);\n          }\n        }), React.createElement(\"label\", {\n          htmlFor: \"\".concat(id).concat(letter),\n          style: _this.state.selected ? _this.renderBubbleStyle(letter) : styles.plain\n        }, React.createElement(\"span\", {\n          style: {\n            display: 'block',\n            marginTop: '2px',\n            paddingLeft: \"4.5px\"\n          }\n        }, letter))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubbleStyle\", function (letter) {\n      var _this$state = _this.state,\n          correct = _this$state.correct,\n          selected = _this$state.selected;\n      var answer = _this.props.question.answer;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    _this.state = {\n      selected: _this.props.question.studentChoice,\n      correct: null\n    };\n    return _this;\n  }\n\n  _createClass(BubbleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.question.id;\n      return React.createElement(React.Fragment, null, this.mapEmptyBubbles(id));\n    }\n  }]);\n\n  return BubbleGroup;\n}(React.Component);\n\nBubbleGroup.propTypes = {\n  question: PropTypes.object.isRequired\n};\nexport default BubbleGroup;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\components\\Bubble\\index.js"],"names":["React","PropTypes","styles","red","position","color","borderColor","border","backgroundColor","height","width","borderRadius","greenFilled","greenBorderOnly","plain","BubbleGroup","props","question","studentChoice","answer","setState","selected","checkIfCorrect","state","event","letter","target","value","correct","id","letters","map","onHandleBubbleChange","onSelectedBubbleClick","renderBubbleStyle","display","marginTop","paddingLeft","mapEmptyBubbles","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,MAA/B;AAAuCC,IAAAA,WAAW,EAAE,MAApD;AAA4DC,IAAAA,MAAM,EAAE,WAApE;AAAiFC,IAAAA,eAAe,EAAE,SAAlG;AAA6GC,IAAAA,MAAM,EAAE,MAArH;AAA6HC,IAAAA,KAAK,EAAE,MAApI;AAA4IC,IAAAA,YAAY,EAAE;AAA1J,GADQ;AAEbC,EAAAA,WAAW,EAAE;AAAER,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,MAA/B;AAAuCC,IAAAA,WAAW,EAAE,SAApD;AAA+DC,IAAAA,MAAM,EAAE,WAAvE;AAAoFC,IAAAA,eAAe,EAAE,SAArG;AAAgHC,IAAAA,MAAM,EAAE,MAAxH;AAAgIC,IAAAA,KAAK,EAAE,MAAvI;AAA+IC,IAAAA,YAAY,EAAE;AAA7J,GAFA;AAGbE,EAAAA,eAAe,EAAE;AAAET,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,SAA/B;AAA0CC,IAAAA,WAAW,EAAE,SAAvD;AAAkEC,IAAAA,MAAM,EAAE,WAA1E;AAAuFC,IAAAA,eAAe,EAAE,MAAxG;AAAgHC,IAAAA,MAAM,EAAE,MAAxH;AAAgIC,IAAAA,KAAK,EAAE,MAAvI;AAA+IC,IAAAA,YAAY,EAAE;AAA7J,GAHJ;AAIbG,EAAAA,KAAK,EAAE;AAAEV,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,SAA/B;AAA0CE,IAAAA,MAAM,EAAE,WAAlD;AAA+DD,IAAAA,WAAW,EAAE,SAA5E;AAAuFG,IAAAA,MAAM,EAAE,MAA/F;AAAuGC,IAAAA,KAAK,EAAE,MAA9G;AAAsHC,IAAAA,YAAY,EAAE;AAApI;AAJM,CAAf;;IAMMI,W;;;;;AACJ,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,qFAAMA,KAAN;;AADgB,wEAOA,YAAM;AAAA,iCACyB,MAAKA,KAD9B,CACdC,QADc;AAAA,UACHC,aADG,wBACHA,aADG;AAAA,UACYC,MADZ,wBACYA,MADZ;;AAEtB,YAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEH;AAAX,OAAd,EAAyC;AAAA,eAAM,MAAKI,cAAL,CAAoB,MAAKC,KAAL,CAAWF,QAA/B,CAAN;AAAA,OAAzC,EAFsB,CAGtB;AACA;AACA;;AACD,KAbiB;;AAAA,2EAeK,UAACG,KAAD,EAAQC,MAAR,EAAmB;AACxC,UAAI,MAAKT,KAAL,CAAWC,QAAX,CAAoBC,aAApB,KAAsC,EAA1C,EAA6C;AAC3C,cAAKE,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAxB,SAAd,EACC;AAAA,iBAAM,MAAKL,cAAL,CAAoBG,MAApB,CAAN;AAAA,SADD;AAED;AACF,KApBiB;;AAAA,4EAuBM,UAACD,KAAD,EAAW;AAAA,UACzBH,QADyB,GACZ,MAAKE,KADO,CACzBF,QADyB;;AAEjC,UAAI,MAAKL,KAAL,CAAWC,QAAX,CAAoBC,aAApB,KAAsC,EAA1C,EAA6C;AAC3C,YAAIG,QAAQ,KAAKG,KAAK,CAACE,MAAN,CAAaC,KAA9B,EAAoC;AAClC,gBAAKP,QAAL,CAAc;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACD;AACF;AACF,KA9BiB;;AAAA,qEAgCD,UAACI,MAAD,EAAY;AAAA,UACnBR,QADmB,GACN,MAAKD,KADC,CACnBC,QADmB;;AAE3B,UAAGQ,MAAM,KAAKR,QAAQ,CAACE,MAAvB,EAA+B;AAC7B,cAAKC,QAAL,CAAc;AAACQ,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD,OAFD,MAEK;AACH,cAAKR,QAAL,CAAc;AAACQ,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD,OAN0B,CAO3B;;AACD,KAxCiB;;AAAA,sEA0CF,UAACC,EAAD,EAAQ;AACxB,UAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;AACA,aAAOA,OAAO,CAACC,GAAR,CAAY,UAAAN,MAAM;AAAA,eACvB;AAAI,UAAA,GAAG,EAAEA;AAAT,WACE,kCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,YAAKI,EAAL,SAAUJ,MAAV,CAFJ;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAEA,MAJT;AAKE,UAAA,OAAO,EAAE,MAAKF,KAAL,CAAWF,QAAX,KAAwBI,MALnC;AAME,UAAA,QAAQ,EAAE,kBAACD,KAAD;AAAA,mBAAW,MAAKQ,oBAAL,CAA0BR,KAA1B,EAAiCC,MAAjC,CAAX;AAAA,WANZ;AAOE,UAAA,OAAO,EAAE,iBAACD,KAAD;AAAA,mBAAU,MAAKS,qBAAL,CAA2BT,KAA3B,CAAV;AAAA;AAPX,UADF,EAUE;AACE,UAAA,OAAO,YAAKK,EAAL,SAAUJ,MAAV,CADT;AAEE,UAAA,KAAK,EAAE,MAAKF,KAAL,CAAWF,QAAX,GAAsB,MAAKa,iBAAL,CAAuBT,MAAvB,CAAtB,GAAuDvB,MAAM,CAACY;AAFvE,WAIA;AAAM,UAAA,KAAK,EAAE;AAAEqB,YAAAA,OAAO,EAAE,OAAX;AAAoBC,YAAAA,SAAS,EAAE,KAA/B;AAAsCC,YAAAA,WAAW,EAAE;AAAnD;AAAb,WAA4EZ,MAA5E,CAJA,CAVF,CADF,CADuB;AAAA,OAAlB,CAAP;AAqBD,KAjEmB;;AAAA,wEAmEA,UAAEA,MAAF,EAAc;AAAA,wBACF,MAAKF,KADH;AAAA,UACxBK,OADwB,eACxBA,OADwB;AAAA,UACfP,QADe,eACfA,QADe;AAAA,UAEZF,MAFY,GAEC,MAAKH,KAFN,CAExBC,QAFwB,CAEZE,MAFY;;AAGhC,UAAIE,QAAQ,KAAKI,MAAb,IAAuBG,OAA3B,EAAoC;AAClC,eAAO1B,MAAM,CAACU,WAAd;AACD;;AACD,UAAIS,QAAQ,KAAKI,MAAb,IAAuB,CAACG,OAA5B,EAAqC;AACnC,eAAO1B,MAAM,CAACC,GAAd;AACD;;AACD,UAAIsB,MAAM,KAAKJ,QAAX,IAAuBI,MAAM,KAAK,CAACN,MAAvC,EAA+C;AAC7C,eAAOjB,MAAM,CAACY,KAAd;AACD;;AAAA,UAAGW,MAAM,KAAKJ,QAAX,IAAuBI,MAAM,KAAKN,MAArC,EAA4C;AAC3C,eAAOjB,MAAM,CAACW,eAAd;AACD;;AACD,aAAOX,MAAM,CAACY,KAAd;AACD,KAlFmB;;AAEhB,UAAKS,KAAL,GAAY;AACVF,MAAAA,QAAQ,EAAE,MAAKL,KAAL,CAAWC,QAAX,CAAoBC,aADpB;AAEVU,MAAAA,OAAO,EAAE;AAFC,KAAZ;AAFgB;AAMjB;;;;6BA+EQ;AAAA,UACaC,EADb,GACsB,KAAKb,KAD3B,CACCC,QADD,CACaY,EADb;AAEL,aACE,oBAAC,KAAD,CAAO,QAAP,QACG,KAAKS,eAAL,CAAqBT,EAArB,CADH,CADF;AAKH;;;;EA7FuB7B,KAAK,CAACuC,S;;AAgGhCxB,WAAW,CAACyB,SAAZ,GAAwB;AACtBvB,EAAAA,QAAQ,EAAEhB,SAAS,CAACwC,MAAV,CAAiBC;AADL,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  red: { position: 'relative', color: '#fff', borderColor: '#fff', border: '1px solid', backgroundColor: '#db1d41', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenFilled: { position: 'relative', color: '#fff', borderColor: '#32955c', border: '1px solid', backgroundColor: '#32955c', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenBorderOnly: { position: 'relative', color: '#32955c', borderColor: '#32955c', border: '1px solid', backgroundColor: '#fff', height: '19px', width: '19px', borderRadius: '50%' },\r\n  plain: { position: 'relative', color: '#a6a8ab', border: '1px solid', borderColor: '#a6a8ab', height: '19px', width: '19px', borderRadius: '50%' }\r\n}\r\nclass BubbleGroup extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state= {\r\n      selected: this.props.question.studentChoice,\r\n      correct: null,\r\n    }\r\n  }\r\ncomponentDidMount = () => {\r\n    const { question: {studentChoice, answer } } = this.props\r\n    this.setState({selected: studentChoice}, () => this.checkIfCorrect(this.state.selected));\r\n    // if(studentChoice === answer) {\r\n    //   this.setState({correct: true})\r\n    // }\r\n  }\r\n\r\n  onHandleBubbleChange = (event, letter) => {\r\n    if (this.props.question.studentChoice === \"\"){\r\n      this.setState({selected: event.target.value},\r\n       () => this.checkIfCorrect(letter))\r\n    }\r\n  }\r\n\r\n// clears state when selected button is clicked again, unless it was studentChoice from props\r\n  onSelectedBubbleClick = (event) => {\r\n    const { selected } = this.state;\r\n    if (this.props.question.studentChoice === \"\"){\r\n      if (selected === event.target.value){\r\n        this.setState({selected: \"\"})\r\n      }\r\n    }\r\n  }\r\n\r\n  checkIfCorrect = (letter) => {\r\n    const { question } = this.props;\r\n    if(letter === question.answer) {\r\n      this.setState({correct: true});\r\n    }else{\r\n      this.setState({correct: false})\r\n    }\r\n    // update counter on writing page\r\n  }\r\n\r\nmapEmptyBubbles = (id) => {\r\n  const letters = [\"A\", \"B\", \"C\", \"D\"];\r\n  return letters.map(letter => (\r\n    <li key={letter}>\r\n      <form>\r\n        <input\r\n          type=\"radio\"\r\n          id={`${id}${letter}`}\r\n          name=\"letter\"\r\n          value={letter}\r\n          checked={this.state.selected === letter}\r\n          onChange={(event) => this.onHandleBubbleChange(event, letter)}\r\n          onClick={(event)=> this.onSelectedBubbleClick(event)}\r\n          />\r\n        <label\r\n          htmlFor={`${id}${letter}`}\r\n          style={this.state.selected ? this.renderBubbleStyle(letter) : styles.plain}\r\n          >\r\n        <span style={{ display: 'block', marginTop: '2px', paddingLeft: \"4.5px\" }}>{letter}</span>\r\n        </label>\r\n      </form>\r\n    </li>\r\n  ))\r\n}\r\n\r\nrenderBubbleStyle = ( letter ) => {\r\n  const { correct, selected } = this.state;\r\n  const { question: { answer } } = this.props;\r\n  if (selected === letter && correct) {\r\n    return styles.greenFilled\r\n  }\r\n  if (selected === letter && !correct) {\r\n    return styles.red\r\n  }\r\n  if (letter !== selected && letter === !answer) {\r\n    return styles.plain\r\n  }if(letter !== selected && letter === answer){\r\n    return styles.greenBorderOnly\r\n  }\r\n  return styles.plain\r\n}\r\n\r\n\r\n  render() {\r\n    const { question: { id } } = this.props\r\n      return (\r\n        <React.Fragment>\r\n          {this.mapEmptyBubbles(id)}\r\n        </React.Fragment>\r\n      )\r\n  }\r\n}\r\n\r\nBubbleGroup.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default BubbleGroup;\r\n"]},"metadata":{},"sourceType":"module"}