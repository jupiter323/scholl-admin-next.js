{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchForFetchStudents),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchForAddNewStudent),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchForDeleteStudent),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(defaultSaga);\n\nimport { take, call, put, all } from \"redux-saga/effects\";\nimport { FETCH_STUDENTS, SET_STUDENTS, ADD_STUDENT, DELETE_STUDENT } from \"./components/Student/index/constants\";\nimport { fetchStudents, setStudents, addStudent } from \"./components/Student/index/actions\";\nimport { studentApi } from \"./api\";\nvar fetchStudentsApi = studentApi.fetchStudentsApi,\n    addNewStudentApi = studentApi.addNewStudentApi;\n/********************************************    STUDENTS    ********************************************/\n\nexport function watchForFetchStudents() {\n  return _regeneratorRuntime.wrap(function watchForFetchStudents$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!true) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 3;\n          return take(FETCH_STUDENTS);\n\n        case 3:\n          _context.next = 5;\n          return call(fetchStudents);\n\n        case 5:\n          _context.next = 0;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function watchForAddNewStudent() {\n  var _ref, student, response;\n\n  return _regeneratorRuntime.wrap(function watchForAddNewStudent$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!true) {\n            _context2.next = 20;\n            break;\n          }\n\n          _context2.prev = 1;\n          _context2.next = 4;\n          return take(ADD_STUDENT);\n\n        case 4:\n          _ref = _context2.sent;\n          student = _ref.student;\n          _context2.next = 8;\n          return call(addNewStudentApi, student);\n\n        case 8:\n          response = _context2.sent;\n\n          if (!(response && response.message)) {\n            _context2.next = 11;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", console.warn(\"Something went wrong with adding a new student!\"));\n\n        case 11:\n          _context2.next = 13;\n          return call(fetchStudents);\n\n        case 13:\n          _context2.next = 18;\n          break;\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.warn(\"Error occurred in watchForAddStudent\", _context2.t0);\n\n        case 18:\n          _context2.next = 0;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 15]]);\n}\nvar deleteStudentApi = studentApi.deleteStudentApi;\nexport function watchForDeleteStudent() {\n  var _ref2, id, response;\n\n  return _regeneratorRuntime.wrap(function watchForDeleteStudent$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!true) {\n            _context3.next = 20;\n            break;\n          }\n\n          _context3.prev = 1;\n          _context3.next = 4;\n          return take(DELETE_STUDENT);\n\n        case 4:\n          _ref2 = _context3.sent;\n          id = _ref2.id;\n          _context3.next = 8;\n          return call(deleteStudentApi, id);\n\n        case 8:\n          response = _context3.sent;\n\n          if (!(response && response.message)) {\n            _context3.next = 11;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", console.warn(\"Something went wrong with deleting a student.\"));\n\n        case 11:\n          _context3.next = 13;\n          return call(fetchStudents);\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.warn(\"Error occured in watchForDeleteStudent\", _context3.t0);\n\n        case 18:\n          _context3.next = 0;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 15]]);\n}\nexport default function defaultSaga() {\n  return _regeneratorRuntime.wrap(function defaultSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([watchForFetchStudents(), watchForAddStudent(), watchForDeleteStudent()]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/sagas.js"],"names":["watchForFetchStudents","watchForAddNewStudent","watchForDeleteStudent","defaultSaga","take","call","put","all","FETCH_STUDENTS","SET_STUDENTS","ADD_STUDENT","DELETE_STUDENT","fetchStudents","setStudents","addStudent","studentApi","fetchStudentsApi","addNewStudentApi","student","response","message","console","warn","deleteStudentApi","id","watchForAddStudent"],"mappings":";;;;yBAgBiBA,qB;;;yBAOAC,qB;;;yBAgBAC,qB;;;yBAeQC,W;;AAtDzB,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,cAJF,QAKO,sCALP;AAMA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,QAIO,oCAJP;AAKA,SAASC,UAAT,QAA2B,OAA3B;IACOC,gB,GAAsCD,U,CAAtCC,gB;IAAkBC,gB,GAAoBF,U,CAApBE,gB;AAEzB;;AACA,OAAO,SAAUjB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,IADF;AAAA;AAAA;AAAA;;AAAA;AAEH,iBAAMI,IAAI,CAACI,cAAD,CAAV;;AAFG;AAAA;AAGH,iBAAMH,IAAI,CAACO,aAAD,CAAV;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,OAAO,SAAUX,qBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,IADF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGmB,iBAAMG,IAAI,CAACM,WAAD,CAAV;;AAHnB;AAAA;AAGOQ,UAAAA,OAHP,QAGOA,OAHP;AAAA;AAIgB,iBAAMb,IAAI,CAACY,gBAAD,EAAmBC,OAAnB,CAAV;;AAJhB;AAIKC,UAAAA,QAJL;;AAAA,gBAKGA,QAAQ,IAAIA,QAAQ,CAACC,OALxB;AAAA;AAAA;AAAA;;AAAA,4CAMQC,OAAO,CAACC,IAAR,CAAa,iDAAb,CANR;;AAAA;AAAA;AAQD,iBAAMjB,IAAI,CAACO,aAAD,CAAV;;AARC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUDS,UAAAA,OAAO,CAACC,IAAR,CAAa,sCAAb;;AAVC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IAcAC,gB,GAAoBR,U,CAApBQ,gB;AAEP,OAAO,SAAUrB,qBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,IADF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAGc,iBAAME,IAAI,CAACO,cAAD,CAAV;;AAHd;AAAA;AAGOa,UAAAA,EAHP,SAGOA,EAHP;AAAA;AAIgB,iBAAMnB,IAAI,CAACkB,gBAAD,EAAmBC,EAAnB,CAAV;;AAJhB;AAIKL,UAAAA,QAJL;;AAAA,gBAKGA,QAAQ,IAAIA,QAAQ,CAACC,OALxB;AAAA;AAAA;AAAA;;AAAA,4CAMQC,OAAO,CAACC,IAAR,CAAa,+CAAb,CANR;;AAAA;AAAA;AAQD,iBAAMjB,IAAI,CAACO,aAAD,CAAV;;AARC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUDS,UAAAA,OAAO,CAACC,IAAR,CAAa,wCAAb;;AAVC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeP,eAAe,SAAUnB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMI,GAAG,CAAC,CACRP,qBAAqB,EADb,EAERyB,kBAAkB,EAFV,EAGRvB,qBAAqB,EAHb,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { take, call, put, all } from \"redux-saga/effects\";\nimport {\n  FETCH_STUDENTS,\n  SET_STUDENTS,\n  ADD_STUDENT,\n  DELETE_STUDENT,\n} from \"./components/Student/index/constants\";\nimport {\n  fetchStudents,\n  setStudents,\n  addStudent,\n} from \"./components/Student/index/actions\";\nimport { studentApi } from \"./api\";\nconst {fetchStudentsApi, addNewStudentApi} = studentApi;\n\n/********************************************    STUDENTS    ********************************************/\nexport function* watchForFetchStudents() {\n  while (true) {\n    yield take(FETCH_STUDENTS);\n    yield call(fetchStudents);\n  }\n}\n\nexport function* watchForAddNewStudent() {\n  while (true) {\n    try {\n      const { student } = yield take(ADD_STUDENT);\n      const response = yield call(addNewStudentApi, student);\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with adding a new student!\");\n      }\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occurred in watchForAddStudent\", err);\n    }\n  }\n}\nconst {deleteStudentApi} = studentApi;\n\nexport function* watchForDeleteStudent() {\n  while (true) {\n    try {\n      const { id } = yield take(DELETE_STUDENT);\n      const response = yield call(deleteStudentApi, id);\n      if (response && response.message) {\n        return console.warn(\"Something went wrong with deleting a student.\");\n      }\n      yield call(fetchStudents);\n    } catch (err) {\n      console.warn(\"Error occured in watchForDeleteStudent\", err);\n    }\n  }\n}\n\nexport default function* defaultSaga() {\n  yield all([\n    watchForFetchStudents(),\n    watchForAddStudent(),\n    watchForDeleteStudent()\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}