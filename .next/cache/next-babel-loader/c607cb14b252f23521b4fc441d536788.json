{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../../../../Modal';\nimport UserListModal from '../../UserListModal';\nimport SelectedUserRow from '../../SelectedUserRow';\n\nconst OwnerSection = ({\n  owner,\n  userList,\n  handleDetailsChange,\n  userListModalOpen,\n  changeModalOpen,\n  onOpenChangeModal,\n  onCloseChangeModal,\n  onOpenUserListModal,\n  onCloseUserListModal\n}) => __jsx(React.Fragment, null, __jsx(Modal, {\n  open: changeModalOpen,\n  onClose: onCloseChangeModal,\n  onConfirm: onOpenUserListModal,\n  header: \"Are You Sure?\",\n  body: \"Do you want to change the owner for this location?\"\n}), __jsx(UserListModal, {\n  open: userListModalOpen,\n  onClose: onCloseUserListModal,\n  userList: userList,\n  onSubmit: handleDetailsChange\n}), __jsx(\"div\", {\n  className: \"card-block\"\n}, __jsx(\"h3\", null, \"Owner\"), owner ? __jsx(SelectedUserRow, {\n  user: owner,\n  onOpenChangeModal: onOpenChangeModal\n}) : __jsx(\"div\", {\n  className: \"add-box\"\n}, __jsx(\"div\", {\n  className: \"add-box-holder\"\n}, __jsx(\"a\", {\n  href: \"#\",\n  onClick: onOpenUserListModal,\n  className: \"btn-floating waves-effect waves-light green lighten-1\"\n}, __jsx(\"i\", {\n  className: \"material-icons\"\n}, \"add\"))))));\n\nOwnerSection.propTypes = {\n  owner: PropTypes.object,\n  userList: PropTypes.array.isRequired,\n  changeModalOpen: PropTypes.bool.isRequired,\n  userListModalOpen: PropTypes.bool.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n  onOpenChangeModal: PropTypes.func.isRequired,\n  onCloseChangeModal: PropTypes.func.isRequired,\n  onOpenUserListModal: PropTypes.func.isRequired,\n  onCloseUserListModal: PropTypes.func.isRequired\n};\nexport default OwnerSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Location/components/SharedModalComponents/OwnerSection/index.js"],"names":["React","PropTypes","Modal","UserListModal","SelectedUserRow","OwnerSection","owner","userList","handleDetailsChange","userListModalOpen","changeModalOpen","onOpenChangeModal","onCloseChangeModal","onOpenUserListModal","onCloseUserListModal","propTypes","object","array","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,mBAAnB;AAAwCC,EAAAA,iBAAxC;AAA2DC,EAAAA,eAA3D;AAA4EC,EAAAA,iBAA5E;AAA+FC,EAAAA,kBAA/F;AAAmHC,EAAAA,mBAAnH;AAAwIC,EAAAA;AAAxI,CAAD,KACnB,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,KAAD;AACE,EAAA,IAAI,EAAEJ,eADR;AAEE,EAAA,OAAO,EAAEE,kBAFX;AAGE,EAAA,SAAS,EAAEC,mBAHb;AAIE,EAAA,MAAM,EAAC,eAJT;AAKE,EAAA,IAAI,EAAC;AALP,EADF,EAQE,MAAC,aAAD;AACE,EAAA,IAAI,EAAEJ,iBADR;AAEE,EAAA,OAAO,EAAEK,oBAFX;AAGE,EAAA,QAAQ,EAAEP,QAHZ;AAIE,EAAA,QAAQ,EAAEC;AAJZ,EARF,EAcE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE,0BADF,EAGqBF,KAHrB,GAIM,MAAC,eAAD;AACE,EAAA,IAAI,EAAEA,KADR;AAEE,EAAA,iBAAiB,EAAEK;AAFrB,EAJN,GAUM;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AACE,EAAA,IAAI,EAAC,GADP;AAEE,EAAA,OAAO,EAAEE,mBAFX;AAGE,EAAA,SAAS,EAAC;AAHZ,GAKE;AAAG,EAAA,SAAS,EAAC;AAAb,SALF,CADF,CADF,CAVN,CAdF,CADF;;AA0CAR,YAAY,CAACU,SAAb,GAAyB;AACvBT,EAAAA,KAAK,EAAEL,SAAS,CAACe,MADM;AAEvBT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,KAAV,CAAgBC,UAFH;AAGvBR,EAAAA,eAAe,EAAET,SAAS,CAACkB,IAAV,CAAeD,UAHT;AAIvBT,EAAAA,iBAAiB,EAAER,SAAS,CAACkB,IAAV,CAAeD,UAJX;AAKvBV,EAAAA,mBAAmB,EAAEP,SAAS,CAACmB,IAAV,CAAeF,UALb;AAMvBP,EAAAA,iBAAiB,EAAEV,SAAS,CAACmB,IAAV,CAAeF,UANX;AAOvBN,EAAAA,kBAAkB,EAAEX,SAAS,CAACmB,IAAV,CAAeF,UAPZ;AAQvBL,EAAAA,mBAAmB,EAAEZ,SAAS,CAACmB,IAAV,CAAeF,UARb;AASvBJ,EAAAA,oBAAoB,EAAEb,SAAS,CAACmB,IAAV,CAAeF;AATd,CAAzB;AAYA,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../../Modal';\nimport UserListModal from '../../UserListModal';\nimport SelectedUserRow from '../../SelectedUserRow';\n\nconst OwnerSection = ({ owner, userList, handleDetailsChange, userListModalOpen, changeModalOpen, onOpenChangeModal, onCloseChangeModal, onOpenUserListModal, onCloseUserListModal }) => (\n  <React.Fragment>\n    <Modal\n      open={changeModalOpen}\n      onClose={onCloseChangeModal}\n      onConfirm={onOpenUserListModal}\n      header=\"Are You Sure?\"\n      body=\"Do you want to change the owner for this location?\"\n    />\n    <UserListModal\n      open={userListModalOpen}\n      onClose={onCloseUserListModal}\n      userList={userList}\n      onSubmit={handleDetailsChange}\n    />\n    <div className=\"card-block\">\n      <h3>Owner</h3>\n      <Choose>\n        <When condition={owner}>\n          <SelectedUserRow\n            user={owner}\n            onOpenChangeModal={onOpenChangeModal}\n          />\n        </When>\n        <Otherwise>\n          <div className=\"add-box\">\n            <div className=\"add-box-holder\">\n              <a\n                href=\"#\"\n                onClick={onOpenUserListModal}\n                className=\"btn-floating waves-effect waves-light green lighten-1\"\n              >\n                <i className=\"material-icons\">add</i>\n              </a>\n            </div>\n          </div>\n        </Otherwise>\n      </Choose>\n    </div>\n  </React.Fragment>\n);\n\nOwnerSection.propTypes = {\n  owner: PropTypes.object,\n  userList: PropTypes.array.isRequired,\n  changeModalOpen: PropTypes.bool.isRequired,\n  userListModalOpen: PropTypes.bool.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n  onOpenChangeModal: PropTypes.func.isRequired,\n  onCloseChangeModal: PropTypes.func.isRequired,\n  onOpenUserListModal: PropTypes.func.isRequired,\n  onCloseUserListModal: PropTypes.func.isRequired,\n};\n\nexport default OwnerSection;\n"]},"metadata":{},"sourceType":"module"}