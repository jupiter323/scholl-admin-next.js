{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nvar data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar getIndicatorStatus = function getIndicatorStatus(activeSection, active) {\n  return {\n    left: activeSection === 'subjectScores' ? '50%' : '0',\n    right: activeSection === 'subjectScores' ? '0' : '50%',\n    backgroundColor: active ? '#00bbf7' : '#b2b2b2'\n  };\n}; // TODO: Implement final line chart data implementation later\n\n\nvar TestScores =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestScores, _React$Component);\n\n  function TestScores(props) {\n    var _this;\n\n    _classCallCheck(this, TestScores);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestScores).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetOpenSection\", function (event, openSection) {\n      event.preventDefault();\n\n      _this.setState({\n        openSection: openSection\n      });\n    });\n\n    _this.state = {\n      openSection: 'compositeScore'\n    };\n    return _this;\n  }\n\n  _createClass(TestScores, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var openSection = this.state.openSection;\n      var _this$props = this.props,\n          _this$props$state = _this$props.state,\n          compositeScore = _this$props$state.compositeScore,\n          subjectScores = _this$props$state.subjectScores,\n          active = _this$props.active;\n      return __jsx(\"div\", {\n        className: \"col s12 l7 card-width-747\"\n      }, __jsx(\"div\", {\n        className: \"card-main card card-chart\"\n      }, __jsx(\"div\", {\n        className: \"card-content\"\n      }, __jsx(\"h2\", null, \"Test Scores\"), __jsx(\"div\", {\n        className: \"tabs-container tabs-charts-container\"\n      }, !active ? __jsx(\"div\", {\n        className: \"card-note-box\",\n        style: {\n          display: 'block'\n        }\n      }, __jsx(\"span\", {\n        className: \"title\"\n      }, \"Nothing to see here yet.\"), __jsx(\"span\", {\n        className: \"text-frame\"\n      }, \"Once this student has taken multiple tests, you can track the progress here. \")) : null, __jsx(\"ul\", {\n        className: \"tabs\",\n        style: {\n          filter: !active ? 'blur(3px)' : \"\"\n        }\n      }, __jsx(\"li\", {\n        className: \"tab col s6 l6\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetOpenSection(event, 'compositeScore');\n        },\n        className: openSection === 'compositeScore' ? 'active' : ''\n      }, \"Composite Score\")), __jsx(\"li\", {\n        className: \"tab col s6 l6\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetOpenSection(event, 'subjectScores');\n        },\n        className: openSection === 'subjectScores' ? 'active' : ''\n      }, \"Subject Scores\")), __jsx(\"li\", {\n        className: \"indicator\",\n        style: getIndicatorStatus(openSection, active)\n      })), __jsx(\"div\", {\n        id: \"scores_tab01\",\n        className: openSection === 'compositeScore' ? '' : 'tab-content',\n        style: active ? {} : {\n          filter: 'blur(3px)'\n        }\n      }, __jsx(\"div\", {\n        className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n      }, __jsx(\"ul\", {\n        className: \"panel-list\"\n      }, __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Reading\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.reading) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Writing\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.writing) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Math\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.math) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Composite\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.composite) : null))), __jsx(\"div\", {\n        className: \"chart-line-container js-scrollable-chart\"\n      }, __jsx(Line, {\n        data: data\n      }))), __jsx(\"div\", {\n        id: \"scores_tab02\",\n        className: openSection === 'subjectScores' ? '' : 'tab-content',\n        style: active ? {} : {\n          filter: 'blur(3px)'\n        }\n      }, __jsx(\"div\", {\n        className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n      }, __jsx(\"ul\", {\n        className: \"panel-list\"\n      }, __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Reading\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.reading) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Writing\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.writing) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Math\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.math) : null), __jsx(\"li\", {\n        className: \"panel-block\"\n      }, __jsx(\"strong\", {\n        className: \"text-small\"\n      }, \"Composite\"), active ? __jsx(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.composite) : null))), __jsx(\"div\", {\n        className: \"chart-line-container js-scrollable-chart\"\n      }, __jsx(Line, {\n        data: data\n      })))))));\n    }\n  }]);\n\n  return TestScores;\n}(React.Component);\n\n;\nexport default TestScores;","map":null,"metadata":{},"sourceType":"module"}