{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport Portal from '../../Portal';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport QuestionModal from './components/QuestionModal';\nimport sampleQuestions from './utils/sampleQuestions';\n\nclass LessonDetailAnswerSheet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleQuestionModal\", (selectedQuestion = null) => this.setState(({\n      questionModalOpen\n    }) => ({\n      questionModalOpen: !questionModalOpen,\n      selectedQuestion\n    })));\n\n    this.state = {\n      selectedQuestion: {},\n      questionModalOpen: false,\n      answerSheetComplete: true,\n      questions: sampleQuestions\n    };\n  }\n\n  render() {\n    const {\n      questionModalOpen,\n      selectedQuestion,\n      questions,\n      answerSheetComplete\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(QuestionModal, {\n      open: questionModalOpen,\n      question: selectedQuestion,\n      onCloseModal: this.onToggleQuestionModal\n    }), React.createElement(Portal, {\n      selector: \"#modal\"\n    }, React.createElement(\"div\", {\n      className: \"wrapper modal\",\n      style: {\n        zIndex: '1003',\n        display: 'block',\n        position: 'absolute',\n        top: '0'\n      }\n    }, React.createElement(\"div\", {\n      className: \"header-row card-panel light-blue lighten-1 white-text\"\n    }, React.createElement(\"div\", {\n      className: \"card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"icon-col col s1\"\n    }, React.createElement(\"i\", {\n      className: \"icon-books\"\n    })), React.createElement(\"div\", {\n      className: \"col s9\"\n    }, React.createElement(\"div\", {\n      className: \"card-panel-text center-align\"\n    }, React.createElement(\"div\", {\n      className: \"text-small\"\n    }, \"Reading Unit #2\"), React.createElement(\"div\", {\n      className: \"text-large\"\n    }, \"Read Something\"))), React.createElement(\"div\", {\n      className: \"col s1 right-align\"\n    }, React.createElement(\"div\", {\n      className: \"row icons-row\"\n    }, \"\\xA0\"))), React.createElement(\"div\", {\n      className: \"header-row-block card-panel-row row\"\n    }, React.createElement(\"div\", {\n      className: \"col s3\"\n    }, React.createElement(\"span\", {\n      className: \"meta-num\"\n    }, \"p.128\")), React.createElement(\"div\", {\n      className: \"col s9 right-align\"\n    }, React.createElement(\"div\", null, React.createElement(\"span\", {\n      className: \"name\"\n    }, \"Arnold Studently\")), React.createElement(\"div\", null, React.createElement(\"time\", {\n      className: \"date\",\n      dateTime: \"2018-11-18T20:43\",\n      style: {\n        color: '#006837'\n      }\n    }, \"Completed 11/18/18 at 8:43 PM (late)\"))))), React.createElement(\"div\", {\n      className: \"nav-header nav-header-special white\"\n    }, React.createElement(\"div\", {\n      className: \"nav-additional\"\n    }, React.createElement(\"ul\", {\n      className: \"menu-additional\"\n    }, React.createElement(\"li\", {\n      className: \"col s3\"\n    }, React.createElement(\"a\", {\n      href: \"#\"\n    }, \"Summary\")), React.createElement(\"li\", {\n      className: \"col s3\"\n    }, React.createElement(\"a\", {\n      className: \"active\",\n      href: \"#answer\"\n    }, \"Answer Sheet\"))))), React.createElement(\"div\", {\n      className: \"content-section\"\n    }, React.createElement(\"div\", {\n      className: \"container-sm\"\n    }, React.createElement(\"div\", {\n      className: \"main-row row\"\n    }, React.createElement(ChallengeQuestions, {\n      answerSheetComplete: answerSheetComplete,\n      onOpenQuestionModal: this.onToggleQuestionModal,\n      questions: questions.filter(question => question.questionType === 'Challenge')\n    }), React.createElement(PracticeQuestions, {\n      answerSheetComplete: answerSheetComplete,\n      onOpenQuestionModal: this.onToggleQuestionModal,\n      questions: questions.filter(question => question.questionType === 'Practice')\n    })))))));\n  }\n\n}\n\nexport default LessonDetailAnswerSheet;","map":null,"metadata":{},"sourceType":"module"}