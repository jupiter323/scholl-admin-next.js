{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/EnterAnswerWrapper/components/StartSection.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport update from \"immutability-helper\";\nimport PropTypes from \"prop-types\";\n\nvar StartReadingTest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StartReadingTest, _React$Component);\n\n  function StartReadingTest(props) {\n    var _this;\n\n    _classCallCheck(this, StartReadingTest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StartReadingTest).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      var testSection = nextProps.testSection;\n      if (!testSection || !testSection.hasOwnProperty('problems')) return;\n      var updatedProblems = update(_this.state.sampleProblems, {\n        $set: testSection.problems.problems\n      });\n\n      _this.setState({\n        sampleProblems: updatedProblems\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapProblems\", function () {\n      var sampleProblems = _this.state.sampleProblems;\n      return sampleProblems.map(function (problem, index) {\n        return __jsx(\"li\", {\n          className: \"answers-list-holder\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, __jsx(\"ul\", {\n          className: \"answer-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"badge-circle badge-circle-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"A\")), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"badge-circle badge-circle-bordered\",\n          style: {\n            color: \"#fff\",\n            borderColor: \"#19b4e9\",\n            backgroundColor: \"#19b4e9\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"B\")), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"badge-circle badge-circle-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"C\")), __jsx(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"badge-circle badge-circle-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"D\"))));\n      });\n    });\n\n    _this.state = {\n      sampleProblems: []\n    };\n    return _this;\n  }\n\n  _createClass(StartReadingTest, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          onSetActivePage = _this$props.onSetActivePage,\n          testSection = _this$props.testSection;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, open && testSection.problems && __jsx(\"div\", {\n        className: \"tabs-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"tab_reading\",\n        className: \"tab-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"content-section content-section-simulated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"content-section-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-full-height card-student card-main-full card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"custom-form blured-effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"jcf-scrollable no-border height-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"ol\", {\n        className: \"answers-list answers-list-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.mapProblems()))), __jsx(\"div\", {\n        className: \"starting-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"This section has \", testSection ? testSection.problems.problems.length : \"0\", \" questions and is \", testSection ? testSection.problems.time_limit : \"0\", \" minutes total\"), __jsx(\"a\", {\n        onClick: function onClick() {\n          return onSetActivePage(\"showInCompleteTest\");\n        },\n        className: \"btn btn-xlarge waves-effect waves-light bg-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Begin Section\"))))))))));\n    }\n  }]);\n\n  return StartReadingTest;\n}(React.Component);\n\nStartReadingTest.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSetActivePage: PropTypes.func.isRequired,\n  testSection: PropTypes.object.isRequired\n};\nexport default StartReadingTest;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/EnterAnswerWrapper/components/StartSection.js"],"names":["React","update","PropTypes","StartReadingTest","props","nextProps","testSection","hasOwnProperty","updatedProblems","state","sampleProblems","$set","problems","setState","map","problem","index","color","borderColor","backgroundColor","open","onSetActivePage","mapProblems","length","time_limit","Component","propTypes","bool","isRequired","func","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport update from \"immutability-helper\";\nimport PropTypes from \"prop-types\";\n\nclass StartReadingTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleProblems: [],\n    };\n  }\n\n  componentWillReceiveProps = nextProps => {\n    const { testSection } = nextProps;\n    if (!testSection || !testSection.hasOwnProperty('problems')) return;\n    const updatedProblems = update(this.state.sampleProblems, {\n      $set: testSection.problems.problems,\n    });\n    this.setState({\n      sampleProblems: updatedProblems,\n    });\n  };\n\n  mapProblems = () => {\n    const { sampleProblems } = this.state;\n    return sampleProblems.map((problem, index) => (\n      <li className=\"answers-list-holder\" key={index}>\n        <ul className=\"answer-list\">\n          <li>\n            <span className=\"badge-circle badge-circle-bordered\">A</span>\n          </li>\n          <li>\n            <span\n              className=\"badge-circle badge-circle-bordered\"\n              style={{\n                color: \"#fff\",\n                borderColor: \"#19b4e9\",\n                backgroundColor: \"#19b4e9\",\n              }}\n            >\n              B\n            </span>\n          </li>\n          <li>\n            <span className=\"badge-circle badge-circle-bordered\">C</span>\n          </li>\n          <li>\n            <span className=\"badge-circle badge-circle-bordered\">D</span>\n          </li>\n        </ul>\n      </li>\n    ));\n  };\n\n  render() {\n    const { open, onSetActivePage, testSection } = this.props;\n    return (\n      <React.Fragment>\n        {open && testSection.problems && (\n          <div className=\"tabs-content\">\n            <div id=\"tab_reading\" className=\"tab-content\">\n              <div className=\"content-section content-section-simulated\">\n                <div className=\"content-section-holder\">\n                  <div className=\"card-full-height card-student card-main-full card\">\n                    <div className=\"card-content\">\n                      <div className=\"custom-form blured-effect\">\n                        <div className=\"jcf-scrollable no-border height-window\">\n                          <ol className=\"answers-list answers-list-columns\">\n                            {this.mapProblems()}\n                          </ol>\n                        </div>\n                      </div>\n                      <div className=\"starting-block\">\n                        <div className=\"holder\">\n                          <span className=\"title\">\n                            This section has {testSection ? testSection.problems.problems.length : \"0\"} questions and is {testSection ? testSection.problems.time_limit : \"0\"} minutes\n                            total\n                          </span>\n                          <a\n                            onClick={() =>\n                              onSetActivePage(\"showInCompleteTest\")\n                            }\n                            className=\"btn btn-xlarge waves-effect waves-light bg-blue\"\n                          >\n                            Begin Section\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nStartReadingTest.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onSetActivePage: PropTypes.func.isRequired,\n  testSection: PropTypes.object.isRequired,\n};\n\nexport default StartReadingTest;\n"]},"metadata":{},"sourceType":"module"}