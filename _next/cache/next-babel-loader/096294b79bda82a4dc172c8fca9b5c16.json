{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/components/SubscoresCard/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar SubScoresCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubScoresCard, _React$Component);\n\n  function SubScoresCard(props) {\n    var _this;\n\n    _classCallCheck(this, SubScoresCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubScoresCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProgressElement\", function (item) {\n      return __jsx(\"div\", {\n        className: \"progress-block progress-block-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"progress-legend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"legend-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, item[0]))), __jsx(\"div\", {\n        className: \"progress progress-rounded-md\",\n        style: {\n          borderRadius: '13px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"determinate\",\n        style: {\n          width: \"\".concat(item[1] / 15 * 100, \"%\"),\n          backgroundColor: '#f5883f',\n          borderRadius: '13px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"progress-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, item[1]))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapProgressBar\", function () {\n      var subScores = _this.props.subScores;\n      var newRowIndex = Math.floor(_Object$entries(subScores).length / 2);\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, _Object$entries(subScores).map(function (item, index) {\n        if (index > newRowIndex) {} else {\n          return _this.renderProgressElement(item);\n        }\n      })), __jsx(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, _Object$entries(subScores).map(function (item, index) {\n        if (index <= newRowIndex) {} else {\n          return _this.renderProgressElement(item);\n        }\n      })));\n    });\n\n    return _this;\n  }\n\n  _createClass(SubScoresCard, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"col s12 l6 card-width-546\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Subscores \", __jsx(\"span\", {\n        className: \"separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"|\"), \" \", __jsx(\"span\", {\n        className: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"1 to 15\")), __jsx(\"div\", {\n        className: \"card-main-full card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"progress-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.mapProgressBar()))))));\n    }\n  }]);\n\n  return SubScoresCard;\n}(React.Component);\n\nSubScoresCard.propTypes = {\n  subScores: PropTypes.object.isRequired\n};\nexport default SubScoresCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestScorePage/components/SubscoresCard/index.js"],"names":["React","PropTypes","SubScoresCard","props","item","borderRadius","width","backgroundColor","subScores","newRowIndex","Math","floor","length","map","index","renderProgressElement","mapProgressBar","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SubScoresCard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  renderProgressElement = item =>\n    (<div className=\"progress-block progress-block-md\">\n      <div className=\"progress-legend\">\n        <div className=\"legend-block\">\n          <span className=\"text\">\n            {item[0]}\n          </span>\n        </div>\n      </div>\n      <div className=\"progress progress-rounded-md\" style={{ borderRadius: '13px' }}>\n        <div\n          className=\"determinate\"\n          style={{\n            width: `${item[1] / 15 * 100}%`,\n            backgroundColor: '#f5883f',\n            borderRadius: '13px',\n          }}\n        >\n          <span className=\"progress-label\">\n            {item[1]}\n          </span>\n        </div>\n      </div>\n    </div>);\n  mapProgressBar = () => {\n    const { subScores } = this.props;\n    const newRowIndex = Math.floor(Object.entries(subScores).length / 2);\n    return (\n      <React.Fragment>\n        <div className=\"col s12 m6\">\n          {Object.entries(subScores).map((item, index) => {\n            if (index > newRowIndex) {\n            } else {\n              return this.renderProgressElement(item);\n            }\n          })}\n        </div>\n        <div className=\"col s12 m6\">\n          {Object.entries(subScores).map((item, index) => {\n            if (index <= newRowIndex) {\n            } else {\n              return this.renderProgressElement(item);\n            }\n          })}\n        </div>\n      </React.Fragment>\n    );\n  };\n  render() {\n    return (\n      <div className=\"col s12 l6 card-width-546\">\n        <div className=\"card-block\">\n          <h2>\n            Subscores <span className=\"separator\">|</span> <span className=\"quantity\">1 to 15</span>\n          </h2>\n          <div className=\"card-main-full card\">\n            <div className=\"card-content\">\n              <div className=\"progress-section\">\n                <div className=\"row mb-0\">\n                  {this.mapProgressBar()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSubScoresCard.propTypes = {\n  subScores: PropTypes.object.isRequired,\n};\n\nexport default SubScoresCard;\n"]},"metadata":{},"sourceType":"module"}