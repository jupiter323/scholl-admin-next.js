{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nconst ContactInformation = ({\n  state: {\n    phone,\n    addressLine1,\n    addressLine2,\n    city,\n    state,\n    zipCode\n  },\n  handleDetailsChange\n}) => __jsx(\"div\", {\n  className: \"card-block\"\n}, __jsx(\"h2\", null, \"Contact Information (optional)\"), __jsx(\"div\", {\n  className: \"card\"\n}, __jsx(\"div\", {\n  className: \"card-content\"\n}, __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12 focus-blue\"\n}, __jsx(\"input\", {\n  type: \"tel\",\n  id: \"phone\",\n  name: \"phone\",\n  value: phone,\n  onChange: event => handleDetailsChange(event, 'phone', 'contactInformation')\n}), __jsx(\"label\", {\n  className: phone.length ? 'label active' : 'label',\n  htmlFor: \"phone\"\n}, \"Phone\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12 focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"address_line_1\",\n  name: \"addressLine1\",\n  value: addressLine1,\n  onChange: event => handleDetailsChange(event, 'addressLine1', 'contactInformation')\n}), __jsx(\"label\", {\n  className: addressLine1.length ? 'label active' : 'label',\n  htmlFor: \"address_line_1\"\n}, \"Address Line 1*\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12 focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"address_line_2\",\n  name: \"addressLine2\",\n  value: addressLine2,\n  onChange: event => handleDetailsChange(event, 'addressLine2', 'contactInformation')\n}), __jsx(\"label\", {\n  className: addressLine2.length ? 'label active' : 'label',\n  htmlFor: \"address_line_2\"\n}, \"Address Line 2*\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"input-field col s12 focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"city\",\n  name: \"city\",\n  value: city,\n  onChange: event => handleDetailsChange(event, 'city', 'contactInformation')\n}), __jsx(\"label\", {\n  className: city.length ? 'label active' : 'label',\n  htmlFor: \"city\"\n}, \"City\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\"))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"col s6 l5\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(Dropdown, {\n  value: getValueFromState(state, stateOptions),\n  onChange: event => handleDetailsChange(event, 'state', 'contactInformation'),\n  options: stateOptions,\n  label: \"State\",\n  stateKey: \"state\",\n  dropdownKey: \"state\"\n}), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\"))), __jsx(\"div\", {\n  className: \"col s6 l7\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"zip_code\",\n  name: \"zipCode\",\n  value: zipCode,\n  onChange: event => handleDetailsChange(event, 'zipCode', 'contactInformation')\n}), __jsx(\"label\", {\n  className: zipCode.length ? 'label active' : 'label',\n  htmlFor: \"zip_code\"\n}, \"Zip\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\")))))));\n\nContactInformation.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default ContactInformation;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/AccountPage/components/ContactInformation/index.js"],"names":["React","PropTypes","Dropdown","getValueFromState","stateOptions","ContactInformation","state","phone","addressLine1","addressLine2","city","zipCode","handleDetailsChange","event","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nconst ContactInformation = ({ state: { phone, addressLine1, addressLine2, city, state, zipCode }, handleDetailsChange }) => (\n  <div className=\"card-block\">\n    <h2>Contact Information (optional)</h2>\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12 focus-blue\">\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={phone}\n              onChange={(event) => handleDetailsChange(event, 'phone', 'contactInformation')}\n            />\n            <label className={phone.length ? 'label active' : 'label'} htmlFor=\"phone\">Phone</label>\n            <span className=\"note\">*Optional</span>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12 focus-blue\">\n            <input\n              type=\"text\"\n              id=\"address_line_1\"\n              name=\"addressLine1\"\n              value={addressLine1}\n              onChange={(event) => handleDetailsChange(event, 'addressLine1', 'contactInformation')}\n            />\n            <label className={addressLine1.length ? 'label active' : 'label'} htmlFor=\"address_line_1\">Address Line 1*</label>\n            <span className=\"note\">*Optional</span>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12 focus-blue\">\n            <input\n              type=\"text\"\n              id=\"address_line_2\"\n              name=\"addressLine2\"\n              value={addressLine2}\n              onChange={(event) => handleDetailsChange(event, 'addressLine2', 'contactInformation')}\n            />\n            <label className={addressLine2.length ? 'label active' : 'label'} htmlFor=\"address_line_2\">Address Line 2*</label>\n            <span className=\"note\">*Optional</span>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12 focus-blue\">\n            <input\n              type=\"text\"\n              id=\"city\"\n              name=\"city\"\n              value={city}\n              onChange={(event) => handleDetailsChange(event, 'city', 'contactInformation')}\n            />\n            <label className={city.length ? 'label active' : 'label'} htmlFor=\"city\">City</label>\n            <span className=\"note\">*Optional</span>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"col s6 l5\">\n            <div className=\"input-field focus-blue\">\n              <Dropdown\n                value={getValueFromState(state, stateOptions)}\n                onChange={(event) => handleDetailsChange(event, 'state', 'contactInformation')}\n                options={stateOptions}\n                label=\"State\"\n                stateKey=\"state\"\n                dropdownKey=\"state\"\n              />\n              <span className=\"note\">*Optional</span>\n            </div>\n          </div>\n          <div className=\"col s6 l7\">\n            <div className=\"input-field focus-blue\">\n              <input\n                type=\"text\"\n                id=\"zip_code\"\n                name=\"zipCode\"\n                value={zipCode}\n                onChange={(event) => handleDetailsChange(event, 'zipCode', 'contactInformation')}\n              />\n              <label className={zipCode.length ? 'label active' : 'label'} htmlFor=\"zip_code\">Zip</label>\n              <span className=\"note\">*Optional</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nContactInformation.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default ContactInformation;\n"]},"metadata":{},"sourceType":"module"}