{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nvar styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  }\n};\n\nvar BubbleGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BubbleGroup, _React$Component);\n\n  function BubbleGroup(props) {\n    var _this;\n\n    _classCallCheck(this, BubbleGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BubbleGroup).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var studentChoice = _this.props.question.studentChoice;\n\n      _this.setState({\n        selected: studentChoice\n      }, function () {\n        return _this.checkIfCorrect(_this.state.selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleBubbleChange\", function (event, letter) {\n      if (_this.props.question.studentChoice === \"\") {\n        _this.setState({\n          selected: event.target.value\n        }, function () {\n          return _this.checkIfCorrect(letter);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectedBubbleClick\", function (event) {\n      var selected = _this.state.selected;\n\n      if (_this.props.question.studentChoice === \"\") {\n        if (selected === event.target.value) {\n          _this.setState({\n            selected: \"\"\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkIfCorrect\", function (letter) {\n      var question = _this.props.question;\n\n      if (letter === question.answer) {\n        _this.setState({\n          correct: true\n        });\n      } else {\n        _this.setState({\n          correct: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapEmptyBubbles\", function (id) {\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      return letters.map(function (letter) {\n        return __jsx(\"li\", {\n          key: letter\n        }, __jsx(\"form\", null, __jsx(\"input\", {\n          type: \"radio\",\n          id: \"\".concat(id).concat(letter),\n          name: \"letter\",\n          value: letter,\n          checked: _this.state.selected === letter,\n          onChange: function onChange(event) {\n            return _this.onHandleBubbleChange(event, letter);\n          },\n          onClick: function onClick(event) {\n            return _this.onSelectedBubbleClick(event);\n          }\n        }), __jsx(\"label\", {\n          htmlFor: \"\".concat(id).concat(letter),\n          style: _this.state.selected ? _this.renderBubbleStyle(letter) : styles.plain\n        }, __jsx(\"span\", {\n          style: {\n            display: 'block',\n            marginTop: '2px',\n            paddingLeft: \"4.5px\"\n          }\n        }, letter))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubbleStyle\", function (letter) {\n      var _this$state = _this.state,\n          correct = _this$state.correct,\n          selected = _this$state.selected;\n      var answer = _this.props.question.answer;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    _this.state = {\n      selected: _this.props.question.studentChoice,\n      correct: null\n    };\n    return _this;\n  }\n\n  _createClass(BubbleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.question.id;\n      return __jsx(React.Fragment, null, this.mapEmptyBubbles(id));\n    }\n  }]);\n\n  return BubbleGroup;\n}(React.Component);\n\nexport default BubbleGroup;","map":null,"metadata":{},"sourceType":"module"}