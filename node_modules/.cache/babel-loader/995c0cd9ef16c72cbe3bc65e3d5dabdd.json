{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\n\nvar DetailLessonList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailLessonList, _React$Component);\n\n  function DetailLessonList(props) {\n    var _this;\n\n    _classCallCheck(this, DetailLessonList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailLessonList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneLesson\", function (index) {\n      var lessons = _this.state.lessons;\n\n      _this.setState(function (prevState) {\n        prevState.lessons.push(lessons[index]);\n        return {\n          lessons: prevState.lessons\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteLesson\", function (index) {\n      var lessons = _this.state.lessons;\n\n      var newLessonsArray = _this.arrayItemRemover(lessons, lessons[index]);\n\n      _this.setState({\n        lessons: newLessonsArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleFilterClick\", function (filter) {\n      var currentActiveFilters = _this.state.activeFilters;\n      var activeFilters;\n\n      if (currentActiveFilters.indexOf(filter) === -1) {\n        activeFilters = update(currentActiveFilters, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = currentActiveFilters.indexOf(filter);\n        activeFilters = update(currentActiveFilters, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState({\n        activeFilters: activeFilters\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (lesson) {\n        return lesson !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var _this$state = _this.state,\n          active = _this$state.active,\n          lessons = _this$state.lessons;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          lessons: lessons,\n          onDeleteLesson: _this.onDeleteLesson,\n          onCloneLesson: _this.onCloneLesson\n        });\n      }\n    });\n\n    _this.state = {\n      test: true,\n      lessons: _this.props.user.lessons,\n      currentView: 'full',\n      active: 'full',\n      activeFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(DetailLessonList, [{\n    key: \"render\",\n    value: function render() {\n      var currentView = this.state.currentView;\n      return React.createElement(React.Fragment, null, React.createElement(FilterSection, {\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onHandleFilterClick: this.onHandleFilterClick\n      }), this.renderCurrentView(), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Lesson\"));\n    }\n  }]);\n\n  return DetailLessonList;\n}(React.Component);\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default DetailLessonList;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailLessonList\\index.js"],"names":["React","PropTypes","update","FilterSection","FullView","DetailLessonList","props","view","setState","currentView","active","index","lessons","state","prevState","push","newLessonsArray","arrayItemRemover","filter","currentActiveFilters","activeFilters","indexOf","$push","filterIndex","$splice","array","value","lesson","onDeleteLesson","onCloneLesson","test","user","onChangeView","onHandleFilterClick","renderCurrentView","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\n\nclass DetailLessonList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: true,\n      lessons: this.props.user.lessons,\n      currentView: 'full',\n      active: 'full',\n      activeFilters: [],\n    }\n  };\n\n  onChangeView = (view) => this.setState({currentView: view, active: view})\n\n// wasn't working\n  // onRemoveOption = (optionIndex) => {\n  //   const lessons = update(this.state, {\n  //       lessons: {\n  //         $splice: [[optionIndex, 1]],\n  //     },\n  //   });\n  //   this.setState({ lessons });\n  // }\n\n  onCloneLesson = (index) => {\n    const { lessons } = this.state;\n    this.setState(prevState => {\n      prevState.lessons.push(lessons[index]);\n      return { lessons: prevState.lessons}\n     })\n  }\n\n  onDeleteLesson = (index) => {\n    const { lessons } = this.state;\n    const newLessonsArray = this.arrayItemRemover(lessons, lessons[index])\n    this.setState({lessons: newLessonsArray})\n  }\n\n  onHandleFilterClick = (filter) => {\n    const { activeFilters: currentActiveFilters } = this.state;\n    let activeFilters;\n    if (currentActiveFilters.indexOf(filter) === -1) {\n      activeFilters = update(currentActiveFilters, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = currentActiveFilters.indexOf(filter);\n      activeFilters = update(currentActiveFilters, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ activeFilters });\n  }\n  \n  arrayItemRemover = (array, value) => array.filter((lesson) => lesson !== value)\n\n  renderCurrentView = () => {\n    const {active, lessons} = this.state;\n    if (active === 'full') {\n      return <FullView lessons={lessons} onDeleteLesson={this.onDeleteLesson} onCloneLesson={this.onCloneLesson}/>\n    }\n  }\n\n\n  render() {\n    const { currentView } = this.state;\n    return (\n      <React.Fragment>\n        <FilterSection\n        currentView={currentView}\n        onChangeView={this.onChangeView}\n        onHandleFilterClick={this.onHandleFilterClick}\n        />\n        {this.renderCurrentView()}\n      <a href=\"#\" className=\"waves-effect waves-teal btn add-btn\"><i className=\"material-icons\">add</i>New Lesson</a>\n      </React.Fragment>\n    )\n  }\n}\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default DetailLessonList;\n"]},"metadata":{},"sourceType":"module"}