{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Sticky } from \"react-sticky\";\nimport AccountPage from \"../AccountPage\";\nimport DetailSummaryPage from \"../DetailSummaryPage\";\nimport DetailWorksheetPage from \"../DetailWorksheetPage\";\nimport DetailLessonList from \"../DetailLessonList\";\nimport DetailTestList from \"../DetailTestList\";\nimport LessonDetailAnswerSheet from \"../LessonDetailAnswerSheet\";\nimport StudentNavBar from \"../components/StudentNavBar\";\nimport ScoredTestListPage from \"../ScoredTestListPage\";\nimport SessionCalendar from \"../Calendar\";\nimport { makeSelectAssignLessonsModalOpen, makeSelectAssignWorkSheetsModalOpen } from \"../index/selectors\";\n\nclass IndividualStudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleActivationDropdown\", () => this.setState(({\n      activationDropdownOpen\n    }) => ({\n      activationDropdownOpen: !activationDropdownOpen\n    })));\n\n    _defineProperty(this, \"onSetActivePage\", activePage => this.setState({\n      activePage\n    }));\n\n    _defineProperty(this, \"onHandleDetailsChange\", (name, event) => this.setState({\n      [name]: event.target.value\n    }));\n\n    _defineProperty(this, \"renderCurrentPage\", () => {\n      const {\n        activePage\n      } = this.state;\n      const {\n        student\n      } = this.props;\n\n      if (activePage === \"summary\") {\n        return __jsx(DetailSummaryPage, {\n          user: student\n        });\n      }\n\n      if (activePage === \"account\") {\n        return __jsx(AccountPage, {\n          user: student\n        });\n      }\n\n      if (activePage === \"lessons\") {\n        return __jsx(DetailLessonList, {\n          user: student\n        });\n      }\n\n      if (activePage === \"worksheets\") {\n        return __jsx(DetailWorksheetPage, {\n          user: student\n        });\n      }\n\n      if (activePage === \"answer-sheet\") {\n        return __jsx(LessonDetailAnswerSheet, null);\n      }\n\n      if (activePage === \"test\") {\n        return __jsx(DetailTestList, {\n          user: student\n        });\n      }\n\n      if (activePage === \"scored-tests\") {\n        return __jsx(ScoredTestListPage, null);\n      }\n\n      if (activePage === \"calendar\") {\n        return __jsx(SessionCalendar, null);\n      }\n\n      return null;\n    });\n\n    this.state = {\n      activePage: \"summary\",\n      activationDropdownOpen: false,\n      licenseCode: \"\"\n    };\n  }\n\n  render() {\n    const {\n      onRedirectToStudentPage,\n      student: {\n        active,\n        studentInformation: {\n          firstName,\n          lastName\n        }\n      }\n    } = this.props;\n    const {\n      activePage,\n      activationDropdownOpen,\n      licenseCode\n    } = this.state;\n    const {\n      assignLessonsModalOpen,\n      assignWorkSheetsModalOpen\n    } = this.props;\n    return __jsx(React.Fragment, null, !assignLessonsModalOpen && !assignWorkSheetsModalOpen ? __jsx(Sticky, null, ({\n      style\n    }) => __jsx(\"div\", {\n      className: \"title-row card-panel\",\n      style: _objectSpread2({}, style, {\n        zIndex: 1999\n      })\n    }, __jsx(\"div\", {\n      className: \"mobile-header\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"slide-out\",\n      className: \"sidenav-trigger\"\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"menu\"))), __jsx(\"nav\", {\n      className: \"breadcrumb-holder\"\n    }, __jsx(\"div\", {\n      className: \"nav-wrapper \"\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"breadcrumb\",\n      onClick: onRedirectToStudentPage\n    }, \"< Students\"))), __jsx(\"h2\", {\n      className: \"h1 white-text\"\n    }, __jsx(\"span\", {\n      className: \"heading-holder\"\n    }, __jsx(\"i\", {\n      className: \"icon-student\"\n    }), __jsx(\"span\", {\n      className: \"heading-block\"\n    }, firstName, \" \", lastName))), __jsx(StudentNavBar, {\n      activePage: activePage,\n      onSetActivePage: this.onSetActivePage\n    }), __jsx(\"div\", {\n      className: \"activate-block\"\n    }, active ? __jsx(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n    }, __jsx(\"b\", {\n      className: \"btn-text visible-lg\"\n    }, \"Account Activated\"), \" \", __jsx(\"i\", {\n      className: \"icon-unlock\"\n    })) : __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onToggleActivationDropdown,\n      className: \"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\",\n      \"data-target\": \"dropdown_activate\"\n    }, __jsx(\"b\", {\n      className: \"btn-text visible-lg\"\n    }, \"Activate Account\"), \" \", __jsx(\"i\", {\n      className: \"icon-key\"\n    })), __jsx(\"div\", {\n      id: \"dropdown_activate\",\n      className: \"dropdown-content\",\n      style: activationDropdownOpen ? {\n        display: \"block\",\n        opacity: \"1\"\n      } : {}\n    }, __jsx(\"div\", {\n      className: \"card-panel\"\n    }, __jsx(\"div\", {\n      className: \"title-block\"\n    }, __jsx(\"div\", {\n      className: \"h3\"\n    }, \"Ready to begin your course?\"), __jsx(\"div\", {\n      className: \"subtitle\"\n    }, \"Please enter a valid license code below.\")), __jsx(\"div\", {\n      className: \"input-field\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      value: licenseCode,\n      id: \"license-code\",\n      onChange: event => this.onHandleDetailsChange(\"licenseCode\", event)\n    }), __jsx(\"label\", {\n      className: \"label\",\n      htmlFor: \"license_code\"\n    }, \"License Code\")), __jsx(\"div\", {\n      className: \"btn-holder center-align\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-blue\",\n      type: \"submit\"\n    }, \"Activate\")), __jsx(\"div\", {\n      className: \"text-block center-align\"\n    }, __jsx(\"p\", null, \"If you need license codes, you can get them here:\", \" \", __jsx(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-light btn-small btn-blue\"\n    }, \"Purchase Licenses\"))), __jsx(\"div\", {\n      className: \"text-block\"\n    }, __jsx(\"p\", null, \"*Note: \"), __jsx(\"p\", null, \"We o\\uFB00er discounted account licenses for students enrolled in courses with 5 or more students in a class or group format (as opposed to individual instruction). These licenses provide the features necessary to conduct a customized course for the class as a whole, rather than for individual students.\"))))))) : null, this.renderCurrentPage());\n  }\n\n}\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen: makeSelectAssignWorkSheetsModalOpen()\n});\nconst withConnect = connect(mapStateToProps, null);\nexport default compose(withConnect)(IndividualStudentPage);","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/IndividualStudentPage/index.js"],"names":["React","PropTypes","createStructuredSelector","connect","compose","Sticky","AccountPage","DetailSummaryPage","DetailWorksheetPage","DetailLessonList","DetailTestList","LessonDetailAnswerSheet","StudentNavBar","ScoredTestListPage","SessionCalendar","makeSelectAssignLessonsModalOpen","makeSelectAssignWorkSheetsModalOpen","IndividualStudentPage","Component","constructor","props","setState","activationDropdownOpen","activePage","name","event","target","value","state","student","licenseCode","render","onRedirectToStudentPage","active","studentInformation","firstName","lastName","assignLessonsModalOpen","assignWorkSheetsModalOpen","style","zIndex","onSetActivePage","onToggleActivationDropdown","display","opacity","onHandleDetailsChange","renderCurrentPage","propTypes","object","isRequired","func","mapStateToProps","withConnect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { Sticky } from \"react-sticky\";\nimport AccountPage from \"../AccountPage\";\nimport DetailSummaryPage from \"../DetailSummaryPage\";\nimport DetailWorksheetPage from \"../DetailWorksheetPage\";\nimport DetailLessonList from \"../DetailLessonList\";\nimport DetailTestList from \"../DetailTestList\";\nimport LessonDetailAnswerSheet from \"../LessonDetailAnswerSheet\";\nimport StudentNavBar from \"../components/StudentNavBar\";\nimport ScoredTestListPage from \"../ScoredTestListPage\";\nimport SessionCalendar from \"../Calendar\";\n\nimport {\n  makeSelectAssignLessonsModalOpen,\n  makeSelectAssignWorkSheetsModalOpen,\n} from \"../index/selectors\";\n\nclass IndividualStudentPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePage: \"summary\",\n      activationDropdownOpen: false,\n      licenseCode: \"\",\n    };\n  }\n  onToggleActivationDropdown = () =>\n    this.setState(({ activationDropdownOpen }) => ({\n      activationDropdownOpen: !activationDropdownOpen,\n    }));\n\n  onSetActivePage = activePage => this.setState({ activePage });\n\n  onHandleDetailsChange = (name, event) =>\n    this.setState({ [name]: event.target.value });\n\n  renderCurrentPage = () => {\n    const { activePage } = this.state;\n    const { student } = this.props;\n    if (activePage === \"summary\") {\n      return <DetailSummaryPage user={student} />;\n    }\n    if (activePage === \"account\") {\n      return <AccountPage user={student} />;\n    }\n    if (activePage === \"lessons\") {\n      return <DetailLessonList user={student} />;\n    }\n    if (activePage === \"worksheets\") {\n      return <DetailWorksheetPage user={student} />;\n    }\n    if (activePage === \"answer-sheet\") {\n      return <LessonDetailAnswerSheet />;\n    }\n    if (activePage === \"test\") {\n      return <DetailTestList user={student} />;\n    }\n    if (activePage === \"scored-tests\") {\n      return <ScoredTestListPage />;\n    }\n    if (activePage === \"calendar\") {\n      return <SessionCalendar />;\n    }\n    return null;\n  };\n  render() {\n    const {\n      onRedirectToStudentPage,\n      student: {\n        active,\n        studentInformation: { firstName, lastName },\n      },\n    } = this.props;\n    const { activePage, activationDropdownOpen, licenseCode } = this.state;\n    const { assignLessonsModalOpen, assignWorkSheetsModalOpen } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When\n            condition={!assignLessonsModalOpen && !assignWorkSheetsModalOpen}\n          >\n            <Sticky>\n              {({ style }) => (\n                <div\n                  className=\"title-row card-panel\"\n                  style={{ ...style, zIndex: 1999 }}\n                >\n                  <div className=\"mobile-header\">\n                    <a\n                      href=\"#\"\n                      data-target=\"slide-out\"\n                      className=\"sidenav-trigger\"\n                    >\n                      <i className=\"material-icons\">menu</i>\n                    </a>\n                  </div>\n                  <nav className=\"breadcrumb-holder\">\n                    <div className=\"nav-wrapper \">\n                      <a\n                        href=\"#!\"\n                        className=\"breadcrumb\"\n                        onClick={onRedirectToStudentPage}\n                      >\n                        &lt; Students\n                      </a>\n                    </div>\n                  </nav>\n                  <h2 className=\"h1 white-text\">\n                    <span className=\"heading-holder\">\n                      <i className=\"icon-student\"></i>\n                      <span className=\"heading-block\">\n                        {firstName} {lastName}\n                      </span>\n                    </span>\n                  </h2>\n                  <StudentNavBar\n                    activePage={activePage}\n                    onSetActivePage={this.onSetActivePage}\n                  />\n                  <div className=\"activate-block\">\n                    <Choose>\n                      <When condition={active}>\n                        <a\n                          href=\"#\"\n                          className=\"waves-effect waves-teal btn btn-white btn-bordered btn-account_activated\"\n                        >\n                          <b className=\"btn-text visible-lg\">\n                            Account Activated\n                          </b>{\" \"}\n                          <i className=\"icon-unlock\"></i>\n                        </a>\n                      </When>\n                      <Otherwise>\n                        <a\n                          href=\"#\"\n                          onClick={this.onToggleActivationDropdown}\n                          className=\"waves-effect btn btn-orange btn-account_inactive dropdown-trigger\"\n                          data-target=\"dropdown_activate\"\n                        >\n                          <b className=\"btn-text visible-lg\">\n                            Activate Account\n                          </b>{\" \"}\n                          <i className=\"icon-key\"></i>\n                        </a>\n                      </Otherwise>\n                    </Choose>\n                    <div\n                      id=\"dropdown_activate\"\n                      className=\"dropdown-content\"\n                      style={\n                        activationDropdownOpen\n                          ? { display: \"block\", opacity: \"1\" }\n                          : {}\n                      }\n                    >\n                      <div className=\"card-panel\">\n                        <div className=\"title-block\">\n                          <div className=\"h3\">Ready to begin your course?</div>\n                          <div className=\"subtitle\">\n                            Please enter a valid license code below.\n                          </div>\n                        </div>\n                        <div className=\"input-field\">\n                          <input\n                            type=\"text\"\n                            value={licenseCode}\n                            id=\"license-code\"\n                            onChange={event =>\n                              this.onHandleDetailsChange(\"licenseCode\", event)\n                            }\n                          />\n                          <label className=\"label\" htmlFor=\"license_code\">\n                            License Code\n                          </label>\n                        </div>\n                        <div className=\"btn-holder center-align\">\n                          <button className=\"btn btn-blue\" type=\"submit\">\n                            Activate\n                          </button>\n                        </div>\n                        <div className=\"text-block center-align\">\n                          <p>\n                            If you need license codes, you can get them here:{\" \"}\n                            <a\n                              href=\"#\"\n                              className=\"waves-effect waves-light btn-small btn-blue\"\n                            >\n                              Purchase Licenses\n                            </a>\n                          </p>\n                        </div>\n                        <div className=\"text-block\">\n                          <p>*Note: </p>\n                          <p>\n                            We oﬀer discounted account licenses for students\n                            enrolled in courses with 5 or more students in a\n                            class or group format (as opposed to individual\n                            instruction). These licenses provide the features\n                            necessary to conduct a customized course for the\n                            class as a whole, rather than for individual\n                            students.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Sticky>\n          </When>\n        </Choose>\n        {this.renderCurrentPage()}\n      </React.Fragment>\n    );\n  }\n}\n\nIndividualStudentPage.propTypes = {\n  student: PropTypes.object.isRequired,\n  onRedirectToStudentPage: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  assignLessonsModalOpen: makeSelectAssignLessonsModalOpen(),\n  assignWorkSheetsModalOpen: makeSelectAssignWorkSheetsModalOpen(),\n});\n\nconst withConnect = connect(mapStateToProps, null);\n\nexport default compose(withConnect)(IndividualStudentPage);\n"]},"metadata":{},"sourceType":"module"}