{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable react/no-did-mount-set-state */\n\n/* eslint-disable react/no-did-update-set-state */\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LessonWorksheetTestSection from '../LessonWorksheetTestSection';\nimport LessonCard from './components/LessonCard';\nimport FilterSection from './components/FilterSection';\n\nclass DetailLessonList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleDetailModalOpen\", worksheetIndex => this.setState(({\n      detailModalOpen,\n      lessons\n    }) => ({\n      detailModalOpen: !detailModalOpen,\n      activeLesson: lessons[worksheetIndex],\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    })));\n\n    _defineProperty(this, \"onSetDropdown\", dropdownIndex => this.setState({\n      dropdownIndex,\n      dropdownIsOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDropdown\", () => this.setState({\n      dropdownIsOpen: false\n    }));\n\n    _defineProperty(this, \"mapLessons\", () => this.state.lessons.map((lesson, index) => React.createElement(LessonCard, {\n      key: index,\n      index: index,\n      lesson: lesson,\n      onSetDropdown: this.onSetDropdown,\n      onCloseDropdown: this.onCloseDropdown,\n      dropdownIndex: this.state.dropdownIndex,\n      dropdownIsOpen: this.state.dropdownIsOpen,\n      onToggleDetailModalOpen: this.onToggleDetailModalOpen\n    })));\n\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n      detailModalOpen: false,\n      lessons: [],\n      activeLesson: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      lessons: this.props.user.lessons\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      user\n    } = this.props;\n\n    if (prevProps.user.id !== user.id) {\n      this.setState({\n        lessons: this.props.user.lessons\n      });\n    }\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      detailModalOpen,\n      activeLesson\n    } = this.state;\n    return React.createElement(React.Fragment, null, detailModalOpen ? React.createElement(LessonWorksheetTestSection, {\n      onClose: this.onToggleDetailModalOpen,\n      worksheet: activeLesson,\n      user: user\n    }) : [React.createElement(FilterSection, {\n      key: \"0\"\n    }), React.createElement(\"div\", {\n      className: \"content-section\",\n      key: \"1\"\n    }, React.createElement(\"div\", {\n      className: \"row d-flex-content card-width-272\"\n    }, this.mapLessons())), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"waves-effect waves-teal btn add-btn\",\n      key: \"2\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons\"\n    }, \"add\"), \"New Lesson\")]);\n  }\n\n}\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default DetailLessonList;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailLessonList/index.js"],"names":["React","PropTypes","LessonWorksheetTestSection","LessonCard","FilterSection","DetailLessonList","Component","constructor","props","worksheetIndex","setState","detailModalOpen","lessons","activeLesson","dropdownIsOpen","dropdownIndex","state","map","lesson","index","onSetDropdown","onCloseDropdown","onToggleDetailModalOpen","componentDidMount","user","componentDidUpdate","prevProps","id","render","mapLessons","propTypes","object","isRequired"],"mappings":";;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,0BAAP,MAAuC,+BAAvC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,gBAAN,SAA+BL,KAAK,CAACM,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qDAsBQC,cAAD,IAAoB,KAAKC,QAAL,CAAc,CAAC;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAAD,MAAmC;AAAED,MAAAA,eAAe,EAAE,CAACA,eAApB;AAAqCE,MAAAA,YAAY,EAAED,OAAO,CAACH,cAAD,CAA1D;AAA4EK,MAAAA,cAAc,EAAE,KAA5F;AAAmGC,MAAAA,aAAa,EAAE;AAAlH,KAAnC,CAAd,CAtB3B;;AAAA,2CAwBFA,aAAD,IAAmB,KAAKL,QAAL,CAAc;AAAEK,MAAAA,aAAF;AAAiBD,MAAAA,cAAc,EAAE;AAAjC,KAAd,CAxBhB;;AAAA,6CAyBD,MAAM,KAAKJ,QAAL,CAAc;AAAEI,MAAAA,cAAc,EAAE;AAAlB,KAAd,CAzBL;;AAAA,wCA2BN,MAAM,KAAKE,KAAL,CAAWJ,OAAX,CAAmBK,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KACxC,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,MAAM,EAAED,MAHV;AAIE,MAAA,aAAa,EAAE,KAAKE,aAJtB;AAKE,MAAA,eAAe,EAAE,KAAKC,eALxB;AAME,MAAA,aAAa,EAAE,KAAKL,KAAL,CAAWD,aAN5B;AAOE,MAAA,cAAc,EAAE,KAAKC,KAAL,CAAWF,cAP7B;AAQE,MAAA,uBAAuB,EAAE,KAAKQ;AARhC,MADiB,CA3BA;;AAEjB,SAAKN,KAAL,GAAa;AACXF,MAAAA,cAAc,EAAE,KADL;AAEXC,MAAAA,aAAa,EAAE,IAFJ;AAGXJ,MAAAA,eAAe,EAAE,KAHN;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAOD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,QAAL,CAAc;AAAEE,MAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWgB,IAAX,CAAgBZ;AAA3B,KAAd;AACD;;AAEDa,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEF,MAAAA;AAAF,QAAW,KAAKhB,KAAtB;;AACA,QAAIkB,SAAS,CAACF,IAAV,CAAeG,EAAf,KAAsBH,IAAI,CAACG,EAA/B,EAAmC;AACjC,WAAKjB,QAAL,CAAc;AAAEE,QAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWgB,IAAX,CAAgBZ;AAA3B,OAAd;AACD;AACF;;AAoBDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAW,KAAKhB,KAAtB;AACA,UAAM;AAAEG,MAAAA,eAAF;AAAmBE,MAAAA;AAAnB,QAAoC,KAAKG,KAA/C;AACA,WACE,oBAAC,KAAD,CAAO,QAAP,QAEqBL,eAFrB,GAGM,oBAAC,0BAAD;AACE,MAAA,OAAO,EAAE,KAAKW,uBADhB;AAEE,MAAA,SAAS,EAAET,YAFb;AAGE,MAAA,IAAI,EAAEW;AAHR,MAHN,IAUM,oBAAC,aAAD;AAAA;AAAA,MAVN,EAWM;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,KAAKK,UAAL,EADH,CADF,CAXN,EAgBM;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,qCAAtB;AAAA;AAAA,OAA4D;AAAG,MAAA,SAAS,EAAC;AAAb,aAA5D,eAhBN,EADF;AAsBD;;AAlE4C;;AAqE/CxB,gBAAgB,CAACyB,SAAjB,GAA6B;AAC3BN,EAAAA,IAAI,EAAEvB,SAAS,CAAC8B,MAAV,CAAiBC;AADI,CAA7B;AAIA,eAAe3B,gBAAf","sourcesContent":["/* eslint-disable react/no-did-mount-set-state */\n/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LessonWorksheetTestSection from '../LessonWorksheetTestSection';\nimport LessonCard from './components/LessonCard';\nimport FilterSection from './components/FilterSection';\n\nclass DetailLessonList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n      detailModalOpen: false,\n      lessons: [],\n      activeLesson: null,\n    }\n  };\n\n  componentDidMount() {\n    this.setState({ lessons: this.props.user.lessons });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { user } = this.props;\n    if (prevProps.user.id !== user.id) {\n      this.setState({ lessons: this.props.user.lessons });\n    }\n  }\n\n  onToggleDetailModalOpen = (worksheetIndex) => this.setState(({ detailModalOpen, lessons }) => ({ detailModalOpen: !detailModalOpen, activeLesson: lessons[worksheetIndex], dropdownIsOpen: false, dropdownIndex: null }))\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  mapLessons = () => this.state.lessons.map((lesson, index) => (\n    <LessonCard\n      key={index}\n      index={index}\n      lesson={lesson}\n      onSetDropdown={this.onSetDropdown}\n      onCloseDropdown={this.onCloseDropdown}\n      dropdownIndex={this.state.dropdownIndex}\n      dropdownIsOpen={this.state.dropdownIsOpen}\n      onToggleDetailModalOpen={this.onToggleDetailModalOpen}\n    />\n  ))\n\n  render() {\n    const { user } = this.props;\n    const { detailModalOpen, activeLesson } = this.state;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When condition={detailModalOpen}>\n            <LessonWorksheetTestSection\n              onClose={this.onToggleDetailModalOpen}\n              worksheet={activeLesson}\n              user={user}\n            />\n          </When>\n          <Otherwise>\n            <FilterSection />\n            <div className=\"content-section\">\n              <div className=\"row d-flex-content card-width-272\">\n                {this.mapLessons()}\n              </div>\n            </div>\n            <a href=\"#\" className=\"waves-effect waves-teal btn add-btn\"><i className=\"material-icons\">add</i>New Lesson</a>\n          </Otherwise>\n        </Choose>\n      </React.Fragment>\n    )\n  }\n}\n\nDetailLessonList.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default DetailLessonList;\n"]},"metadata":{},"sourceType":"module"}