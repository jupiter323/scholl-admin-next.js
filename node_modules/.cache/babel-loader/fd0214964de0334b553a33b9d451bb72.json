{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\n\nvar _data = function data(current, target) {\n  return {\n    datasets: [{\n      data: [current, target - current],\n      backgroundColor: ['#9d5eb7', '#eaeaea']\n    }]\n  };\n};\n\nvar ClassCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClassCard, _React$Component);\n\n  function ClassCard(props) {\n    var _this;\n\n    _classCallCheck(this, ClassCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (event, dropdownIsOpen) {\n      event.preventDefault();\n\n      _this.setState({\n        dropdownIsOpen: !dropdownIsOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenEditModal\", function () {\n      return _this.setState({\n        editModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseEditModal\", function () {\n      return _this.setState({\n        editModalOpen: false\n      });\n    });\n\n    _this.state = {\n      dropdownIsOpen: false,\n      editModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ClassCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dropdownIsOpen = this.state.dropdownIsOpen;\n      var _this$props = this.props,\n          onCloneClass = _this$props.onCloneClass,\n          onDeleteClass = _this$props.onDeleteClass,\n          index = _this$props.index,\n          _this$props$classItem = _this$props.classItem,\n          active = _this$props$classItem.active,\n          status = _this$props$classItem.status,\n          name = _this$props$classItem.name,\n          startDate = _this$props$classItem.startDate,\n          endDate = _this$props$classItem.endDate,\n          students = _this$props$classItem.students,\n          totalImprovement = _this$props$classItem.totalImprovement,\n          courseworkAssigned = _this$props$classItem.courseworkAssigned,\n          courseworkCompleted = _this$props$classItem.courseworkCompleted,\n          flaggedForReview = _this$props$classItem.flaggedForReview,\n          averageScore = _this$props$classItem.averageScore,\n          achievedTarget = _this$props$classItem.achievedTarget,\n          avgPracticeTestsCompleted = _this$props$classItem.avgPracticeTestsCompleted,\n          completedInstruction = _this$props$classItem.completedInstruction,\n          tutor = _this$props$classItem.tutor;\n      return React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: \"card-main card-class card card-large\"\n      }, React.createElement(\"div\", {\n        className: \"owner-box card-panel\",\n        style: active ? {\n          backgroundColor: '#408e49',\n          color: \"#fff\"\n        } : {\n          backgroundColor: \"#afafaf\",\n          color: '#fff'\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"user-block\"\n      }, React.createElement(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: '#fff',\n          color: active ? \"#408e49\" : \"#afafaf\"\n        }\n      }, React.createElement(\"span\", {\n        className: \"initials\"\n      }, students), React.createElement(\"span\", {\n        className: \"ititials-text\"\n      }, \"students\")), React.createElement(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: \"#fff\"\n        }\n      }, React.createElement(\"h4\", {\n        className: \"h3\"\n      }, name), React.createElement(\"time\", {\n        dateTime: \"P120D\"\n      }, startDate, \" - \", endDate)))), React.createElement(\"div\", {\n        className: \"col s3 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"col right-align\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-members\"\n      }), React.createElement(\"span\", {\n        className: \"text-icon\"\n      }, \"Class\"))), React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        className: \"dropdown-trigger btn\",\n        href: \"#\",\n        \"data-target\": \"dropdown01\",\n        onClick: function onClick(event) {\n          return _this2.onSetDropdown(event, dropdownIsOpen);\n        }\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen ? React.createElement(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: \"block\",\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#modal_user_edit\",\n        className: \"modal-trigger link-block\",\n        onClick: this.OpenEditModal\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onCloneClass(index);\n        }\n      }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Impersonate\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onDeleteClass(index);\n        }\n      }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m5\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s6 m12\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list-custom\"\n      }, React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-aqua\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, \"+\", totalImprovement, React.createElement(\"span\", {\n        className: \"badge-text\"\n      }, \"improvement\"))))), React.createElement(\"div\", {\n        className: \"col s6 m12\"\n      }, React.createElement(\"div\", {\n        className: \"chart-block chart-block-test\"\n      }, React.createElement(Doughnut, {\n        data: function data() {\n          return _data(completedInstruction, 100);\n        },\n        height: 104,\n        width: 104,\n        options: {\n          cutoutPercentage: 80\n        }\n      }), React.createElement(\"div\", {\n        className: \"chart-text\",\n        style: {\n          bottom: '6px'\n        }\n      }, React.createElement(\"span\", {\n        className: \"title\"\n      }, \"Instruction\"), React.createElement(\"span\", {\n        className: \"value\"\n      }, completedInstruction, \"%\"), React.createElement(\"span\", {\n        className: \"description\"\n      }, \"vs scheduled instruction\")))))), React.createElement(\"div\", {\n        className: \"col s12 m7\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list\"\n      }, React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-purple-darken\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          color: '#fff'\n        }\n      }, courseworkAssigned), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"coursework assigned\")), React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-purple-lighten\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          color: '#fff'\n        }\n      }, courseworkCompleted), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"coursework completed\")), React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-red-darken-3\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          color: '#fff'\n        }\n      }, flaggedForReview), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"problems \\uFB02agged for review\")), React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-blue-light\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          color: '#fff'\n        }\n      }, averageScore), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average score\")), React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-blue\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          color: '#fff'\n        }\n      }, achievedTarget), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"achieved target score\")), React.createElement(\"li\", {\n        className: status === \"current\" ? \"style-orange-accent-4\" : \"\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\",\n        style: {\n          color: '#fff'\n        }\n      }, avgPracticeTestsCompleted), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average practice tests completed\"))))), React.createElement(\"div\", {\n        className: \"card-inner-row\"\n      }, React.createElement(\"div\", {\n        className: \"row-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"category-list\"\n      }, React.createElement(\"li\", {\n        className: \"category-box \"\n      }, React.createElement(\"span\", {\n        className: \"category-badge badge-purple\"\n      }), React.createElement(\"span\", {\n        className: \"category-text\"\n      }, tutor))))))));\n    }\n  }]);\n\n  return ClassCard;\n}(React.Component);\n\nClassCard.propTypes = {\n  classItem: PropTypes.object.isRequired,\n  onDeleteClass: PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default ClassCard;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Class\\components\\ClassCard\\index.js"],"names":["React","PropTypes","Doughnut","data","current","target","datasets","backgroundColor","ClassCard","props","event","dropdownIsOpen","preventDefault","setState","editModalOpen","state","onCloneClass","onDeleteClass","index","classItem","active","status","name","startDate","endDate","students","totalImprovement","courseworkAssigned","courseworkCompleted","flaggedForReview","averageScore","achievedTarget","avgPracticeTestsCompleted","completedInstruction","tutor","color","onSetDropdown","display","opacity","transform","OpenEditModal","cutoutPercentage","bottom","Component","propTypes","object","isRequired","func","number"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst data = (current, target) => ({\r\n  datasets: [{\r\n    data: [current, (target - current)],\r\n    backgroundColor: [\r\n      '#9d5eb7',\r\n      '#eaeaea',\r\n    ],\r\n  }],\r\n}\r\n)\r\n\r\nclass ClassCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownIsOpen: false,\r\n      editModalOpen: false,\r\n    }\r\n  }\r\n  onSetDropdown = (event, dropdownIsOpen) => {\r\n    event.preventDefault();\r\n    this.setState({ dropdownIsOpen: !dropdownIsOpen });\r\n  };\r\n\r\n  onOpenEditModal = () => this.setState({ editModalOpen: true })\r\n  onCloseEditModal = () => this.setState({ editModalOpen: false })\r\n\r\n  render() {\r\n    const { dropdownIsOpen } = this.state;\r\n    const { onCloneClass, onDeleteClass, index, classItem: { active, status, name, startDate, endDate, students, totalImprovement, courseworkAssigned,\r\n      courseworkCompleted, flaggedForReview, averageScore, achievedTarget, avgPracticeTestsCompleted, completedInstruction, tutor } } = this.props;\r\n    return (\r\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\r\n        <div className=\"card-main card-class card card-large\">\r\n          <div className=\"owner-box card-panel\" style={active ? { backgroundColor: '#408e49', color: \"#fff\" } : { backgroundColor: \"#afafaf\", color: '#fff' }}>\r\n            <div className=\"card-panel-row row\">\r\n              <div className=\"col s9\">\r\n                <div className=\"user-block\">\r\n                  <div className=\"user-circle\" style={{ backgroundColor: '#fff', color: active ? \"#408e49\" : \"#afafaf\" }}>\r\n                    <span className=\"initials\">{students}</span>\r\n                    <span className=\"ititials-text\">students</span>\r\n                  </div>\r\n                  <div className=\"user-text\" style={{ color: \"#fff\" }}>\r\n                    <h4 className=\"h3\">{name}</h4>\r\n                    <time dateTime=\"P120D\">{startDate} - {endDate}</time>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col s3 right-align\">\r\n                <div className=\"row icons-row\">\r\n                  <div className=\"col right-align\">\r\n                    <span className=\"block-icon\">\r\n                      <i className=\"icon-members\"></i>\r\n                      <span className=\"text-icon\">Class</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"dropdown-block col\">\r\n                    <a\r\n                      className='dropdown-trigger btn'\r\n                      href='#'\r\n                      data-target='dropdown01'\r\n                      onClick={(event) => this.onSetDropdown(event, dropdownIsOpen)}\r\n                    >\r\n                      <i className=\"material-icons dots-icon\">more_vert</i>\r\n                    </a>\r\n                    <If condition={dropdownIsOpen}>\r\n                      <ul id='dropdown01' className='dropdown-content dropdown-wide' style={{ display: \"block\", opacity: '1', transform: 'scaleX(1) scaleY(1)' }}>\r\n                        <li>\r\n                          <a href=\"#modal_user_edit\" className=\"modal-trigger link-block\" onClick={this.OpenEditModal}>Edit</a>\r\n                        </li>\r\n                        <li><a href=\"#!\" onClick={() => onCloneClass(index)}>Clone</a></li>\r\n                        <li><a href=\"#!\">Impersonate</a></li>\r\n                        <li><a href=\"#!\" onClick={() => onDeleteClass(index)}>Delete</a></li>\r\n                      </ul>\r\n                    </If>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"row d-flex mb-0\">\r\n              <div className=\"col s12 m5\">\r\n                <div className=\"row mb-0\">\r\n                  <div className=\"col s6 m12\">\r\n                    <ul className=\"points-list-custom\">\r\n                      <li className={status === \"current\" ? \"style-aqua\" : \"\"}>\r\n                        <span className=\"badge-circle\">+{totalImprovement}<span className=\"badge-text\">improvement</span></span>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"col s6 m12\">\r\n                    <div className=\"chart-block chart-block-test\">\r\n                      <Doughnut\r\n                        data={() => data(completedInstruction, 100)}\r\n                        height={104}\r\n                        width={104}\r\n                        options={{\r\n                          cutoutPercentage: 80,\r\n                        }}\r\n                      />\r\n                      <div className=\"chart-text\" style={{bottom: '6px'}}>\r\n                        <span className=\"title\">Instruction</span>\r\n                        <span className=\"value\">{completedInstruction}%</span>\r\n                        <span className=\"description\">vs scheduled instruction</span>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col s12 m7\">\r\n                <ul className=\"points-list\">\r\n                  <li className={status === \"current\" ? \"style-purple-darken\" : \"\"}>\r\n                    <span className=\"badge-circle\" style={{ color: '#fff' }}>{courseworkAssigned}</span>\r\n                    <span className=\"point-text\">coursework assigned</span>\r\n                  </li>\r\n                  <li className={status === \"current\" ? \"style-purple-lighten\" : \"\"}>\r\n                    <span className=\"badge-circle\" style={{ color: '#fff' }}>{courseworkCompleted}</span>\r\n                    <span className=\"point-text\">coursework completed</span>\r\n                  </li>\r\n                  <li className={status === \"current\" ? \"style-red-darken-3\" : \"\"}>\r\n                    <span className=\"badge-circle\" style={{ color: '#fff' }}>{flaggedForReview}</span>\r\n                    <span className=\"point-text\">problems ﬂagged for review</span>\r\n                  </li>\r\n                  <li className={status === \"current\" ? \"style-blue-light\" : \"\"}>\r\n                    <span className=\"badge-circle\" style={{ color: '#fff' }}>{averageScore}</span>\r\n                    <span className=\"point-text\">average score</span>\r\n                  </li>\r\n                  <li className={status === \"current\" ? \"style-blue\" : \"\"}>\r\n                    <span className=\"badge-circle\" style={{ color: '#fff' }}>{achievedTarget}</span>\r\n                    <span className=\"point-text\">achieved target score</span>\r\n                  </li>\r\n                  <li className={status === \"current\" ? \"style-orange-accent-4\" : \"\"}>\r\n                    <span className=\"badge-circle\" style={{ color: '#fff' }}>{avgPracticeTestsCompleted}</span>\r\n                    <span className=\"point-text\">average practice tests completed</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-inner-row\">\r\n              <div className=\"row-holder\">\r\n                <ul className=\"category-list\">\r\n                  <li className=\"category-box \">\r\n                    <span className=\"category-badge badge-purple\"></span>\r\n                    <span className=\"category-text\">{tutor}</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nClassCard.propTypes = {\r\n  classItem: PropTypes.object.isRequired,\r\n  onDeleteClass: PropTypes.func.isRequired,\r\n  onCloneClass: PropTypes.func.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n}\r\nexport default ClassCard;"]},"metadata":{},"sourceType":"module"}