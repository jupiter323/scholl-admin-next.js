{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar formatTimeLoggedIn = function formatTimeLoggedIn(totalMinutes) {\n  var hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  var minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return React.createElement(React.Fragment, null, hours !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, hours), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"hrs \")), minutes !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, minutes), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"min\")));\n};\n\nvar formatVideoWatched = function formatVideoWatched(totalMinutes) {\n  var hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  var minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return React.createElement(React.Fragment, null, hours !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, hours), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"hrs \")), minutes !== 0 && React.createElement(React.Fragment, null, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, minutes), React.createElement(\"span\", {\n    className: \"text-small\"\n  }, \"min\")));\n};\n\nvar SummaryCards = function SummaryCards(_ref) {\n  var _ref$state = _ref.state,\n      questionsAnswered = _ref$state.questionsAnswered,\n      videoWatched = _ref$state.videoWatched,\n      notesTaken = _ref$state.notesTaken,\n      totalTimeLoggedIn = _ref$state.totalTimeLoggedIn,\n      lastLogIn = _ref$state.lastLogIn,\n      loginTimeCode = _ref$state.loginTimeCode,\n      onTimePercentage = _ref$state.onTimePercentage,\n      active = _ref.active;\n  return React.createElement(\"div\", {\n    className: \"col s12 l5 card-width-366\"\n  }, React.createElement(\"ul\", {\n    className: \"alerts-list\"\n  }, React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: active ? 'icon-box purple darken-3' : 'icon-box'\n  }, React.createElement(\"i\", {\n    className: \"icon-pencil2\"\n  })), React.createElement(\"div\", {\n    className: active ? 'alert-text purple-text text-darken-3' : 'alert-text'\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Questions Answered\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, active ? questionsAnswered : '0')))), React.createElement(\"li\", {\n    className: \"card card-alert alert-blue-dark\"\n  }, React.createElement(\"span\", {\n    className: active ? 'icon-box cyan darken-2' : 'icon-box'\n  }, React.createElement(\"i\", {\n    className: \"icon-videocam\"\n  })), React.createElement(\"div\", {\n    className: active ? 'alert-text cyan-text text-darken-2' : 'alert-text'\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Video Watched\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, active ? formatVideoWatched(videoWatched) : React.createElement(\"b\", {\n    className: \"text-large\"\n  }, \"0\")))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: active ? 'icon-box pink darken-2' : 'icon-box'\n  }, React.createElement(\"i\", {\n    className: \"icon-note\"\n  })), React.createElement(\"div\", {\n    className: active ? 'alert-text pink-text text-darken-2' : 'alert-text'\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Notes Taken\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, React.createElement(\"b\", {\n    className: \"text-large\"\n  }, active ? notesTaken : '0')))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: active ? 'icon-box green darken-3' : 'icon-box'\n  }, React.createElement(\"i\", {\n    className: \"icon-clock\"\n  })), React.createElement(\"div\", {\n    className: active ? 'alert-text green-text text-darken-3' : 'alert-text'\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Total Time Logged In\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, active ? formatTimeLoggedIn(totalTimeLoggedIn) : React.createElement(\"b\", {\n    className: \"text-large\"\n  }, \"0\")))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: active ? 'icon-box orange darken-2' : 'icon-box'\n  }, React.createElement(\"i\", {\n    className: \"icon-arrow-right\"\n  })), React.createElement(\"div\", {\n    className: active ? 'alert-text orange-text text-darken-2' : 'alert-text'\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Last Log In\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, active ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"text-large\"\n  }, lastLogIn), \" \", React.createElement(\"span\", {\n    className: \"text-small\"\n  }, loginTimeCode)) : React.createElement(\"span\", {\n    className: \"text-large\"\n  }, \"none\")))), React.createElement(\"li\", {\n    className: \"card card-alert\"\n  }, React.createElement(\"span\", {\n    className: active ? 'icon-box red' : 'icon-box'\n  }, React.createElement(\"i\", {\n    className: \"icon-bell\"\n  })), React.createElement(\"div\", {\n    className: active ? 'alert-text red-text' : 'alert-text'\n  }, React.createElement(\"p\", null, React.createElement(\"b\", null, \"On-Time Percentage\")), React.createElement(\"div\", {\n    className: \"value\"\n  }, active ? React.createElement(\"b\", {\n    className: \"text-large\"\n  }, onTimePercentage, \"%\") : React.createElement(\"b\", {\n    className: \"text-large\"\n  }, \"not available\"))))));\n};\n\nSummaryCards.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired\n};\nexport default SummaryCards;","map":{"version":3,"sources":["/Users/chrischavarro/clear-choice/clear-choice-admin/components/Student/DetailSummaryPage/components/SummaryCards/index.js"],"names":["React","PropTypes","formatTimeLoggedIn","totalMinutes","hours","Math","floor","minutes","formatVideoWatched","SummaryCards","state","questionsAnswered","videoWatched","notesTaken","totalTimeLoggedIn","lastLogIn","loginTimeCode","onTimePercentage","active","propTypes","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst formatTimeLoggedIn = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst formatVideoWatched = (totalMinutes) => {\n  const hours = Math.floor(totalMinutes / 60) === 0 ? 0 : Math.floor(totalMinutes / 60);\n  const minutes = totalMinutes % 60 === 0 ? 0 : totalMinutes % 60;\n  return (\n    <React.Fragment>\n      { hours !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{hours}</b>\n          <span className=\"text-small\">hrs </span>\n        </React.Fragment>\n      )}\n      { minutes !== 0 && (\n        <React.Fragment>\n          <b className=\"text-large\">{minutes}</b>\n          <span className=\"text-small\">min</span>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst SummaryCards = ({ state: { questionsAnswered, videoWatched, notesTaken, totalTimeLoggedIn, lastLogIn, loginTimeCode, onTimePercentage }, active }) => (\n  <div className=\"col s12 l5 card-width-366\">\n    <ul className=\"alerts-list\">\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box purple darken-3' : 'icon-box'}><i className=\"icon-pencil2\"></i></span>\n        <div className={active ? 'alert-text purple-text text-darken-3' : 'alert-text'}>\n          <p><b>Questions Answered</b></p>\n          <div className=\"value\"><b className=\"text-large\">{active ? questionsAnswered : '0'}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert alert-blue-dark\">\n        <span className={active ? 'icon-box cyan darken-2' : 'icon-box'}><i className=\"icon-videocam\"></i></span>\n        <div className={active ? 'alert-text cyan-text text-darken-2' : 'alert-text'}>\n          <p><b>Video Watched</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                {formatVideoWatched(videoWatched)}\n              </When>\n              <Otherwise>\n                <b className=\"text-large\">0</b>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box pink darken-2' : 'icon-box'}><i className=\"icon-note\"></i></span>\n        <div className={active ? 'alert-text pink-text text-darken-2' : 'alert-text'}>\n          <p><b>Notes Taken</b></p>\n          <div className=\"value\"><b className=\"text-large\">{active ? notesTaken : '0'}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box green darken-3' : 'icon-box'}><i className=\"icon-clock\"></i></span>\n        <div className={active ? 'alert-text green-text text-darken-3' : 'alert-text'}>\n          <p><b>Total Time Logged In</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                {formatTimeLoggedIn(totalTimeLoggedIn)}\n              </When>\n              <Otherwise>\n                <b className=\"text-large\">0</b>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box orange darken-2' : 'icon-box'}><i className=\"icon-arrow-right\"></i></span>\n        <div className={active ? 'alert-text orange-text text-darken-2' : 'alert-text'}>\n          <p><b>Last Log In</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                <React.Fragment>\n                  <span className=\"text-large\">{lastLogIn}</span> <span className=\"text-small\">{loginTimeCode}</span>\n                </React.Fragment>\n              </When>\n              <Otherwise>\n                <span className=\"text-large\">none</span>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box red' : 'icon-box'}><i className=\"icon-bell\"></i></span>\n        <div className={active ? 'alert-text red-text' : 'alert-text'}>\n          <p><b>On-Time Percentage</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                <b className=\"text-large\">{onTimePercentage}%</b>\n              </When>\n              <Otherwise>\n                <b className=\"text-large\">not available</b>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n);\n\nSummaryCards.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default SummaryCards;\n"]},"metadata":{},"sourceType":"module"}