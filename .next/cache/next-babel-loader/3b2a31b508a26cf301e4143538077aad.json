{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport update from 'immutability-helper';\nimport { StickyContainer, Sticky } from 'react-sticky';\nimport FilterSection from '../components/CourseTemplate/components/FilterSection';\nimport TemplateCard from '../components/CourseTemplate/components/TemplateCard';\nimport sampleTemplates from '../components/CourseTemplate/utils/sampleTemplate';\nimport { sessionSort, lessonSort, estimatedTotalCourseWorkSort } from '../components/CourseTemplate/utils/sortOptions';\n\nclass CourseTemplates extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onClearFilters\", () => this.setState({\n      subjectFilters: [],\n      sourceFilters: [],\n      titleFilter: '',\n      sort: ''\n    }));\n\n    _defineProperty(this, \"onSetSort\", sort => this.setState({\n      sort\n    }));\n\n    _defineProperty(this, \"onSetFilteredState\", titleFilter => this.setState({\n      templatesAreFiltered: true,\n      titleFilter\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredState\", () => this.setState({\n      templatesAreFiltered: false,\n      titleFilter: ''\n    }));\n\n    _defineProperty(this, \"onSetDropdown\", dropdownIndex => this.setState({\n      dropdownIndex,\n      dropdownIsOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDropdown\", () => this.setState({\n      dropdownIsOpen: false\n    }));\n\n    _defineProperty(this, \"onToggleEditModal\", () => this.setState(({\n      editModalOpen\n    }) => ({\n      editModalOpen: !editModalOpen\n    })));\n\n    _defineProperty(this, \"onSortTemplates\", templates => {\n      const {\n        sort\n      } = this.state;\n\n      switch (sort) {\n        case 'sessions':\n          return templates.sort(sessionSort);\n\n        case 'estimatedTotalCourseWork':\n          return templates.sort(estimatedTotalCourseWorkSort);\n\n        case 'lessons':\n          return templates.sort(lessonSort);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onFilterByTitle\", () => {\n      const {\n        templates,\n        titleFilter\n      } = this.state;\n      return templates.reduce((finalArr, currentTemplate) => {\n        const {\n          title\n        } = currentTemplate;\n        const templateString = title.replace(/\\s/g, \"\").toLowerCase();\n\n        if (templateString.indexOf(titleFilter) !== -1 && finalArr.indexOf(currentTemplate) === -1) {\n          finalArr.push(currentTemplate);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onFilterTemplates\", () => {\n      const {\n        subjectFilters,\n        sourceFilters,\n        templates: allTemplates\n      } = this.state;\n      let templates = allTemplates;\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        templates = templates.filter(template => subjectFilters.indexOf(template.subject) !== -1);\n      }\n\n      if (sourceFilters.length) {\n        templates = templates.filter(template => sourceFilters.indexOf(template.source) !== -1);\n      }\n\n      return templates;\n    });\n\n    _defineProperty(this, \"getMappableTemplates\", () => {\n      const {\n        subjectFilters,\n        sourceFilters,\n        titleFilter,\n        sort,\n        templates\n      } = this.state;\n      let mappableTemplates = templates;\n\n      if (titleFilter.length) {\n        mappableTemplates = this.onFilterByTitle();\n      }\n\n      if (subjectFilters.length || sourceFilters.length) {\n        mappableTemplates = this.onFilterTemplates();\n      }\n\n      if (sort) {\n        return this.onSortTemplates(mappableTemplates);\n      }\n\n      return mappableTemplates;\n    });\n\n    _defineProperty(this, \"importTemplateFromFile\", () => {\n      console.warn('stubbed out import function');\n    });\n\n    _defineProperty(this, \"handleFilterClick\", (filterType, filter) => {\n      const {\n        subjectFilters: currentSubjectFilters,\n        sourceFilters: currentSourceFilters\n      } = this.state;\n      let modifiedFilterCurrentState;\n      let modifiedFilterName;\n      let modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n\n        default:\n          break;\n      } // Decide whether we're adding or removing the selected filter\n\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      this.setState({\n        [modifiedFilterName]: modifiedFilterUpdatedState\n      });\n    });\n\n    _defineProperty(this, \"mapTemplateCards\", () => this.getMappableTemplates().map((template, index) => __jsx(TemplateCard, {\n      template: template,\n      index: index,\n      dropdownIndex: this.state.dropdownIndex,\n      dropdownIsOpen: this.state.dropdownIsOpen,\n      onCloseDropdown: this.onCloseDropdown,\n      onSetDropdown: this.onSetDropdown,\n      onToggleEditModal: this.onToggleEditModal\n    })));\n\n    this.state = {\n      templates: sampleTemplates,\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n      editModalOpen: false,\n      subjectFilters: [],\n      sourceFilters: [],\n      titleFilter: '',\n      sort: ''\n    };\n  }\n\n  render() {\n    const {\n      subjectFilters,\n      sourceFilters\n    } = this.state;\n    return __jsx(\"main\", {\n      id: \"main\",\n      role: \"main\"\n    }, __jsx(\"div\", {\n      className: \"main-holder grey lighten-5 switcher-section\"\n    }, __jsx(StickyContainer, null, __jsx(Sticky, null, ({\n      style\n    }) => __jsx(\"div\", {\n      className: \"title-row card-panel\",\n      style: _objectSpread2({}, style, {\n        zIndex: 1999\n      })\n    }, __jsx(\"div\", {\n      className: \"mobile-header\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"slide-out\",\n      className: \"sidenav-trigger\"\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"menu\"))), __jsx(\"h2\", {\n      className: \"h1 white-text\"\n    }, __jsx(\"span\", {\n      className: \"heading-holder\"\n    }, __jsx(\"i\", {\n      className: \"icon-module\"\n    }), __jsx(\"span\", {\n      className: \"heading-block\"\n    }, \"Course Template Library\"))))), __jsx(FilterSection, {\n      subjectFilters: subjectFilters,\n      sourceFilters: sourceFilters,\n      onSetSort: this.onSetSort,\n      onClearFilters: this.onClearFilters,\n      handleFilterClick: this.handleFilterClick,\n      onSetFilteredState: this.onSetFilteredState,\n      onUnsetFilteredState: this.onUnsetFilteredState\n    }), __jsx(\"div\", {\n      className: \"content-section\"\n    }, __jsx(\"div\", {\n      className: \"container-middle\"\n    }, __jsx(\"div\", {\n      className: \"result-row center-align\"\n    }, __jsx(\"b\", {\n      className: \"result\"\n    }, \"- \", this.getMappableTemplates().length, \" matches -\")), __jsx(\"div\", {\n      className: \"d-flex-content row card-width-470\"\n    }, this.mapTemplateCards()))), __jsx(\"div\", {\n      className: \"add-btn-block\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.importTemplateFromFile,\n      className: \"waves-effect waves-teal btn add-btn\"\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"add\"), \" Import Template from File\")))));\n  }\n\n}\n\nexport default CourseTemplates;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/pages/courseTemplates.js"],"names":["React","update","StickyContainer","Sticky","FilterSection","TemplateCard","sampleTemplates","sessionSort","lessonSort","estimatedTotalCourseWorkSort","CourseTemplates","Component","constructor","props","setState","subjectFilters","sourceFilters","titleFilter","sort","templatesAreFiltered","dropdownIndex","dropdownIsOpen","editModalOpen","templates","state","reduce","finalArr","currentTemplate","title","templateString","replace","toLowerCase","indexOf","push","allTemplates","length","filter","template","subject","source","mappableTemplates","onFilterByTitle","onFilterTemplates","onSortTemplates","console","warn","filterType","currentSubjectFilters","currentSourceFilters","modifiedFilterCurrentState","modifiedFilterName","modifiedFilterUpdatedState","$push","filterIndex","$splice","getMappableTemplates","map","index","onCloseDropdown","onSetDropdown","onToggleEditModal","render","style","zIndex","onSetSort","onClearFilters","handleFilterClick","onSetFilteredState","onUnsetFilteredState","mapTemplateCards","importTemplateFromFile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport update from 'immutability-helper';\nimport {StickyContainer, Sticky} from 'react-sticky';\nimport FilterSection from '../components/CourseTemplate/components/FilterSection';\nimport TemplateCard from '../components/CourseTemplate/components/TemplateCard';\n\nimport sampleTemplates from '../components/CourseTemplate/utils/sampleTemplate';\nimport { sessionSort, lessonSort, estimatedTotalCourseWorkSort } from '../components/CourseTemplate/utils/sortOptions';\n\nclass CourseTemplates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      templates: sampleTemplates,\n      dropdownIsOpen: false,\n      dropdownIndex: null,\n      editModalOpen: false,\n      subjectFilters: [],\n      sourceFilters: [],\n      titleFilter: '',\n      sort: '',\n    };\n  }\n\n  onClearFilters = () => this.setState({ subjectFilters: [], sourceFilters: [], titleFilter: '', sort: '' })\n\n  onSetSort = (sort) => this.setState({ sort })\n  onSetFilteredState = (titleFilter) => this.setState({ templatesAreFiltered: true, titleFilter })\n  onUnsetFilteredState = () => this.setState({ templatesAreFiltered: false, titleFilter: '' })\n\n  onSetDropdown = (dropdownIndex) => this.setState({ dropdownIndex, dropdownIsOpen: true });\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false });\n\n  onToggleEditModal = () => this.setState(({ editModalOpen }) => ({ editModalOpen: !editModalOpen }))\n\n  // eslint-disable-next-line consistent-return\n  onSortTemplates = (templates) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'sessions':\n        return templates.sort(sessionSort);\n      case 'estimatedTotalCourseWork':\n        return templates.sort(estimatedTotalCourseWorkSort);\n      case 'lessons':\n        return templates.sort(lessonSort);\n      default:\n        break;\n    }\n  }\n\n  onFilterByTitle = () => {\n    const { templates, titleFilter } = this.state;\n    return templates.reduce((finalArr, currentTemplate) => {\n      const { title } = currentTemplate;\n      const templateString = title.replace(/\\s/g, \"\").toLowerCase();\n      if (templateString.indexOf(titleFilter) !== -1 && finalArr.indexOf(currentTemplate) === -1) {\n        finalArr.push(currentTemplate);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterTemplates = () => {\n    const { subjectFilters, sourceFilters, templates: allTemplates } = this.state;\n    let templates = allTemplates\n    if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n      templates = templates.filter(template => subjectFilters.indexOf(template.subject) !== -1);\n    }\n    if (sourceFilters.length) {\n      templates = templates.filter(template => sourceFilters.indexOf(template.source) !== -1);\n    }\n    return templates;\n  }\n\n  getMappableTemplates = () => {\n    const { subjectFilters, sourceFilters, titleFilter, sort, templates } = this.state;\n    let mappableTemplates = templates;\n    if (titleFilter.length) {\n      mappableTemplates = this.onFilterByTitle();\n    }\n    if (subjectFilters.length || sourceFilters.length) {\n      mappableTemplates = this.onFilterTemplates();\n    }\n    if (sort) {\n      return this.onSortTemplates(mappableTemplates);\n    }\n    return mappableTemplates;\n  }\n\n  importTemplateFromFile = () => {\n    console.warn('stubbed out import function');\n  }\n\n  handleFilterClick = (filterType, filter) => {\n    const { subjectFilters: currentSubjectFilters, sourceFilters: currentSourceFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'source':\n        modifiedFilterCurrentState = currentSourceFilters;\n        modifiedFilterName = 'sourceFilters';\n        break;\n      default:\n        break;\n    }\n    // Decide whether we're adding or removing the selected filter\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  mapTemplateCards = () => this.getMappableTemplates().map((template, index) => (\n    <TemplateCard\n      template={template}\n      index={index}\n      dropdownIndex={this.state.dropdownIndex}\n      dropdownIsOpen={this.state.dropdownIsOpen}\n      onCloseDropdown={this.onCloseDropdown}\n      onSetDropdown={this.onSetDropdown}\n      onToggleEditModal={this.onToggleEditModal}\n    />\n  ))\n\n  render() {\n    const { subjectFilters, sourceFilters } = this.state;\n    return (\n      <main id=\"main\" role=\"main\">\n        <div className=\"main-holder grey lighten-5 switcher-section\">\n          <StickyContainer>\n          <Sticky>\n        {({ style }) => (\n          <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n            <div className=\"mobile-header\">\n              <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            </div>\n            <h2 className=\"h1 white-text\">\n              <span className=\"heading-holder\">\n                <i className=\"icon-module\"></i>\n                <span className=\"heading-block\">Course Template Library</span>\n              </span>\n            </h2>\n          </div>\n        )}\n          </Sticky>\n          <FilterSection\n            subjectFilters={subjectFilters}\n            sourceFilters={sourceFilters}\n            onSetSort={this.onSetSort}\n            onClearFilters={this.onClearFilters}\n            handleFilterClick={this.handleFilterClick}\n            onSetFilteredState={this.onSetFilteredState}\n            onUnsetFilteredState={this.onUnsetFilteredState}\n          />\n          <div className=\"content-section\">\n            <div className=\"container-middle\">\n              <div className=\"result-row center-align\">\n                <b className=\"result\">- {this.getMappableTemplates().length} matches -</b>\n              </div>\n              <div className=\"d-flex-content row card-width-470\">\n                {this.mapTemplateCards()}\n              </div>\n            </div>\n          </div>\n        <div className=\"add-btn-block\">\n          <a href=\"#\" onClick={this.importTemplateFromFile} className=\"waves-effect waves-teal btn add-btn\"><i className=\"material-icons\">add</i> Import Template from File</a>\n          </div>\n          </StickyContainer>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default CourseTemplates;"]},"metadata":{},"sourceType":"module"}