{"ast":null,"code":"/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nvar UserLocation = function UserLocation(_ref) {\n  var locations = _ref.state.locations,\n      onOpenLocationModal = _ref.onOpenLocationModal,\n      _onRemoveLocation = _ref.onRemoveLocation;\n  return React.createElement(\"div\", {\n    className: \"col s12 l5\"\n  }, React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h3\", null, \"User\\u2019s Location\"), React.createElement(\"div\", {\n    className: \"card-main card card-instructor\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"text-block\"\n  }, React.createElement(\"p\", null, \"Select the location/branch where this instructor works. Depending on your settings, you may have more than one location. If this instructor works at multiple locations, select all that apply.\"), React.createElement(\"p\", null, \"Note: Unless you speci\\uFB01cally grant additional access, this instructor will only be able to access his or her own students.\")), React.createElement(\"div\", {\n    className: \"box-scrollable\"\n  }, React.createElement(\"div\", {\n    className: \"height-275 jcf-scrollable\"\n  }, React.createElement(\"div\", {\n    className: \"card-location-holder\"\n  }, !locations.length && React.createElement(\"div\", {\n    className: \"add-class-box\"\n  }), locations.map(function (location, index) {\n    return React.createElement(LocationCard, {\n      key: index,\n      location: location,\n      onRemoveLocation: function onRemoveLocation() {\n        return _onRemoveLocation(index, 'userLocation', 'locations');\n      }\n    });\n  })))), React.createElement(\"div\", {\n    className: \"card-footer right-align\"\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    className: \"modal-trigger link-block\",\n    onClick: onOpenLocationModal\n  }, \"Add Location\"))))));\n};\n\nUserLocation.propTypes = {\n  state: PropTypes.object,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired\n};\nexport default UserLocation;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Instructor\\DetailAccountPage\\components\\UserLocation\\index.js"],"names":["React","PropTypes","LocationCard","UserLocation","locations","state","onOpenLocationModal","onRemoveLocation","length","map","location","index","propTypes","object","func","isRequired"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,8CAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAYC,SAAZ,QAAGC,KAAH,CAAYD,SAAZ;AAAA,MAAyBE,mBAAzB,QAAyBA,mBAAzB;AAAA,MAA8CC,iBAA9C,QAA8CA,gBAA9C;AAAA,SACnB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,uDADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,iOADF,EAEE,iKAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,CAACH,SAAS,CAACI,MAAX,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,IAFJ,EAIGJ,SAAS,CAACK,GAAV,CAAc,UAACC,QAAD,EAAWC,KAAX;AAAA,WACb,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAnB;AAA0B,MAAA,QAAQ,EAAED,QAApC;AAA8C,MAAA,gBAAgB,EAAE;AAAA,eAAMH,iBAAgB,CAACI,KAAD,EAAQ,cAAR,EAAwB,WAAxB,CAAtB;AAAA;AAAhE,MADa;AAAA,GAAd,CAJH,CADF,CADF,CALF,EAiBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAC,0BAFZ;AAGE,IAAA,OAAO,EAAEL;AAHX,oBADF,CAjBF,CADF,CAFF,CADF,CADmB;AAAA,CAArB;;AAqCAH,YAAY,CAACS,SAAb,GAAyB;AACvBP,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MADM;AAEvBN,EAAAA,gBAAgB,EAAEN,SAAS,CAACa,IAAV,CAAeC,UAFV;AAGvBT,EAAAA,mBAAmB,EAAEL,SAAS,CAACa,IAAV,CAAeC;AAHb,CAAzB;AAMA,eAAeZ,YAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport LocationCard from '../../../../Location/components/LocationCard';\n\nconst UserLocation = ({ state: { locations }, onOpenLocationModal, onRemoveLocation }) => (\n  <div className=\"col s12 l5\">\n    <div className=\"card-block\">\n      <h3>User’s Location</h3>\n      <div className=\"card-main card card-instructor\">\n        <div className=\"card-content\">\n          <div className=\"text-block\">\n            <p>Select the location/branch where this instructor works. Depending on your settings, you may have more than one location. If this instructor works at multiple locations, select all that apply.</p>\n            <p>Note: Unless you speciﬁcally grant additional access, this instructor will only be able to access his or her own students.</p>\n          </div>\n          <div className=\"box-scrollable\">\n            <div className=\"height-275 jcf-scrollable\">\n              <div className=\"card-location-holder\">\n                {!locations.length && (\n                  <div className=\"add-class-box\"></div>\n                )}\n                {locations.map((location, index) => (\n                  <LocationCard key={index} location={location} onRemoveLocation={() => onRemoveLocation(index, 'userLocation', 'locations')} />\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-footer right-align\">\n            <a\n              href=\"#\"\n              className=\"modal-trigger link-block\"\n              onClick={onOpenLocationModal}\n            >\n              Add Location\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nUserLocation.propTypes = {\n  state: PropTypes.object,\n  onRemoveLocation: PropTypes.func.isRequired,\n  onOpenLocationModal: PropTypes.func.isRequired,\n};\n\nexport default UserLocation;\n"]},"metadata":{},"sourceType":"module"}