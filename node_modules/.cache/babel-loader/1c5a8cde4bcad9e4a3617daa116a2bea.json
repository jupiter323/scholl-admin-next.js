{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nvar data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar getIndicatorStatus = function getIndicatorStatus(activeSection) {\n  return {\n    left: activeSection === 'subjectScores' ? '50%' : '0',\n    right: activeSection === 'subjectScores' ? '0' : '50%'\n  };\n}; // TODO: Implement final line chart data implementation later\n\n\nvar TestScores =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TestScores, _React$Component);\n\n  function TestScores(props) {\n    var _this;\n\n    _classCallCheck(this, TestScores);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestScores).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetOpenSection\", function (event, openSection) {\n      event.preventDefault();\n\n      _this.setState({\n        openSection: openSection\n      });\n    });\n\n    _this.state = {\n      openSection: 'compositeScore'\n    };\n    return _this;\n  }\n\n  _createClass(TestScores, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var openSection = this.state.openSection;\n      var _this$props$state = this.props.state,\n          compositeScore = _this$props$state.compositeScore,\n          subjectScores = _this$props$state.subjectScores;\n      return React.createElement(\"div\", {\n        className: \"col s12 l7 card-width-747\"\n      }, React.createElement(\"div\", {\n        className: \"card-main card card-chart\"\n      }, React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"h2\", null, \"Test Scores\"), React.createElement(\"div\", {\n        className: \"tabs-container tabs-charts-container\"\n      }, React.createElement(\"ul\", {\n        className: \"tabs\"\n      }, React.createElement(\"li\", {\n        className: \"tab col s6 l6\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetOpenSection(event, 'compositeScore');\n        },\n        className: openSection === 'compositeScore' ? 'active' : ''\n      }, \"Composite Score\")), React.createElement(\"li\", {\n        className: \"tab col s6 l6\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetOpenSection(event, 'subjectScores');\n        },\n        className: openSection === 'subjectScores' ? 'active' : ''\n      }, \"Subject Scores\")), React.createElement(\"li\", {\n        className: \"indicator\",\n        style: getIndicatorStatus(openSection)\n      })), React.createElement(\"div\", {\n        id: \"scores_tab01\",\n        className: openSection === 'compositeScore' ? '' : 'tab-content'\n      }, React.createElement(\"div\", {\n        className: \"card-panel panel-scores light-blue accent-2 white-text\"\n      }, React.createElement(\"ul\", {\n        className: \"panel-list\"\n      }, React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Reading\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.reading)), React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Writing\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.writing)), React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Math\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.math)), React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Composite\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", compositeScore.composite)))), React.createElement(\"div\", {\n        className: \"chart-line-container js-scrollable-chart\"\n      }, React.createElement(Line, {\n        data: data\n      }))), React.createElement(\"div\", {\n        id: \"scores_tab02\",\n        className: openSection === 'subjectScores' ? '' : 'tab-content'\n      }, React.createElement(\"div\", {\n        className: \"card-panel panel-scores light-blue accent-2 white-text\"\n      }, React.createElement(\"ul\", {\n        className: \"panel-list\"\n      }, React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Reading\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.reading)), React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Writing\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.writing)), React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Math\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.math)), React.createElement(\"li\", {\n        className: \"panel-block\"\n      }, React.createElement(\"strong\", {\n        className: \"text-small\"\n      }, \"Composite\"), React.createElement(\"strong\", {\n        className: \"text-large\"\n      }, \"+\", subjectScores.composite)))), React.createElement(\"div\", {\n        className: \"chart-line-container js-scrollable-chart\"\n      }, React.createElement(Line, {\n        data: data\n      })))))));\n    }\n  }]);\n\n  return TestScores;\n}(React.Component);\n\n;\nTestScores.propTypes = {\n  state: PropTypes.object.isRequired\n};\nexport default TestScores;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailSummaryPage\\components\\TestScores\\index.js"],"names":["React","PropTypes","Line","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","getIndicatorStatus","activeSection","left","right","TestScores","props","event","openSection","preventDefault","setState","state","compositeScore","subjectScores","onSetOpenSection","reading","writing","math","composite","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Line } from 'react-chartjs-2';\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nconst getIndicatorStatus = (activeSection) => ({\n  left: activeSection === 'subjectScores' ? '50%' : '0',\n  right: activeSection === 'subjectScores' ? '0' : '50%',\n})\n\n// TODO: Implement final line chart data implementation later\nclass TestScores extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openSection: 'compositeScore',\n    }\n  }\n\n  onSetOpenSection = (event, openSection) => {\n    event.preventDefault();\n    this.setState({ openSection })\n  }\n\n  render() {\n    const { openSection } = this.state;\n    const { state: { compositeScore, subjectScores } } = this.props;\n    return (\n      <div className=\"col s12 l7 card-width-747\">\n        <div className=\"card-main card card-chart\">\n          <div className=\"card-content\">\n            <h2>Test Scores</h2>\n            <div className=\"tabs-container tabs-charts-container\">\n              <ul className=\"tabs\">\n                <li className=\"tab col s6 l6\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => this.onSetOpenSection(event, 'compositeScore')}\n                    className={openSection === 'compositeScore' ? 'active' : ''}\n                  >\n                    Composite Score\n                  </a>\n                </li>\n                <li className=\"tab col s6 l6\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => this.onSetOpenSection(event, 'subjectScores')}\n                    className={openSection === 'subjectScores' ? 'active' : ''}\n                  >\n                    Subject Scores\n                  </a>\n                </li>\n                <li className=\"indicator\" style={getIndicatorStatus(openSection)}></li>\n              </ul>\n              <div id=\"scores_tab01\" className={openSection === 'compositeScore' ? '' : 'tab-content'}>\n                <div className=\"card-panel panel-scores light-blue accent-2 white-text\">\n                  <ul className=\"panel-list\">\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Reading</strong>\n                      <strong className=\"text-large\">+{compositeScore.reading}</strong>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Writing</strong>\n                      <strong className=\"text-large\">+{compositeScore.writing}</strong>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Math</strong>\n                      <strong className=\"text-large\">+{compositeScore.math}</strong>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Composite</strong>\n                      <strong className=\"text-large\">+{compositeScore.composite}</strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"chart-line-container js-scrollable-chart\">\n                  <Line data={data} />\n                </div>\n              </div>\n              <div id=\"scores_tab02\" className={openSection === 'subjectScores' ? '' : 'tab-content'}>\n                <div className=\"card-panel panel-scores light-blue accent-2 white-text\">\n                  <ul className=\"panel-list\">\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Reading</strong>\n                      <strong className=\"text-large\">+{subjectScores.reading}</strong>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Writing</strong>\n                      <strong className=\"text-large\">+{subjectScores.writing}</strong>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Math</strong>\n                      <strong className=\"text-large\">+{subjectScores.math}</strong>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Composite</strong>\n                      <strong className=\"text-large\">+{subjectScores.composite}</strong>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"chart-line-container js-scrollable-chart\">\n                  <Line data={data} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nTestScores.propTypes = {\n  state: PropTypes.object.isRequired,\n};\n\nexport default TestScores;\n"]},"metadata":{},"sourceType":"module"}