{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatTimeLoggedIn, formatVideoWatched } from './utils';\n\nconst SummaryCards = ({\n  state: {\n    questionsAnswered,\n    videoWatched,\n    notesTaken,\n    totalTimeLoggedIn,\n    lastLogIn,\n    loginTimeCode,\n    onTimePercentage\n  },\n  active\n}) => React.createElement(\"div\", {\n  className: \"col s12 l5 card-width-366\"\n}, React.createElement(\"ul\", {\n  className: \"alerts-list\"\n}, React.createElement(\"li\", {\n  className: \"card card-alert\"\n}, React.createElement(\"span\", {\n  className: active ? 'icon-box purple darken-3' : 'icon-box'\n}, React.createElement(\"i\", {\n  className: \"icon-pencil2\"\n})), React.createElement(\"div\", {\n  className: active ? 'alert-text purple-text text-darken-3' : 'alert-text'\n}, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Questions Answered\")), React.createElement(\"div\", {\n  className: \"value\"\n}, React.createElement(\"b\", {\n  className: \"text-large\"\n}, active ? questionsAnswered : '0')))), React.createElement(\"li\", {\n  className: \"card card-alert alert-blue-dark\"\n}, React.createElement(\"span\", {\n  className: active ? 'icon-box cyan darken-2' : 'icon-box'\n}, React.createElement(\"i\", {\n  className: \"icon-videocam\"\n})), React.createElement(\"div\", {\n  className: active ? 'alert-text cyan-text text-darken-2' : 'alert-text'\n}, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Video Watched\")), React.createElement(\"div\", {\n  className: \"value\"\n}, active ? formatVideoWatched(videoWatched) : React.createElement(\"b\", {\n  className: \"text-large\"\n}, \"0\")))), React.createElement(\"li\", {\n  className: \"card card-alert\"\n}, React.createElement(\"span\", {\n  className: active ? 'icon-box pink darken-2' : 'icon-box'\n}, React.createElement(\"i\", {\n  className: \"icon-note\"\n})), React.createElement(\"div\", {\n  className: active ? 'alert-text pink-text text-darken-2' : 'alert-text'\n}, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Notes Taken\")), React.createElement(\"div\", {\n  className: \"value\"\n}, React.createElement(\"b\", {\n  className: \"text-large\"\n}, active ? notesTaken : '0')))), React.createElement(\"li\", {\n  className: \"card card-alert\"\n}, React.createElement(\"span\", {\n  className: active ? 'icon-box green darken-3' : 'icon-box'\n}, React.createElement(\"i\", {\n  className: \"icon-clock\"\n})), React.createElement(\"div\", {\n  className: active ? 'alert-text green-text text-darken-3' : 'alert-text'\n}, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Total Time Logged In\")), React.createElement(\"div\", {\n  className: \"value\"\n}, active ? formatTimeLoggedIn(totalTimeLoggedIn) : React.createElement(\"b\", {\n  className: \"text-large\"\n}, \"0\")))), React.createElement(\"li\", {\n  className: \"card card-alert\"\n}, React.createElement(\"span\", {\n  className: active ? 'icon-box orange darken-2' : 'icon-box'\n}, React.createElement(\"i\", {\n  className: \"icon-arrow-right\"\n})), React.createElement(\"div\", {\n  className: active ? 'alert-text orange-text text-darken-2' : 'alert-text'\n}, React.createElement(\"p\", null, React.createElement(\"b\", null, \"Last Log In\")), React.createElement(\"div\", {\n  className: \"value\"\n}, active ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n  className: \"text-large\"\n}, lastLogIn), \" \", React.createElement(\"span\", {\n  className: \"text-small\"\n}, loginTimeCode)) : React.createElement(\"span\", {\n  className: \"text-large\"\n}, \"none\")))), React.createElement(\"li\", {\n  className: \"card card-alert\"\n}, React.createElement(\"span\", {\n  className: active ? 'icon-box red' : 'icon-box'\n}, React.createElement(\"i\", {\n  className: \"icon-bell\"\n})), React.createElement(\"div\", {\n  className: active ? 'alert-text red-text' : 'alert-text'\n}, React.createElement(\"p\", null, React.createElement(\"b\", null, \"On-Time Percentage\")), React.createElement(\"div\", {\n  className: \"value\"\n}, active ? React.createElement(\"b\", {\n  className: \"text-large\"\n}, onTimePercentage, \"%\") : React.createElement(\"b\", {\n  className: \"text-large\"\n}, \"not available\"))))));\n\nSummaryCards.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired\n};\nexport default SummaryCards;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailSummaryPage/components/SummaryCards/index.js"],"names":["React","PropTypes","formatTimeLoggedIn","formatVideoWatched","SummaryCards","state","questionsAnswered","videoWatched","notesTaken","totalTimeLoggedIn","lastLogIn","loginTimeCode","onTimePercentage","active","propTypes","object","isRequired","bool"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,SAAvD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,UAAnC;AAA+CC,IAAAA,iBAA/C;AAAkEC,IAAAA,SAAlE;AAA6EC,IAAAA,aAA7E;AAA4FC,IAAAA;AAA5F,GAAT;AAAyHC,EAAAA;AAAzH,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC;AAAf,GACE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAM,EAAA,SAAS,EAAEA,MAAM,GAAG,0BAAH,GAAgC;AAAvD,GAAmE;AAAG,EAAA,SAAS,EAAC;AAAb,EAAnE,CADF,EAEE;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,sCAAH,GAA4C;AAAlE,GACE,+BAAG,oDAAH,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GAAuB;AAAG,EAAA,SAAS,EAAC;AAAb,GAA2BA,MAAM,GAAGP,iBAAH,GAAuB,GAAxD,CAAvB,CAFF,CAFF,CADF,EAQE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAM,EAAA,SAAS,EAAEO,MAAM,GAAG,wBAAH,GAA8B;AAArD,GAAiE;AAAG,EAAA,SAAS,EAAC;AAAb,EAAjE,CADF,EAEE;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,oCAAH,GAA0C;AAAhE,GACE,+BAAG,+CAAH,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GAEqBA,MAFrB,GAGOV,kBAAkB,CAACI,YAAD,CAHzB,GAMM;AAAG,EAAA,SAAS,EAAC;AAAb,OANN,CAFF,CAFF,CARF,EAwBE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAM,EAAA,SAAS,EAAEM,MAAM,GAAG,wBAAH,GAA8B;AAArD,GAAiE;AAAG,EAAA,SAAS,EAAC;AAAb,EAAjE,CADF,EAEE;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,oCAAH,GAA0C;AAAhE,GACE,+BAAG,6CAAH,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GAAuB;AAAG,EAAA,SAAS,EAAC;AAAb,GAA2BA,MAAM,GAAGL,UAAH,GAAgB,GAAjD,CAAvB,CAFF,CAFF,CAxBF,EA+BE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAM,EAAA,SAAS,EAAEK,MAAM,GAAG,yBAAH,GAA+B;AAAtD,GAAkE;AAAG,EAAA,SAAS,EAAC;AAAb,EAAlE,CADF,EAEE;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,qCAAH,GAA2C;AAAjE,GACE,+BAAG,sDAAH,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GAEqBA,MAFrB,GAGOX,kBAAkB,CAACO,iBAAD,CAHzB,GAMM;AAAG,EAAA,SAAS,EAAC;AAAb,OANN,CAFF,CAFF,CA/BF,EA+CE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAM,EAAA,SAAS,EAAEI,MAAM,GAAG,0BAAH,GAAgC;AAAvD,GAAmE;AAAG,EAAA,SAAS,EAAC;AAAb,EAAnE,CADF,EAEE;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,sCAAH,GAA4C;AAAlE,GACE,+BAAG,6CAAH,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GAEqBA,MAFrB,GAGM,oBAAC,KAAD,CAAO,QAAP,QACE;AAAM,EAAA,SAAS,EAAC;AAAhB,GAA8BH,SAA9B,CADF,OACkD;AAAM,EAAA,SAAS,EAAC;AAAhB,GAA8BC,aAA9B,CADlD,CAHN,GAQM;AAAM,EAAA,SAAS,EAAC;AAAhB,UARN,CAFF,CAFF,CA/CF,EAiEE;AAAI,EAAA,SAAS,EAAC;AAAd,GACE;AAAM,EAAA,SAAS,EAAEE,MAAM,GAAG,cAAH,GAAoB;AAA3C,GAAuD;AAAG,EAAA,SAAS,EAAC;AAAb,EAAvD,CADF,EAEE;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,qBAAH,GAA2B;AAAjD,GACE,+BAAG,oDAAH,CADF,EAEE;AAAK,EAAA,SAAS,EAAC;AAAf,GAEqBA,MAFrB,GAGM;AAAG,EAAA,SAAS,EAAC;AAAb,GAA2BD,gBAA3B,MAHN,GAMM;AAAG,EAAA,SAAS,EAAC;AAAb,mBANN,CAFF,CAFF,CAjEF,CADF,CADF;;AAuFAR,YAAY,CAACU,SAAb,GAAyB;AACvBT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADD;AAEvBH,EAAAA,MAAM,EAAEZ,SAAS,CAACgB,IAAV,CAAeD;AAFA,CAAzB;AAKA,eAAeZ,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatTimeLoggedIn, formatVideoWatched } from './utils';\n\nconst SummaryCards = ({ state: { questionsAnswered, videoWatched, notesTaken, totalTimeLoggedIn, lastLogIn, loginTimeCode, onTimePercentage }, active }) => (\n  <div className=\"col s12 l5 card-width-366\">\n    <ul className=\"alerts-list\">\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box purple darken-3' : 'icon-box'}><i className=\"icon-pencil2\"></i></span>\n        <div className={active ? 'alert-text purple-text text-darken-3' : 'alert-text'}>\n          <p><b>Questions Answered</b></p>\n          <div className=\"value\"><b className=\"text-large\">{active ? questionsAnswered : '0'}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert alert-blue-dark\">\n        <span className={active ? 'icon-box cyan darken-2' : 'icon-box'}><i className=\"icon-videocam\"></i></span>\n        <div className={active ? 'alert-text cyan-text text-darken-2' : 'alert-text'}>\n          <p><b>Video Watched</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                {formatVideoWatched(videoWatched)}\n              </When>\n              <Otherwise>\n                <b className=\"text-large\">0</b>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box pink darken-2' : 'icon-box'}><i className=\"icon-note\"></i></span>\n        <div className={active ? 'alert-text pink-text text-darken-2' : 'alert-text'}>\n          <p><b>Notes Taken</b></p>\n          <div className=\"value\"><b className=\"text-large\">{active ? notesTaken : '0'}</b></div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box green darken-3' : 'icon-box'}><i className=\"icon-clock\"></i></span>\n        <div className={active ? 'alert-text green-text text-darken-3' : 'alert-text'}>\n          <p><b>Total Time Logged In</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                {formatTimeLoggedIn(totalTimeLoggedIn)}\n              </When>\n              <Otherwise>\n                <b className=\"text-large\">0</b>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box orange darken-2' : 'icon-box'}><i className=\"icon-arrow-right\"></i></span>\n        <div className={active ? 'alert-text orange-text text-darken-2' : 'alert-text'}>\n          <p><b>Last Log In</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                <React.Fragment>\n                  <span className=\"text-large\">{lastLogIn}</span> <span className=\"text-small\">{loginTimeCode}</span>\n                </React.Fragment>\n              </When>\n              <Otherwise>\n                <span className=\"text-large\">none</span>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n      <li className=\"card card-alert\">\n        <span className={active ? 'icon-box red' : 'icon-box'}><i className=\"icon-bell\"></i></span>\n        <div className={active ? 'alert-text red-text' : 'alert-text'}>\n          <p><b>On-Time Percentage</b></p>\n          <div className=\"value\">\n            <Choose>\n              <When condition={active}>\n                <b className=\"text-large\">{onTimePercentage}%</b>\n              </When>\n              <Otherwise>\n                <b className=\"text-large\">not available</b>\n              </Otherwise>\n            </Choose>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n);\n\nSummaryCards.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default SummaryCards;\n"]},"metadata":{},"sourceType":"module"}