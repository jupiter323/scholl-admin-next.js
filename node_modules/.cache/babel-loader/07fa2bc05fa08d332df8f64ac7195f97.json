{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../utils/getValueFromState';\nimport sortOptions from '../../utils/sortOptions';\n\nvar FilterSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterSection, _React$Component);\n\n  function FilterSection(props) {\n    var _this;\n\n    _classCallCheck(this, FilterSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterSection).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleShowFilters\", function () {\n      return _this.setState(function (_ref) {\n        var open = _ref.open;\n        return {\n          open: !open\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        title: '',\n        sort: ''\n      }, _this.props.onClearFilters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeTitleSearch\", function (_ref2) {\n      var title = _ref2.target.value;\n      return _this.setState({\n        title: title\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSortChange\", function (sort) {\n      var onSetSort = _this.props.onSetSort;\n\n      _this.setState({\n        sort: sort\n      });\n\n      return onSetSort(sort);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitNameFilter\", function () {\n      var _this$props = _this.props,\n          onSetFilteredState = _this$props.onSetFilteredState,\n          onUnsetFilteredState = _this$props.onUnsetFilteredState;\n      var title = _this.state.title;\n\n      if (title === '') {\n        onUnsetFilteredState();\n      }\n\n      var transformedTitle = title.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedTitle);\n    });\n\n    _this.state = {\n      open: true,\n      title: '',\n      sort: ''\n    };\n    return _this;\n  }\n\n  _createClass(FilterSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sort = _this$state.sort,\n          open = _this$state.open,\n          title = _this$state.title;\n      var _this$props2 = this.props,\n          onClearFilters = _this$props2.onClearFilters,\n          subjectFilters = _this$props2.subjectFilters,\n          sourceFilters = _this$props2.sourceFilters,\n          handleFilterClick = _this$props2.handleFilterClick;\n      return React.createElement(\"div\", {\n        className: \"filter-form-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"collapsible expandable\",\n        style: {\n          minHeight: '0'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"collapsible-body\",\n        style: open ? {\n          display: 'block'\n        } : {\n          display: 'none'\n        }\n      }, React.createElement(\"div\", {\n        className: \"filter-form_checkbox-list-holder justify-center\"\n      }, React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"reading\",\n        checked: subjectFilters.indexOf('reading') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'reading');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"reading\"\n      }, \"Reading\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"writing\",\n        checked: subjectFilters.indexOf('writing') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'writing');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"writing\"\n      }, \"Writing\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"math\",\n        checked: subjectFilters.indexOf('math') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'math');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"math\"\n      }, \"Math\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"all\",\n        checked: subjectFilters.indexOf('all') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('subject', 'all');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"all\"\n      }, \"All\"))), React.createElement(\"ul\", {\n        className: \"filter-form_checkbox-list\"\n      }, React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"builtIn\",\n        checked: sourceFilters.indexOf('builtIn') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('source', 'builtIn');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"builtIn\"\n      }, \"Built-In\")), React.createElement(\"li\", null, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"userCreated\",\n        checked: sourceFilters.indexOf('userCreated') !== -1,\n        onChange: function onChange() {\n          return handleFilterClick('source', 'userCreated');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"userCreated\"\n      }, \"User Created\")))), React.createElement(\"div\", {\n        className: \"d-flex row mb-0 justify-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m3\"\n      }, React.createElement(\"div\", {\n        className: \"search-field input-field\"\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        id: \"course_search\",\n        className: \"input-control validate\",\n        value: title,\n        onChange: this.onChangeTitleSearch\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        onClick: this.submitNameFilter\n      }, React.createElement(\"i\", {\n        className: \"icon-search\"\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        htmlFor: \"course_search\"\n      }, \"Search\"))))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex align-items-center\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 xl7\"\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        style: {\n          marginBottom: '0',\n          marginTop: '0'\n        }\n      }, React.createElement(Dropdown, {\n        value: getValueFromState(sort, sortOptions),\n        onChange: this.handleSortChange,\n        options: sortOptions,\n        label: \"Sort By\",\n        stateKey: \"topic\",\n        dropdownKey: \"topic\"\n      }))))), React.createElement(\"div\", {\n        className: \"col s12 l4 hide-on-med-and-down show-on-large\"\n      }, \"\\xA0\"), React.createElement(\"div\", {\n        className: \"col s12 l4\"\n      }, React.createElement(\"div\", {\n        className: \"option-filters\"\n      }, React.createElement(\"div\", {\n        className: \"option-item clear\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onClearFilters\n      }, \"Clear Filters\")), React.createElement(\"div\", {\n        className: \"option-item\"\n      }, React.createElement(\"span\", {\n        className: \"collapsible-header\",\n        onClick: this.onToggleShowFilters\n      }, React.createElement(\"span\", {\n        className: \"open-text\"\n      }, open ? 'Hide Filters' : 'Open Filters')))))))));\n    }\n  }]);\n\n  return FilterSection;\n}(React.Component);\n\nFilterSection.propTypes = {\n  onSetSort: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  sourceFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired\n};\nexport default FilterSection;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/CourseTemplate/components/FilterSection/index.js"],"names":["React","PropTypes","Dropdown","getValueFromState","sortOptions","FilterSection","props","setState","open","title","sort","onClearFilters","target","value","onSetSort","onSetFilteredState","onUnsetFilteredState","state","transformedTitle","replace","toLowerCase","subjectFilters","sourceFilters","handleFilterClick","minHeight","display","indexOf","onChangeTitleSearch","submitNameFilter","marginBottom","marginTop","handleSortChange","onToggleShowFilters","Component","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../utils/getValueFromState';\n\nimport sortOptions from '../../utils/sortOptions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      title: '',\n      sort: '',\n    };\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  onClearFilters = () => this.setState({ title: '', sort: '' }, this.props.onClearFilters)\n  onChangeTitleSearch = ({ target: { value: title }}) => this.setState({ title })\n\n  // This function does two things - first, it changes the filter state regardless of the field it's coming from\n  // If either location or sort filters are changed, we dispatch the appropriate action in ListPage to ensure the rendered instructors are filtered/sorted appropriately\n  // eslint-disable-next-line consistent-return\n  handleSortChange = (sort) => {\n    const { onSetSort } = this.props;\n    this.setState({ sort });\n    return onSetSort(sort);\n  }\n\n  // Strips the entered name of any spaces and capitalizing and fires off the TemplateList event that filters the instructors\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { title } = this.state;\n    if (title === '') {\n      onUnsetFilteredState();\n    }\n    const transformedTitle = title.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedTitle);\n  }\n\n  render() {\n    const { sort, open, title } = this.state;\n    const { onClearFilters, subjectFilters, sourceFilters, handleFilterClick } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\" style={{ minHeight: '0' }}>\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      checked={subjectFilters.indexOf('reading') !== -1}\n                      onChange={() => handleFilterClick('subject', 'reading')}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      checked={subjectFilters.indexOf('writing') !== -1}\n                      onChange={() => handleFilterClick('subject', 'writing')}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      checked={subjectFilters.indexOf('math') !== -1}\n                      onChange={() => handleFilterClick('subject', 'math')}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"all\"\n                      checked={subjectFilters.indexOf('all') !== -1}\n                      onChange={() => handleFilterClick('subject', 'all')}\n                    />\n                    <label htmlFor=\"all\">All</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"builtIn\"\n                      checked={sourceFilters.indexOf('builtIn') !== -1}\n                      onChange={() => handleFilterClick('source', 'builtIn')}\n                    />\n                    <label htmlFor=\"builtIn\">Built-In</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"userCreated\"\n                      checked={sourceFilters.indexOf('userCreated') !== -1}\n                      onChange={() => handleFilterClick('source', 'userCreated')}\n                    />\n                    <label htmlFor=\"userCreated\">User Created</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\">\n                    <input\n                      type=\"search\"\n                      id=\"course_search\"\n                      className=\"input-control validate\"\n                      value={title}\n                      onChange={this.onChangeTitleSearch}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    >\n                      <i className=\"icon-search\"></i>\n                    </button>\n                    <label className=\"label\" htmlFor=\"course_search\">Search</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12 xl7\">\n                    <div className=\"input-field\" style={{ marginBottom: '0', marginTop: '0' }}>\n                      <Dropdown\n                        value={getValueFromState(sort, sortOptions)}\n                        onChange={this.handleSortChange}\n                        options={sortOptions}\n                        label=\"Sort By\"\n                        stateKey=\"topic\"\n                        dropdownKey=\"topic\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 l4 hide-on-med-and-down show-on-large\">&nbsp;</div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={onClearFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span className=\"collapsible-header\" onClick={this.onToggleShowFilters}>\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  onSetSort: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  sourceFilters: PropTypes.array.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n}\n\nexport default FilterSection;\n"]},"metadata":{},"sourceType":"module"}