{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonDetailAnswerSheet/components/Question/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport QuestionModal from \"../QuestionModal\";\nimport BubbleGroup from \"../Bubble\";\nimport FreeResponse from '../FreeResponse';\n\nvar AnswerRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AnswerRow, _React$Component);\n\n  function AnswerRow(props) {\n    var _this;\n\n    _classCallCheck(this, AnswerRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnswerRow).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var id = _this.props.problem.id;\n      var originalTestProblemId = _this.state.originalTestProblemId;\n\n      if (id !== originalTestProblemId && _this.props.problem.flag_status) {\n        var flag_status = _this.props.problem.flag_status;\n\n        _this.setState({\n          status: flag_status,\n          originalTestProblemId: id\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeFlagState\", function (status) {\n      _this.setState({\n        status: status\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenQuestionModal\", function () {\n      return _this.setState({\n        open: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseQuestionModal\", function () {\n      return _this.setState({\n        open: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isFreeResponse\", function () {\n      if (_this.props.problem.problem.answers.length === 0) return true;\n      return false;\n    });\n\n    _this.state = {\n      open: false,\n      status: '',\n      originalTestProblemId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AnswerRow, [{\n    key: \"render\",\n    value: function render() {\n      var problem = this.props.problem;\n      var _this$state = this.state,\n          open = _this$state.open,\n          status = _this$state.status;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(QuestionModal, {\n        open: open,\n        onOpenQuestionModal: this.onOpenQuestionModal,\n        onCloseQuestionModal: this.onCloseQuestionModal,\n        question: problem,\n        onChangeFlagState: this.onChangeFlagState,\n        updateProblemList: this.props.updateProblemList,\n        problemType: this.props.problemType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), __jsx(\"li\", {\n        className: \"answers-list-holder\",\n        key: problem.id,\n        style: {\n          marginRight: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"answer-row row mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col col-120\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"answer-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.isFreeResponse() ? __jsx(FreeResponse, {\n        lesson: problem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : __jsx(BubbleGroup, {\n        lesson: problem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col col-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"status-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"E\")), __jsx(\"div\", {\n        className: \"col col-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, status === 'FLAGGED' ? __jsx(\"span\", {\n        className: \"status-answer\",\n        style: {\n          color: \"#c0272d\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), __jsx(\"b\", {\n        className: \"status-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Review\")) : status === 'REVIEWED' ? __jsx(\"span\", {\n        className: \"status-answer status-disabled\",\n        style: {\n          color: \"#c0272d\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"icon-flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), __jsx(\"b\", {\n        className: \"status-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Review\")) : null), __jsx(\"div\", {\n        className: \"dropdown-block col col-35\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"modal-trigger\",\n        href: \"#\",\n        onClick: this.onOpenQuestionModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: \"material-icons dots-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"more_vert\"))))));\n    }\n  }]);\n\n  return AnswerRow;\n}(React.Component);\n\nAnswerRow.propTypes = {\n  problem: PropTypes.object\n};\nexport default AnswerRow;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonDetailAnswerSheet/components/Question/index.js"],"names":["React","PropTypes","QuestionModal","BubbleGroup","FreeResponse","AnswerRow","props","id","problem","originalTestProblemId","state","flag_status","setState","status","open","answers","length","onOpenQuestionModal","onCloseQuestionModal","onChangeFlagState","updateProblemList","problemType","marginRight","isFreeResponse","color","Component","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport QuestionModal from \"../QuestionModal\";\nimport BubbleGroup from \"../Bubble\";\nimport FreeResponse from '../FreeResponse';\n\nclass AnswerRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      status: '',\n      originalTestProblemId: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    const { problem: { id } } = this.props;\n    const { originalTestProblemId } = this.state;\n    if (id !== originalTestProblemId && this.props.problem.flag_status) {\n      const { problem: { flag_status } } = this.props;\n      this.setState({\n        status: flag_status,\n        originalTestProblemId: id,\n      });\n    }\n  }\n  onChangeFlagState = (status) => {\n    this.setState({\n      status,\n    });\n  }\n\n  onOpenQuestionModal = () => this.setState({ open: true });\n  onCloseQuestionModal = () => this.setState({ open: false });\n\n  isFreeResponse = () => {\n    if (this.props.problem.problem.answers.length === 0) return true;\n    return false;\n  }\n\n\n  render() {\n    const { problem } = this.props;\n    const { open, status } = this.state;\n    return (\n      <React.Fragment>\n        <QuestionModal\n          open={open}\n          onOpenQuestionModal={this.onOpenQuestionModal}\n          onCloseQuestionModal={this.onCloseQuestionModal}\n          question={problem}\n          onChangeFlagState={this.onChangeFlagState}\n          updateProblemList={this.props.updateProblemList}\n          problemType={this.props.problemType}\n        />\n        <li\n          className=\"answers-list-holder\"\n          key={problem.id}\n          style={{ marginRight: \"15px\" }}\n        >\n          <div className=\"answer-row row mb-0\">\n            <div className=\"col col-120\">\n              <ul className=\"answer-list\">\n                {this.isFreeResponse() ? <FreeResponse lesson={problem} /> : <BubbleGroup lesson={problem} />}\n              </ul>\n            </div>\n            <div className=\"col col-30\">\n              <span className=\"status-info\">E</span>\n            </div>\n            <div className=\"col col-auto\">\n              <Choose>\n                <When condition={status === 'FLAGGED'}>\n                  <span className=\"status-answer\" style={{ color: \"#c0272d\" }}>\n                    <i className=\"icon-flag\"></i>\n                    <b className=\"status-text\">Review</b>\n                  </span>\n                </When>\n                <When condition={status === 'REVIEWED'}>\n                  <span className=\"status-answer status-disabled\" style={{ color: \"#c0272d\" }}>\n                    <i className=\"icon-flag\"></i>\n                    <b className=\"status-text\">Review</b>\n                  </span>\n                </When>\n              </Choose>\n            </div>\n            <div className=\"dropdown-block col col-35\">\n              <a className=\"modal-trigger\" href=\"#\" onClick={this.onOpenQuestionModal}>\n                <i className=\"material-icons dots-icon\">more_vert</i>\n              </a>\n            </div>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n  }\n}\n\nAnswerRow.propTypes = {\n  problem: PropTypes.object,\n};\n\nexport default AnswerRow;\n"]},"metadata":{},"sourceType":"module"}