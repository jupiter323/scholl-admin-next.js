{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchForFetchStudents),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchForAddStudent),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchForDeleteStudent),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(defaultSaga);\n\nimport { take, call, put, all } from \"redux-saga/effects\";\nimport { FETCH_STUDENTS, SET_STUDENTS, ADD_STUDENT, DELETE_STUDENT } from \"./components/Student/index/constants\";\nimport { fetchStudents, setStudents, addStudent } from \"./components/Student/index/actions\";\nimport { studentApi } from \"./api\";\nvar fetchStudentsApi = studentApi.fetchStudentsApi,\n    addNewStudentApi = studentApi.addNewStudentApi;\n/** ******************************************    STUDENTS    ********************************************/\n\nexport function watchForFetchStudents() {\n  return _regeneratorRuntime.wrap(function watchForFetchStudents$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!true) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 3;\n          return take(FETCH_STUDENTS);\n\n        case 3:\n          _context.next = 5;\n          return call(fetchStudents);\n\n        case 5:\n          _context.next = 0;\n          break;\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function watchForAddStudent() {\n  var _ref, student, response;\n\n  return _regeneratorRuntime.wrap(function watchForAddStudent$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!true) {\n            _context2.next = 20;\n            break;\n          }\n\n          _context2.prev = 1;\n          _context2.next = 4;\n          return take(ADD_STUDENT);\n\n        case 4:\n          _ref = _context2.sent;\n          student = _ref.student;\n          _context2.next = 8;\n          return call(addNewStudentApi, student);\n\n        case 8:\n          response = _context2.sent;\n\n          if (!(response && response.message)) {\n            _context2.next = 11;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", console.warn(\"Something went wrong with adding a new student!\"));\n\n        case 11:\n          _context2.next = 13;\n          return call(fetchStudents);\n\n        case 13:\n          _context2.next = 18;\n          break;\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.warn(\"Error occurred in watchForAddStudent\", _context2.t0);\n\n        case 18:\n          _context2.next = 0;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 15]]);\n}\nvar deleteStudentApi = studentApi.deleteStudentApi;\nexport function watchForDeleteStudent() {\n  var _ref2, id, response;\n\n  return _regeneratorRuntime.wrap(function watchForDeleteStudent$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!true) {\n            _context3.next = 20;\n            break;\n          }\n\n          _context3.prev = 1;\n          _context3.next = 4;\n          return take(DELETE_STUDENT);\n\n        case 4:\n          _ref2 = _context3.sent;\n          id = _ref2.id;\n          _context3.next = 8;\n          return call(deleteStudentApi, id);\n\n        case 8:\n          response = _context3.sent;\n\n          if (!(response && response.message)) {\n            _context3.next = 11;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", console.warn(\"Something went wrong with deleting a student.\"));\n\n        case 11:\n          _context3.next = 13;\n          return call(fetchStudents);\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.warn(\"Error occured in watchForDeleteStudent\", _context3.t0);\n\n        case 18:\n          _context3.next = 0;\n          break;\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 15]]);\n}\nexport default function defaultSaga() {\n  return _regeneratorRuntime.wrap(function defaultSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([watchForFetchStudents(), watchForAddStudent(), watchForDeleteStudent()]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":null,"metadata":{},"sourceType":"module"}