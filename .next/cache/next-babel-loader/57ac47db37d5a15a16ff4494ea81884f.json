{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\nimport LessonDetailAnswerSheet from '../../../../LessonDetailAnswerSheet';\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenDetailModal\", () => this.setState({\n      detailModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDetailModal\", () => this.setState({\n      detailModalOpen: false\n    }));\n\n    _defineProperty(this, \"renderLessonIcon\", subject => {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"renderDropdownOptions\", status => {\n      if (status === \"Scheduled\" || status === 'Assigned') {\n        return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#\"\n        }, \"Reschedule\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Unassign\")));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#\"\n      }, \"Reschedule\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Mark all Flags Reviewed\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Reset\")), __jsx(\"li\", null, __jsx(\"a\", {\n        href: \"#!\"\n      }, \"Unassign\")));\n    });\n\n    this.state = {\n      detailModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      lessonName,\n      score,\n      scoreStatus,\n      passage,\n      reviewedAlerts,\n      overdue,\n      subject,\n      status,\n      completionDate,\n      problems,\n      type,\n      availableDate,\n      dueDate,\n      flags\n    } = this.props.lesson;\n    const {\n      dropdownIndex,\n      lesson,\n      dropdownIsOpen,\n      index,\n      user,\n      handleDropdownClick\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(LessonDetailAnswerSheet, {\n      onCloseDetailModal: this.onCloseDetailModal,\n      open: this.state.detailModalOpen,\n      user: user,\n      lesson: lesson\n    }), __jsx(\"div\", {\n      className: \"card list-table-row\",\n      key: index\n    }, __jsx(\"div\", {\n      className: \"list-table-cell icon-cell\"\n    }, __jsx(\"span\", {\n      className: \"block-icon\"\n    }, __jsx(\"i\", {\n      className: this.renderLessonIcon(subject)\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-text truncate\"\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\",\n      id: \"lessonName\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenDetailModal\n    }, lessonName)))), __jsx(\"div\", {\n      className: \"list-table-cell graph-cell\",\n      style: {\n        marginLeft: '50px'\n      }\n    }, scoreStatus && __jsx(\"span\", {\n      className: `chart-bar ${statusColorMap[scoreStatus]} white-text`\n    }, Math.floor(`${score / problems * 100}`), \"%\")), __jsx(\"div\", {\n      className: \"list-table-cell status-cell\"\n    }, scoreStatus !== \"\" ? __jsx(\"span\", {\n      className: `badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`\n    }, scoreStatus) : __jsx(\"span\", {\n      className: `badge badge-rounded-md ${statusColorMap[status]} white-text`\n    }, status)), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\",\n      style: {\n        marginLeft: '10px'\n      }\n    }, subject), __jsx(\"div\", {\n      className: \"list-table-cell type-cell\"\n    }, \"p. \", passage), __jsx(\"div\", {\n      className: \"list-table-cell date-cell\"\n    }, __jsx(\"time\", {\n      dateTime: \"2019-01-27\"\n    }, availableDate)), __jsx(\"div\", {\n      className: \"list-table-cell dueDate-cell\",\n      style: {\n        color: overdue ? \"#db1b29\" : \"\"\n      }\n    }, __jsx(\"time\", {\n      dateTime: \"2019-01-27\"\n    }, dueDate)), __jsx(\"div\", {\n      className: \"list-table-cell completed-cell\"\n    }, completionDate), __jsx(\"div\", {\n      className: \"list-table-cell name-cell\"\n    }, __jsx(\"div\", {\n      className: \"card-panel-text truncate\"\n    }, __jsx(\"div\", {\n      className: \"text-large truncate\"\n    }, type))), __jsx(\"div\", {\n      className: \"list-table-cell graph-cell\"\n    }, reviewedAlerts.length > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge grey darken-1 white-text\"\n    }, __jsx(\"b\", {\n      className: \"badge-text\"\n    }, reviewedAlerts.length), \" \", __jsx(\"i\", {\n      className: \"icon-flag\"\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell flags-cell\"\n    }, flags.length > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge red darken-2 white-text\"\n    }, __jsx(\"b\", {\n      className: \"badge-text\"\n    }, flags.length), \" \", __jsx(\"i\", {\n      className: \"icon-flag\"\n    }))), __jsx(\"div\", {\n      className: \"list-table-cell drop-cell\"\n    }, __jsx(\"div\", {\n      className: \"dropdown-block\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown01\",\n      className: \"dropdown-trigger btn\",\n      onClick: event => handleDropdownClick(event, index)\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\"\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: 'block',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)'\n      }\n    }, this.renderDropdownOptions(status)) : null))));\n  }\n\n}\n\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}