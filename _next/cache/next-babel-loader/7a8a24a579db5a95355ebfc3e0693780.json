{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/AssignLessonModal/components/LessonListItem.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\n\nvar LessonListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LessonListItem, _React$Component);\n\n  function LessonListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LessonListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LessonListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderLessonIcon\", function (subject) {\n      switch (subject) {\n        case 'Reading':\n          return 'icon-books';\n\n        case 'Writing':\n          return 'icon-hands';\n\n        case 'Math':\n          return 'icon-calculator';\n\n        default:\n          break;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(LessonListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          checkedLessons = _this$props.checkedLessons,\n          selectAll = _this$props.selectAll,\n          handleCheckbox = _this$props.handleCheckbox,\n          index = _this$props.index,\n          lesson = _this$props.lesson,\n          _this$props$lesson = _this$props.lesson,\n          id = _this$props$lesson.id,\n          lessonName = _this$props$lesson.name,\n          status = _this$props$lesson.status,\n          assigned = _this$props$lesson.assigned,\n          score = _this$props$lesson.score,\n          scoreStatus = _this$props$lesson.scoreStatus,\n          reviewedAlerts = _this$props$lesson.reviewedAlerts,\n          subject = _this$props$lesson.subject,\n          unit = _this$props$lesson.unit,\n          passage = _this$props$lesson.passage,\n          timeEstimate = _this$props$lesson.timeEstimate,\n          problems = _this$props$lesson.problems,\n          lessonType = _this$props$lesson.lessonType,\n          flags = _this$props$lesson.flags;\n      return __jsx(\"div\", {\n        className: \"card list-table-row\",\n        key: id,\n        style: {\n          opacity: assigned ? 0.5 : 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"list-table-cell icon-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        id: index,\n        checked: !selectAll ? checkedLessons.indexOf(lesson) > -1 : true,\n        onChange: function onChange() {\n          return handleCheckbox(lesson);\n        },\n        className: \"filled-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\\xA0\")))), __jsx(\"div\", {\n        className: \"list-table-cell icon-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"block-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        className: this.renderLessonIcon(subject),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"list-table-cell name-cell\",\n        style: {\n          width: '140px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        id: \"lessonName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, unit, \" \", lessonName))), __jsx(\"div\", {\n        className: \"list-table-cell graph-cell\",\n        style: {\n          marginLeft: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, scoreStatus && __jsx(\"span\", {\n        className: \"chart-bar \".concat(statusColorMap[scoreStatus], \" white-text\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, Math.floor(\"\".concat(score / problems * 100)), \"%\")), __jsx(\"div\", {\n        className: \"list-table-cell status-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, scoreStatus !== \"\" ? __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[scoreStatus], \" white-text\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, scoreStatus) : __jsx(\"span\", {\n        className: \"badge badge-rounded-md \".concat(statusColorMap[status], \" white-text\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, status)), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        style: {\n          marginLeft: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, subject), __jsx(\"div\", {\n        className: \"list-table-cell type-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"p. \", passage), __jsx(\"div\", {\n        className: \"list-table-cell date-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, timeEstimate), __jsx(\"div\", {\n        className: \"list-table-cell date-cell\",\n        style: {\n          paddingLeft: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, problems), __jsx(\"div\", {\n        className: \"list-table-cell name-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-panel-text truncate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"text-large truncate\",\n        style: {\n          paddingLeft: '70px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, lessonType))));\n    }\n  }]);\n\n  return LessonListItem;\n}(React.Component);\n\nLessonListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  lesson: PropTypes.object.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  checkedLessons: PropTypes.array.isRequired\n};\nexport default LessonListItem;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/AssignLessonModal/components/LessonListItem.js"],"names":["React","PropTypes","statusColorMap","LessonListItem","subject","props","checkedLessons","selectAll","handleCheckbox","index","lesson","id","lessonName","name","status","assigned","score","scoreStatus","reviewedAlerts","unit","passage","timeEstimate","problems","lessonType","flags","opacity","indexOf","renderLessonIcon","width","marginLeft","Math","floor","paddingLeft","Component","propTypes","number","isRequired","object","bool","func","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusColorMap from '../../../../DetailWorksheetPage/utils/statusColorMap';\n\nclass LessonListItem extends React.Component {\n  // eslint-disable-next-line consistent-return\n  renderLessonIcon = (subject) => {\n    switch (subject) {\n      case 'Reading':\n        return 'icon-books';\n      case 'Writing':\n        return 'icon-hands';\n      case 'Math':\n        return 'icon-calculator';\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { checkedLessons, selectAll, handleCheckbox, index, lesson, lesson: { id, name: lessonName, status, assigned, score, scoreStatus, reviewedAlerts, subject, unit, passage, timeEstimate, problems, lessonType, flags } } = this.props;\n    return (\n      <div className=\"card list-table-row\" key={id} style={{ opacity: assigned ? 0.5 : 1 }}>\n        <div className=\"list-table-cell icon-cell\">\n          <label htmlFor={index}>\n            <input\n              type=\"checkbox\"\n              id={index}\n              checked={!selectAll ? checkedLessons.indexOf(lesson) > -1 : true}\n              onChange={() => handleCheckbox(lesson)}\n              className=\"filled-in\"\n            />\n            <span><b>&nbsp;</b></span>\n          </label>\n        </div>\n        <div className=\"list-table-cell icon-cell\">\n          <span className=\"block-icon\">\n            <i className={this.renderLessonIcon(subject)}></i>\n          </span>\n        </div>\n        <div className=\"list-table-cell name-cell\" style={{ width: '140px' }}>\n          <div className=\"card-panel-text truncate\">\n            <div className=\"text-large truncate\" id=\"lessonName\">{unit} {lessonName}</div>\n          </div>\n        </div>\n        <div className=\"list-table-cell graph-cell\" style={{ marginLeft: '50px' }}>\n          {scoreStatus && (\n            <span className={`chart-bar ${statusColorMap[scoreStatus]} white-text`}>{Math.floor(`${score / problems * 100}`)}%</span>\n          )}\n        </div>\n        <div className=\"list-table-cell status-cell\" >\n          <Choose>\n            <When condition={scoreStatus !== \"\"}>\n              <span className={`badge badge-rounded-md ${statusColorMap[scoreStatus]} white-text`}>{scoreStatus}</span>\n            </When>\n            <Otherwise>\n              <span className={`badge badge-rounded-md ${statusColorMap[status]} white-text`}>{status}</span>\n            </Otherwise>\n          </Choose>\n        </div>\n        <div className=\"list-table-cell type-cell\" style={{ marginLeft: '10px' }}>{subject}</div>\n        <div className=\"list-table-cell type-cell\">p. {passage}</div>\n        <div className=\"list-table-cell date-cell\">{timeEstimate}</div>\n        <div className=\"list-table-cell date-cell\"style={{ paddingLeft: '50px' }}>{problems}</div>\n\n        <div className=\"list-table-cell name-cell\">\n          <div className=\"card-panel-text truncate\">\n            <div className=\"text-large truncate\" style={{ paddingLeft: '70px' }}>{lessonType}</div>\n          </div>\n        </div>\n        {/* <div className=\"list-table-cell graph-cell\">\n          {reviewedAlerts.length > 0 && (\n            <span className=\"badge-rounded-xs badge grey darken-1 white-text\"><b className=\"badge-text\">{reviewedAlerts.length}</b> <i className=\"icon-flag\"></i></span>\n          )}\n        </div>\n        <div className=\"list-table-cell flags-cell\">\n          {flags.length > 0 && (\n            <span className=\"badge-rounded-xs badge red darken-2 white-text\"><b className=\"badge-text\">{flags.length}</b> <i className=\"icon-flag\"></i></span>\n          )}\n        </div> */}\n      </div>\n    );\n  }\n}\n\nLessonListItem.propTypes = {\n  index: PropTypes.number.isRequired,\n  lesson: PropTypes.object.isRequired,\n  selectAll: PropTypes.bool.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  checkedLessons: PropTypes.array.isRequired,\n};\n\nexport default LessonListItem;\n"]},"metadata":{},"sourceType":"module"}