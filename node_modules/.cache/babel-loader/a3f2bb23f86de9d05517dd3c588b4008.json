{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassDetailModal from '../ClassDetailModal';\nimport RadialBar from \"../../../../common/RadialBar\";\n\nvar ClassCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClassCard, _React$Component);\n\n  function ClassCard(props) {\n    var _this;\n\n    _classCallCheck(this, ClassCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassCard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenClassDetailsModal\", function (event) {\n      event.preventDefault();\n\n      _this.props.onCloseDropdown();\n\n      _this.setState({\n        classDetailsModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseClassDetailsModal\", function () {\n      return _this.setState({\n        classDetailsModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneClass\", function () {\n      return _this.props.onCloneClass(_this.props.classroom);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenDeleteModal\", function () {\n      return _this.setState({\n        deleteModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDeleteModal\", function () {\n      return _this.setState({\n        deleteModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onConfirmDeleteClass\", function () {\n      var _this$props = _this.props,\n          onDeleteClass = _this$props.onDeleteClass,\n          classroom = _this$props.classroom,\n          onCloseDropdown = _this$props.onCloseDropdown;\n      onDeleteClass(classroom);\n      onCloseDropdown();\n\n      _this.onCloseDeleteModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props2 = _this.props,\n          onSetDropdown = _this$props2.onSetDropdown,\n          onCloseDropdown = _this$props2.onCloseDropdown,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          index = _this$props2.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _this.state = {\n      classDetailsModalOpen: false,\n      deleteModalOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ClassCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          dropdownIsOpen = _this$props3.dropdownIsOpen,\n          dropdownIndex = _this$props3.dropdownIndex,\n          index = _this$props3.index,\n          classroom = _this$props3.classroom,\n          onHandleClassCard = _this$props3.onHandleClassCard,\n          onCloneClass = _this$props3.onCloneClass,\n          onDeleteClass = _this$props3.onDeleteClass,\n          onSaveClassChanges = _this$props3.onSaveClassChanges;\n      var _this$state = this.state,\n          deleteModalOpen = _this$state.deleteModalOpen,\n          classDetailsModalOpen = _this$state.classDetailsModalOpen;\n      var _classroom$summary = classroom.summary,\n          amount_students = _classroom$summary.amount_students,\n          start_date = _classroom$summary.start_date,\n          end_date = _classroom$summary.end_date,\n          improvement = _classroom$summary.improvement,\n          coursework_assigned = _classroom$summary.coursework_assigned,\n          coursework_completed = _classroom$summary.coursework_completed,\n          problems_flagged_review = _classroom$summary.problems_flagged_review,\n          average_score = _classroom$summary.average_score,\n          achieved_target_score = _classroom$summary.achieved_target_score,\n          average_practice_tests_completed = _classroom$summary.average_practice_tests_completed,\n          instruction = _classroom$summary.instruction;\n      return React.createElement(React.Fragment, null, React.createElement(ClassDetailModal, {\n        index: index,\n        classroom: classroom,\n        open: classDetailsModalOpen,\n        onClose: this.onCloseClassDetailsModal,\n        onOpenDeleteModal: this.onOpenDeleteModal,\n        deleteModalOpen: deleteModalOpen,\n        onSaveClassChanges: onSaveClassChanges,\n        onDeleteClass: onDeleteClass\n      }), React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: \"card-main card-class card card-large\"\n      }, React.createElement(\"div\", {\n        className: \"owner-box card-panel\",\n        style: {\n          backgroundColor: \"#408e49\",\n          color: \"#fff\",\n          cursor: \"pointer\"\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"user-block\"\n      }, React.createElement(\"div\", {\n        className: \"user-circle\",\n        style: {\n          backgroundColor: \"#fff\",\n          color: \"#408e49\"\n        }\n      }, React.createElement(\"span\", {\n        className: \"initials\"\n      }, amount_students), React.createElement(\"span\", {\n        className: \"ititials-text\"\n      }, \"students\")), React.createElement(\"div\", {\n        className: \"user-text\",\n        style: {\n          color: \"#fff\"\n        },\n        onClick: function onClick() {\n          return onHandleClassCard(index);\n        }\n      }, React.createElement(\"h4\", {\n        className: \"h3\"\n      }, \"Some Class in June\"), React.createElement(\"time\", {\n        dateTime: \"P120D\"\n      }, start_date, \" - \", end_date)))), React.createElement(\"div\", {\n        className: \"col s3 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"col right-align\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-members\"\n      }), React.createElement(\"span\", {\n        className: \"text-icon\"\n      }, \"Class\"))), React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        className: \"dropdown-trigger btn\",\n        href: \"#\",\n        onClick: this.handleDropdownClick,\n        \"data-target\": \"dropdown01\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          width: '103.991px',\n          left: '116.974px',\n          top: '7.99716px',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#modal_user_edit\",\n        onClick: this.onOpenClassDetailsModal,\n        className: \"modal-trigger link-block\"\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onCloneClass(index);\n        }\n      }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\"\n      }, \"Impersonate\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#!\",\n        onClick: function onClick() {\n          return onDeleteClass(index);\n        }\n      }, \"Delete\"))) : null))))), React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 m5\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"col s6 m12\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list-custom\"\n      }, React.createElement(\"li\", {\n        className: \"style-aqua\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, \"+\", improvement, React.createElement(\"span\", {\n        className: \"badge-text\"\n      }, \"improvement\"))))), React.createElement(\"div\", {\n        className: \"col s6 m12\"\n      }, React.createElement(\"div\", {\n        className: \"chart-block chart-block-test\"\n      }, React.createElement(\"span\", {\n        className: \"value-max\"\n      }, \"24\"), React.createElement(RadialBar, {\n        svgWidth: 104,\n        svgHeight: 104,\n        strokeWidth: 14,\n        maxValue: 24,\n        currentValue: instruction,\n        strokeColor: \"#55b24b\"\n      }), React.createElement(\"div\", {\n        className: \"chart-text\"\n      }, React.createElement(\"span\", {\n        className: \"title\"\n      }, \"Instruction\"), React.createElement(\"span\", {\n        className: \"value\"\n      }, (instruction / 24 * 100).toFixed(1), \"%\"), React.createElement(\"span\", {\n        className: \"description\"\n      }, \"vs scheduled instruction\")))))), React.createElement(\"div\", {\n        className: \"col s12 m7\"\n      }, React.createElement(\"ul\", {\n        className: \"points-list\"\n      }, React.createElement(\"li\", {\n        className: \"style-purple-darken\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, coursework_assigned), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"coursework assigned\")), React.createElement(\"li\", {\n        className: \"style-purple-lighten\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, coursework_completed, \"%\"), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"coursework completed\")), React.createElement(\"li\", {\n        className: \"style-red-darken-3\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, problems_flagged_review), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"problems \\uFB02agged for review\")), React.createElement(\"li\", {\n        className: \"style-blue-light\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, average_score), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average score\")), React.createElement(\"li\", {\n        className: \"style-blue\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, achieved_target_score, \"%\"), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"achieved target score\")), React.createElement(\"li\", {\n        className: \"style-orange-accent-4\"\n      }, React.createElement(\"span\", {\n        className: \"badge-circle\"\n      }, average_practice_tests_completed), React.createElement(\"span\", {\n        className: \"point-text\"\n      }, \"average practice tests completed\"))))), React.createElement(\"div\", {\n        className: \"card-inner-row\"\n      }, React.createElement(\"div\", {\n        className: \"row-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"category-list\"\n      }, React.createElement(\"li\", {\n        className: \"category-box \"\n      }, React.createElement(\"span\", {\n        className: \"category-badge badge-purple\"\n      }, \"TW\"), React.createElement(\"span\", {\n        className: \"category-text\"\n      }, \"Tutor Withalongername\")))))))));\n    }\n  }]);\n\n  return ClassCard;\n}(React.Component);\n\nClassCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  classroom: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  dropdownIndex: PropTypes.number,\n  onHandleClassCard: PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass: PropTypes.func.isRequired,\n  onSaveClassChanges: PropTypes.func.isRequired\n};\nexport default ClassCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/ListPage/components/ClassCard/index.js"],"names":["React","PropTypes","ClassDetailModal","RadialBar","ClassCard","props","event","preventDefault","onCloseDropdown","setState","classDetailsModalOpen","onCloneClass","classroom","deleteModalOpen","onDeleteClass","onCloseDeleteModal","onSetDropdown","dropdownIsOpen","index","state","dropdownIndex","onHandleClassCard","onSaveClassChanges","summary","amount_students","start_date","end_date","improvement","coursework_assigned","coursework_completed","problems_flagged_review","average_score","achieved_target_score","average_practice_tests_completed","instruction","onCloseClassDetailsModal","onOpenDeleteModal","backgroundColor","color","cursor","handleDropdownClick","display","width","left","top","transformOrigin","opacity","transform","onOpenClassDetailsModal","toFixed","Component","propTypes","number","isRequired","object","func","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassDetailModal from '../ClassDetailModal';\nimport RadialBar from \"../../../../common/RadialBar\";\n\n\nclass ClassCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classDetailsModalOpen: false,\n      deleteModalOpen: false,\n    }\n  }\n\n  onOpenClassDetailsModal = (event) => {\n    event.preventDefault();\n    this.props.onCloseDropdown();\n    this.setState({ classDetailsModalOpen: true });\n  };\n\n  onCloseClassDetailsModal = () => this.setState({ classDetailsModalOpen: false });\n  \n  onCloneClass = () => this.props.onCloneClass(this.props.classroom)\n\n  onOpenDeleteModal = () => this.setState({ deleteModalOpen: true });\n  onCloseDeleteModal = () => this.setState({ deleteModalOpen: false });\n\n  onConfirmDeleteClass = () => {\n    const { onDeleteClass, classroom, onCloseDropdown } = this.props;\n    onDeleteClass(classroom);\n    onCloseDropdown();\n    this.onCloseDeleteModal();\n  }\n\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  render() {\n    const { dropdownIsOpen, dropdownIndex, index,classroom,onHandleClassCard,onCloneClass,onDeleteClass,onSaveClassChanges } = this.props;\n    const { deleteModalOpen, classDetailsModalOpen } = this.state;\n    const {summary:{ \n      amount_students,\n      start_date,\n      end_date,\n      improvement,\n      coursework_assigned,\n      coursework_completed,\n      problems_flagged_review,\n      average_score,\n      achieved_target_score,\n      average_practice_tests_completed,\n      instruction}\n    } = classroom;\n    return (\n      <React.Fragment>\n        <ClassDetailModal\n          index = {index}\n          classroom={classroom}\n          open={classDetailsModalOpen}\n          onClose={this.onCloseClassDetailsModal}\n          onOpenDeleteModal={this.onOpenDeleteModal}\n          deleteModalOpen={deleteModalOpen}\n          onSaveClassChanges = {onSaveClassChanges}\n          onDeleteClass={onDeleteClass}\n        />\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-main card-class card card-large\">\n          <div className=\"owner-box card-panel\" style={{ backgroundColor: \"#408e49\", color: \"#fff\",cursor:\"pointer\" }}>\n            <div className=\"card-panel-row row\">\n              <div className=\"col s9\">\n                <div className=\"user-block\">\n                  <div className=\"user-circle\" style={{ backgroundColor: \"#fff\", color: \"#408e49\" }}>\n                    <span className=\"initials\">{amount_students}</span>\n                    <span className=\"ititials-text\">students</span>\n                  </div>\n                  <div className=\"user-text\" style={{ color: \"#fff\" }} onClick={()=>onHandleClassCard(index)}>\n                    <h4 className=\"h3\">Some Class in June</h4>\n                    <time dateTime=\"P120D\">{start_date} - {end_date}</time>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s3 right-align\">\n                <div className=\"row icons-row\">\n                  <div className=\"col right-align\">\n                    <span className=\"block-icon\">\n                      <i className=\"icon-members\" />\n                      <span className=\"text-icon\">Class</span>\n                    </span>\n                  </div>\n                  <div className=\"dropdown-block col\">\n                    <a\n                      className=\"dropdown-trigger btn\"\n                      href=\"#\"\n                      onClick={this.handleDropdownClick}\n                      data-target=\"dropdown01\"\n                    >\n                      <i className=\"material-icons dots-icon\">more_vert</i>\n                    </a>\n                    <If condition={dropdownIsOpen && dropdownIndex === index}>\n                      <ul\n                        id=\"dropdown01\"\n                        className=\"dropdown-content dropdown-wide\"\n                        style={{ display: 'block', width: '103.991px', left: '116.974px', top: '7.99716px', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                      >\n                        <li>\n                          <a\n                            href=\"#modal_user_edit\"\n                            onClick={this.onOpenClassDetailsModal}\n                            className=\"modal-trigger link-block\"\n                          >\n                            Edit\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#!\" onClick={() => onCloneClass(index)}>Clone</a>\n                        </li>\n                        <li>\n                          <a href=\"#!\">Impersonate</a>\n                        </li>\n                        <li>\n                          <a href=\"#!\" onClick={() => onDeleteClass(index)}>Delete</a>\n                        </li>\n                      </ul>\n                    </If>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"row d-flex mb-0\">\n              <div className=\"col s12 m5\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s6 m12\">\n                    <ul className=\"points-list-custom\">\n                      <li className=\"style-aqua\">\n                        <span className=\"badge-circle\">\n                          +{improvement}\n                          <span className=\"badge-text\">improvement</span>\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"col s6 m12\">\n                    <div className=\"chart-block chart-block-test\">\n                      <span className=\"value-max\">24</span>\n                      <RadialBar\n                          svgWidth={104}\n                          svgHeight={104}\n                          strokeWidth={14}\n                          maxValue={24}\n                          currentValue={instruction}\n                          strokeColor = \"#55b24b\"\n                        />\n                      <div className=\"chart-text\">\n                        <span className=\"title\">Instruction</span>\n                        <span className=\"value\">{((instruction/24)*100).toFixed(1)}%</span>\n                        <span className=\"description\">\n                          vs scheduled instruction\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col s12 m7\">\n                <ul className=\"points-list\">\n                  <li className=\"style-purple-darken\">\n                    <span className=\"badge-circle\">{coursework_assigned}</span>\n                    <span className=\"point-text\">coursework assigned</span>\n                  </li>\n                  <li className=\"style-purple-lighten\">\n                    <span className=\"badge-circle\">{coursework_completed}%</span>\n                    <span className=\"point-text\">coursework completed</span>\n                  </li>\n                  <li className=\"style-red-darken-3\">\n                    <span className=\"badge-circle\">{problems_flagged_review}</span>\n                    <span className=\"point-text\">\n                      problems ﬂagged for review\n                    </span>\n                  </li>\n                  <li className=\"style-blue-light\">\n                    <span className=\"badge-circle\">{average_score}</span>\n                    <span className=\"point-text\">average score</span>\n                  </li>\n                  <li className=\"style-blue\">\n                    <span className=\"badge-circle\">{achieved_target_score}%</span>\n                    <span className=\"point-text\">achieved target score</span>\n                  </li>\n                  <li className=\"style-orange-accent-4\">\n                    <span className=\"badge-circle\">{average_practice_tests_completed}</span>\n                    <span className=\"point-text\">\n                      average practice tests completed\n                    </span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"card-inner-row\">\n              <div className=\"row-holder\">\n                <ul className=\"category-list\">\n                  <li className=\"category-box \">\n                    <span className=\"category-badge badge-purple\">TW</span>\n                    <span className=\"category-text\">Tutor Withalongername</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nClassCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  classroom: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  dropdownIndex: PropTypes.number,\n  onHandleClassCard:PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass:PropTypes.func.isRequired,\n  onSaveClassChanges:PropTypes.func.isRequired,\n};\n\nexport default ClassCard;\n"]},"metadata":{},"sourceType":"module"}