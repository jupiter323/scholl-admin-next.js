{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/CompletedTestCard/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { setActiveTestScores } from '../../../index/actions';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../../../index/selectors';\nimport { fetchStudentTestScoreApi } from '../../../index/api';\n\nclass CompletedTestCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_isMounted\", false);\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const {\n        test\n      } = this.props;\n      this._isMounted = true;\n      const formattedScores = await this.getScoresByStudentTest(this.props.test);\n      if (!formattedScores) return;\n\n      if (formattedScores && this._isMounted) {\n        this.setState({\n          scores: _objectSpread({}, formattedScores, {\n            student_test_id: test.student_test_id\n          })\n        });\n        this.setScores(formattedScores.subjects);\n      }\n    });\n\n    _defineProperty(this, \"onEditTest\", async () => {\n      const {\n        onEditTest,\n        onSetScores\n      } = this.props;\n      const {\n        scores\n      } = this.state;\n\n      if (scores) {\n        onSetScores(scores);\n        onEditTest();\n      }\n    });\n\n    _defineProperty(this, \"setScores\", scores => {\n      _Object$values(scores).map(score => {\n        switch (score.name) {\n          case 'Reading':\n            this.setState({\n              ReadingScore: score\n            });\n            break;\n\n          case 'Writing and Language':\n            this.setState({\n              ReadingAndWritingScore: score\n            });\n            break;\n\n          case 'Math':\n            this.setState({\n              MathScore: score\n            });\n            break;\n\n          case 'Writing':\n            this.setState({\n              WritingScore: score\n            });\n            break;\n\n          default:\n            this.setState({\n              NA: 0\n            });\n            break;\n        }\n      });\n    });\n\n    _defineProperty(this, \"getScoresByStudentTest\", async test => {\n      const {\n        student_test_id\n      } = test;\n      const {\n        activeStudent: {\n          id\n        }\n      } = this.props;\n      const formattedTestScores = await fetchStudentTestScoreApi(id, student_test_id);\n      return formattedTestScores.data;\n    });\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    this.state = {\n      scores: null,\n      ReadingScore: null,\n      WritingScore: null,\n      ReadingAndWritingScore: null,\n      MathScore: null,\n      NA: 0\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const {\n      dropdownIndex,\n      index,\n      dropdownIsOpen,\n      onDownloadReport,\n      test: {\n        test_name,\n        test_description,\n        due_date,\n        completion_date,\n        student_test_id,\n        student_id,\n        problem_flag_count\n      },\n      onEnterAnswers,\n      onDeleteTest,\n      onTestFlagReviewed,\n      handleTestSettingModalOpen\n    } = this.props;\n    const {\n      ReadingScore,\n      WritingScore,\n      ReadingAndWritingScore,\n      MathScore\n    } = this.state;\n    const formattedDueDate = moment(due_date).format('MM/DD/YY');\n    const formattedCompletedDate = moment(completion_date.date).format('MM/DD/YY');\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-full-width card-scored card\",\n      style: {\n        margin: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \" card-panel-row row mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"to-do-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: '0px !important',\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      className: \"list-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, test_name)), __jsx(\"div\", {\n      className: \"col s12 m6 right-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row icons-row\",\n      style: {\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, problem_flag_count > 0 && __jsx(\"span\", {\n      className: \"badge-rounded-xs badge red darken-2 white-text\",\n      style: {\n        minWidth: '20px',\n        minHeight: '20px',\n        borderRadius: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"dropdown-block col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"dropdown-trigger btn\",\n      onClick: this.handleDropdownClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      style: {\n        display: 'block',\n        minWidth: '160px',\n        transformOrigin: '0px 0px 0px',\n        opacity: '1',\n        transform: 'scaleX(1) scaleY(1)',\n        width: '210px'\n      },\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: handleTestSettingModalOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Edit Test Settings\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => onEnterAnswers(student_test_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Edit/Enter Answers\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => onDownloadReport(this.props.test),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Download score report\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Excuse/Unexcuse lateness\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: problem_flag_count === 0 ? \"disabled\" : \"\",\n      href: \"#\",\n      onClick: e => {\n        e.preventDefault();\n        onTestFlagReviewed(student_test_id, student_id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Mark flags reviewed\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Reset\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: e => {\n        e.preventDefault();\n        onDeleteTest(student_test_id, student_id, 'completedStudentTests');\n      },\n      className: \"red-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Unassign\"))) : null)))), __jsx(\"div\", {\n      className: \"row\",\n      onClick: e => this.onEditTest(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"info-list info-list-gray  assigned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"list-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"ico-mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"status-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Complete \", formattedCompletedDate))), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"list-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Due \", formattedDueDate)))), __jsx(\"div\", {\n      className: \"card-meta-block\",\n      style: {\n        padding: '0px',\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Version:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, test_description))))))))), __jsx(\"ul\", {\n      className: \"points-list-custom\",\n      onClick: e => this.onEditTest(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, MathScore && ReadingAndWritingScore && ReadingScore ? __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      style: {\n        backgroundColor: '#00BBFF',\n        borderColor: '#00BBFF',\n        width: '120px',\n        height: '120px',\n        fontSize: '55px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"SAT Score\")), __jsx(\"h2\", {\n      style: {\n        marginBottom: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, MathScore.current_score + ReadingScore.current_score + ReadingAndWritingScore.current_score)))) : __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      style: {\n        width: '120px',\n        height: '120px',\n        fontSize: '55px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"SAT Score\")), __jsx(\"h2\", {\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"n/a\")))), MathScore ? __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      style: {\n        backgroundColor: '#4785f4',\n        borderColor: '#4785f4'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Math\")), __jsx(\"h2\", {\n      style: {\n        marginBottom: MathScore.previous_score ? '5px' : '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, MathScore.current_score, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), MathScore.previous_score === null ? '' : `${MathScore.delta}`)))) : __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Math\")), __jsx(\"h2\", {\n      style: {\n        marginBottom: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"n/a\")))), ReadingAndWritingScore ? __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      style: {\n        backgroundColor: '#55b24b',\n        borderColor: '#55b24b'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      style: {\n        fontSize: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Writing\"), __jsx(\"h2\", {\n      style: {\n        marginBottom: ReadingAndWritingScore.previous_score ? '' : '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, ReadingAndWritingScore.current_score, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), ReadingAndWritingScore.previous_score === null ? '' : `${ReadingAndWritingScore.delta}`)))) : __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      style: {\n        fontSize: '16px',\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Writing\"), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"n/a\")))), ReadingScore ? __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      style: {\n        backgroundColor: '#35a6af',\n        borderColor: '#35a6af',\n        width: '80px',\n        height: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      style: {\n        fontSize: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Reading\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      style: {\n        marginBottom: ReadingScore.previous_score ? '' : '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, ReadingScore.current_score, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), ReadingScore.previous_score === null ? '' : `${ReadingScore.delta}`)))) : __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      style: {\n        width: '80px',\n        height: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-text\",\n      style: {\n        fontSize: '16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Reading\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"n/a\"))))))));\n  }\n\n}\n\nCompletedTestCard.propTypes = {\n  index: PropTypes.string,\n  dropdownIndex: PropTypes.string,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent()\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetScores: scores => dispatch(setActiveTestScores(scores))\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(CompletedTestCard);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/CompletedTestCard/index.js"],"names":["React","connect","compose","createStructuredSelector","PropTypes","moment","setActiveTestScores","makeSelectActiveTestScores","makeSelectActiveStudent","fetchStudentTestScoreApi","CompletedTestCard","Component","constructor","props","test","_isMounted","formattedScores","getScoresByStudentTest","setState","scores","student_test_id","setScores","subjects","onEditTest","onSetScores","state","map","score","name","ReadingScore","ReadingAndWritingScore","MathScore","WritingScore","NA","activeStudent","id","formattedTestScores","data","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","componentWillUnmount","render","dropdownIndex","onDownloadReport","test_name","test_description","due_date","completion_date","student_id","problem_flag_count","onEnterAnswers","onDeleteTest","onTestFlagReviewed","handleTestSettingModalOpen","formattedDueDate","format","formattedCompletedDate","date","margin","marginBottom","marginTop","minWidth","minHeight","borderRadius","handleDropdownClick","display","transformOrigin","opacity","transform","width","e","padding","backgroundColor","borderColor","height","fontSize","current_score","previous_score","delta","propTypes","string","func","isRequired","bool","object","mapStateToProps","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { setActiveTestScores } from '../../../index/actions';\nimport { makeSelectActiveTestScores, makeSelectActiveStudent } from '../../../index/selectors';\n\nimport { fetchStudentTestScoreApi } from '../../../index/api';\nclass CompletedTestCard extends React.Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      scores: null,\n      ReadingScore: null,\n      WritingScore: null,\n      ReadingAndWritingScore: null,\n      MathScore: null,\n      NA: 0,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { test } = this.props;\n    this._isMounted = true;\n    const formattedScores = await this.getScoresByStudentTest(this.props.test);\n    if (!formattedScores) return;\n    if (formattedScores && this._isMounted) {\n      this.setState({\n        scores: { ...formattedScores, student_test_id: test.student_test_id },\n      });\n      this.setScores(formattedScores.subjects);\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onEditTest = async () => {\n    const { onEditTest, onSetScores } = this.props;\n    const { scores } = this.state;\n    if (scores) {\n      onSetScores(scores);\n      onEditTest();\n    }\n  };\n\n  setScores = scores => {\n    Object.values(scores).map(score => {\n      switch (score.name) {\n        case 'Reading':\n          this.setState({ ReadingScore: score });\n          break;\n        case 'Writing and Language':\n          this.setState({ ReadingAndWritingScore: score });\n          break;\n        case 'Math':\n          this.setState({ MathScore: score });\n          break;\n        case 'Writing':\n          this.setState({ WritingScore: score });\n          break;\n        default:\n          this.setState({ NA: 0 });\n          break;\n      }\n    });\n  };\n\n  getScoresByStudentTest = async test => {\n    const { student_test_id } = test;\n    const { activeStudent: { id } } = this.props;\n    const formattedTestScores = await fetchStudentTestScoreApi(id, student_test_id);\n    return formattedTestScores.data;\n  };\n\n  handleDropdownClick = event => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  };\n\n  render() {\n    const {\n      dropdownIndex,\n      index,\n      dropdownIsOpen,\n      onDownloadReport,\n      test: {\n        test_name,\n        test_description,\n        due_date,\n        completion_date,\n        student_test_id,\n        student_id,\n        problem_flag_count,\n      },\n      onEnterAnswers,\n      onDeleteTest,\n      onTestFlagReviewed,\n      handleTestSettingModalOpen,\n    } = this.props;\n    const { ReadingScore, WritingScore, ReadingAndWritingScore, MathScore } = this.state;\n    const formattedDueDate = moment(due_date).format('MM/DD/YY');\n    const formattedCompletedDate = moment(completion_date.date).format('MM/DD/YY');\n    return (\n      <React.Fragment>\n        <div className=\"card-full-width card-scored card\" style={{ margin: '10px' }}>\n          <div className=\"card-content\">\n            <div className=\" card-panel-row row mb-0\">\n              <div className=\"col s12\">\n                <ul className=\"to-do-list\">\n                  <li>\n                    <div\n                      className=\"row\"\n                      style={{ marginBottom: '0px !important', marginTop: '20px' }}\n                    >\n                      <div className=\"col s12 m6\">\n                        <strong className=\"list-title\">\n                          {test_name}\n                        </strong>\n                      </div>\n                      <div className=\"col s12 m6 right-align\">\n                        <div className=\"row icons-row\" style={{ marginBottom: '10px' }}>\n                          {problem_flag_count > 0 &&\n                            <span\n                              className=\"badge-rounded-xs badge red darken-2 white-text\"\n                              style={{\n                                minWidth: '20px',\n                                minHeight: '20px',\n                                borderRadius: '50%',\n                              }}\n                            >\n                              <i className=\"icon-flag\" />\n                            </span>}\n                          <div className=\"dropdown-block col\">\n                            <a\n                              href=\"#\"\n                              className=\"dropdown-trigger btn\"\n                              onClick={this.handleDropdownClick}\n                            >\n                              <i className=\"material-icons dots-icon\">more_vert</i>\n                            </a>\n                            <If condition={dropdownIsOpen && dropdownIndex === index}>\n                              <ul\n                                id=\"dropdown01\"\n                                style={{\n                                  display: 'block',\n                                  minWidth: '160px',\n                                  transformOrigin: '0px 0px 0px',\n                                  opacity: '1',\n                                  transform: 'scaleX(1) scaleY(1)',\n                                  width: '210px',\n                                }}\n                                className=\"dropdown-content\"\n                              >\n                                <li>\n                                  <a href=\"#\" onClick={handleTestSettingModalOpen}>\n                                    Edit Test Settings\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" onClick={() => onEnterAnswers(student_test_id)}>\n                                    Edit/Enter Answers\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" onClick={() => onDownloadReport(this.props.test)}>\n                                    Download score report\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Excuse/Unexcuse lateness\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    className={problem_flag_count === 0 ? \"disabled\" : \"\"}\n                                    href=\"#\"\n                                    onClick={e => {\n                                      e.preventDefault();\n                                      onTestFlagReviewed(student_test_id, student_id);\n                                    }}\n                                  >\n                                    Mark flags reviewed\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Reset\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    onClick={e => {\n                                      e.preventDefault();\n                                      onDeleteTest(\n                                        student_test_id,\n                                        student_id,\n                                        'completedStudentTests',\n                                      );\n                                    }}\n                                    className=\"red-text text-darken-3\"\n                                  >\n                                    Unassign\n                                  </a>\n                                </li>\n                              </ul>\n                            </If>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\" onClick={e => this.onEditTest(e)}>\n                      <div className=\"col s12 m8\">\n                        <ul className=\"info-list info-list-gray  assigned\">\n                          <li>\n                            <span className=\"list-status\">\n                              <span className=\"ico-mark\" />\n                              <span className=\"status-text\">\n                                Complete {formattedCompletedDate}\n                              </span>\n                            </span>\n                          </li>\n                          <li>\n                            <span className=\"list-date\">\n                              <i className=\"icon-calendar\" />\n                              <span className=\"date\">\n                                Due {formattedDueDate}\n                              </span>\n                            </span>\n                          </li>\n                        </ul>\n                        <div\n                          className=\"card-meta-block\"\n                          style={{ padding: '0px', marginTop: '10px' }}\n                        >\n                          <dl className=\"dl-horizontal\">\n                            <dt>Version:</dt>\n                            <dd>\n                              {test_description}\n                            </dd>\n                          </dl>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <ul className=\"points-list-custom\" onClick={e => this.onEditTest(e)}>\n              {MathScore && ReadingAndWritingScore && ReadingScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#00BBFF',\n                      borderColor: '#00BBFF',\n                      width: '120px',\n                      height: '120px',\n                      fontSize: '55px',\n                    }}\n                  >\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '5px' }}>SAT Score</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: '20px' }}>\n                        {MathScore.current_score +\n                            ReadingScore.current_score +\n                            ReadingAndWritingScore.current_score}\n                      </h2>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      width: '120px',\n                      height: '120px',\n                      fontSize: '55px',\n                    }}\n                  >\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '10px' }}>SAT Score</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: '15px' }}>n/a</h2>\n                    </span>\n                  </span>\n                </li>}\n              {MathScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#4785f4',\n                      borderColor: '#4785f4',\n                    }}\n                  >\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '5px' }}>Math</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: MathScore.previous_score ? '5px' : '20px' }}>\n                        {MathScore.current_score}\n                        <br />\n                        {MathScore.previous_score === null ? '' : `${MathScore.delta}`}\n                      </h2>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span className=\"badge-circle\">\n                    <span className=\"badge-text\">\n                      <strong>\n                        <h2 style={{ marginBottom: '10px' }}>Math</h2>\n                      </strong>\n                      <h2 style={{ marginBottom: '15px' }}>n/a</h2>\n                    </span>\n                  </span>\n                </li>}\n              {ReadingAndWritingScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#55b24b',\n                      borderColor: '#55b24b',\n                    }}\n                  >\n                    <span className=\"badge-text\" style={{ fontSize: '16px' }}>\n                      <strong>\n                          Writing\n                        {/* <br />\n                                &amp; Language */}\n                      </strong>\n                      <h2\n                        style={{\n                          marginBottom: ReadingAndWritingScore.previous_score ? '' : '15px',\n                        }}\n                      >\n                        {ReadingAndWritingScore.current_score}\n                        <br />\n                        {ReadingAndWritingScore.previous_score === null\n                          ? ''\n                          : `${ReadingAndWritingScore.delta}`}\n                      </h2>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span className=\"badge-circle\">\n                    <span className=\"badge-text\" style={{ fontSize: '16px', marginBottom: '10px' }}>\n                      <strong>\n                          Writing\n                        {/* <br />\n                                &amp; Language */}\n                      </strong>\n                      <h2>n/a</h2>\n                    </span>\n                  </span>\n                </li>}\n\n              {ReadingScore\n                ? <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      backgroundColor: '#35a6af',\n                      borderColor: '#35a6af',\n                      width: '80px',\n                      height: '80px',\n                    }}\n                  >\n                    <span className=\"badge-text\" style={{ fontSize: '16px' }}>\n                        Reading\n                      <br />\n                      <h3 style={{ marginBottom: ReadingScore.previous_score ? '' : '20px' }}>\n                        {ReadingScore.current_score}\n                        <br />\n                        {ReadingScore.previous_score === null ? '' : `${ReadingScore.delta}`}\n                      </h3>\n                    </span>\n                  </span>\n                </li>\n                : <li>\n                  <span\n                    className=\"badge-circle\"\n                    style={{\n                      width: '80px',\n                      height: '80px',\n                    }}\n                  >\n                    <span className=\"badge-text\" style={{ fontSize: '16px' }}>\n                        Reading\n                      <br />\n                      <h3 style={{ marginTop: '10px' }}>n/a</h3>\n                    </span>\n                  </span>\n                </li>}\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nCompletedTestCard.propTypes = {\n  index: PropTypes.string,\n  dropdownIndex: PropTypes.string,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  scores: makeSelectActiveTestScores(),\n  activeStudent: makeSelectActiveStudent(),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetScores: scores => dispatch(setActiveTestScores(scores)),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(CompletedTestCard);\n"]},"metadata":{},"sourceType":"module"}