{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport LocationCard from './components/LocationCard';\nimport NewLocationModal from '../components/NewLocationModal';\nimport sampleLocationList from '../utils/sampleLocationList';\nimport Locations from '../../../pages/locations';\n\nclass LocationListPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenLocationModal\", () => this.setState({\n      locationModalOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseLocationModal\", () => this.setState({\n      locationModalOpen: false\n    }));\n\n    _defineProperty(this, \"onAddNewLocation\", newLocation => this.setState(({\n      locations\n    }) => ({\n      locations: [...locations, newLocation]\n    })));\n\n    _defineProperty(this, \"onRedirectToLocationsPage\", event => {\n      event.preventDefault();\n      this.setState({\n        selectedLocation: null\n      });\n    });\n\n    _defineProperty(this, \"handleLocationCardClick\", index => {\n      const {\n        locations\n      } = this.state;\n      this.setState({\n        selectedLocation: locations[index]\n      });\n    });\n\n    _defineProperty(this, \"mapLocations\", () => this.state.locations.map((location, index) => React.createElement(LocationCard, {\n      location: location,\n      key: location.id,\n      index: index,\n      handleLocationCardClick: this.handleLocationCardClick\n    })));\n\n    this.state = {\n      locationModalOpen: false,\n      locations: sampleLocationList,\n      selectedLocation: null\n    };\n  }\n\n  render() {\n    const {\n      locationModalOpen,\n      selectedLocation\n    } = this.state;\n    return React.createElement(React.Fragment, null, !selectedLocation && React.createElement(\"div\", {\n      className: \"main-holder grey lighten-5\"\n    }, React.createElement(\"div\", {\n      className: \"title-row card-panel\"\n    }, React.createElement(\"div\", {\n      className: \"mobile-header\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      \"data-target\": \"slide-out\",\n      className: \"sidenav-trigger\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons\"\n    }, \"menu\"))), React.createElement(\"h2\", {\n      className: \"h1 white-text\"\n    }, React.createElement(\"span\", {\n      className: \"heading-holder\"\n    }, React.createElement(\"i\", {\n      className: \"icon-location\"\n    }), React.createElement(\"span\", {\n      className: \"heading-block\"\n    }, \"Locations\")))), React.createElement(\"div\", {\n      className: \"content-section\"\n    }, React.createElement(\"div\", {\n      className: \"row d-flex-content\"\n    }, this.mapLocations())), React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.onOpenLocationModal,\n      className: \"waves-effect waves-teal btn add-btn\"\n    }, React.createElement(\"i\", {\n      className: \"material-icons\"\n    }, \"add\"), \"New Location\"), React.createElement(NewLocationModal, {\n      open: locationModalOpen,\n      onClose: this.onCloseLocationModal,\n      onAddNewLocation: this.onAddNewLocation\n    })), selectedLocation && React.createElement(Locations, {\n      location: selectedLocation,\n      onRedirectToLocationsPage: this.onRedirectToLocationsPage\n    }) // <React.Fragment>\n    // <LocationNavBar location={selectedLocation} onRedirectToLocationsPage={this.onRedirectToLocationsPage} />\n    // <DetailAccountPage location={selectedLocation} />\n    // </React.Fragment>\n    );\n  }\n\n}\n\nexport default LocationListPage;","map":null,"metadata":{},"sourceType":"module"}