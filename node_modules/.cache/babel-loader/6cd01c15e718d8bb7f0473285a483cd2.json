{"ast":null,"code":"import moment from 'moment';\nexport var getCalendarCellClassName = function getCalendarCellClassName(hasEvents, inActiveColumn) {\n  var classNames = 'cal-cell1 cal-cell ';\n\n  if (!hasEvents) {\n    classNames += 'day-no-events ';\n  } else {\n    classNames += 'day-has-events ';\n  }\n\n  if (inActiveColumn) {\n    classNames += 'active-cell';\n  }\n\n  return classNames;\n};\nexport var getCalendarDayClassName = function getCalendarDayClassName(date, inMonth, activeDateKey) {\n  var className = 'cal-month-day ';\n\n  if (activeDateKey.includes('column-7') || activeDateKey.includes('column-1')) {\n    className += 'cal-day-weekend ';\n  }\n\n  if (date === moment().format('MM/DD/YY')) {\n    className += 'cal-day-today ';\n  }\n\n  if (inMonth === true) {\n    className += 'cal-day-inmonth ';\n  } else if (inMonth === false) {\n    className += 'cal-day-outmonth ';\n  }\n\n  return className;\n};\nexport var calendarMap = {\n  '0': 'December',\n  '1': 'January',\n  '2': 'February',\n  '3': 'March',\n  '4': 'April',\n  '5': 'May',\n  '6': 'June',\n  '7': 'July',\n  '8': 'August',\n  '9': 'September',\n  '10': 'October',\n  '11': 'November',\n  '12': 'December',\n  '13': 'January'\n};\nexport var currentMonthIndex = Number(moment().format('M')) - 1;\nexport var currentYear = new Date().getFullYear().toString().substr(-2);\nexport var getDayDate = function getDayDate(date) {\n  return moment(date).format('ddd, MMM Do');\n};\nexport var getFirstDay = function getFirstDay(activeMonthIndex) {\n  return new Date(2019, activeMonthIndex).getDay();\n};\nexport var getDaysInActiveMonth = function getDaysInActiveMonth(activeMonthIndex) {\n  return 32 - new Date(2019, activeMonthIndex, 32).getDate();\n};\nexport var getDaysInPreviousMonth = function getDaysInPreviousMonth(activeMonthIndex) {\n  return 32 - new Date(2019, activeMonthIndex - 1, 32).getDate();\n};\nexport var getNextMonthAsCurrentMonth = function getNextMonthAsCurrentMonth(activeMonthIndex) {\n  return activeMonthIndex > 9 ? activeMonthIndex + 1 : \"0\".concat(activeMonthIndex + 1);\n};","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Dashboard/utils/dateAndCalendarUtils.js"],"names":["moment","getCalendarCellClassName","hasEvents","inActiveColumn","classNames","getCalendarDayClassName","date","inMonth","activeDateKey","className","includes","format","calendarMap","currentMonthIndex","Number","currentYear","Date","getFullYear","toString","substr","getDayDate","getFirstDay","activeMonthIndex","getDay","getDaysInActiveMonth","getDate","getDaysInPreviousMonth","getNextMonthAsCurrentMonth"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,SAAD,EAAYC,cAAZ,EAA+B;AACrE,MAAIC,UAAU,GAAG,qBAAjB;;AACA,MAAI,CAACF,SAAL,EAAgB;AACdE,IAAAA,UAAU,IAAI,gBAAd;AACD,GAFD,MAEO;AACLA,IAAAA,UAAU,IAAI,iBAAd;AACD;;AACD,MAAID,cAAJ,EAAoB;AAClBC,IAAAA,UAAU,IAAI,aAAd;AACD;;AACD,SAAOA,UAAP;AACD,CAXM;AAaP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAOC,OAAP,EAAgBC,aAAhB,EAAkC;AACvE,MAAIC,SAAS,GAAG,gBAAhB;;AACA,MAAID,aAAa,CAACE,QAAd,CAAuB,UAAvB,KAAsCF,aAAa,CAACE,QAAd,CAAuB,UAAvB,CAA1C,EAA8E;AAC5ED,IAAAA,SAAS,IAAI,kBAAb;AACD;;AACD,MAAIH,IAAI,KAAKN,MAAM,GAAGW,MAAT,CAAgB,UAAhB,CAAb,EAA0C;AACxCF,IAAAA,SAAS,IAAI,gBAAb;AACD;;AACD,MAAIF,OAAO,KAAK,IAAhB,EAAsB;AACpBE,IAAAA,SAAS,IAAI,kBAAb;AACD,GAFD,MAEO,IAAIF,OAAO,KAAK,KAAhB,EAAuB;AAC5BE,IAAAA,SAAS,IAAI,mBAAb;AACD;;AACD,SAAOA,SAAP;AACD,CAdM;AAgBP,OAAO,IAAMG,WAAW,GAAG;AACzB,OAAK,UADoB;AAEzB,OAAK,SAFoB;AAGzB,OAAK,UAHoB;AAIzB,OAAK,OAJoB;AAKzB,OAAK,OALoB;AAMzB,OAAK,KANoB;AAOzB,OAAK,MAPoB;AAQzB,OAAK,MARoB;AASzB,OAAK,QAToB;AAUzB,OAAK,WAVoB;AAWzB,QAAM,SAXmB;AAYzB,QAAM,UAZmB;AAazB,QAAM,UAbmB;AAczB,QAAM;AAdmB,CAApB;AAiBP,OAAO,IAAMC,iBAAiB,GAAGC,MAAM,CAACd,MAAM,GAAGW,MAAT,CAAgB,GAAhB,CAAD,CAAN,GAA+B,CAAzD;AACP,OAAO,IAAMI,WAAW,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB,GAAoCC,MAApC,CAA2C,CAAC,CAA5C,CAApB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACd,IAAD;AAAA,SAAUN,MAAM,CAACM,IAAD,CAAN,CAAaK,MAAb,CAAoB,aAApB,CAAV;AAAA,CAAnB;AACP,OAAO,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAACC,gBAAD;AAAA,SAAsB,IAAIN,IAAJ,CAAS,IAAT,EAAeM,gBAAf,EAAiCC,MAAjC,EAAtB;AAAA,CAApB;AACP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACF,gBAAD;AAAA,SAAsB,KAAK,IAAIN,IAAJ,CAAS,IAAT,EAAeM,gBAAf,EAAiC,EAAjC,EAAqCG,OAArC,EAA3B;AAAA,CAA7B;AACP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACJ,gBAAD;AAAA,SAAsB,KAAK,IAAIN,IAAJ,CAAS,IAAT,EAAeM,gBAAgB,GAAG,CAAlC,EAAqC,EAArC,EAAyCG,OAAzC,EAA3B;AAAA,CAA/B;AACP,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACL,gBAAD;AAAA,SAAsBA,gBAAgB,GAAG,CAAnB,GAAuBA,gBAAgB,GAAG,CAA1C,cAAkDA,gBAAgB,GAAG,CAArE,CAAtB;AAAA,CAAnC","sourcesContent":["import moment from 'moment';\n\nexport const getCalendarCellClassName = (hasEvents, inActiveColumn) => {\n  let classNames = 'cal-cell1 cal-cell ';\n  if (!hasEvents) {\n    classNames += 'day-no-events ';\n  } else {\n    classNames += 'day-has-events ';\n  }\n  if (inActiveColumn) {\n    classNames += 'active-cell';\n  }\n  return classNames;\n}\n\nexport const getCalendarDayClassName = (date, inMonth, activeDateKey) => {\n  let className = 'cal-month-day ';\n  if (activeDateKey.includes('column-7') || activeDateKey.includes('column-1')) {\n    className += 'cal-day-weekend ';\n  }\n  if (date === moment().format('MM/DD/YY')) {\n    className += 'cal-day-today ';\n  }\n  if (inMonth === true) {\n    className += 'cal-day-inmonth ';\n  } else if (inMonth === false) {\n    className += 'cal-day-outmonth ';\n  }\n  return className;\n}\n\nexport const calendarMap = {\n  '0': 'December',\n  '1': 'January',\n  '2': 'February',\n  '3': 'March',\n  '4': 'April',\n  '5': 'May',\n  '6': 'June',\n  '7': 'July',\n  '8': 'August',\n  '9': 'September',\n  '10': 'October',\n  '11': 'November',\n  '12': 'December',\n  '13': 'January',\n};\n\nexport const currentMonthIndex = Number(moment().format('M')) - 1;\nexport const currentYear = new Date().getFullYear().toString().substr(-2);\n\nexport const getDayDate = (date) => moment(date).format('ddd, MMM Do');\nexport const getFirstDay = (activeMonthIndex) => new Date(2019, activeMonthIndex).getDay();\nexport const getDaysInActiveMonth = (activeMonthIndex) => 32 - new Date(2019, activeMonthIndex, 32).getDate();\nexport const getDaysInPreviousMonth = (activeMonthIndex) => 32 - new Date(2019, activeMonthIndex - 1, 32).getDate();\nexport const getNextMonthAsCurrentMonth = (activeMonthIndex) => activeMonthIndex > 9 ? activeMonthIndex + 1 : `0${activeMonthIndex + 1}`;"]},"metadata":{},"sourceType":"module"}