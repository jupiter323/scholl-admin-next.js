{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Modal from '../../../../../Modal';\nimport NewLocationModal from '../../../../../Location/components/NewLocationModal';\nimport LocationDetailsModal from '../../../../../Location/components/LocationDetailsModal';\nimport LocationRow from './components/LocationRow';\nimport { saveNewSuccess as saveLocationSuccess, saveChangesSuccess, saveNewError as saveLocationError } from '../../../../../utils/fieldValidation';\nimport sampleLocations from '../../../../../Location/utils/sampleLocationList';\n\nvar idGenerator = function idGenerator() {\n  return Math.floor(Math.random() * 100 + 1);\n};\n\nvar validationFieldMap = {\n  locationName: 'Location Name',\n  locationNickname: 'Location Nickname',\n  locationEmail: 'Location Email',\n  automatedEmailOrigin: 'Automated Email Origin',\n  automatedEmailSalutation: 'Automated Email Salutation',\n  locationUrl: 'Location Url',\n  headerColor1: 'Header Color 1',\n  headerColor2: 'Header Color 2',\n  headerLogoBackgroundColor: 'Header Logo Background Color',\n  headerLogoBackgroundAlpha: 'Header Logo Background Alpha',\n  horizontalLogoVariation: 'Horizonal Logo Variation',\n  squareLogoVariation: 'Square Logo Variation',\n  backgroundImage: 'Background Image',\n  backgroundBlur: 'Background Blur',\n  backgroundOverlayAlpha: 'Background Overlay  Alpha'\n}; // TODO: mock out update/delete action to backend\n// TODO: Will this delete just remove the location from the owner or delete the location altogethe?\n\nvar Locations =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Locations, _React$Component);\n\n  function Locations(props) {\n    var _this;\n\n    _classCallCheck(this, Locations);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Locations).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetLocationValidation\", function (locationValidation) {\n      return _this.setState({\n        locationValidation: locationValidation\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveNewLocation\", function (_ref) {\n      var locationContactInfo = _ref.locationContactInfo,\n          locationEmailSettings = _ref.locationEmailSettings,\n          locationBranding = _ref.locationBranding,\n          owner = _ref.owner;\n\n      _this.onCloseNewLocationModal();\n\n      var newLocation = {\n        id: idGenerator(),\n        owner: owner,\n        locationContactInfo: locationContactInfo,\n        locationEmailSettings: locationEmailSettings,\n        locationBranding: locationBranding,\n        locationBasicInfo: {\n          activeStudents: 0,\n          pastStudents: 0,\n          unactivatedStudents: 0,\n          averageImprovement: 0,\n          averageInitialScore: 0,\n          averageFinalScore: 0,\n          studentsAchievingTargetScore: 0\n        }\n      };\n      var locations = update(_this.state.locations, {\n        $push: [newLocation]\n      });\n\n      _this.setState({\n        locations: locations\n      });\n\n      saveLocationSuccess('location');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveLocationChanges\", function (_ref2) {\n      var id = _ref2.id,\n          locationContactInfo = _ref2.locationContactInfo,\n          locationEmailSettings = _ref2.locationEmailSettings,\n          locationBranding = _ref2.locationBranding;\n      var originalLocations = _this.state.locations;\n      var onCloseDropdown = _this.props.onCloseDropdown;\n      var locationToUpdate = originalLocations.filter(function (location) {\n        return location.id === id;\n      })[0];\n      var updatedLocation = update(locationToUpdate, {\n        locationContactInfo: {\n          $set: locationContactInfo\n        },\n        locationEmailSettings: {\n          $set: locationEmailSettings\n        },\n        locationBranding: {\n          $set: locationBranding\n        }\n      });\n      var updatedLocationIndex = originalLocations.indexOf(locationToUpdate);\n      var locations = update(originalLocations, {\n        $splice: [[updatedLocationIndex, 1, updatedLocation]]\n      });\n      saveChangesSuccess();\n\n      _this.setState({\n        locations: locations\n      });\n\n      onCloseDropdown();\n      return _this.onCloseEditLocationModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onConfirmDeleteLocation\", function () {\n      var _this$props = _this.props,\n          pendingLocationDelete = _this$props.pendingLocationDelete,\n          onCloseDeleteLocationModal = _this$props.onCloseDeleteLocationModal;\n\n      _this.onDeleteLocation(pendingLocationDelete);\n\n      onCloseDeleteLocationModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteLocation\", function (deletedLocation) {\n      var updatedState = update(_this.state, {\n        locations: function locations(unfilteredLocations) {\n          return unfilteredLocations.filter(function (location) {\n            return location.id !== deletedLocation.id;\n          });\n        }\n      });\n\n      _this.setState({\n        locations: updatedState.locations\n      });\n\n      _this.props.onCloseDropdown();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event, index) {\n      var _this$props2 = _this.props,\n          dropdownIsOpen = _this$props2.dropdownIsOpen,\n          onCloseDropdown = _this$props2.onCloseDropdown,\n          onSetDropdown = _this$props2.onSetDropdown;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapUserLocations\", function () {\n      return _this.state.locations.map(function (location, index) {\n        return __jsx(LocationRow, {\n          key: index,\n          index: index,\n          location: location,\n          dropdownIndex: _this.props.dropdownIndex,\n          dropdownIsOpen: _this.props.dropdownIsOpen,\n          handleDropdownClick: _this.handleDropdownClick,\n          onOpenEditLocationModal: function onOpenEditLocationModal() {\n            return _this.props.onOpenEditLocationModal(location);\n          },\n          onOpenDeleteModal: function onOpenDeleteModal() {\n            return _this.props.onOpenDeleteLocationModal(location);\n          }\n        });\n      });\n    });\n\n    _this.state = {\n      locations: sampleLocations,\n      dropdownIndex: null,\n      pendingLocationDelete: {},\n      locationValidation: {}\n    };\n    return _this;\n  }\n\n  _createClass(Locations, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          deleteLocationModalOpen = _this$props3.deleteLocationModalOpen,\n          activeLocation = _this$props3.activeLocation,\n          newLocationModalOpen = _this$props3.newLocationModalOpen,\n          editLocationModalOpen = _this$props3.editLocationModalOpen,\n          onOpenNewLocationModal = _this$props3.onOpenNewLocationModal,\n          onCloseNewLocationModal = _this$props3.onCloseNewLocationModal,\n          onCloseEditLocationModal = _this$props3.onCloseEditLocationModal,\n          onCloseDeleteLocationModal = _this$props3.onCloseDeleteLocationModal;\n      return __jsx(React.Fragment, null, __jsx(Modal, {\n        open: deleteLocationModalOpen,\n        onConfirm: this.onConfirmDeleteLocation,\n        onClose: onCloseDeleteLocationModal,\n        header: \"Are You Sure?\",\n        body: \"Deleting this location will be permanent\"\n      }), __jsx(NewLocationModal, {\n        fromInstructorPage: true,\n        open: newLocationModalOpen,\n        onClose: onCloseNewLocationModal,\n        onSaveNewLocation: this.onSaveNewLocation,\n        onSaveLocationError: function onSaveLocationError() {\n          return saveLocationError(_this2.state.locationValidation, validationFieldMap);\n        },\n        onSetLocationValidation: this.onSetLocationValidation\n      }), __jsx(LocationDetailsModal, {\n        location: activeLocation,\n        open: editLocationModalOpen,\n        onClose: onCloseEditLocationModal,\n        onSaveLocationError: function onSaveLocationError() {\n          return saveLocationError(_this2.state.locationValidation, validationFieldMap);\n        },\n        onSetLocationValidation: this.onSetLocationValidation,\n        onSaveLocationChanges: this.onSaveLocationChanges\n      }), __jsx(\"div\", {\n        className: \"card-block\"\n      }, __jsx(\"h3\", null, \"Location(s)\"), this.mapUserLocations(), __jsx(\"div\", {\n        className: \"add-box\"\n      }, __jsx(\"div\", {\n        className: \"add-box-holder\"\n      }, __jsx(\"a\", {\n        href: \"#\",\n        onClick: onOpenNewLocationModal,\n        className: \"btn-floating waves-effect waves-light green lighten-1\"\n      }, __jsx(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"))))));\n    }\n  }]);\n\n  return Locations;\n}(React.Component);\n\nLocations.propTypes = {\n  activeLocation: PropTypes.object,\n  dropdownIndex: PropTypes.number,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  newLocationModalOpen: PropTypes.bool.isRequired,\n  editLocationModalOpen: PropTypes.bool.isRequired,\n  pendingLocationDelete: PropTypes.object.isRequired,\n  deleteLocationModalOpen: PropTypes.bool.isRequired,\n  onOpenNewLocationModal: PropTypes.func.isRequired,\n  onCloseNewLocationModal: PropTypes.func.isRequired,\n  onOpenEditLocationModal: PropTypes.func.isRequired,\n  onCloseEditLocationModal: PropTypes.func.isRequired,\n  onOpenDeleteLocationModal: PropTypes.func.isRequired,\n  onCloseDeleteLocationModal: PropTypes.func.isRequired\n};\nexport default Locations;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Instructor/ListPage/components/SharedModalComponents/Locations/index.js"],"names":["React","PropTypes","update","Modal","NewLocationModal","LocationDetailsModal","LocationRow","saveNewSuccess","saveLocationSuccess","saveChangesSuccess","saveNewError","saveLocationError","sampleLocations","idGenerator","Math","floor","random","validationFieldMap","locationName","locationNickname","locationEmail","automatedEmailOrigin","automatedEmailSalutation","locationUrl","headerColor1","headerColor2","headerLogoBackgroundColor","headerLogoBackgroundAlpha","horizontalLogoVariation","squareLogoVariation","backgroundImage","backgroundBlur","backgroundOverlayAlpha","Locations","props","locationValidation","setState","locationContactInfo","locationEmailSettings","locationBranding","owner","onCloseNewLocationModal","newLocation","id","locationBasicInfo","activeStudents","pastStudents","unactivatedStudents","averageImprovement","averageInitialScore","averageFinalScore","studentsAchievingTargetScore","locations","state","$push","originalLocations","onCloseDropdown","locationToUpdate","filter","location","updatedLocation","$set","updatedLocationIndex","indexOf","$splice","onCloseEditLocationModal","pendingLocationDelete","onCloseDeleteLocationModal","onDeleteLocation","deletedLocation","updatedState","unfilteredLocations","event","index","dropdownIsOpen","onSetDropdown","preventDefault","map","dropdownIndex","handleDropdownClick","onOpenEditLocationModal","onOpenDeleteLocationModal","deleteLocationModalOpen","activeLocation","newLocationModalOpen","editLocationModalOpen","onOpenNewLocationModal","onConfirmDeleteLocation","onSaveNewLocation","onSetLocationValidation","onSaveLocationChanges","mapUserLocations","Component","propTypes","object","number","bool","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport Modal from '../../../../../Modal';\n\nimport NewLocationModal from '../../../../../Location/components/NewLocationModal';\nimport LocationDetailsModal from '../../../../../Location/components/LocationDetailsModal';\nimport LocationRow from './components/LocationRow';\n\nimport { saveNewSuccess as saveLocationSuccess, saveChangesSuccess, saveNewError as saveLocationError } from '../../../../../utils/fieldValidation';\nimport sampleLocations from '../../../../../Location/utils/sampleLocationList';\n\nconst idGenerator = () => Math.floor((Math.random() * 100) + 1);\n\nconst validationFieldMap = {\n  locationName: 'Location Name',\n  locationNickname: 'Location Nickname',\n  locationEmail: 'Location Email',\n  automatedEmailOrigin: 'Automated Email Origin',\n  automatedEmailSalutation: 'Automated Email Salutation',\n  locationUrl: 'Location Url',\n  headerColor1: 'Header Color 1',\n  headerColor2: 'Header Color 2',\n  headerLogoBackgroundColor: 'Header Logo Background Color',\n  headerLogoBackgroundAlpha: 'Header Logo Background Alpha',\n  horizontalLogoVariation: 'Horizonal Logo Variation',\n  squareLogoVariation: 'Square Logo Variation',\n  backgroundImage: 'Background Image',\n  backgroundBlur: 'Background Blur',\n  backgroundOverlayAlpha: 'Background Overlay  Alpha',\n};\n\n// TODO: mock out update/delete action to backend\n// TODO: Will this delete just remove the location from the owner or delete the location altogethe?\nclass Locations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: sampleLocations,\n      dropdownIndex: null,\n      pendingLocationDelete: {},\n      locationValidation: {},\n    };\n  }\n\n  onSetLocationValidation = locationValidation => this.setState({ locationValidation });\n\n  // This function is stubbing out what should happen when the location is saved\n  // We finish by pushing the new location to this page's state\n  onSaveNewLocation = ({ locationContactInfo, locationEmailSettings, locationBranding, owner }) => {\n    this.onCloseNewLocationModal();\n    const newLocation = {\n      id: idGenerator(),\n      owner,\n      locationContactInfo,\n      locationEmailSettings,\n      locationBranding,\n      locationBasicInfo: {\n        activeStudents: 0,\n        pastStudents: 0,\n        unactivatedStudents: 0,\n        averageImprovement: 0,\n        averageInitialScore: 0,\n        averageFinalScore: 0,\n        studentsAchievingTargetScore: 0,\n      },\n    };\n    const locations = update(this.state.locations, {\n      $push: [newLocation],\n    });\n    this.setState({ locations });\n    saveLocationSuccess('location');\n  }\n\n  // IMPORTANT: This update implementation starts by destructuring the three sections of the location being edited in addition to its id\n  // Grabs location to update based on its index in array of current locations\n  // Use immutability-helper splice function to replace previous instace of the location with the incoming updated version\n  onSaveLocationChanges = ({ id, locationContactInfo, locationEmailSettings, locationBranding }) => {\n    const { locations: originalLocations } = this.state;\n    const { onCloseDropdown } = this.props;\n    const locationToUpdate = originalLocations.filter(location => location.id === id)[0];\n    const updatedLocation = update(locationToUpdate, {\n      locationContactInfo: {\n        $set: locationContactInfo,\n      },\n      locationEmailSettings: {\n        $set: locationEmailSettings,\n      },\n      locationBranding: {\n        $set: locationBranding,\n      },\n    });\n    const updatedLocationIndex = originalLocations.indexOf(locationToUpdate);\n    const locations = update(originalLocations, {\n      $splice: [[updatedLocationIndex, 1, updatedLocation]],\n    });\n    saveChangesSuccess();\n    this.setState({ locations });\n    onCloseDropdown();\n    return this.onCloseEditLocationModal();\n  }\n\n  onConfirmDeleteLocation = () => {\n    const { pendingLocationDelete, onCloseDeleteLocationModal } = this.props;\n    this.onDeleteLocation(pendingLocationDelete);\n    onCloseDeleteLocationModal();\n  }\n\n  onDeleteLocation = (deletedLocation) => {\n    const updatedState = update(this.state, {\n      locations: unfilteredLocations => unfilteredLocations.filter(location => location.id !== deletedLocation.id),\n    });\n    this.setState({ locations: updatedState.locations });\n    this.props.onCloseDropdown();\n  }\n\n  handleDropdownClick = (event, index) => {\n    const { dropdownIsOpen, onCloseDropdown, onSetDropdown } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  mapUserLocations = () => this.state.locations.map((location, index) => (\n    <LocationRow\n      key={index}\n      index={index}\n      location={location}\n      dropdownIndex={this.props.dropdownIndex}\n      dropdownIsOpen={this.props.dropdownIsOpen}\n      handleDropdownClick={this.handleDropdownClick}\n      onOpenEditLocationModal={() => this.props.onOpenEditLocationModal(location)}\n      onOpenDeleteModal={() => this.props.onOpenDeleteLocationModal(location)}\n    />\n  ))\n\n  render() {\n    const { deleteLocationModalOpen, activeLocation, newLocationModalOpen, editLocationModalOpen, onOpenNewLocationModal, onCloseNewLocationModal, onCloseEditLocationModal, onCloseDeleteLocationModal } = this.props;\n    return (\n      <React.Fragment>\n        <Modal\n          open={deleteLocationModalOpen}\n          onConfirm={this.onConfirmDeleteLocation}\n          onClose={onCloseDeleteLocationModal}\n          header=\"Are You Sure?\"\n          body=\"Deleting this location will be permanent\"\n        />\n        <NewLocationModal\n          fromInstructorPage\n          open={newLocationModalOpen}\n          onClose={onCloseNewLocationModal}\n          onSaveNewLocation={this.onSaveNewLocation}\n          onSaveLocationError={() => saveLocationError(this.state.locationValidation, validationFieldMap)}\n          onSetLocationValidation={this.onSetLocationValidation}\n        />\n        <LocationDetailsModal\n          location={activeLocation}\n          open={editLocationModalOpen}\n          onClose={onCloseEditLocationModal}\n          onSaveLocationError={() => saveLocationError(this.state.locationValidation, validationFieldMap)}\n          onSetLocationValidation={this.onSetLocationValidation}\n          onSaveLocationChanges={this.onSaveLocationChanges}\n        />\n        <div className=\"card-block\">\n          <h3>Location(s)</h3>\n          {this.mapUserLocations()}\n          <div className=\"add-box\">\n            <div className=\"add-box-holder\">\n              <a\n                href=\"#\"\n                onClick={onOpenNewLocationModal}\n                className=\"btn-floating waves-effect waves-light green lighten-1\"\n              >\n                <i className=\"material-icons\">add</i>\n              </a>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nLocations.propTypes = {\n  activeLocation: PropTypes.object,\n  dropdownIndex: PropTypes.number,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  newLocationModalOpen: PropTypes.bool.isRequired,\n  editLocationModalOpen: PropTypes.bool.isRequired,\n  pendingLocationDelete: PropTypes.object.isRequired,\n  deleteLocationModalOpen: PropTypes.bool.isRequired,\n  onOpenNewLocationModal: PropTypes.func.isRequired,\n  onCloseNewLocationModal: PropTypes.func.isRequired,\n  onOpenEditLocationModal: PropTypes.func.isRequired,\n  onCloseEditLocationModal: PropTypes.func.isRequired,\n  onOpenDeleteLocationModal: PropTypes.func.isRequired,\n  onCloseDeleteLocationModal: PropTypes.func.isRequired,\n};\n\nexport default Locations;\n"]},"metadata":{},"sourceType":"module"}