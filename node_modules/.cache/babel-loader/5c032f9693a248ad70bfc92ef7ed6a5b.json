{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar WorksheetCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WorksheetCard, _React$Component);\n\n  function WorksheetCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WorksheetCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WorksheetCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownClick\", function (event) {\n      var _this$props = _this.props,\n          onSetDropdown = _this$props.onSetDropdown,\n          onCloseDropdown = _this$props.onCloseDropdown,\n          dropdownIsOpen = _this$props.dropdownIsOpen,\n          index = _this$props.index;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editWorksheet\", function () {\n      return console.warn('Pending implementation of edit modal/functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cloneWorksheet\", function () {\n      return console.warn('Pending implementation of clone worksheet functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showOwner\", function () {\n      return console.warn('Pending implementation of show owner functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteWorksheet\", function () {\n      return console.warn('Pending implementation of delete worksheet functionality');\n    });\n\n    return _this;\n  }\n\n  _createClass(WorksheetCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          worksheet = _this$props2.worksheet,\n          selectedWorksheets = _this$props2.selectedWorksheets,\n          handleWorksheetClick = _this$props2.handleWorksheetClick,\n          index = _this$props2.index,\n          dropdownIndex = _this$props2.dropdownIndex,\n          dropdownIsOpen = _this$props2.dropdownIsOpen;\n      var title = worksheet.title,\n          subject = worksheet.subject,\n          problems = worksheet.problems,\n          type = worksheet.type,\n          difficulty = worksheet.difficulty,\n          timeEstimate = worksheet.timeEstimate,\n          source = worksheet.source,\n          classifications = worksheet.classifications;\n      return React.createElement(\"div\", {\n        className: \"card-main-col col s12 m8 l7 xl5\"\n      }, React.createElement(\"div\", {\n        className: \"card-checkbox\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: selectedWorksheets.indexOf(worksheet) !== -1,\n        onChange: function onChange() {\n          return handleWorksheetClick(worksheet);\n        }\n      }), React.createElement(\"div\", {\n        className: \"checkbox-card card-main card-lesson-detail card-assigned card\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel\",\n        style: {\n          backgroundColor: '#666',\n          color: '#fff'\n        }\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"icon-col col s2\"\n      }, React.createElement(\"span\", {\n        className: \"block-icon\"\n      }, React.createElement(\"i\", {\n        className: \"icon-sheets-w\"\n      }))), React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-text\"\n      }, React.createElement(\"div\", {\n        className: \"text-small\"\n      }, \"Worksheet (\", subject, \")\"), React.createElement(\"div\", {\n        className: \"text-large\"\n      }, title))), React.createElement(\"div\", {\n        className: \"align-top col s1 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"dropdown-block col\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger btn\",\n        \"data-target\": \"dropdown_worksheet_01\",\n        onClick: this.handleDropdownClick\n      }, React.createElement(\"i\", {\n        className: \"material-icons dots-icon\"\n      }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? React.createElement(\"ul\", {\n        id: \"dropdown_worksheet_01\",\n        className: \"dropdown-content dropdown-wide\",\n        style: {\n          display: 'block',\n          transformOrigin: '0px 0px 0px',\n          opacity: '1',\n          transform: 'scaleX(1) scaleY(1)'\n        }\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.editWorksheet,\n        className: \"modal-trigger link-block\"\n      }, \"Edit\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.cloneWorksheet\n      }, \"Clone\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.showOwner\n      }, \"Show Owner\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.deleteWorksheet\n      }, \"Delete\"))) : null)))), React.createElement(\"div\", {\n        className: \"card-top-block\"\n      }, React.createElement(\"div\", {\n        className: \"d-flex row mb-0\"\n      }, React.createElement(\"div\", {\n        className: \"left-col col s6\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Problem Type:\"), React.createElement(\"dd\", null, type))), React.createElement(\"div\", {\n        className: \"right-col col s6 right-align\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Di\\uFB03culty:\"), React.createElement(\"dd\", null, difficulty)))))), React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"chart-container\"\n      }, React.createElement(\"div\", {\n        className: \"chart-holder\"\n      }, React.createElement(\"span\", {\n        className: \"svg-curved-bar\",\n        \"data-values\": \"{\\\"from\\\": 0, \\\"to\\\": 100, \\\"current\\\": 0}\",\n        \"data-duration\": \"1\"\n      }, React.createElement(\"svg\", {\n        width: \"110px\",\n        height: \"110px\",\n        viewBox: \" 0 0 110 110\"\n      }, React.createElement(\"path\", {\n        fill: \"none\",\n        style: {\n          strokeWidth: '22',\n          stroke: '#eaeaea'\n        },\n        d: \"M 14.151810947292809 71.35314804905443 A 44 44 0 1 1 95.8481890527072 71.35314804905443\"\n      }), React.createElement(\"path\", {\n        \"data-dinamic\": true,\n        fill: \"none\",\n        style: {\n          strokeWidth: '22',\n          stroke: '#31837a'\n        },\n        d: \"M 14.151810947292809 71.35314804905443 A 44 44 0 0 1 14.151810947292809 71.35314804905443\"\n      }))), React.createElement(\"span\", {\n        className: \"chart-value\",\n        style: {\n          backgroundColor: '#4d4d4d'\n        }\n      })), React.createElement(\"div\", {\n        className: \"chart-description\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Time Est:\"), React.createElement(\"dd\", null, timeEstimate, \" min\")), React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Problems:\"), React.createElement(\"dd\", null, problems)))), React.createElement(\"div\", {\n        className: \"card-text\"\n      }, React.createElement(\"dl\", {\n        className: \"dl-horizontal\"\n      }, React.createElement(\"dt\", null, \"Worksheet Source:\"), React.createElement(\"dd\", null, source))), React.createElement(\"div\", {\n        className: \"card-inner-row\"\n      }, React.createElement(\"div\", {\n        className: \"row-holder\"\n      }, React.createElement(\"ul\", {\n        className: \"classification-list\"\n      }, classifications.length ? classifications.map(function (classification) {\n        return React.createElement(\"li\", {\n          key: classification,\n          className: \"class-box\"\n        }, classification);\n      }) : React.createElement(\"li\", {\n        className: \"empty-box\"\n      }, \"no classi\\uFB01cation\"))))))));\n    }\n  }]);\n\n  return WorksheetCard;\n}(React.Component);\n\nWorksheetCard.propTypes = {\n  index: PropTypes.number,\n  dropdownIndex: PropTypes.number,\n  worksheet: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  selectedWorksheets: PropTypes.array.isRequired,\n  handleWorksheetClick: PropTypes.func.isRequired\n};\nexport default WorksheetCard;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Dashboard/components/Modals/AssignWorksheetModal/components/WorksheetCard/index.js"],"names":["React","PropTypes","WorksheetCard","event","props","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","console","warn","worksheet","selectedWorksheets","handleWorksheetClick","dropdownIndex","title","subject","problems","type","difficulty","timeEstimate","source","classifications","indexOf","backgroundColor","color","handleDropdownClick","display","transformOrigin","opacity","transform","editWorksheet","cloneWorksheet","showOwner","deleteWorksheet","strokeWidth","stroke","length","map","classification","Component","propTypes","number","object","isRequired","func","bool","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass WorksheetCard extends React.Component {\n  handleDropdownClick = (event) => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  }\n\n  editWorksheet = () => console.warn('Pending implementation of edit modal/functionality')\n  cloneWorksheet = () => console.warn('Pending implementation of clone worksheet functionality')\n  showOwner = () => console.warn('Pending implementation of show owner functionality')\n  deleteWorksheet = () => console.warn('Pending implementation of delete worksheet functionality')\n\n  render() {\n    const { worksheet, selectedWorksheets, handleWorksheetClick, index, dropdownIndex, dropdownIsOpen } = this.props;\n    const { title, subject, problems, type, difficulty, timeEstimate, source, classifications } = worksheet;\n    return (\n      <div className=\"card-main-col col s12 m8 l7 xl5\">\n        <div className=\"card-checkbox\">\n          <input\n            type=\"checkbox\"\n            checked={selectedWorksheets.indexOf(worksheet) !== -1}\n            onChange={() => handleWorksheetClick(worksheet)}\n          />\n          <div className=\"checkbox-card card-main card-lesson-detail card-assigned card\">\n            <div className=\"card-panel\" style={{ backgroundColor: '#666', color: '#fff' }}>\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s2\">\n                  <span className=\"block-icon\">\n                    <i className=\"icon-sheets-w\"></i>\n                  </span>\n                </div>\n                <div className=\"col s9\">\n                  <div className=\"card-panel-text\">\n                    <div className=\"text-small\">Worksheet ({subject})</div>\n                    <div className=\"text-large\">{title}</div>\n                  </div>\n                </div>\n                <div className=\"align-top col s1 right-align\">\n                  <div className=\"row icons-row\">\n                    <div className=\"dropdown-block col\">\n                      <a\n                        href='#'\n                        className='dropdown-trigger btn'\n                        data-target='dropdown_worksheet_01'\n                        onClick={this.handleDropdownClick}\n                      >\n                        <i className=\"material-icons dots-icon\">more_vert</i>\n                      </a>\n                      <If condition={dropdownIsOpen && dropdownIndex === index}>\n                        <ul\n                          id='dropdown_worksheet_01'\n                          className='dropdown-content dropdown-wide'\n                          style={{ display: 'block', transformOrigin: '0px 0px 0px', opacity: '1', transform: 'scaleX(1) scaleY(1)' }}\n                        >\n                          <li><a href=\"#\" onClick={this.editWorksheet} className=\"modal-trigger link-block\">Edit</a></li>\n                          <li><a href=\"#\" onClick={this.cloneWorksheet}>Clone</a></li>\n                          <li><a href=\"#\" onClick={this.showOwner}>Show Owner</a></li>\n                          <li><a href=\"#\" onClick={this.deleteWorksheet}>Delete</a></li>\n                        </ul>\n                      </If>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-top-block\">\n                <div className=\"d-flex row mb-0\">\n                  <div className=\"left-col col s6\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Problem Type:</dt>\n                      <dd>{type}</dd>\n                    </dl>\n                  </div>\n                  <div className=\"right-col col s6 right-align\">\n                    <dl className=\"dl-horizontal\">\n                      <dt>Diﬃculty:</dt>\n                      <dd>{difficulty}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"chart-container\">\n                <div className=\"chart-holder\">\n                  <span className=\"svg-curved-bar\" data-values='{\"from\": 0, \"to\": 100, \"current\": 0}' data-duration=\"1\">\n                    {/* <!-- do not change path attribute \"d\" !!! --> */}\n                    <svg  width=\"110px\" height=\"110px\" viewBox=\" 0 0 110 110\">\n                      <path fill=\"none\" style={{ strokeWidth: '22', stroke: '#eaeaea' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 1 1 95.8481890527072 71.35314804905443\"></path>\n                      <path data-dinamic fill=\"none\" style={{ strokeWidth: '22', stroke: '#31837a' }} d=\"M 14.151810947292809 71.35314804905443 A 44 44 0 0 1 14.151810947292809 71.35314804905443\"></path>\n                    </svg>\n                  </span>\n                  <span className=\"chart-value\" style={{ backgroundColor: '#4d4d4d' }}></span>\n                </div>\n                <div className=\"chart-description\">\n                  <dl className=\"dl-horizontal\">\n                    <dt>Time Est:</dt>\n                    <dd>{timeEstimate} min</dd>\n                  </dl>\n                  <dl className=\"dl-horizontal\">\n                    <dt>Problems:</dt>\n                    <dd>{problems}</dd>\n                  </dl>\n                </div>\n              </div>\n              <div className=\"card-text\">\n                <dl className=\"dl-horizontal\">\n                  <dt>Worksheet Source:</dt>\n                  <dd>{source}</dd>\n                </dl>\n              </div>\n              <div className=\"card-inner-row\">\n                <div className=\"row-holder\">\n                  <ul className=\"classification-list\">\n                    <Choose>\n                      <When condition={classifications.length}>\n                        {classifications.map(classification => (\n                          <li key={classification} className=\"class-box\">{classification}</li>\n                        ))}\n                      </When>\n                      <Otherwise>\n                        <li className=\"empty-box\">no classiﬁcation</li>\n                      </Otherwise>\n                    </Choose>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nWorksheetCard.propTypes = {\n  index: PropTypes.number,\n  dropdownIndex: PropTypes.number,\n  worksheet: PropTypes.object.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  selectedWorksheets: PropTypes.array.isRequired,\n  handleWorksheetClick: PropTypes.func.isRequired,\n}\n\nexport default WorksheetCard;\n"]},"metadata":{},"sourceType":"module"}