{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FilterSection/index.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport { makeSelectUnitFilterOptions } from '../../../index/selectors';\nimport { setUnitFilterOptions, fetchUnits, fetchSubjects } from '../../../index/actions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      const {\n        onFetchUnits,\n        onFetchSubjects\n      } = this.props;\n      onFetchUnits();\n      onFetchSubjects();\n    });\n\n    _defineProperty(this, \"componentWillReceiveProps\", nextProps => {\n      if (nextProps.unitOptions.length !== 0) {\n        const {\n          unitOptions: newOptions\n        } = nextProps;\n        this.setState({\n          unitOptions: this.state.unitOptions.concat(newOptions)\n        });\n      }\n    });\n\n    _defineProperty(this, \"onToggleShowFilters\", () => this.setState(({\n      open\n    }) => ({\n      open: !open\n    })));\n\n    _defineProperty(this, \"handleSortChange\", event => {\n      const {\n        onSetSort\n      } = this.props;\n      this.setState({\n        sort: event\n      });\n      onSetSort(event);\n    });\n\n    _defineProperty(this, \"submitNameFilter\", () => {\n      const {\n        onSetFilteredState,\n        onUnsetFilteredState\n      } = this.props;\n      const {\n        nameFilter\n      } = this.state;\n\n      if (nameFilter === '') {\n        onUnsetFilteredState(nameFilter);\n      }\n\n      const transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n      onSetFilteredState(transformedName);\n    });\n\n    _defineProperty(this, \"handleUnitChange\", event => {\n      const {\n        onSetUnitFilter\n      } = this.props;\n      this.setState({\n        unitFilter: event\n      });\n      onSetUnitFilter(event);\n    });\n\n    _defineProperty(this, \"clearAllFilters\", () => {\n      const {\n        onClearFilters\n      } = this.props;\n      this.setState({\n        sort: {},\n        nameFilter: \"\",\n        unitFilter: \"\"\n      });\n      onClearFilters();\n    });\n\n    _defineProperty(this, \"handleFilterChange\", (event, name) => {\n      const {\n        onUnsetFilteredState,\n        onSetFilteredState,\n        onSetUnitFilter\n      } = this.props;\n      const value = event.target ? event.target.value : event;\n      const updatedState = update(this.state, {\n        $merge: {\n          [name]: value\n        }\n      });\n      this.setState(updatedState);\n\n      if (name === 'nameFilter') {\n        if (event === '') {\n          return onUnsetFilteredState();\n        }\n\n        return onSetFilteredState(event.target.value);\n      }\n\n      if (name === 'unitFilter') {\n        if (event === \"\") {\n          return onUnsetFilteredState();\n        }\n\n        return onSetUnitFilter(event);\n      }\n    });\n\n    this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\",\n      unitOptions: [{\n        label: \"Any\",\n        value: \"\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      open,\n      sort,\n      nameFilter,\n      unitFilter\n    } = this.state;\n    const {\n      currentView,\n      dueDateFilters,\n      flagFilters,\n      subjectFilters,\n      scoreStatusFilters,\n      onChangeView,\n      handleFilterClick\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"filter-form-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"collapsible expandable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"collapsible-body\",\n      style: open ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"filter-form_checkbox-list-holder justify-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"reading\",\n      checked: subjectFilters.indexOf('Reading') !== -1,\n      onChange: () => handleFilterClick(\"subject\", 'Reading'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"reading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Reading\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"writing\",\n      checked: subjectFilters.indexOf('Writing and Language') !== -1,\n      onChange: () => handleFilterClick(\"subject\", 'Writing and Language'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"writing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Writing\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"math\",\n      checked: subjectFilters.indexOf('Math') !== -1,\n      onChange: () => handleFilterClick(\"subject\", 'Math'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"math\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Math\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"great\",\n      checked: scoreStatusFilters.indexOf('great') !== -1,\n      onChange: () => handleFilterClick(\"score\", 'great'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"great\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Great\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"aboveAverage\",\n      checked: scoreStatusFilters.indexOf('above average') !== -1,\n      onChange: () => handleFilterClick(\"score\", 'above average'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"aboveAverage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Above Average\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"belowAverage\",\n      checked: scoreStatusFilters.indexOf('below average') !== -1,\n      onChange: () => handleFilterClick(\"score\", 'below average'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"belowAverage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Below Average\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"poor\",\n      checked: scoreStatusFilters.indexOf('poor') !== -1,\n      onChange: () => handleFilterClick(\"score\", 'poor'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"poor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Poor\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"hasReviewFlags\",\n      checked: flagFilters.indexOf(\"true\") !== -1,\n      onChange: () => handleFilterClick('flags', 'true'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"hasReviewFlags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Has Review Flags\"))), __jsx(\"ul\", {\n      className: \"filter-form_checkbox-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"dueToday\",\n      checked: dueDateFilters.indexOf('dueToday') !== -1,\n      onChange: () => handleFilterClick('dueDate', 'dueToday'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"dueToday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Due Today\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"dueNextSession\",\n      checked: dueDateFilters.indexOf('dueNextSession') !== -1,\n      onChange: () => handleFilterClick('dueDate', 'dueNextSession'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"dueNextSession\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Due By Next Session\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"overdue\",\n      checked: dueDateFilters.indexOf('overdue') !== -1,\n      onChange: () => handleFilterClick('dueDate', 'overdue'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"overdue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Overdue\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"noDueDate\",\n      checked: dueDateFilters.indexOf('noDueDate') !== -1,\n      onChange: () => handleFilterClick('dueDate', 'noDueDate'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"noDueDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"noDueDate\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: \"unAssigned\",\n      checked: dueDateFilters.indexOf('unAssigned') !== -1,\n      onChange: () => handleFilterClick('dueDate', 'unAssigned'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"unAssigned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"UnAssigned\")))), __jsx(\"div\", {\n      className: \"d-flex row mb-0 justify-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"search-field input-field\",\n      style: {\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"search\",\n      id: \"name_search\",\n      className: \"input-control  validate\",\n      name: \"nameFilter\",\n      value: nameFilter,\n      onChange: event => this.handleFilterChange(event, 'nameFilter'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      onClick: this.submitNameFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      className: nameFilter.length ? \"label active\" : \"label\",\n      htmlFor: \"name_search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Search\"))), __jsx(\"div\", {\n      className: \"col s12 m3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"input-field\",\n      style: {\n        marginTop: '-7px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, __jsx(Dropdown, {\n      value: getValueFromState(unitFilter, this.state.unitOptions),\n      onChange: event => this.handleUnitChange(event),\n      options: this.state.unitOptions,\n      label: \"Unit\",\n      stateKey: \"unit\",\n      dropdownKey: \"unit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }))))), __jsx(\"div\", {\n      className: \"row mb-0 d-flex align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, __jsx(Dropdown, {\n      value: getValueFromState(sort, lessonSortOptions),\n      onChange: event => this.handleSortChange(event),\n      options: lessonSortOptions,\n      label: \"Sort by\",\n      stateKey: \"sort\",\n      dropdownKey: \"sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }))))), __jsx(\"div\", {\n      className: \"switcher-block col s12 l4\",\n      style: {\n        marginTop: '14px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"view-switcher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"switcher center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      \"data-view\": \"view-full\",\n      className: currentView === 'full' ? 'active' : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => onChangeView('full'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Full View\")), __jsx(\"li\", {\n      \"data-view\": \"view-list\",\n      className: currentView === 'list' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })))), __jsx(\"div\", {\n      className: \"col s12 l4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"option-filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"option-item clear\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: this.clearAllFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Clear Filters\")), __jsx(\"div\", {\n      className: \"option-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"collapsible-header\",\n      onClick: this.onToggleShowFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"open-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, open ? 'Hide Filters' : 'Open Filters')))))))));\n  }\n\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  scoreStatusFilters: PropTypes.array.isRequired,\n  flagFilters: PropTypes.array.isRequired,\n  dueDateFilters: PropTypes.array.isRequired,\n  onSetUnitFilter: PropTypes.func.isRequired\n};\nconst mapStateToProps = createStructuredSelector({\n  unitOptions: makeSelectUnitFilterOptions()\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUnitFilterOptions: options => dispatch(setUnitFilterOptions(options)),\n  onFetchUnits: () => dispatch(fetchUnits()),\n  onFetchSubjects: () => dispatch(fetchSubjects())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(FilterSection);","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailLessonList/components/FilterSection/index.js"],"names":["React","update","PropTypes","connect","createStructuredSelector","compose","Dropdown","getValueFromState","lessonSortOptions","makeSelectUnitFilterOptions","setUnitFilterOptions","fetchUnits","fetchSubjects","FilterSection","Component","constructor","props","onFetchUnits","onFetchSubjects","nextProps","unitOptions","length","newOptions","setState","state","concat","open","event","onSetSort","sort","onSetFilteredState","onUnsetFilteredState","nameFilter","transformedName","replace","toLowerCase","onSetUnitFilter","unitFilter","onClearFilters","name","value","target","updatedState","$merge","label","render","currentView","dueDateFilters","flagFilters","subjectFilters","scoreStatusFilters","onChangeView","handleFilterClick","display","indexOf","marginTop","handleFilterChange","submitNameFilter","handleUnitChange","handleSortChange","clearAllFilters","onToggleShowFilters","propTypes","string","isRequired","func","array","mapStateToProps","mapDispatchToProps","dispatch","onSetUnitFilterOptions","options","withConnect"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport lessonSortOptions from '../../utils/lessonSortOptions';\nimport { makeSelectUnitFilterOptions } from '../../../index/selectors';\nimport { setUnitFilterOptions, fetchUnits, fetchSubjects } from '../../../index/actions';\n\nclass FilterSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      sort: {},\n      nameFilter: \"\",\n      unitFilter: \"\",\n      unitOptions: [{\n        label: \"Any\",\n        value: \"\",\n      }],\n    };\n  }\n\n  componentDidMount = () => {\n    const { onFetchUnits, onFetchSubjects } = this.props;\n    onFetchUnits();\n    onFetchSubjects();\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.unitOptions.length !== 0) {\n      const { unitOptions: newOptions } = nextProps;\n      this.setState({\n        unitOptions: this.state.unitOptions.concat(newOptions),\n      });\n    }\n  }\n\n  onToggleShowFilters = () => this.setState(({ open }) => ({ open: !open }))\n  handleSortChange = (event) => {\n    const { onSetSort } = this.props;\n    this.setState({ sort: event });\n    onSetSort(event);\n  }\n\n  submitNameFilter = () => {\n    const { onSetFilteredState, onUnsetFilteredState } = this.props;\n    const { nameFilter } = this.state;\n    if (nameFilter === '') {\n      onUnsetFilteredState(nameFilter);\n    }\n    const transformedName = nameFilter.replace(/\\s/g, \"\").toLowerCase();\n    onSetFilteredState(transformedName);\n  }\n\n  handleUnitChange = (event) => {\n    const { onSetUnitFilter } = this.props;\n    this.setState({ unitFilter: event });\n    onSetUnitFilter(event);\n  }\n\n  clearAllFilters = () => {\n    const { onClearFilters } = this.props;\n    this.setState({ sort: {}, nameFilter: \"\", unitFilter: \"\" });\n    onClearFilters();\n  }\n  // eslint-disable-next-line consistent-return\n  handleFilterChange = (event, name) => {\n    const { onUnsetFilteredState, onSetFilteredState, onSetUnitFilter } = this.props;\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'nameFilter') {\n      if (event === '') {\n        return onUnsetFilteredState();\n      }\n      return onSetFilteredState(event.target.value);\n    }\n    if (name === 'unitFilter') {\n      if (event === \"\") {\n        return onUnsetFilteredState();\n      }\n      return onSetUnitFilter(event);\n    }\n  }\n  render() {\n    const { open, sort, nameFilter, unitFilter } = this.state;\n    const { currentView, dueDateFilters, flagFilters, subjectFilters, scoreStatusFilters, onChangeView, handleFilterClick } = this.props;\n    return (\n      <div className=\"filter-form-holder\">\n        <ul className=\"collapsible expandable\">\n          <li>\n            <div className=\"collapsible-body\" style={open ? { display: 'block' } : { display: 'none' }}>\n              <div className=\"filter-form_checkbox-list-holder justify-center\">\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      checked={subjectFilters.indexOf('Reading') !== -1}\n                      onChange={() => handleFilterClick(\"subject\", 'Reading')}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"writing\"\n                      checked={subjectFilters.indexOf('Writing and Language') !== -1}\n                      onChange={() => handleFilterClick(\"subject\", 'Writing and Language')}\n                    />\n                    <label htmlFor=\"writing\">Writing</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"math\"\n                      checked={subjectFilters.indexOf('Math') !== -1}\n                      onChange={() => handleFilterClick(\"subject\", 'Math')}\n                    />\n                    <label htmlFor=\"math\">Math</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"great\"\n                      checked={scoreStatusFilters.indexOf('great') !== -1}\n                      onChange={() => handleFilterClick(\"score\", 'great')}\n                    />\n                    <label htmlFor=\"great\">Great</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"aboveAverage\"\n                      checked={scoreStatusFilters.indexOf('above average') !== -1}\n                      onChange={() => handleFilterClick(\"score\", 'above average')}\n                    />\n                    <label htmlFor=\"aboveAverage\">Above Average</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"belowAverage\"\n                      checked={scoreStatusFilters.indexOf('below average') !== -1}\n                      onChange={() => handleFilterClick(\"score\", 'below average')}\n                    />\n                    <label htmlFor=\"belowAverage\">Below Average</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"poor\"\n                      checked={scoreStatusFilters.indexOf('poor') !== -1}\n                      onChange={() => handleFilterClick(\"score\", 'poor')}\n                    />\n                    <label htmlFor=\"poor\">Poor</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"hasReviewFlags\"\n                      checked={flagFilters.indexOf(\"true\") !== -1}\n                      onChange={() => handleFilterClick('flags', 'true')}\n                    />\n                    <label htmlFor=\"hasReviewFlags\">Has Review Flags</label>\n                  </li>\n                </ul>\n                <ul className=\"filter-form_checkbox-list\">\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueToday\"\n                      checked={dueDateFilters.indexOf('dueToday') !== -1}\n                      onChange={() => handleFilterClick('dueDate', 'dueToday')}\n                    />\n                    <label htmlFor=\"dueToday\">Due Today</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"dueNextSession\"\n                      checked={dueDateFilters.indexOf('dueNextSession') !== -1}\n                      onChange={() => handleFilterClick('dueDate', 'dueNextSession')}\n                    />\n                    <label htmlFor=\"dueNextSession\">Due By Next Session</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"overdue\"\n                      checked={dueDateFilters.indexOf('overdue') !== -1}\n                      onChange={() => handleFilterClick('dueDate', 'overdue')}\n                    />\n                    <label htmlFor=\"overdue\">Overdue</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"noDueDate\"\n                      checked={dueDateFilters.indexOf('noDueDate') !== -1}\n                      onChange={() => handleFilterClick('dueDate', 'noDueDate')}\n                    />\n                    <label htmlFor=\"noDueDate\">noDueDate</label>\n                  </li>\n                  <li>\n                    <input\n                      type=\"checkbox\"\n                      id=\"unAssigned\"\n                      checked={dueDateFilters.indexOf('unAssigned') !== -1}\n                      onChange={() => handleFilterClick('dueDate', 'unAssigned')}\n                    />\n                    <label htmlFor=\"unAssigned\">UnAssigned</label>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"d-flex row mb-0 justify-center\">\n                <div className=\"col s12 m3\">\n                  <div className=\"search-field input-field\" style={{ marginTop: '30px' }}>\n                    <input\n                      type=\"search\"\n                      id=\"name_search\"\n                      className=\"input-control  validate\"\n                      name=\"nameFilter\"\n                      value={nameFilter}\n                      onChange={(event) => this.handleFilterChange(event, 'nameFilter')}\n                    />\n                    <button\n                      type=\"submit\"\n                      className=\"search-button\"\n                      onClick={this.submitNameFilter}\n                    ><i className=\"icon-search\"></i></button>\n                    <label className={nameFilter.length ? \"label active\" : \"label\"} htmlFor=\"name_search\">Search</label>\n                  </div>\n                </div>\n                <div className=\"col s12 m3\">\n                  <div className=\"input-field\" style={{ marginTop: '-7px' }}>\n                    <Dropdown\n                      value={getValueFromState(unitFilter, this.state.unitOptions)}\n                      onChange={(event) => this.handleUnitChange(event)}\n                      options={this.state.unitOptions}\n                      label=\"Unit\"\n                      stateKey=\"unit\"\n                      dropdownKey=\"unit\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mb-0 d-flex align-items-center\">\n              <div className=\"col s12 l4\">\n                <div className=\"row mb-0\">\n\n                  <div className=\"col s12 m12\">\n                    <div className=\"input-field\">\n                      <Dropdown\n                        value={getValueFromState(sort, lessonSortOptions)}\n                        onChange={(event) => this.handleSortChange(event)}\n                        options={lessonSortOptions}\n                        label=\"Sort by\"\n                        stateKey=\"sort\"\n                        dropdownKey=\"sort\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"switcher-block col s12 l4\" style={{ marginTop: '14px' }}>\n                <div className=\"view-switcher\">\n                  <ul className=\"switcher center-align\">\n                    <li\n                      data-view=\"view-full\"\n                      className={currentView === 'full' ? 'active' : \"\"}\n                    >\n                      <a href=\"#\" onClick={() => onChangeView('full')}>Full View</a>\n                    </li>\n                    <li\n                      data-view=\"view-list\"\n                      className={currentView === 'list' ? 'active' : ''}\n                    >\n                      {/* @TODO student lesson listview commented out for now */}\n                      {/* <a href=\"#\" onClick={() => onChangeView('list')}>List View</a> */}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"col s12 l4\">\n                <div className=\"option-filters\">\n                  <div className=\"option-item clear\"><a href=\"#\" onClick={this.clearAllFilters}>Clear Filters</a></div>\n                  <div className=\"option-item\">\n                    <span\n                      className=\"collapsible-header\"\n                      onClick={this.onToggleShowFilters}\n                    >\n                      <span className=\"open-text\">{open ? 'Hide Filters' : 'Open Filters'}</span>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nFilterSection.propTypes = {\n  currentView: PropTypes.string.isRequired,\n  onChangeView: PropTypes.func.isRequired,\n  handleFilterClick: PropTypes.func.isRequired,\n  onClearFilters: PropTypes.func.isRequired,\n  onSetFilteredState: PropTypes.func.isRequired,\n  onUnsetFilteredState: PropTypes.func.isRequired,\n  onSetSort: PropTypes.func.isRequired,\n  subjectFilters: PropTypes.array.isRequired,\n  scoreStatusFilters: PropTypes.array.isRequired,\n  flagFilters: PropTypes.array.isRequired,\n  dueDateFilters: PropTypes.array.isRequired,\n  onSetUnitFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  unitOptions: makeSelectUnitFilterOptions(),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSetUnitFilterOptions: options => dispatch(setUnitFilterOptions(options)),\n  onFetchUnits: () => dispatch(fetchUnits()),\n  onFetchSubjects: () => dispatch(fetchSubjects()),\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(FilterSection);\n"]},"metadata":{},"sourceType":"module"}