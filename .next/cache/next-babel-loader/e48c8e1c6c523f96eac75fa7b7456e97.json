{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TableHeader from './components/TableHeader';\nimport formatTimeEstimate from '../../../../../utils/formatTimeEstimate';\nimport statusColorMap from '../../utils/statusColorMap';\n\nclass ListView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetDropdown\", dropdownIndex => this.setState({\n      dropdownIndex,\n      dropdownIsOpen: true\n    }));\n\n    _defineProperty(this, \"onCloseDropdown\", () => this.setState({\n      dropdownIsOpen: false\n    }));\n\n    _defineProperty(this, \"handleDropdownClick\", (event, index) => {\n      const {\n        dropdownIsOpen\n      } = this.state;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return this.onCloseDropdown();\n      }\n\n      return this.onSetDropdown(index);\n    });\n\n    _defineProperty(this, \"mapWorksheetRows\", () => {\n      const {\n        worksheets,\n        onToggleDetailModalOpen\n      } = this.props;\n      const {\n        dropdownIndex,\n        dropdownIsOpen\n      } = this.state;\n      return worksheets.map((worksheet, index) => {\n        const {\n          disabled,\n          worksheetName,\n          score,\n          status,\n          problems,\n          timeEstimate,\n          assignDate,\n          dueDate,\n          completed,\n          flags\n        } = worksheet;\n        return __jsx(\"div\", {\n          className: disabled ? 'card card-disabled list-table-row' : 'card list-table-row',\n          key: worksheet.id\n        }, __jsx(\"div\", {\n          className: \"list-table-cell icon-cell\"\n        }, __jsx(\"span\", {\n          className: \"block-icon\"\n        }, __jsx(\"i\", {\n          className: \"icon-sheets-w\"\n        }))), __jsx(\"div\", {\n          className: \"list-table-cell name-cell\"\n        }, __jsx(\"div\", {\n          className: \"card-panel-text truncate\"\n        }, __jsx(\"div\", {\n          className: \"text-large truncate\"\n        }, worksheetName))), __jsx(\"div\", {\n          className: \"list-table-cell graph-cell\"\n        }, score && __jsx(\"span\", {\n          className: `chart-bar ${statusColorMap[status]} white-text`\n        }, score, \"%\")), __jsx(\"div\", {\n          className: \"list-table-cell description-cell\"\n        }, problems), __jsx(\"div\", {\n          className: \"list-table-cell time-cell\"\n        }, formatTimeEstimate(timeEstimate)), __jsx(\"div\", {\n          className: \"list-table-cell date-cell\"\n        }, __jsx(\"time\", {\n          dateTime: \"2019-01-27\"\n        }, assignDate)), __jsx(\"div\", {\n          className: \"list-table-cell date-cell\"\n        }, __jsx(\"time\", {\n          dateTime: \"2019-01-27\"\n        }, dueDate)), __jsx(\"div\", {\n          className: \"list-table-cell completed-cell\"\n        }, completed && __jsx(React.Fragment, null, completed, \" of \", problems)), __jsx(\"div\", {\n          className: \"list-table-cell flags-cell\"\n        }, flags.length > 0 && __jsx(\"span\", {\n          className: \"badge-rounded-xs badge red darken-2 white-text\"\n        }, __jsx(\"b\", {\n          className: \"badge-text\"\n        }, flags.length), \" \", __jsx(\"i\", {\n          className: \"icon-flag\"\n        }))), __jsx(\"div\", {\n          className: \"list-table-cell status-cell\"\n        }, __jsx(\"span\", {\n          className: `badge badge-rounded-md ${statusColorMap[status]} white-text`\n        }, status)), __jsx(\"div\", {\n          className: \"list-table-cell drop-cell\"\n        }, __jsx(\"div\", {\n          className: \"dropdown-block\"\n        }, __jsx(\"a\", {\n          href: \"#\",\n          \"data-target\": \"dropdown01\",\n          className: \"dropdown-trigger btn\",\n          onClick: event => this.handleDropdownClick(event, index)\n        }, __jsx(\"i\", {\n          className: \"material-icons dots-icon\"\n        }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n          id: \"dropdown01\",\n          className: \"dropdown-content dropdown-wide\",\n          style: {\n            display: 'block',\n            opacity: '1',\n            transform: 'scaleX(1) scaleY(1)'\n          }\n        }, __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#\",\n          className: \"modal-trigger link-block\",\n          onClick: () => onToggleDetailModalOpen(index)\n        }, \"View Details\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Dismiss Flags\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\"\n        }, \"Reset\")), __jsx(\"li\", null, __jsx(\"a\", {\n          href: \"#!\",\n          className: \"link-delete\"\n        }, \"Delete\"))) : null)));\n      });\n    });\n\n    this.state = {\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    };\n  }\n\n  render() {\n    const {\n      worksheets\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"content-section\"\n    }, __jsx(\"div\", {\n      className: \"container-md\"\n    }, __jsx(\"div\", {\n      className: \"result-row center-align\"\n    }, __jsx(\"b\", {\n      className: \"result\"\n    }, \" - \", worksheets.length, \" results -\")), __jsx(\"div\", {\n      className: \"list-view-section\"\n    }, __jsx(\"div\", {\n      className: \"list-table\"\n    }, __jsx(TableHeader, null), __jsx(\"div\", {\n      className: \"list-table-body\"\n    }, this.mapWorksheetRows()))))));\n  }\n\n}\n\nexport default ListView;","map":null,"metadata":{},"sourceType":"module"}