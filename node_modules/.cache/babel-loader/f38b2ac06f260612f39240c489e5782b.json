{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport Portal from '../../Portal';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport QuestionModal from './components/QuestionModal';\nimport sampleQuestions from './utils/sampleQuestions';\n\nvar LessonDetailAnswerSheet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LessonDetailAnswerSheet, _React$Component);\n\n  function LessonDetailAnswerSheet(props) {\n    var _this;\n\n    _classCallCheck(this, LessonDetailAnswerSheet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LessonDetailAnswerSheet).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleQuestionModal\", function () {\n      var selectedQuestion = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      return _this.setState(function (_ref) {\n        var questionModalOpen = _ref.questionModalOpen;\n        return {\n          questionModalOpen: !questionModalOpen,\n          selectedQuestion: selectedQuestion\n        };\n      });\n    });\n\n    _this.state = {\n      selectedQuestion: {},\n      questionModalOpen: false,\n      answerSheetComplete: true,\n      questions: sampleQuestions\n    };\n    return _this;\n  }\n\n  _createClass(LessonDetailAnswerSheet, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          questionModalOpen = _this$state.questionModalOpen,\n          selectedQuestion = _this$state.selectedQuestion,\n          questions = _this$state.questions,\n          answerSheetComplete = _this$state.answerSheetComplete;\n      return React.createElement(React.Fragment, null, React.createElement(QuestionModal, {\n        open: questionModalOpen,\n        question: selectedQuestion,\n        onCloseModal: this.onToggleQuestionModal\n      }), React.createElement(Portal, {\n        selector: \"#modal\"\n      }, React.createElement(\"div\", {\n        className: \"wrapper modal\",\n        style: {\n          zIndex: '1003',\n          display: 'block',\n          position: 'absolute',\n          top: '0'\n        }\n      }, React.createElement(\"div\", {\n        className: \"header-row card-panel light-blue lighten-1 white-text\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"icon-col col s1\"\n      }, React.createElement(\"i\", {\n        className: \"icon-books\"\n      })), React.createElement(\"div\", {\n        className: \"col s9\"\n      }, React.createElement(\"div\", {\n        className: \"card-panel-text center-align\"\n      }, React.createElement(\"div\", {\n        className: \"text-small\"\n      }, \"Reading Unit #2\"), React.createElement(\"div\", {\n        className: \"text-large\"\n      }, \"Read Something\"))), React.createElement(\"div\", {\n        className: \"col s1 right-align\"\n      }, React.createElement(\"div\", {\n        className: \"row icons-row\"\n      }, \"\\xA0\"))), React.createElement(\"div\", {\n        className: \"header-row-block card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"col s3\"\n      }, React.createElement(\"span\", {\n        className: \"meta-num\"\n      }, \"p.128\")), React.createElement(\"div\", {\n        className: \"col s9 right-align\"\n      }, React.createElement(\"div\", null, React.createElement(\"span\", {\n        className: \"name\"\n      }, \"Arnold Studently\")), React.createElement(\"div\", null, React.createElement(\"time\", {\n        className: \"date\",\n        dateTime: \"2018-11-18T20:43\",\n        style: {\n          color: '#006837'\n        }\n      }, \"Completed 11/18/18 at 8:43 PM (late)\"))))), React.createElement(\"div\", {\n        className: \"nav-header nav-header-special white\"\n      }, React.createElement(\"div\", {\n        className: \"nav-additional\"\n      }, React.createElement(\"ul\", {\n        className: \"menu-additional\"\n      }, React.createElement(\"li\", {\n        className: \"col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Summary\")), React.createElement(\"li\", {\n        className: \"col s3\"\n      }, React.createElement(\"a\", {\n        className: \"active\",\n        href: \"#answer\"\n      }, \"Answer Sheet\"))))), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"container-sm\"\n      }, React.createElement(\"div\", {\n        className: \"main-row row\"\n      }, React.createElement(ChallengeQuestions, {\n        answerSheetComplete: answerSheetComplete,\n        onOpenQuestionModal: this.onToggleQuestionModal,\n        questions: questions.filter(function (question) {\n          return question.questionType === 'Challenge';\n        })\n      }), React.createElement(PracticeQuestions, {\n        answerSheetComplete: answerSheetComplete,\n        onOpenQuestionModal: this.onToggleQuestionModal,\n        questions: questions.filter(function (question) {\n          return question.questionType === 'Practice';\n        })\n      })))))));\n    }\n  }]);\n\n  return LessonDetailAnswerSheet;\n}(React.Component);\n\nexport default LessonDetailAnswerSheet;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/LessonDetailAnswerSheet/index.js"],"names":["React","Portal","PracticeQuestions","ChallengeQuestions","QuestionModal","sampleQuestions","LessonDetailAnswerSheet","props","selectedQuestion","setState","questionModalOpen","state","answerSheetComplete","questions","onToggleQuestionModal","zIndex","display","position","top","color","filter","question","questionType","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\nimport Portal from '../../Portal';\n\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport QuestionModal from './components/QuestionModal';\n\nimport sampleQuestions from './utils/sampleQuestions';\n\nclass LessonDetailAnswerSheet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedQuestion: {},\n      questionModalOpen: false,\n      answerSheetComplete: true,\n      questions: sampleQuestions,\n    };\n  }\n\n  onToggleQuestionModal = (selectedQuestion = null) => this.setState(({ questionModalOpen }) => ({ questionModalOpen: !questionModalOpen, selectedQuestion }))\n\n  render() {\n    const { questionModalOpen, selectedQuestion, questions, answerSheetComplete } = this.state;\n    return (\n      <React.Fragment>\n        <QuestionModal\n          open={questionModalOpen}\n          question={selectedQuestion}\n          onCloseModal={this.onToggleQuestionModal}\n        />\n        <Portal selector=\"#modal\">\n          <div className=\"wrapper modal\" style={{ zIndex: '1003', display: 'block', position: 'absolute', top: '0' }}>\n            <div className=\"header-row card-panel light-blue lighten-1 white-text\">\n              <div className=\"card-panel-row row\">\n                <div className=\"icon-col col s1\">\n                  <i className=\"icon-books\"></i>\n                </div>\n                <div className=\"col s9\">\n                  <div className=\"card-panel-text center-align\">\n                    <div className=\"text-small\">Reading Unit #2</div>\n                    <div className=\"text-large\">Read Something</div>\n                  </div>\n                </div>\n                <div className=\"col s1 right-align\">\n                  <div className=\"row icons-row\">&nbsp;</div>\n                </div>\n              </div>\n              <div className=\"header-row-block card-panel-row row\">\n                <div className=\"col s3\">\n                  <span className=\"meta-num\">p.128</span>\n                </div>\n                <div className=\"col s9 right-align\">\n                  <div><span className=\"name\">Arnold Studently</span></div>\n                  <div><time className=\"date\" dateTime=\"2018-11-18T20:43\" style={{ color: '#006837' }}>Completed 11/18/18 at 8:43 PM (late)</time></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"nav-header nav-header-special white\">\n              <div className=\"nav-additional\">\n                <ul className=\"menu-additional\">\n                  <li className=\"col s3\"><a href=\"#\">Summary</a></li>\n                  <li className=\"col s3\"><a className=\"active\" href=\"#answer\">Answer Sheet</a></li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"content-section\">\n              <div className=\"container-sm\">\n                <div className=\"main-row row\">\n                  <ChallengeQuestions\n                    answerSheetComplete={answerSheetComplete}\n                    onOpenQuestionModal={this.onToggleQuestionModal}\n                    questions={questions.filter(question => question.questionType === 'Challenge')}\n                  />\n                  <PracticeQuestions\n                    answerSheetComplete={answerSheetComplete}\n                    onOpenQuestionModal={this.onToggleQuestionModal}\n                    questions={questions.filter(question => question.questionType === 'Practice')}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Portal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default LessonDetailAnswerSheet;\n"]},"metadata":{},"sourceType":"module"}