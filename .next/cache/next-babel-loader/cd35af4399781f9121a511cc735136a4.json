{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport dynamic from 'next/dynamic';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nvar DatePicker = dynamic(function () {\n  return import('../../../../FormComponents/DatePicker');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../../../FormComponents/DatePicker')];\n    },\n    modules: ['../../../../FormComponents/DatePicker']\n  }\n});\nvar startDateOptions = [{\n  label: 'First Assignment Date (Default)',\n  value: 'firstAssignmentDate'\n}, {\n  label: 'Second Option',\n  value: 'secondOption'\n}, {\n  label: 'Third Option',\n  value: 'thirdOption'\n}];\nvar endDateOptions = [{\n  label: 'First Assignment Date (Default)',\n  value: 'firstAssignmentDate'\n}, {\n  label: 'Second Option',\n  value: 'secondOption'\n}, {\n  label: 'Third Option',\n  value: 'thirdOption'\n}];\nvar targetTestDateOptions = [{\n  label: 'October 6, 2018',\n  value: 'firstAssignmentDate'\n}, {\n  label: 'Second Option',\n  value: 'secondOption'\n}, {\n  label: 'Third Option',\n  value: 'thirdOption'\n}];\n\nvar CourseContext = function CourseContext(_ref) {\n  var _ref$state = _ref.state,\n      courseStartDateOption = _ref$state.courseStartDateOption,\n      courseStartDate = _ref$state.courseStartDate,\n      courseEndDateOption = _ref$state.courseEndDateOption,\n      courseEndDate = _ref$state.courseEndDate,\n      targetTestDate = _ref$state.targetTestDate,\n      targetScore = _ref$state.targetScore,\n      highSchool = _ref$state.highSchool,\n      graduationYear = _ref$state.graduationYear,\n      handleDetailsChange = _ref.handleDetailsChange;\n  return React.createElement(\"div\", {\n    className: \"row mb-0 one-large-col d-flex-content\"\n  }, React.createElement(\"div\", {\n    className: \"col s12\"\n  }, React.createElement(\"div\", {\n    className: \"card-block\"\n  }, React.createElement(\"h2\", null, \"Course Context\"), React.createElement(\"div\", {\n    className: \"card\"\n  }, React.createElement(\"div\", {\n    className: \"card-content\"\n  }, React.createElement(\"div\", {\n    className: \"course-context_two-col\"\n  }, React.createElement(\"div\", {\n    className: \"column\"\n  }, React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"col s12\"\n  }, React.createElement(\"div\", {\n    className: \"input-field focus-blue\"\n  }, React.createElement(Dropdown, {\n    value: getValueFromState(courseStartDateOption, startDateOptions),\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'courseStartDateOption', 'courseContext');\n    },\n    options: startDateOptions,\n    label: \"Course Start Date\",\n    stateKey: \"courseStartDateOption\",\n    dropdownKey: \"courseStartDateOption\"\n  })))), React.createElement(\"div\", {\n    className: \"row\"\n  }, React.createElement(\"div\", {\n    className: \"col s4\"\n  }, React.createElement(\"div\", {\n    className: \"datepicker-field input-field\"\n  }, React.createElement(\"i\", {\n    className: \"icon-calendar-dark\"\n  }), React.createElement(DatePicker, {\n    selected: courseStartDate,\n    id: \"course_start_date\",\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'courseStartDate', 'courseContext');\n    }\n  })))), React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"col s12\"\n  }, React.createElement(\"div\", {\n    className: \"input-field focus-blue\"\n  }, React.createElement(Dropdown, {\n    value: getValueFromState(courseEndDateOption, endDateOptions),\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'courseEndDateOption', 'courseContext');\n    },\n    options: endDateOptions,\n    label: \"Course End Date\",\n    stateKey: \"courseEndDateOption\",\n    dropdownKey: \"courseEndDateOption\"\n  })))), React.createElement(\"div\", {\n    className: \"row\"\n  }, React.createElement(\"div\", {\n    className: \"col s4\"\n  }, React.createElement(\"div\", {\n    className: \"datepicker-field input-field\"\n  }, React.createElement(\"i\", {\n    className: \"icon-calendar-dark\"\n  }), React.createElement(DatePicker, {\n    selected: courseEndDate,\n    id: \"course_end_date\",\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'courseEndDate', 'courseContext');\n    }\n  }))))), React.createElement(\"div\", {\n    className: \"column\"\n  }, React.createElement(\"div\", {\n    className: \"row\"\n  }, React.createElement(\"div\", {\n    className: \"col s12 m6 l8\"\n  }, React.createElement(\"div\", {\n    className: \"input-field focus-blue\"\n  }, React.createElement(Dropdown, {\n    value: getValueFromState(targetTestDate, targetTestDateOptions),\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'targetTestDate', 'courseContext');\n    },\n    options: targetTestDateOptions,\n    label: \"Target Test Date*\",\n    stateKey: \"targetTestDate\",\n    dropdownKey: \"targetTestDate\"\n  }), React.createElement(\"span\", {\n    className: \"note\"\n  }, \"*Optional\"))), React.createElement(\"div\", {\n    className: \"col s12 m6 l4\"\n  }, React.createElement(\"div\", {\n    className: \"input-field focus-blue\"\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"target_score\",\n    name: \"targetScore\",\n    value: targetScore,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'targetScore', 'courseContext');\n    }\n  }), React.createElement(\"label\", {\n    className: targetScore.length ? 'label active' : 'label',\n    htmlFor: \"target_score\"\n  }, \"Target Score*\"), React.createElement(\"span\", {\n    className: \"note\"\n  }, \"*Optional\")))), React.createElement(\"div\", {\n    className: \"row\"\n  }, React.createElement(\"div\", {\n    className: \"col s12\"\n  }, React.createElement(\"div\", {\n    className: \"input-field focus-blue\"\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"high_school\",\n    name: \"highSchool\",\n    value: highSchool,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'highSchool', 'courseContext');\n    }\n  }), React.createElement(\"label\", {\n    className: highSchool.length ? 'label active' : 'label',\n    htmlFor: \"high_school\"\n  }, \"High School*\"), React.createElement(\"span\", {\n    className: \"note\"\n  }, \"*Optional\")))), React.createElement(\"div\", {\n    className: \"row mb-0\"\n  }, React.createElement(\"div\", {\n    className: \"col s12\"\n  }, React.createElement(\"div\", {\n    className: \"input-field focus-blue\"\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"graduation_year\",\n    name: \"graduationYear\",\n    value: graduationYear,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'graduationYear', 'courseContext');\n    }\n  }), React.createElement(\"label\", {\n    className: graduationYear.length ? 'label active' : 'label',\n    htmlFor: \"graduation_year\"\n  }, \"Graduation Year*\"), React.createElement(\"span\", {\n    className: \"note\"\n  }, \"*Optional\")))))))))));\n};\n\nCourseContext.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default CourseContext;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/AccountPage/components/CourseContext/index.js"],"names":["React","PropTypes","dynamic","Dropdown","getValueFromState","DatePicker","ssr","startDateOptions","label","value","endDateOptions","targetTestDateOptions","CourseContext","state","courseStartDateOption","courseStartDate","courseEndDateOption","courseEndDate","targetTestDate","targetScore","highSchool","graduationYear","handleDetailsChange","event","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport dynamic from 'next/dynamic';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\n\nconst DatePicker = dynamic(() => import('../../../../FormComponents/DatePicker'), {\n  ssr: false,\n});\n\nconst startDateOptions = [\n  {\n    label: 'First Assignment Date (Default)',\n    value: 'firstAssignmentDate',\n  },\n  {\n    label: 'Second Option',\n    value: 'secondOption',\n  },\n  {\n    label: 'Third Option',\n    value: 'thirdOption',\n  },\n];\n\nconst endDateOptions = [\n  {\n    label: 'First Assignment Date (Default)',\n    value: 'firstAssignmentDate',\n  },\n  {\n    label: 'Second Option',\n    value: 'secondOption',\n  },\n  {\n    label: 'Third Option',\n    value: 'thirdOption',\n  },\n];\n\nconst targetTestDateOptions = [\n  {\n    label: 'October 6, 2018',\n    value: 'firstAssignmentDate',\n  },\n  {\n    label: 'Second Option',\n    value: 'secondOption',\n  },\n  {\n    label: 'Third Option',\n    value: 'thirdOption',\n  },\n];\n\nconst CourseContext = ({ state: { courseStartDateOption, courseStartDate, courseEndDateOption, courseEndDate, targetTestDate, targetScore, highSchool, graduationYear }, handleDetailsChange }) => (\n  <div className=\"row mb-0 one-large-col d-flex-content\">\n    <div className=\"col s12\">\n      <div className=\"card-block\">\n        <h2>Course Context</h2>\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"course-context_two-col\">\n              <div className=\"column\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <Dropdown\n                        value={getValueFromState(courseStartDateOption, startDateOptions)}\n                        onChange={(event) => handleDetailsChange(event, 'courseStartDateOption', 'courseContext')}\n                        options={startDateOptions}\n                        label=\"Course Start Date\"\n                        stateKey=\"courseStartDateOption\"\n                        dropdownKey=\"courseStartDateOption\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s4\">\n                    <div className=\"datepicker-field input-field\">\n                      <i className=\"icon-calendar-dark\"></i>\n                      <DatePicker\n                        selected={courseStartDate}\n                        id=\"course_start_date\"\n                        onChange={(event) => handleDetailsChange(event, 'courseStartDate', 'courseContext')}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row mb-0\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <Dropdown\n                        value={getValueFromState(courseEndDateOption, endDateOptions)}\n                        onChange={(event) => handleDetailsChange(event, 'courseEndDateOption', 'courseContext')}\n                        options={endDateOptions}\n                        label=\"Course End Date\"\n                        stateKey=\"courseEndDateOption\"\n                        dropdownKey=\"courseEndDateOption\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s4\">\n                    <div className=\"datepicker-field input-field\">\n                      <i className=\"icon-calendar-dark\"></i>\n                      <DatePicker\n                        selected={courseEndDate}\n                        id=\"course_end_date\"\n                        onChange={(event) => handleDetailsChange(event, 'courseEndDate', 'courseContext')}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column\">\n                <div className=\"row\">\n                  <div className=\"col s12 m6 l8\">\n                    <div className=\"input-field focus-blue\">\n                      <Dropdown\n                        value={getValueFromState(targetTestDate, targetTestDateOptions)}\n                        onChange={(event) => handleDetailsChange(event, 'targetTestDate', 'courseContext')}\n                        options={targetTestDateOptions}\n                        label=\"Target Test Date*\"\n                        stateKey=\"targetTestDate\"\n                        dropdownKey=\"targetTestDate\"\n                      />\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                  <div className=\"col s12 m6 l4\">\n                    <div className=\"input-field focus-blue\">\n                      <input\n                        type=\"text\"\n                        id=\"target_score\"\n                        name=\"targetScore\"\n                        value={targetScore}\n                        onChange={(event) => handleDetailsChange(event, 'targetScore', 'courseContext')}\n                      />\n                      <label className={targetScore.length ? 'label active' : 'label'} htmlFor=\"target_score\">Target Score*</label>\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <input\n                        type=\"text\"\n                        id=\"high_school\"\n                        name=\"highSchool\"\n                        value={highSchool}\n                        onChange={(event) => handleDetailsChange(event, 'highSchool', 'courseContext')}\n                      />\n                      <label className={highSchool.length ? 'label active' : 'label'} htmlFor=\"high_school\">High School*</label>\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row mb-0\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <input\n                        type=\"text\"\n                        id=\"graduation_year\"\n                        name=\"graduationYear\"\n                        value={graduationYear}\n                        onChange={(event) => handleDetailsChange(event, 'graduationYear', 'courseContext')}\n                      />\n                      <label className={graduationYear.length ? 'label active' : 'label'} htmlFor=\"graduation_year\">Graduation Year*</label>\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCourseContext.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default CourseContext;\n"]},"metadata":{},"sourceType":"module"}