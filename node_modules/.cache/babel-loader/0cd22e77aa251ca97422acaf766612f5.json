{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport update from 'immutability-helper';\nimport InstructorCard from './components/InstructorCard';\nimport FilterSection from './components/FilterSection';\nimport NewInstructorModal from './components/NewInstructorModal';\nimport sampleInstructorList from '../utils/sampleInstructorList'; // import { saveNewSuccess as savePracticeTestSuccess, saveChangesSuccess, saveNewError as savePracticeTestError } from '../../utils/fieldValidation';\n\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\n\nvar InstructorListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InstructorListPage, _React$Component);\n\n  function InstructorListPage(props) {\n    var _this;\n\n    _classCallCheck(this, InstructorListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstructorListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIsOpen: true,\n        dropdownIndex: dropdownIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddNewInstructor\", function (newInstructor) {\n      return _this.setState(function (_ref) {\n        var instructors = _ref.instructors;\n        return {\n          instructors: [].concat(_toConsumableArray(instructors), [newInstructor])\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteInstructor\", function (deletedInstructor) {\n      var updatedState = update(_this.state, {\n        instructors: function instructors(unfilteredInstructors) {\n          return unfilteredInstructors.filter(function (instructor) {\n            return instructor.id !== deletedInstructor.id;\n          });\n        }\n      });\n\n      _this.setState({\n        instructors: updatedState.instructors\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneInstructor\", function (instructor) {\n      var cloneIndex = _this.state.instructors.indexOf(instructor);\n\n      var instructors = update(_this.state.instructors, {\n        $splice: [[cloneIndex, 0, instructor]]\n      });\n\n      _this.setState({\n        instructors: instructors\n      }, _this.onCloseDropdown);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveInstructorChanges\", function (updatedInstructor) {\n      var originalInstructors = _this.state.instructors;\n      var instructorToUpdate = originalInstructors.filter(function (instructor) {\n        return instructor.id === updatedInstructor.id;\n      })[0];\n      var updatedInstructorIndex = originalInstructors.indexOf(instructorToUpdate);\n      var instructors = update(originalInstructors, {\n        $splice: [[updatedInstructorIndex, 1, updatedInstructor]]\n      }); // saveChangesSuccess();\n\n      _this.setState({\n        instructors: instructors\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        instructorsAreFiltered: false,\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredLocationState\", function (filterLocation) {\n      return _this.setState({\n        instructorsAreFiltered: true,\n        filterLocation: filterLocation\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredLocationState\", function () {\n      return _this.setState({\n        filterLocation: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          instructors = _this$state.instructors,\n          filterName = _this$state.filterName;\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var _currentInstructor$ac = currentInstructor.accountInfo,\n            lastName = _currentInstructor$ac.lastName,\n            firstName = _currentInstructor$ac.firstName;\n        var instructorString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (instructorString.indexOf(filterName) !== -1 && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByLocation\", function () {\n      var preFilteredInstructors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allInstructors = _this$state2.instructors,\n          filterLocation = _this$state2.filterLocation;\n      var instructors;\n\n      if (preFilteredInstructors.length) {\n        instructors = preFilteredInstructors;\n      } else {\n        instructors = allInstructors;\n      }\n\n      return instructors.reduce(function (finalArr, currentInstructor) {\n        var city = currentInstructor.contactInfo.city;\n\n        if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortInstructors\", function (instructors) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'firstNameAscending':\n          return instructors.sort(firstNameAscending);\n\n        case 'firstNameDescending':\n          return instructors.sort(firstNameDescending);\n\n        case 'lastNameAscending':\n          return instructors.sort(lastNameAscending);\n\n        case 'lastNameDescending':\n          return instructors.sort(lastNameDescending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableInstructors\", function () {\n      var _this$state3 = _this.state,\n          filterName = _this$state3.filterName,\n          filterLocation = _this$state3.filterLocation,\n          allInstructors = _this$state3.instructors,\n          sort = _this$state3.sort;\n      var instructors;\n\n      if (filterName.length && !filterLocation.length) {\n        instructors = _this.onFilterByName();\n      } else if (!filterName.length && filterLocation.length) {\n        instructors = _this.onFilterByLocation();\n      } else if (filterName.length && filterLocation.length) {\n        var filteredByName = _this.onFilterByName();\n\n        instructors = _this.onFilterByLocation(filteredByName);\n      } else {\n        instructors = allInstructors;\n      }\n\n      if (sort) {\n        return _this.onSortInstructors(instructors);\n      }\n\n      return instructors;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForFilteredState\", function () {\n      var _this$state4 = _this.state,\n          filterName = _this$state4.filterName,\n          filterLocation = _this$state4.filterLocation;\n\n      if (!filterName.length && !filterLocation.length) {\n        _this.setState({\n          instructorsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapInstructors\", function () {\n      var instructors = _this.getMappableInstructors();\n\n      return instructors.map(function (instructor, index) {\n        return React.createElement(InstructorCard, {\n          index: index,\n          key: instructor.id,\n          instructor: instructor,\n          dropdownIsOpen: _this.state.dropdownIsOpen,\n          onSetDropdown: _this.onSetDropdown,\n          onCloseDropdown: _this.onCloseDropdown,\n          dropdownIndex: _this.state.dropdownIndex,\n          onDeleteInstructor: _this.onDeleteInstructor,\n          onCloneInstructor: _this.onCloneInstructor,\n          onSaveInstructorChanges: _this.onSaveInstructorChanges\n        });\n      });\n    });\n\n    _this.state = {\n      instructorModalOpen: false,\n      instructors: sampleInstructorList,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      instructorsAreFiltered: false,\n      filterName: '',\n      filterLocation: '',\n      sort: ''\n    };\n    return _this;\n  }\n\n  _createClass(InstructorListPage, [{\n    key: \"render\",\n    value: function render() {\n      var instructorModalOpen = this.state.instructorModalOpen;\n      return React.createElement(React.Fragment, null, React.createElement(NewInstructorModal, {\n        open: instructorModalOpen,\n        onClose: this.onCloseInstructorModal,\n        onAddNewInstructor: this.onAddNewInstructor\n      }), React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-instructors\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"Instructors\")))), React.createElement(FilterSection, {\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredLocationState: this.onSetFilteredLocationState,\n        onUnsetFilteredLocationState: this.onUnsetFilteredLocationState\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"row d-flex-content\"\n      }, this.mapInstructors()))), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onOpenInstructorModal,\n        className: \"waves-effect waves-teal btn add-btn\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"New Location\"));\n    }\n  }]);\n\n  return InstructorListPage;\n}(React.Component);\n\nexport default InstructorListPage;","map":null,"metadata":{},"sourceType":"module"}