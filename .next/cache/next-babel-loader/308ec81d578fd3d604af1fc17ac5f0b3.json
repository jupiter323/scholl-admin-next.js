{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nvar LocationContactInfo = function LocationContactInfo(_ref) {\n  var _ref$state = _ref.state,\n      locationName = _ref$state.locationName,\n      locationNickname = _ref$state.locationNickname,\n      locationEmail = _ref$state.locationEmail,\n      locationPhoneNumber = _ref$state.locationPhoneNumber,\n      website = _ref$state.website,\n      locationStreetAddress = _ref$state.locationStreetAddress,\n      locationCity = _ref$state.locationCity,\n      locationState = _ref$state.locationState,\n      locationZip = _ref$state.locationZip,\n      handleDetailsChange = _ref.handleDetailsChange;\n  return __jsx(\"div\", {\n    className: \"col s12 l6\"\n  }, __jsx(\"div\", {\n    className: \"card-block\"\n  }, __jsx(\"h3\", null, \"Location Contact Info\"), __jsx(\"div\", {\n    className: \"card-main card\"\n  }, __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"location-name\",\n    name: \"locationName\",\n    value: locationName,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationName', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationName.length ? 'label active' : 'label',\n    htmlFor: \"location-name\"\n  }, \"Location Name*\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"location-nickname\",\n    name: \"locationNickname\",\n    value: locationNickname,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationNickname', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationNickname.length ? 'label active' : 'label',\n    htmlFor: \"location-nickname\"\n  }, \"Location Nickname*\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"location-email\",\n    name: \"locationEmail\",\n    value: locationEmail,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationEmail', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationEmail.length ? 'label active' : 'label',\n    htmlFor: \"location-email\"\n  }, \"Location Email*\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"tel\",\n    id: \"location-phone-number\",\n    name: \"locationPhoneNumber\",\n    value: locationPhoneNumber,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationPhoneNumber', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationPhoneNumber.length ? 'label active' : 'label',\n    htmlFor: \"location-phone-number\"\n  }, \"Location Phone Number (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"url\",\n    id: \"website\",\n    name: \"website\",\n    value: website,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'website', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: website.length ? 'label active' : 'label',\n    htmlFor: \"website\"\n  }, \"Website (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"location-street-address\",\n    name: \"locationStreetAddress\",\n    value: locationStreetAddress,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationStreetAddress', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationStreetAddress.length ? 'label active' : 'label',\n    htmlFor: \"location-street-address\"\n  }, \"Street Address (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"location-city\",\n    name: \"locationCity\",\n    value: locationCity,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationCity', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationCity.length ? 'label active' : 'label',\n    htmlFor: \"city\"\n  }, \"City (optional)\"))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"col s12 m6 l5\"\n  }, __jsx(\"div\", {\n    className: \"input-field\"\n  }, __jsx(Dropdown, {\n    value: getValueFromState(locationState, stateOptions),\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationState', 'locationContactInfo');\n    },\n    options: stateOptions,\n    label: \"State (optional)\",\n    stateKey: \"locationState\",\n    dropdownKey: \"locationState\"\n  }))), __jsx(\"div\", {\n    className: \"col s12 m6 l7\"\n  }, __jsx(\"div\", {\n    className: \"input-field\"\n  }, __jsx(\"input\", {\n    type: \"tel\",\n    id: \"location-zip\",\n    name: \"locationZip\",\n    value: locationZip,\n    onChange: function onChange(event) {\n      return handleDetailsChange(event, 'locationZip', 'locationContactInfo');\n    }\n  }), __jsx(\"label\", {\n    className: locationZip.length ? 'label active' : 'label',\n    htmlFor: \"location-zip\"\n  }, \"Zip (optional)\"))))))));\n};\n\nLocationContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default LocationContactInfo;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Location/components/SharedModalComponents/LocationContactInfo/index.js"],"names":["React","PropTypes","Dropdown","getValueFromState","stateOptions","LocationContactInfo","state","locationName","locationNickname","locationEmail","locationPhoneNumber","website","locationStreetAddress","locationCity","locationState","locationZip","handleDetailsChange","event","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nimport stateOptions from '../../../../utils/stateOptions';\n\nconst LocationContactInfo = ({ state: { locationName, locationNickname, locationEmail, locationPhoneNumber, website, locationStreetAddress, locationCity, locationState, locationZip }, handleDetailsChange }) => (\n  <div className=\"col s12 l6\">\n    <div className=\"card-block\">\n      <h3>Location Contact Info</h3>\n      <div className=\"card-main card\">\n        <div className=\"card-content\">\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-name\"\n                name=\"locationName\"\n                value={locationName}\n                onChange={(event) => handleDetailsChange(event, 'locationName', 'locationContactInfo')}\n              />\n              <label className={locationName.length ? 'label active' : 'label'} htmlFor=\"location-name\">Location Name*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-nickname\"\n                name=\"locationNickname\"\n                value={locationNickname}\n                onChange={(event) => handleDetailsChange(event, 'locationNickname', 'locationContactInfo')}\n              />\n              <label className={locationNickname.length ? 'label active' : 'label'} htmlFor=\"location-nickname\">Location Nickname*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-email\"\n                name=\"locationEmail\"\n                value={locationEmail}\n                onChange={(event) => handleDetailsChange(event, 'locationEmail', 'locationContactInfo')}\n              />\n              <label className={locationEmail.length ? 'label active' : 'label'} htmlFor=\"location-email\">Location Email*</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"tel\"\n                id=\"location-phone-number\"\n                name=\"locationPhoneNumber\"\n                value={locationPhoneNumber}\n                onChange={(event) => handleDetailsChange(event, 'locationPhoneNumber', 'locationContactInfo')}\n              />\n              <label className={locationPhoneNumber.length ? 'label active' : 'label'} htmlFor=\"location-phone-number\">Location Phone Number (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"url\"\n                id=\"website\"\n                name=\"website\"\n                value={website}\n                onChange={(event) => handleDetailsChange(event, 'website', 'locationContactInfo')}\n              />\n              <label className={website.length ? 'label active' : 'label'} htmlFor=\"website\">Website (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-street-address\"\n                name=\"locationStreetAddress\"\n                value={locationStreetAddress}\n                onChange={(event) => handleDetailsChange(event, 'locationStreetAddress', 'locationContactInfo')}\n              />\n              <label className={locationStreetAddress.length ? 'label active' : 'label'} htmlFor=\"location-street-address\">Street Address (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"input-field col s12\">\n              <input\n                type=\"text\"\n                id=\"location-city\"\n                name=\"locationCity\"\n                value={locationCity}\n                onChange={(event) => handleDetailsChange(event, 'locationCity', 'locationContactInfo')}\n              />\n              <label className={locationCity.length ? 'label active' : 'label'} htmlFor=\"city\">City (optional)</label>\n            </div>\n          </div>\n          <div className=\"row mb-0\">\n            <div className=\"col s12 m6 l5\">\n              <div className=\"input-field\">\n                <Dropdown\n                  value={getValueFromState(locationState, stateOptions)}\n                  onChange={(event) => handleDetailsChange(event, 'locationState', 'locationContactInfo')}\n                  options={stateOptions}\n                  label=\"State (optional)\"\n                  stateKey=\"locationState\"\n                  dropdownKey=\"locationState\"\n                />\n              </div>\n            </div>\n            <div className=\"col s12 m6 l7\">\n              <div className=\"input-field\">\n                <input\n                  type=\"tel\"\n                  id=\"location-zip\"\n                  name=\"locationZip\"\n                  value={locationZip}\n                  onChange={(event) => handleDetailsChange(event, 'locationZip', 'locationContactInfo')}\n                />\n                <label className={locationZip.length ? 'label active' : 'label'} htmlFor=\"location-zip\">Zip (optional)</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nLocationContactInfo.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default LocationContactInfo;\n"]},"metadata":{},"sourceType":"module"}