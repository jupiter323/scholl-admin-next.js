{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport ControlComponent from './styles/ControlComponent';\nimport { DropdownStyles } from './styles/dropdownStyles';\nimport DropdownWrapper from './styles';\n\nconst Dropdown = ({\n  value,\n  label,\n  dropdownKey,\n  stateKey = null,\n  onChange,\n  options,\n  valid = true,\n  padRight,\n  className\n}) => __jsx(DropdownWrapper, {\n  className: className,\n  valid: valid || !valid && value === {},\n  padRight: padRight\n}, __jsx(Select, {\n  options: options,\n  onChange: event => onChange(event.value, dropdownKey, stateKey),\n  components: {\n    Control: ControlComponent\n  },\n  name: \"categoryOptions\",\n  classNamePrefix: dropdownKey === 'difficulty' ? 'expanded-select' : 'select',\n  placeholder: label,\n  styles: DropdownStyles,\n  isClearable: false,\n  isSearchable: false,\n  value: value,\n  instanceId: \"dropdown-select\"\n}));\n\nDropdown.propTypes = {\n  value: PropTypes.any,\n  valid: PropTypes.bool,\n  padRight: PropTypes.bool,\n  stateKey: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  dropdownKey: PropTypes.string.isRequired\n};\nexport default Dropdown;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/FormComponents/Dropdown/index.js"],"names":["React","PropTypes","Select","ControlComponent","DropdownStyles","DropdownWrapper","Dropdown","value","label","dropdownKey","stateKey","onChange","options","valid","padRight","className","event","Control","propTypes","any","bool","string","isRequired","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,eAAP,MAA4B,UAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,WAAhB;AAA6BC,EAAAA,QAAQ,GAAG,IAAxC;AAA8CC,EAAAA,QAA9C;AAAwDC,EAAAA,OAAxD;AAAiEC,EAAAA,KAAK,GAAG,IAAzE;AAA+EC,EAAAA,QAA/E;AAAyFC,EAAAA;AAAzF,CAAD,KACf,MAAC,eAAD;AAAiB,EAAA,SAAS,EAAEA,SAA5B;AAAuC,EAAA,KAAK,EAAGF,KAAD,IAAY,CAACA,KAAD,IAAUN,KAAK,KAAK,EAA9E;AAAmF,EAAA,QAAQ,EAAEO;AAA7F,GACE,MAAC,MAAD;AACE,EAAA,OAAO,EAAEF,OADX;AAEE,EAAA,QAAQ,EAAGI,KAAD,IAAWL,QAAQ,CAACK,KAAK,CAACT,KAAP,EAAcE,WAAd,EAA2BC,QAA3B,CAF/B;AAGE,EAAA,UAAU,EAAE;AAAEO,IAAAA,OAAO,EAAEd;AAAX,GAHd;AAIE,EAAA,IAAI,EAAC,iBAJP;AAKE,EAAA,eAAe,EAAEM,WAAW,KAAK,YAAhB,GAA+B,iBAA/B,GAAmD,QALtE;AAME,EAAA,WAAW,EAAED,KANf;AAOE,EAAA,MAAM,EAAEJ,cAPV;AAQE,EAAA,WAAW,EAAE,KARf;AASE,EAAA,YAAY,EAAE,KAThB;AAUE,EAAA,KAAK,EAAEG,KAVT;AAWE,EAAA,UAAU,EAAC;AAXb,EADF,CADF;;AAkBAD,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,KAAK,EAAEN,SAAS,CAACkB,GADE;AAEnBN,EAAAA,KAAK,EAAEZ,SAAS,CAACmB,IAFE;AAGnBN,EAAAA,QAAQ,EAAEb,SAAS,CAACmB,IAHD;AAInBV,EAAAA,QAAQ,EAAET,SAAS,CAACoB,MAJD;AAKnBN,EAAAA,SAAS,EAAEd,SAAS,CAACoB,MALF;AAMnBb,EAAAA,KAAK,EAAEP,SAAS,CAACoB,MAAV,CAAiBC,UANL;AAOnBV,EAAAA,OAAO,EAAEX,SAAS,CAACsB,KAAV,CAAgBD,UAPN;AAQnBX,EAAAA,QAAQ,EAAEV,SAAS,CAACuB,IAAV,CAAeF,UARN;AASnBb,EAAAA,WAAW,EAAER,SAAS,CAACoB,MAAV,CAAiBC;AATX,CAArB;AAYA,eAAehB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n\nimport ControlComponent from './styles/ControlComponent';\nimport { DropdownStyles } from './styles/dropdownStyles';\nimport DropdownWrapper from './styles';\n\nconst Dropdown = ({ value, label, dropdownKey, stateKey = null, onChange, options, valid = true, padRight, className }) => (\n  <DropdownWrapper className={className} valid={(valid) || (!valid && value === {})} padRight={padRight}>\n    <Select\n      options={options}\n      onChange={(event) => onChange(event.value, dropdownKey, stateKey)}\n      components={{ Control: ControlComponent }}\n      name=\"categoryOptions\"\n      classNamePrefix={dropdownKey === 'difficulty' ? 'expanded-select' : 'select'}\n      placeholder={label}\n      styles={DropdownStyles}\n      isClearable={false}\n      isSearchable={false}\n      value={value}\n      instanceId=\"dropdown-select\"\n    />\n  </DropdownWrapper>\n);\n\nDropdown.propTypes = {\n  value: PropTypes.any,\n  valid: PropTypes.bool,\n  padRight: PropTypes.bool,\n  stateKey: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  dropdownKey: PropTypes.string.isRequired,\n};\n\nexport default Dropdown;\n\n"]},"metadata":{},"sourceType":"module"}