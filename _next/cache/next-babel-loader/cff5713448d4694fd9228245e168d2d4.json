{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailWorksheetPage/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport FilterSection from './components/FilterSection';\nimport sampleWorksheets from './utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../../utils/sortFunctions';\nimport LessonWorksheetTestSection from '../LessonWorksheetTestSection';\n\nclass DetailWorksheetPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onToggleAssignWorksheetDropdown\", event => {\n      event.preventDefault();\n      this.setState(({\n        assignWorksheetDropdownOpen\n      }) => ({\n        assignWorksheetDropdownOpen: !assignWorksheetDropdownOpen\n      }));\n    });\n\n    _defineProperty(this, \"onToggleDetailModalOpen\", worksheetIndex => this.setState(({\n      detailModalOpen,\n      worksheets\n    }) => ({\n      detailModalOpen: !detailModalOpen,\n      activeWorksheet: worksheets[worksheetIndex]\n    })));\n\n    _defineProperty(this, \"onSetSort\", sort => this.setState({\n      sort\n    }));\n\n    _defineProperty(this, \"onChangeView\", view => this.setState({\n      currentView: view\n    }));\n\n    _defineProperty(this, \"onSetFilteredState\", filterName => this.setState({\n      worksheetsAreFiltered: true,\n      filterName\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredState\", () => this.setState({\n      worksheetsAreFiltered: false,\n      filterName: ''\n    }));\n\n    _defineProperty(this, \"onSetFilteredTopicState\", filterTopic => this.setState({\n      worksheetsAreFiltered: true,\n      filterTopic\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredTopicState\", () => this.setState({\n      filterTopic: ''\n    }, this.checkForFilteredState));\n\n    _defineProperty(this, \"onAssignWorksheet\", assignType => {\n      console.warn('Stubbed out assign worksheet click', assignType);\n    });\n\n    _defineProperty(this, \"onFilterByName\", () => {\n      const {\n        worksheets,\n        filterName\n      } = this.state;\n      return worksheets.reduce((finalArr, currentWorksheet) => {\n        const {\n          accountInfo: {\n            lastName,\n            firstName\n          }\n        } = currentWorksheet;\n        const worksheetString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onFilterByTopic\", (preFilteredWorksheets = []) => {\n      const {\n        worksheets: allWorksheets,\n        filterTopic\n      } = this.state;\n      let worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce((finalArr, currentWorksheet) => {\n        const {\n          topic\n        } = currentWorksheet;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onSortWorksheets\", worksheets => {\n      const {\n        sort\n      } = this.state;\n\n      switch (sort) {\n        case 'dueDate':\n          return worksheets.sort(dueDate);\n\n        case 'assignDate':\n          return worksheets.sort(assignDate);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'completed':\n          return worksheets.sort(completed);\n\n        case 'flags':\n          return worksheets.sort(flags);\n\n        case 'score':\n          return worksheets.sort(score);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"getMappableWorksheets\", () => {\n      const {\n        filterName,\n        filterTopic,\n        worksheets: allWorksheets,\n        sort\n      } = this.state;\n      let worksheets;\n\n      if (filterName.length && !filterTopic.length) {\n        worksheets = this.onFilterByName();\n      } else if (!filterName.length && filterTopic.length) {\n        worksheets = this.onFilterByTopic();\n      } else if (filterName.length && filterTopic.length) {\n        const filteredByName = this.onFilterByName();\n        worksheets = this.onFilterByTopic(filteredByName);\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      if (sort) {\n        return this.onSortWorksheets(worksheets);\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(this, \"checkForFilteredState\", () => {\n      const {\n        filterName,\n        filterTopic\n      } = this.state;\n\n      if (!filterName.length && !filterTopic.length) {\n        this.setState({\n          worksheetsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"renderWorksheetView\", () => {\n      const {\n        currentView\n      } = this.state;\n\n      switch (currentView) {\n        case 'list':\n          return __jsx(ListView, {\n            onToggleDetailModalOpen: this.onToggleDetailModalOpen,\n            worksheets: this.getMappableWorksheets(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          });\n\n        case 'full':\n          return __jsx(FullView, {\n            onToggleDetailModalOpen: this.onToggleDetailModalOpen,\n            worksheets: this.getMappableWorksheets(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n\n        default:\n          break;\n      }\n    });\n\n    this.state = {\n      sort: '',\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      assignWorksheetDropdownOpen: false,\n      worksheets: sampleWorksheets,\n      detailModalOpen: false,\n      activeWorksheet: null\n    };\n  }\n\n  render() {\n    const {\n      currentView,\n      assignWorksheetDropdownOpen,\n      detailModalOpen,\n      activeWorksheet\n    } = this.state;\n    const {\n      user\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, detailModalOpen ? __jsx(LessonWorksheetTestSection, {\n      onClose: this.onToggleDetailModalOpen,\n      worksheet: activeWorksheet,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }) : [__jsx(\"div\", {\n      className: \"main-holder grey lighten-5 switcher-section\",\n      key: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, __jsx(FilterSection, {\n      currentView: currentView,\n      onChangeView: this.onChangeView,\n      onSetSort: this.onSetSort,\n      onSetFilteredState: this.onSetFilteredState,\n      onUnsetFilteredState: this.onUnsetFilteredState,\n      onSetFilteredTopicState: this.onSetFilteredTopicState,\n      onUnsetFilteredTopicState: this.onUnsetFilteredTopicState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), this.renderWorksheetView()), __jsx(\"div\", {\n      className: \"add-btn-block\",\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"dropdown_assign_selected\",\n      onClick: this.onToggleAssignWorksheetDropdown,\n      className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"add\"), \" Assign Worksheet\"), __jsx(\"ul\", {\n      id: \"dropdown_assign_selected\",\n      className: \"dropdown-content dropdown-small\",\n      style: {\n        display: assignWorksheetDropdownOpen ? 'block' : '0',\n        opacity: assignWorksheetDropdownOpen ? '1' : '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAssignWorksheet('fromSaved'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"From Saved\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => this.onAssignWorksheet('createNew'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Create New\"))))]);\n  }\n\n}\n\nDetailWorksheetPage.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default DetailWorksheetPage;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailWorksheetPage/index.js"],"names":["React","PropTypes","FullView","ListView","FilterSection","sampleWorksheets","dueDate","assignDate","problems","completed","flags","score","timeEstimate","LessonWorksheetTestSection","DetailWorksheetPage","Component","constructor","props","event","preventDefault","setState","assignWorksheetDropdownOpen","worksheetIndex","detailModalOpen","worksheets","activeWorksheet","sort","view","currentView","filterName","worksheetsAreFiltered","filterTopic","checkForFilteredState","assignType","console","warn","state","reduce","finalArr","currentWorksheet","accountInfo","lastName","firstName","worksheetString","toLowerCase","indexOf","push","preFilteredWorksheets","allWorksheets","length","topic","onFilterByName","onFilterByTopic","filteredByName","onSortWorksheets","onToggleDetailModalOpen","getMappableWorksheets","render","user","onChangeView","onSetSort","onSetFilteredState","onUnsetFilteredState","onSetFilteredTopicState","onUnsetFilteredTopicState","renderWorksheetView","onToggleAssignWorksheetDropdown","display","opacity","onAssignWorksheet","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport FilterSection from './components/FilterSection';\n\nimport sampleWorksheets from './utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../../utils/sortFunctions';\nimport LessonWorksheetTestSection from '../LessonWorksheetTestSection';\n\nclass DetailWorksheetPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      assignWorksheetDropdownOpen: false,\n      worksheets: sampleWorksheets,\n      detailModalOpen: false,\n      activeWorksheet: null,\n    };\n  }\n\n  onToggleAssignWorksheetDropdown = (event) => {\n    event.preventDefault();\n    this.setState(({ assignWorksheetDropdownOpen }) => ({ assignWorksheetDropdownOpen: !assignWorksheetDropdownOpen }));\n  }\n\n  onToggleDetailModalOpen = (worksheetIndex) => this.setState(({ detailModalOpen, worksheets }) => ({ detailModalOpen: !detailModalOpen, activeWorksheet: worksheets[worksheetIndex] }))\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view });\n\n  onSetFilteredState = (filterName) => this.setState({ worksheetsAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ worksheetsAreFiltered: false, filterName: '' })\n\n  onSetFilteredTopicState = (filterTopic) => this.setState({ worksheetsAreFiltered: true, filterTopic })\n  onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onAssignWorksheet = (assignType) => {\n    console.warn('Stubbed out assign worksheet click', assignType);\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { accountInfo: { lastName, firstName } } = currentWorksheet;\n      const worksheetString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'dueDate':\n        return worksheets.sort(dueDate);\n      case 'assignDate':\n        return worksheets.sort(assignDate);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'completed':\n        return worksheets.sort(completed);\n      case 'flags':\n        return worksheets.sort(flags);\n      case 'score':\n        return worksheets.sort(score);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  getMappableWorksheets = () => {\n    const { filterName, filterTopic, worksheets: allWorksheets, sort } = this.state;\n    let worksheets;\n    if (filterName.length && !filterTopic.length) {\n      worksheets = this.onFilterByName();\n    } else if (!filterName.length && filterTopic.length) {\n      worksheets = this.onFilterByTopic();\n    } else if (filterName.length && filterTopic.length) {\n      const filteredByName = this.onFilterByName();\n      worksheets = this.onFilterByTopic(filteredByName);\n    } else {\n      worksheets = allWorksheets;\n    }\n    if (sort) {\n      return this.onSortWorksheets(worksheets);\n    }\n    return worksheets;\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterTopic } = this.state;\n    if (!filterName.length && !filterTopic.length) {\n      this.setState({ worksheetsAreFiltered: false });\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  renderWorksheetView = () => {\n    const { currentView } = this.state;\n    switch (currentView) {\n      case 'list':\n        return <ListView onToggleDetailModalOpen={this.onToggleDetailModalOpen} worksheets={this.getMappableWorksheets()} />;\n      case 'full':\n        return <FullView onToggleDetailModalOpen={this.onToggleDetailModalOpen} worksheets={this.getMappableWorksheets()} />;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { currentView, assignWorksheetDropdownOpen, detailModalOpen, activeWorksheet } = this.state;\n    const { user } = this.props;\n    return (\n      <React.Fragment>\n        <Choose>\n          <When condition={detailModalOpen}>\n            <LessonWorksheetTestSection\n              onClose={this.onToggleDetailModalOpen}\n              worksheet={activeWorksheet}\n              user={user}\n            />\n          </When>\n          <Otherwise>\n            <div className=\"main-holder grey lighten-5 switcher-section\">\n              <FilterSection\n                currentView={currentView}\n                onChangeView={this.onChangeView}\n                onSetSort={this.onSetSort}\n                onSetFilteredState={this.onSetFilteredState}\n                onUnsetFilteredState={this.onUnsetFilteredState}\n                onSetFilteredTopicState={this.onSetFilteredTopicState}\n                onUnsetFilteredTopicState={this.onUnsetFilteredTopicState}\n              />\n              {this.renderWorksheetView()}\n            </div>\n            <div className=\"add-btn-block\">\n              <a\n                href=\"#\"\n                data-target=\"dropdown_assign_selected\"\n                onClick={this.onToggleAssignWorksheetDropdown}\n                className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n              >\n                <i className=\"material-icons\">add</i> Assign Worksheet\n              </a>\n              <ul\n                id=\"dropdown_assign_selected\"\n                className=\"dropdown-content dropdown-small\"\n                style={{ display: assignWorksheetDropdownOpen ? 'block' : '0', opacity: assignWorksheetDropdownOpen ? '1' : '0' }}\n              >\n                <li><a href=\"#\" onClick={() => this.onAssignWorksheet('fromSaved')}>From Saved</a></li>\n                <li><a href=\"#\" onClick={() => this.onAssignWorksheet('createNew')}>Create New</a></li>\n              </ul>\n            </div>\n          </Otherwise>\n        </Choose>\n      </React.Fragment>\n    );\n  }\n}\n\nDetailWorksheetPage.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default DetailWorksheetPage;\n"]},"metadata":{},"sourceType":"module"}