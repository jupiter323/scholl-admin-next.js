{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../../utils/getValueFromState';\nimport { versionOptions } from './utils';\n\nvar TestVersionSettings = function TestVersionSettings(_ref) {\n  var version = _ref.version,\n      reading = _ref.reading,\n      writing = _ref.writing,\n      math = _ref.math,\n      essay = _ref.essay,\n      includeScoreInImprovementMetrics = _ref.includeScoreInImprovementMetrics,\n      handleTestVersionSettingsChange = _ref.handleTestVersionSettingsChange;\n  return __jsx(React.Fragment, null, __jsx(\"h2\", null, \"Test Version\"), __jsx(\"div\", {\n    className: \"card card-test-detail\"\n  }, __jsx(\"div\", {\n    className: \"card-content\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(Dropdown, {\n    value: getValueFromState(version, versionOptions),\n    onChange: handleTestVersionSettingsChange,\n    options: versionOptions,\n    label: \"Version\",\n    stateKey: \"version\",\n    dropdownKey: \"version\"\n  }))), __jsx(\"div\", {\n    className: \"check-holder\"\n  }, __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"col s6\"\n  }, __jsx(\"p\", null, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"reading\",\n    className: \"filled-in\",\n    checked: reading,\n    onChange: handleTestVersionSettingsChange\n  }), __jsx(\"span\", null, \"Reading Section\"))), __jsx(\"p\", null, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"writing\",\n    className: \"filled-in\",\n    checked: writing,\n    onChange: handleTestVersionSettingsChange\n  }), __jsx(\"span\", null, \"Writing Section\")))), __jsx(\"div\", {\n    className: \"col s6\"\n  }, __jsx(\"p\", null, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"math\",\n    className: \"filled-in\",\n    checked: math,\n    onChange: handleTestVersionSettingsChange\n  }), __jsx(\"span\", null, \"Math Section\"))), __jsx(\"p\", null, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"essay\",\n    className: \"filled-in\",\n    checked: essay,\n    onChange: handleTestVersionSettingsChange\n  }), __jsx(\"span\", null, \"Essay\")))))), __jsx(\"div\", {\n    className: \"row mb-0\"\n  }, __jsx(\"div\", {\n    className: \"input-field col s12\"\n  }, __jsx(\"p\", null, __jsx(\"label\", null, __jsx(\"input\", {\n    type: \"checkbox\",\n    name: \"includeScoreInImprovementMetrics\",\n    className: \"filled-in\",\n    checked: includeScoreInImprovementMetrics,\n    onChange: handleTestVersionSettingsChange\n  }), __jsx(\"span\", null, \"Include Score in Improvement Metrics\"))))))));\n};\n\nTestVersionSettings.propTypes = {\n  math: PropTypes.bool.isRequired,\n  essay: PropTypes.bool.isRequired,\n  reading: PropTypes.bool.isRequired,\n  writing: PropTypes.bool.isRequired,\n  version: PropTypes.string.isRequired,\n  handleTestVersionSettingsChange: PropTypes.func.isRequired,\n  includeScoreInImprovementMetrics: PropTypes.bool.isRequired\n};\nexport default TestVersionSettings;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailTestList/components/EditTestModal/components/TestVersionSettings/index.js"],"names":["React","PropTypes","Dropdown","getValueFromState","versionOptions","TestVersionSettings","version","reading","writing","math","essay","includeScoreInImprovementMetrics","handleTestVersionSettingsChange","propTypes","bool","isRequired","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from '../../../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../../../utils/getValueFromState';\nimport { versionOptions } from './utils';\n\nconst TestVersionSettings = ({ version, reading, writing, math, essay, includeScoreInImprovementMetrics, handleTestVersionSettingsChange }) => (\n  <React.Fragment>\n    <h2>Test Version</h2>\n    <div className=\"card card-test-detail\">\n      <div className=\"card-content\">\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <Dropdown\n              value={getValueFromState(version, versionOptions)}\n              onChange={handleTestVersionSettingsChange}\n              options={versionOptions}\n              label=\"Version\"\n              stateKey=\"version\"\n              dropdownKey=\"version\"\n            />\n          </div>\n        </div>\n        <div className=\"check-holder\">\n          <div className=\"row mb-0\">\n            <div className=\"col s6\">\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"reading\"\n                    className=\"filled-in\"\n                    checked={reading}\n                    onChange={handleTestVersionSettingsChange}\n                  />\n                  <span>Reading Section</span>\n                </label>\n              </p>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"writing\"\n                    className=\"filled-in\"\n                    checked={writing}\n                    onChange={handleTestVersionSettingsChange}\n                  />\n                  <span>Writing Section</span>\n                </label>\n              </p>\n            </div>\n            <div className=\"col s6\">\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"math\"\n                    className=\"filled-in\"\n                    checked={math}\n                    onChange={handleTestVersionSettingsChange}\n                  />\n                  <span>Math Section</span>\n                </label>\n              </p>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"essay\"\n                    className=\"filled-in\"\n                    checked={essay}\n                    onChange={handleTestVersionSettingsChange}\n                  />\n                  <span>Essay</span>\n                </label>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mb-0\">\n          <div className=\"input-field col s12\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  name=\"includeScoreInImprovementMetrics\"\n                  className=\"filled-in\"\n                  checked={includeScoreInImprovementMetrics}\n                  onChange={handleTestVersionSettingsChange}\n                />\n                <span>Include Score in Improvement Metrics</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </React.Fragment>\n);\n\nTestVersionSettings.propTypes = {\n  math: PropTypes.bool.isRequired,\n  essay: PropTypes.bool.isRequired,\n  reading: PropTypes.bool.isRequired,\n  writing: PropTypes.bool.isRequired,\n  version: PropTypes.string.isRequired,\n  handleTestVersionSettingsChange: PropTypes.func.isRequired,\n  includeScoreInImprovementMetrics: PropTypes.bool.isRequired,\n}\n\nexport default TestVersionSettings;\n"]},"metadata":{},"sourceType":"module"}