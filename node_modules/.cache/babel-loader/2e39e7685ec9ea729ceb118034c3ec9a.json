{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport DetailPage from '../components/Worksheet/DetailPage';\nimport WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView';\nimport ListView from '../components/Worksheets/components/ListView'; // import WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\n// import WorksheetListItem from '../components/Worksheets/components/WorksheetListItem';\n\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, name, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar Worksheets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Worksheets, _Component);\n\n  function Worksheets(props) {\n    var _this;\n\n    _classCallCheck(this, Worksheets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Worksheets).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        filterName: \"\",\n        filterTopic: \"\",\n        subjectFilters: [],\n        difficultyFilters: [],\n        problemTypeFilters: [],\n        sourceFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view,\n        active: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (worksheet) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterName: worksheet\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({\n        worksheetsAreFiltered: false\n      }, filter, \"\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (topic) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterTopic: topic\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortWorksheets\", function (worksheets) {\n      var sort = _this.setState.sort;\n\n      switch (sort) {\n        case \"problemType\":\n          return worksheets.sort(problemType);\n\n        case 'subject':\n          return worksheets.sort(subject);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'difficulty':\n          return worksheets.sort(difficulty);\n\n        case 'name':\n          return worksheets.sort(name);\n\n        case 'source':\n          return worksheets.sort(source);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          worksheets = _this$state.worksheets,\n          filterName = _this$state.filterName;\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var worksheetName = currentWorksheet.worksheetName;\n        var worksheetString = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByTopic\", function () {\n      var preFilteredWorksheets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allWorksheets = _this$state2.worksheets,\n          filterTopic = _this$state2.filterTopic;\n      var worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var topic = currentWorksheet.topic;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      var newArray = _this.arrayItemRemover(worksheets, worksheets[index]);\n\n      _this.setState({\n        worksheets: newArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneWorksheet\", function (index) {\n      var worksheets = _this.state.worksheets;\n\n      _this.setState(function (prevState) {\n        prevState.worksheets.push(worksheets[index]);\n        return {\n          students: prevState.students\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterWorksheets\", function () {\n      var _this$state3 = _this.state,\n          filterTopic = _this$state3.filterTopic,\n          problemTypeFilters = _this$state3.problemTypeFilters,\n          subjectFilters = _this$state3.subjectFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          sourceFilters = _this$state3.sourceFilters,\n          allWorksheets = _this$state3.worksheets;\n      var worksheets = allWorksheets;\n\n      if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return problemTypeFilters.indexOf(worksheet.problemType) !== -1;\n        });\n      }\n\n      if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return subjectFilters.indexOf(worksheet.subject) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return difficultyFilters.indexOf(worksheet.difficulty) !== -1;\n        });\n      }\n\n      if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return sourceFilters.indexOf(worksheet.worksheetSource) !== -1;\n        });\n      }\n\n      if (filterTopic.length && filterTopic.indexOf(\"all\") === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return filterTopic.indexOf(worksheet.topic) !== -1;\n        });\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableWorksheets\", function () {\n      var _this$state4 = _this.state,\n          problemTypeFilters = _this$state4.problemTypeFilters,\n          subjectFilters = _this$state4.subjectFilters,\n          difficultyFilters = _this$state4.difficultyFilters,\n          sourceFilters = _this$state4.sourceFilters,\n          worksheets = _this$state4.worksheets,\n          filterName = _this$state4.filterName,\n          sort = _this$state4.sort,\n          filterTopic = _this$state4.filterTopic;\n      var mappableWorksheets = worksheets;\n\n      if (filterName.length) {\n        mappableWorksheets = _this.onFilterByName();\n      } // if (!filterName.length && filterTopic.length){\n      //   mappableWorksheets = this.onFilterByTopic();\n      // }\n      // if (filterName.length && filterTopic.length) {\n      //   const filteredByName = this.onFilterByName();\n      //   mappableWorksheets = this.onFilterByTopic(filteredByName)\n      // }\n\n\n      if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length || filterTopic.length) {\n        mappableWorksheets = _this.onFilterWorksheets();\n      }\n\n      if (sort) {\n        return _this.onSortWorksheets(mappableWorksheets);\n      }\n\n      return mappableWorksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentSubjectFilters = _this$state5.subjectFilters,\n          currentProblemTypeFilters = _this$state5.problemTypeFilters,\n          currentDifficultyFilters = _this$state5.difficultyFilters,\n          currentSourceFilters = _this$state5.sourceFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'problemType':\n          modifiedFilterCurrentState = currentProblemTypeFilters;\n          modifiedFilterName = 'problemTypeFilters';\n          break;\n\n        case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n\n        default:\n          break;\n      } // Decide whether we're adding or removing the selected filter\n\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkForFilteredState\", function () {\n      var _this$state6 = _this.state,\n          filterName = _this$state6.filterName,\n          filterTopic = _this$state6.filterTopic;\n\n      if (!filterName.length && !filterTopic.length) {\n        _this.setState({\n          worksheetsAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (worksheet) {\n        return worksheet !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCurrentView\", function () {\n      var active = _this.state.active;\n\n      if (active === 'full') {\n        return React.createElement(FullView, {\n          worksheets: _this.getMappableWorksheets(),\n          mapWorksheets: _this.getMappableWorksheets,\n          onDeleteWorksheet: _this.onDeleteWorksheet,\n          onCloneWorksheet: _this.onCloneWorksheet\n        });\n      }\n\n      if (active === 'list') {\n        return React.createElement(ListView, {\n          worksheets: _this.getMappableWorksheets(),\n          mapWorksheets: _this.getMappableWorksheets,\n          onDeleteWorksheet: _this.onDeleteWorksheet\n        });\n      }\n\n      return null;\n    });\n\n    _this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      sourceFilters: []\n    };\n    return _this;\n  }\n\n  _createClass(Worksheets, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state7 = this.state,\n          dropdownIsOpen = _this$state7.dropdownIsOpen,\n          currentView = _this$state7.currentView,\n          subjectFilters = _this$state7.subjectFilters,\n          sourceFilters = _this$state7.sourceFilters,\n          difficultyFilters = _this$state7.difficultyFilters,\n          problemTypeFilters = _this$state7.problemTypeFilters;\n      return React.createElement(\"div\", {\n        className: \"worksheets-page\"\n      }, React.createElement(\"div\", {\n        className: \"wrapper\"\n      }, React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5\"\n      }, React.createElement(WorksheetHeading, null), React.createElement(FilterSection, {\n        subjectFilters: subjectFilters,\n        difficutlyFilters: difficultyFilters,\n        problemTypeFilters: problemTypeFilters,\n        sourceFilters: sourceFilters,\n        currentView: currentView,\n        onChangeView: this.onChangeView,\n        onSetSort: this.onSetSort,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        handleFilterClick: this.handleFilterClick,\n        onClearFilters: this.onClearFilters\n      }), this.getMappableWorksheets().map(function (worksheet, index) {\n        return React.createElement(WorksheetCard, {\n          index: index,\n          key: worksheet.id,\n          worksheet: worksheet,\n          onDeleteWorksheet: onDeleteWorksheet,\n          onCloneWorksheet: onCloneWorksheet\n        });\n      })), React.createElement(\"div\", {\n        className: \"add-btn-block dropdown-small\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(event) {\n          return _this2.onSetDropdown(event, dropdownIsOpen);\n        },\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n        \"data-target\": \"dropdown_assign_selected\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \"Custom Worksheet\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign_selected\",\n        className: \"dropdown-content dropdown-small\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Create New\")))))));\n    }\n  }]);\n\n  return Worksheets;\n}(Component);\n\nexport default Worksheets;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\pages\\worksheets.js"],"names":["React","Component","update","DetailPage","WorksheetCard","WorksheetHeading","FullView","ListView","sampleWorksheets","FilterSection","problemType","subject","problems","difficulty","name","source","timeEstimate","Worksheets","props","setState","filterName","filterTopic","subjectFilters","difficultyFilters","problemTypeFilters","sourceFilters","sort","view","currentView","active","worksheet","worksheetsAreFiltered","filter","topic","worksheets","state","reduce","finalArr","currentWorksheet","worksheetName","worksheetString","replace","toLowerCase","indexOf","push","preFilteredWorksheets","allWorksheets","length","index","newArray","arrayItemRemover","prevState","students","worksheetSource","mappableWorksheets","onFilterByName","onFilterWorksheets","onSortWorksheets","filterType","currentSubjectFilters","currentProblemTypeFilters","currentDifficultyFilters","currentSourceFilters","modifiedFilterCurrentState","modifiedFilterName","modifiedFilterUpdatedState","$push","filterIndex","$splice","array","value","getMappableWorksheets","onDeleteWorksheet","onCloneWorksheet","modalOpen","dropdownIsOpen","onChangeView","onSetSort","onSetFilteredState","onUnsetFilteredState","onSetFilteredTopicState","handleFilterClick","onClearFilters","map","id","event","onSetDropdown"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport DetailPage from '../components/Worksheet/DetailPage';\nimport WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\nimport WorksheetHeading from '../components/Worksheets/components/WorksheetHeading';\nimport FullView from '../components/Worksheets/components/FullView'\nimport ListView from '../components/Worksheets/components/ListView';\n// import WorksheetCard from '../components/Worksheets/components/FullView/components/WorksheetCard';\n// import WorksheetListItem from '../components/Worksheets/components/WorksheetListItem';\nimport sampleWorksheets from '../components/Student/DetailWorksheetPage/utils/sampleWorksheets';\nimport FilterSection from '../components/Worksheets/components/FilterSection';\nimport { problemType, subject, problems, difficulty, name, source, timeEstimate } from '../components/Worksheets/utils/worksheetSortFunctions';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Worksheets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: 'full',\n      worksheets: sampleWorksheets,\n      currentView: 'full',\n      modalOpen: false,\n      dropdownIsOpen: false,\n      sort: \"\",\n      filterName: \"\",\n      filterTopic: \"\",\n      subjectFilters: [],\n      difficultyFilters: [],\n      problemTypeFilters: [],\n      sourceFilters: [],\n    };\n  }\n  onClearFilters = () => this.setState({ filterName: \"\", filterTopic: \"\", subjectFilters: [], difficultyFilters: [], problemTypeFilters: [], sourceFilters: [] })\n\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view, active: view });\n\n  onSetFilteredState = (worksheet) => this.setState({ worksheetsAreFiltered: true, filterName: worksheet })\n  onUnsetFilteredState = (filter) => this.setState({ worksheetsAreFiltered: false, [filter]: \"\" })\n\n  onSetFilteredTopicState = (topic) => this.setState({ worksheetsAreFiltered: true, filterTopic: topic })\n  // onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.setState;\n    switch (sort) {\n      case \"problemType\":\n        return worksheets.sort(problemType);\n      case 'subject':\n        return worksheets.sort(subject);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'difficulty':\n        return worksheets.sort(difficulty);\n      case 'name':\n        return worksheets.sort(name);\n      case 'source':\n        return worksheets.sort(source);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { worksheetName } = currentWorksheet;\n      const worksheetString = worksheetName.replace(/\\s/g, \"\").toLowerCase();\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onDeleteWorksheet = (index) => {\n    const { worksheets } = this.state;\n    const newArray = this.arrayItemRemover(worksheets, worksheets[index])\n    this.setState({ worksheets: newArray })\n  }\n\n  onCloneWorksheet = (index) => {\n    const { worksheets } = this.state;\n    this.setState(prevState => {\n      prevState.worksheets.push(worksheets[index]);\n      return { students: prevState.students }\n    })\n  }\n\n  onFilterWorksheets = () => {\n    const { filterTopic, problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets: allWorksheets } = this.state;\n    let worksheets = allWorksheets;\n    if (problemTypeFilters.length && problemTypeFilters.indexOf(\"all\") === -1) {\n      worksheets = worksheets.filter(worksheet => problemTypeFilters.indexOf(worksheet.problemType) !== -1);\n    }\n    if (subjectFilters.length && subjectFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => subjectFilters.indexOf(worksheet.subject) !== -1)\n    }\n    if (difficultyFilters.length && difficultyFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => difficultyFilters.indexOf(worksheet.difficulty) !== -1)\n    }\n    if (sourceFilters.length && sourceFilters.indexOf('all') === -1) {\n      worksheets = worksheets.filter(worksheet => sourceFilters.indexOf(worksheet.worksheetSource) !== -1)\n    }\n    if (filterTopic.length && filterTopic.indexOf(\"all\") === -1) {\n      worksheets = worksheets.filter(worksheet => filterTopic.indexOf(worksheet.topic) !== -1)\n    }\n    return worksheets;\n  }\n\n  getMappableWorksheets = () => {\n\n    const { problemTypeFilters, subjectFilters, difficultyFilters, sourceFilters, worksheets, filterName, sort, filterTopic } = this.state;\n    let mappableWorksheets = worksheets;\n    if (filterName.length) {\n      mappableWorksheets = this.onFilterByName();\n    }\n    // if (!filterName.length && filterTopic.length){\n    //   mappableWorksheets = this.onFilterByTopic();\n    // }\n    // if (filterName.length && filterTopic.length) {\n    //   const filteredByName = this.onFilterByName();\n    //   mappableWorksheets = this.onFilterByTopic(filteredByName)\n    // }\n    if (subjectFilters.length || problemTypeFilters.length || difficultyFilters.length || sourceFilters.length || filterTopic.length){\n      mappableWorksheets = this.onFilterWorksheets();\n    }\n    if (sort) {\n      return this.onSortWorksheets(mappableWorksheets)\n    }\n    return mappableWorksheets;\n  }\n\n  \n\n  handleFilterClick = (filterType, filter) => {\n    const { subjectFilters: currentSubjectFilters, problemTypeFilters: currentProblemTypeFilters, difficultyFilters: currentDifficultyFilters, sourceFilters: currentSourceFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'difficulty':\n        modifiedFilterCurrentState = currentDifficultyFilters;\n        modifiedFilterName = 'difficultyFilters';\n        break;\n      case 'problemType':\n        modifiedFilterCurrentState = currentProblemTypeFilters;\n        modifiedFilterName = 'problemTypeFilters';\n        break;\n      case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n        default:\n        break;\n    }\n    // Decide whether we're adding or removing the selected filter\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  checkForFilteredState = () => {\n    const { filterName, filterTopic } = this.state;\n    if (!filterName.length && !filterTopic.length) {\n      this.setState({ worksheetsAreFiltered: false });\n    }\n  }\n\narrayItemRemover = (array, value) => array.filter((worksheet) => worksheet !== value)\n\n// TODO get mappable worksheets before rendering view\nrenderCurrentView = () => {\n  const { active } = this.state;\n  if (active === 'full') {\n    return <FullView worksheets={this.getMappableWorksheets()} mapWorksheets={this.getMappableWorksheets} onDeleteWorksheet={this.onDeleteWorksheet} onCloneWorksheet={this.onCloneWorksheet} />;\n  }\n  if (active === 'list') {\n    return <ListView worksheets={this.getMappableWorksheets()} mapWorksheets={this.getMappableWorksheets} onDeleteWorksheet={this.onDeleteWorksheet} />;\n  }\n  return null;\n}\n\nrender() {\n  const { dropdownIsOpen, currentView, subjectFilters, sourceFilters, difficultyFilters, problemTypeFilters } = this.state;\n  return (\n    <div className=\"worksheets-page\">\n      <div className=\"wrapper\">\n        <main id=\"main\" role=\"main\">\n          <div className=\"main-holder grey lighten-5\">\n            <WorksheetHeading />\n            <FilterSection\n              subjectFilters={subjectFilters}\n              difficutlyFilters={difficultyFilters}\n              problemTypeFilters={problemTypeFilters}\n              sourceFilters={sourceFilters}\n              currentView={currentView}\n              onChangeView={this.onChangeView}\n              onSetSort={this.onSetSort}\n              onSetFilteredState={this.onSetFilteredState}\n              onUnsetFilteredState={this.onUnsetFilteredState}\n              onSetFilteredTopicState={this.onSetFilteredTopicState}\n              handleFilterClick={this.handleFilterClick}\n              onClearFilters={this.onClearFilters}\n            />\n           {/* {this.renderCurrentView()} */}\n           {this.getMappableWorksheets().map((worksheet, index) => (\n                   <WorksheetCard index={index} key={worksheet.id} worksheet={worksheet} onDeleteWorksheet={onDeleteWorksheet} onCloneWorksheet={onCloneWorksheet}/>\n\n           ))}\n            </div>\n          <div className=\"add-btn-block dropdown-small\">\n            <a\n              href=\"#\"\n              onClick={(event) => this.onSetDropdown(event, dropdownIsOpen)}\n              className=\"dropdown-trigger waves-effect waves-teal btn add-btn\"\n              data-target='dropdown_assign_selected'>\n              <i className=\"material-icons\">add</i>\n              Custom Worksheet\n                </a>\n            <ul id='dropdown_assign_selected' className='dropdown-content dropdown-small'>\n              <li><a href=\"#\">From Saved</a></li>\n              <li><a href=\"#\">Create New</a></li>\n            </ul>\n          </div>\n        </main>\n      </div>\n    </div>\n\n  );\n}\n}\n\nexport default Worksheets;"]},"metadata":{},"sourceType":"module"}