{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/AssignedTestCard/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass AssignedTestCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n  }\n\n  render() {\n    const {\n      dropdownIndex,\n      index,\n      dropdownIsOpen,\n      test: {\n        test_name,\n        test_description,\n        due_date,\n        assignment_date,\n        student_test_id,\n        student_id\n      },\n      onEnterAnswers,\n      handleTestSettingModalOpen,\n      onDeleteTest,\n      onTestFlagReviewed\n    } = this.props;\n    const formattedDueDate = moment(due_date).format(\"MM/DD/YY\");\n    const formattedAssignedDate = moment(assignment_date).format(\"MM/DD/YY\");\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-full-width card-scored card\",\n      style: {\n        margin: \"10px\",\n        minWidth: \"580px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \" card-panel-row row mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"to-do-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginBottom: \"0px !important\",\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      className: \"list-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, test_name)), __jsx(\"div\", {\n      className: \"col s6 m6 right-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row icons-row\",\n      style: {\n        marginBottom: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"dropdown-block col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"dropdown-trigger btn\",\n      onClick: this.handleDropdownClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      style: {\n        display: \"block\",\n        minWidth: \"160px\",\n        transformOrigin: \"0px 0px 0px\",\n        opacity: \"1\",\n        transform: \"scaleX(1) scaleY(1)\",\n        width: \"210px\"\n      },\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: handleTestSettingModalOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Edit Test Settings\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: () => onEnterAnswers(student_test_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Edit/Enter Answers\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Excuse/Unexcuse lateness\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: e => {\n        e.preventDefault();\n        onTestFlagReviewed(student_test_id, student_id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Mark flags reviewed\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"disabled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Reset\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      onClick: e => {\n        e.preventDefault();\n        onDeleteTest(student_test_id, student_id, \"assignedStudentTests\");\n      },\n      className: \"red-text text-darken-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Unassign\"))) : null)))), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"info-list info-list-gray  assigned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"list-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"ico-mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"status-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Assigned \", formattedAssignedDate))), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"list-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Due \", formattedDueDate)))), __jsx(\"div\", {\n      className: \"card-meta-block\",\n      style: {\n        padding: \"0px\",\n        marginTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(\"dl\", {\n      className: \"dl-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(\"dt\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Version:\"), __jsx(\"dd\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, test_description))))))))))));\n  }\n\n}\n\nAssignedTestCard.propTypes = {\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired\n};\nexport default AssignedTestCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestList/components/AssignedTestCard/index.js"],"names":["React","PropTypes","moment","AssignedTestCard","Component","constructor","props","event","onSetDropdown","onCloseDropdown","dropdownIsOpen","index","preventDefault","render","dropdownIndex","test","test_name","test_description","due_date","assignment_date","student_test_id","student_id","onEnterAnswers","handleTestSettingModalOpen","onDeleteTest","onTestFlagReviewed","formattedDueDate","format","formattedAssignedDate","margin","minWidth","marginBottom","marginTop","handleDropdownClick","display","transformOrigin","opacity","transform","width","e","padding","propTypes","func","isRequired","bool","onDownloadReport","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\n\nclass AssignedTestCard extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleDropdownClick = event => {\n    const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n    event.preventDefault();\n    if (dropdownIsOpen) {\n      return onCloseDropdown();\n    }\n    return onSetDropdown(index);\n  };\n\n  render() {\n    const {\n      dropdownIndex,\n      index,\n      dropdownIsOpen,\n      test: { test_name, test_description, due_date, assignment_date, student_test_id, student_id },\n      onEnterAnswers,\n      handleTestSettingModalOpen,\n      onDeleteTest,\n      onTestFlagReviewed,\n    } = this.props;\n    const formattedDueDate = moment(due_date).format(\"MM/DD/YY\");\n    const formattedAssignedDate = moment(assignment_date).format(\"MM/DD/YY\");\n    return (\n      <React.Fragment>\n        <div\n          className=\"card-full-width card-scored card\"\n          style={{ margin: \"10px\", minWidth: \"580px\" }}\n        >\n          <div className=\"card-content\">\n            <div className=\" card-panel-row row mb-0\">\n              <div className=\"col s12\">\n                <ul className=\"to-do-list\">\n                  <li>\n                    <div\n                      className=\"row\"\n                      style={{ marginBottom: \"0px !important\", marginTop: \"20px\" }}\n                    >\n                      <div className=\"col s12 m6\">\n                        <strong className=\"list-title\">{test_name}</strong>\n                      </div>\n                      <div className=\"col s6 m6 right-align\">\n                        <div className=\"row icons-row\" style={{ marginBottom: \"10px\" }}>\n                          <div className=\"dropdown-block col\">\n                            <a\n                              href=\"#\"\n                              className=\"dropdown-trigger btn\"\n                              onClick={this.handleDropdownClick}\n                            >\n                              <i className=\"material-icons dots-icon\">more_vert</i>\n                            </a>\n                            <If condition={dropdownIsOpen && dropdownIndex === index}>\n                              <ul\n                                id=\"dropdown01\"\n                                style={{\n                                  display: \"block\",\n                                  minWidth: \"160px\",\n                                  transformOrigin: \"0px 0px 0px\",\n                                  opacity: \"1\",\n                                  transform: \"scaleX(1) scaleY(1)\",\n                                  width: \"210px\",\n                                }}\n                                className=\"dropdown-content\"\n                              >\n                                <li>\n                                  <a href=\"#\" onClick={handleTestSettingModalOpen}>\n                                    Edit Test Settings\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" onClick={() => onEnterAnswers(student_test_id)}>\n                                    Edit/Enter Answers\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Excuse/Unexcuse lateness\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      onTestFlagReviewed(student_test_id, student_id);\n                                    }}\n                                  >\n                                    Mark flags reviewed\n                                  </a>\n                                </li>\n                                <li>\n                                  <a href=\"#\" className=\"disabled\">\n                                    Reset\n                                  </a>\n                                </li>\n                                <li>\n                                  <a\n                                    href=\"#\"\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      onDeleteTest(student_test_id, student_id, \"assignedStudentTests\");\n                                    }}\n                                    className=\"red-text text-darken-3\"\n                                  >\n                                    Unassign\n                                  </a>\n                                </li>\n                              </ul>\n                            </If>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col s12 m8\">\n                        <ul className=\"info-list info-list-gray  assigned\">\n                          <li>\n                            <span className=\"list-status\">\n                              <span className=\"ico-mark\" />\n                              <span className=\"status-text\">Assigned {formattedAssignedDate}</span>\n                            </span>\n                          </li>\n                          <li>\n                            <span className=\"list-date\">\n                              <i className=\"icon-calendar\" />\n                              <span className=\"date\">Due {formattedDueDate}</span>\n                            </span>\n                          </li>\n                        </ul>\n                        <div\n                          className=\"card-meta-block\"\n                          style={{ padding: \"0px\", marginTop: \"10px\" }}\n                        >\n                          <dl className=\"dl-horizontal\">\n                            <dt>Version:</dt>\n                            <dd>{test_description}</dd>\n                          </dl>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nAssignedTestCard.propTypes = {\n  onSetDropdown: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  onDownloadReport: PropTypes.func.isRequired,\n  test: PropTypes.object.isRequired,\n};\n\nexport default AssignedTestCard;\n"]},"metadata":{},"sourceType":"module"}