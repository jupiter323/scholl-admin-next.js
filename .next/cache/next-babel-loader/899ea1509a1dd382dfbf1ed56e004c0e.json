{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport dynamic from 'next/dynamic';\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\nconst DatePicker = dynamic(() => import('../../../../FormComponents/DatePicker'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../../../FormComponents/DatePicker')],\n    modules: ['../../../../FormComponents/DatePicker']\n  }\n});\nconst startDateOptions = [{\n  label: 'First Assignment Date (Default)',\n  value: 'firstAssignmentDate'\n}, {\n  label: 'Second Option',\n  value: 'secondOption'\n}, {\n  label: 'Third Option',\n  value: 'thirdOption'\n}];\nconst endDateOptions = [{\n  label: 'First Assignment Date (Default)',\n  value: 'firstAssignmentDate'\n}, {\n  label: 'Second Option',\n  value: 'secondOption'\n}, {\n  label: 'Third Option',\n  value: 'thirdOption'\n}];\nconst targetTestDateOptions = [{\n  label: 'October 6, 2018',\n  value: 'firstAssignmentDate'\n}, {\n  label: 'Second Option',\n  value: 'secondOption'\n}, {\n  label: 'Third Option',\n  value: 'thirdOption'\n}];\n\nconst CourseContext = ({\n  state: {\n    courseStartDateOption,\n    courseStartDate,\n    courseEndDateOption,\n    courseEndDate,\n    targetTestDate,\n    targetScore,\n    highSchool,\n    graduationYear\n  },\n  handleDetailsChange\n}) => __jsx(\"div\", {\n  className: \"row mb-0 one-large-col d-flex-content\"\n}, __jsx(\"div\", {\n  className: \"col s12\"\n}, __jsx(\"div\", {\n  className: \"card-block\"\n}, __jsx(\"h2\", null, \"Course Context\"), __jsx(\"div\", {\n  className: \"card\"\n}, __jsx(\"div\", {\n  className: \"card-content\"\n}, __jsx(\"div\", {\n  className: \"course-context_two-col\"\n}, __jsx(\"div\", {\n  className: \"column\"\n}, __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"col s12\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(Dropdown, {\n  value: getValueFromState(courseStartDateOption, startDateOptions),\n  onChange: event => handleDetailsChange(event, 'courseStartDateOption', 'courseContext'),\n  options: startDateOptions,\n  label: \"Course Start Date\",\n  stateKey: \"courseStartDateOption\",\n  dropdownKey: \"courseStartDateOption\"\n})))), __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(\"div\", {\n  className: \"col s4\"\n}, __jsx(\"div\", {\n  className: \"datepicker-field input-field\"\n}, __jsx(\"i\", {\n  className: \"icon-calendar-dark\"\n}), __jsx(DatePicker, {\n  selected: courseStartDate,\n  id: \"course_start_date\",\n  onChange: event => handleDetailsChange(event, 'courseStartDate', 'courseContext')\n})))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"col s12\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(Dropdown, {\n  value: getValueFromState(courseEndDateOption, endDateOptions),\n  onChange: event => handleDetailsChange(event, 'courseEndDateOption', 'courseContext'),\n  options: endDateOptions,\n  label: \"Course End Date\",\n  stateKey: \"courseEndDateOption\",\n  dropdownKey: \"courseEndDateOption\"\n})))), __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(\"div\", {\n  className: \"col s4\"\n}, __jsx(\"div\", {\n  className: \"datepicker-field input-field\"\n}, __jsx(\"i\", {\n  className: \"icon-calendar-dark\"\n}), __jsx(DatePicker, {\n  selected: courseEndDate,\n  id: \"course_end_date\",\n  onChange: event => handleDetailsChange(event, 'courseEndDate', 'courseContext')\n}))))), __jsx(\"div\", {\n  className: \"column\"\n}, __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(\"div\", {\n  className: \"col s12 m6 l8\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(Dropdown, {\n  value: getValueFromState(targetTestDate, targetTestDateOptions),\n  onChange: event => handleDetailsChange(event, 'targetTestDate', 'courseContext'),\n  options: targetTestDateOptions,\n  label: \"Target Test Date*\",\n  stateKey: \"targetTestDate\",\n  dropdownKey: \"targetTestDate\"\n}), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\"))), __jsx(\"div\", {\n  className: \"col s12 m6 l4\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"target_score\",\n  name: \"targetScore\",\n  value: targetScore,\n  onChange: event => handleDetailsChange(event, 'targetScore', 'courseContext')\n}), __jsx(\"label\", {\n  className: targetScore.length ? 'label active' : 'label',\n  htmlFor: \"target_score\"\n}, \"Target Score*\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\")))), __jsx(\"div\", {\n  className: \"row\"\n}, __jsx(\"div\", {\n  className: \"col s12\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"high_school\",\n  name: \"highSchool\",\n  value: highSchool,\n  onChange: event => handleDetailsChange(event, 'highSchool', 'courseContext')\n}), __jsx(\"label\", {\n  className: highSchool.length ? 'label active' : 'label',\n  htmlFor: \"high_school\"\n}, \"High School*\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\")))), __jsx(\"div\", {\n  className: \"row mb-0\"\n}, __jsx(\"div\", {\n  className: \"col s12\"\n}, __jsx(\"div\", {\n  className: \"input-field focus-blue\"\n}, __jsx(\"input\", {\n  type: \"text\",\n  id: \"graduation_year\",\n  name: \"graduationYear\",\n  value: graduationYear,\n  onChange: event => handleDetailsChange(event, 'graduationYear', 'courseContext')\n}), __jsx(\"label\", {\n  className: graduationYear.length ? 'label active' : 'label',\n  htmlFor: \"graduation_year\"\n}, \"Graduation Year*\"), __jsx(\"span\", {\n  className: \"note\"\n}, \"*Optional\")))))))))));\n\nCourseContext.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired\n};\nexport default CourseContext;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/AccountPage/components/CourseContext/index.js"],"names":["React","PropTypes","dynamic","Dropdown","getValueFromState","DatePicker","ssr","startDateOptions","label","value","endDateOptions","targetTestDateOptions","CourseContext","state","courseStartDateOption","courseStartDate","courseEndDateOption","courseEndDate","targetTestDate","targetScore","highSchool","graduationYear","handleDetailsChange","event","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport dynamic from 'next/dynamic';\n\nimport Dropdown from '../../../../FormComponents/Dropdown';\nimport getValueFromState from '../../../../utils/getValueFromState';\n\nconst DatePicker = dynamic(() => import('../../../../FormComponents/DatePicker'), {\n  ssr: false,\n});\n\nconst startDateOptions = [\n  {\n    label: 'First Assignment Date (Default)',\n    value: 'firstAssignmentDate',\n  },\n  {\n    label: 'Second Option',\n    value: 'secondOption',\n  },\n  {\n    label: 'Third Option',\n    value: 'thirdOption',\n  },\n];\n\nconst endDateOptions = [\n  {\n    label: 'First Assignment Date (Default)',\n    value: 'firstAssignmentDate',\n  },\n  {\n    label: 'Second Option',\n    value: 'secondOption',\n  },\n  {\n    label: 'Third Option',\n    value: 'thirdOption',\n  },\n];\n\nconst targetTestDateOptions = [\n  {\n    label: 'October 6, 2018',\n    value: 'firstAssignmentDate',\n  },\n  {\n    label: 'Second Option',\n    value: 'secondOption',\n  },\n  {\n    label: 'Third Option',\n    value: 'thirdOption',\n  },\n];\n\nconst CourseContext = ({ state: { courseStartDateOption, courseStartDate, courseEndDateOption, courseEndDate, targetTestDate, targetScore, highSchool, graduationYear }, handleDetailsChange }) => (\n  <div className=\"row mb-0 one-large-col d-flex-content\">\n    <div className=\"col s12\">\n      <div className=\"card-block\">\n        <h2>Course Context</h2>\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"course-context_two-col\">\n              <div className=\"column\">\n                <div className=\"row mb-0\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <Dropdown\n                        value={getValueFromState(courseStartDateOption, startDateOptions)}\n                        onChange={(event) => handleDetailsChange(event, 'courseStartDateOption', 'courseContext')}\n                        options={startDateOptions}\n                        label=\"Course Start Date\"\n                        stateKey=\"courseStartDateOption\"\n                        dropdownKey=\"courseStartDateOption\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s4\">\n                    <div className=\"datepicker-field input-field\">\n                      <i className=\"icon-calendar-dark\"></i>\n                      <DatePicker\n                        selected={courseStartDate}\n                        id=\"course_start_date\"\n                        onChange={(event) => handleDetailsChange(event, 'courseStartDate', 'courseContext')}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row mb-0\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <Dropdown\n                        value={getValueFromState(courseEndDateOption, endDateOptions)}\n                        onChange={(event) => handleDetailsChange(event, 'courseEndDateOption', 'courseContext')}\n                        options={endDateOptions}\n                        label=\"Course End Date\"\n                        stateKey=\"courseEndDateOption\"\n                        dropdownKey=\"courseEndDateOption\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s4\">\n                    <div className=\"datepicker-field input-field\">\n                      <i className=\"icon-calendar-dark\"></i>\n                      <DatePicker\n                        selected={courseEndDate}\n                        id=\"course_end_date\"\n                        onChange={(event) => handleDetailsChange(event, 'courseEndDate', 'courseContext')}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column\">\n                <div className=\"row\">\n                  <div className=\"col s12 m6 l8\">\n                    <div className=\"input-field focus-blue\">\n                      <Dropdown\n                        value={getValueFromState(targetTestDate, targetTestDateOptions)}\n                        onChange={(event) => handleDetailsChange(event, 'targetTestDate', 'courseContext')}\n                        options={targetTestDateOptions}\n                        label=\"Target Test Date*\"\n                        stateKey=\"targetTestDate\"\n                        dropdownKey=\"targetTestDate\"\n                      />\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                  <div className=\"col s12 m6 l4\">\n                    <div className=\"input-field focus-blue\">\n                      <input\n                        type=\"text\"\n                        id=\"target_score\"\n                        name=\"targetScore\"\n                        value={targetScore}\n                        onChange={(event) => handleDetailsChange(event, 'targetScore', 'courseContext')}\n                      />\n                      <label className={targetScore.length ? 'label active' : 'label'} htmlFor=\"target_score\">Target Score*</label>\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <input\n                        type=\"text\"\n                        id=\"high_school\"\n                        name=\"highSchool\"\n                        value={highSchool}\n                        onChange={(event) => handleDetailsChange(event, 'highSchool', 'courseContext')}\n                      />\n                      <label className={highSchool.length ? 'label active' : 'label'} htmlFor=\"high_school\">High School*</label>\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row mb-0\">\n                  <div className=\"col s12\">\n                    <div className=\"input-field focus-blue\">\n                      <input\n                        type=\"text\"\n                        id=\"graduation_year\"\n                        name=\"graduationYear\"\n                        value={graduationYear}\n                        onChange={(event) => handleDetailsChange(event, 'graduationYear', 'courseContext')}\n                      />\n                      <label className={graduationYear.length ? 'label active' : 'label'} htmlFor=\"graduation_year\">Graduation Year*</label>\n                      <span className=\"note\">*Optional</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCourseContext.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleDetailsChange: PropTypes.func.isRequired,\n};\n\nexport default CourseContext;\n"]},"metadata":{},"sourceType":"module"}