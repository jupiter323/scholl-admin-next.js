{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport ScoredTestCard from './components/ScoredTestCard';\nimport FilterSection from './components/FilterSection';\nimport { availableDateSort, dueDateSort, completionDateSort, flagsSort } from '../utils';\n\nvar ScoredTestListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScoredTestListPage, _React$Component);\n\n  function ScoredTestListPage(props) {\n    var _this;\n\n    _classCallCheck(this, ScoredTestListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScoredTestListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        sort: '',\n        testVersionFilter: '',\n        flagFilter: false,\n        availableDateFilters: [],\n        dueDateFilters: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetDropdown\", function (dropdownIndex) {\n      return _this.setState({\n        dropdownIndex: dropdownIndex,\n        dropdownIsOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseDropdown\", function () {\n      return _this.setState({\n        dropdownIsOpen: false,\n        dropdownIndex: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (value) {\n      return _this.setState({\n        testVersionFilter: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        testVersionFilter: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEditTest\", function () {\n      return console.warn('Pending implementation edit test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetTest\", function () {\n      return console.warn('Pending implementation of reset UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteTest\", function () {\n      return console.warn('Pending implementation of delete test UI and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDownloadReport\", function () {\n      return console.warn('Pending implementation of download report ui and functionality');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortTests\", function (testSections) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'flags':\n          return testSections.sort(flagsSort);\n\n        case 'dueDate':\n          return testSections.sort(dueDateSort);\n\n        case 'availableDate':\n          return testSections.sort(availableDateSort);\n\n        case 'completionDate':\n          return testSections.sort(completionDateSort);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByTestVersion\", function () {\n      var _this$state = _this.state,\n          tests = _this$state.tests,\n          testVersionFilter = _this$state.testVersionFilter;\n      return tests.reduce(function (finalArr, currentTest) {\n        var version = currentTest.version;\n        var testString = version.replace(/\\s/g, \"\").toLowerCase();\n\n        if (testString.indexOf(testVersionFilter) !== -1 && finalArr.indexOf(currentTest) === -1) {\n          finalArr.push(currentTest);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByDate\", function (incomingTests, dateType) {\n      var _this$state2 = _this.state,\n          dueDateFilters = _this$state2.dueDateFilters,\n          availableDateFilters = _this$state2.availableDateFilters;\n      var dateFilters;\n      var tests = incomingTests;\n      var currentDate = moment().format('MM/DD/YY');\n      var currentDateIndex = new Date().getDay();\n      var endOfWeekIndex = 6 - currentDateIndex;\n      var endOfWeekDate = moment().add(endOfWeekIndex, 'days').format('MM/DD/YY');\n\n      if (dateType === 'dueDate') {\n        dateFilters = dueDateFilters;\n\n        if (dateFilters.indexOf('dueToday') !== -1) {\n          tests = tests.filter(function (test) {\n            return test.dueDate === currentDate;\n          });\n        }\n\n        if (dateFilters.indexOf('dueNextSession') !== -1) {\n          console.warn('Pending decision on how next session date is calculated');\n        }\n\n        if (dateFilters.indexOf('overdue') !== -1) {\n          tests = tests.filter(function (test) {\n            return test.dueDate < currentDate;\n          });\n        }\n\n        if (dateFilters.indexOf('dueThisWeek') !== -1) {\n          tests = tests.filter(function (test) {\n            return test.dueDate >= currentDate && test.dueDate <= endOfWeekDate;\n          });\n        }\n      } else {\n        dateFilters = availableDateFilters;\n\n        if (dateFilters.indexOf('future') !== -1) {\n          tests = tests.filter(function (test) {\n            return test.availableDate > currentDate;\n          });\n        }\n\n        if (dateFilters.indexOf('available') !== -1) {\n          tests = tests.filter(function (test) {\n            return test.availableDate <= currentDate;\n          });\n        }\n\n        if (dateFilters.indexOf('complete') !== -1) {\n          tests = tests.filter(function (test) {\n            return test.completionDate.length;\n          });\n        }\n      }\n\n      return tests;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterTests\", function () {\n      var _this$state3 = _this.state,\n          dueDateFilters = _this$state3.dueDateFilters,\n          availableDateFilters = _this$state3.availableDateFilters,\n          flagFilter = _this$state3.flagFilter,\n          allTests = _this$state3.tests;\n      var tests = allTests;\n\n      if (dueDateFilters.length) {\n        tests = _this.onFilterByDate(tests, 'dueDate');\n      }\n\n      if (availableDateFilters.length) {\n        tests = _this.onFilterByDate(tests, 'availableDate');\n      }\n\n      if (flagFilter) {\n        tests = tests.filter(function (testSection) {\n          return testSection.flags.length;\n        });\n      }\n\n      return tests;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableTests\", function () {\n      var _this$state4 = _this.state,\n          dueDateFilters = _this$state4.dueDateFilters,\n          availableDateFilters = _this$state4.availableDateFilters,\n          flagFilter = _this$state4.flagFilter,\n          sort = _this$state4.sort,\n          testVersionFilter = _this$state4.testVersionFilter,\n          tests = _this$state4.tests;\n      var mappableTests = tests;\n\n      if (testVersionFilter.length) {\n        mappableTests = _this.onFilterByTestVersion();\n      }\n\n      if (dueDateFilters.length || availableDateFilters.length || flagFilter) {\n        mappableTests = _this.onFilterTests();\n      }\n\n      if (sort) {\n        return _this.onSortTests(mappableTests);\n      }\n\n      return mappableTests;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentAvailableDateFilters = _this$state5.availableDateFilters,\n          currentDueDateFilters = _this$state5.dueDateFilters,\n          flagFilter = _this$state5.flagFilter;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'dueDate':\n          modifiedFilterCurrentState = currentDueDateFilters;\n          modifiedFilterName = 'dueDateFilters';\n          break;\n\n        case 'availableDate':\n          modifiedFilterCurrentState = currentAvailableDateFilters;\n          modifiedFilterName = 'availableDateFilters';\n          break;\n\n        case 'hasFlags':\n          return _this.setState({\n            flagFilter: !flagFilter\n          });\n\n        default:\n          break;\n      }\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapScoredTests\", function () {\n      return _this.getMappableTests().map(function (test, index) {\n        return __jsx(ScoredTestCard, {\n          test: test,\n          index: index,\n          key: test.id,\n          onEditTest: _this.onEditTest,\n          onResetTest: _this.onResetTest,\n          onDeleteTest: _this.onDeleteTest,\n          onSetDropdown: _this.onSetDropdown,\n          onCloseDropdown: _this.onCloseDropdown,\n          onDownloadReport: _this.onDownloadReport,\n          dropdownIndex: _this.state.dropdownIndex,\n          dropdownIsOpen: _this.state.dropdownIsOpen\n        });\n      });\n    });\n\n    _this.state = {\n      sort: '',\n      testVersionFilter: '',\n      availableDateFilters: [],\n      dueDateFilters: [],\n      flagFilter: false,\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      tests: _this.props.user.scoredTests\n    };\n    return _this;\n  }\n\n  _createClass(ScoredTestListPage, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(FilterSection, {\n        sort: this.state.sort,\n        onSetSort: this.onSetSort,\n        flagFilter: this.state.flagFilter,\n        onClearFilters: this.onClearFilters,\n        handleFilterClick: this.handleFilterClick,\n        dueDateFilters: this.state.dueDateFilters,\n        availableDateFilters: this.state.availableDateFilters,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState\n      }), __jsx(\"div\", {\n        className: \"content-section\"\n      }, __jsx(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapScoredTests())));\n    }\n  }]);\n\n  return ScoredTestListPage;\n}(React.Component);\n\nexport default ScoredTestListPage;","map":null,"metadata":{},"sourceType":"module"}