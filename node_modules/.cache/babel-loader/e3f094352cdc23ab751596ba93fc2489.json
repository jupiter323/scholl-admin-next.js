{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport FilterSection from '../components/Class/components/FilterSection';\nimport ClassCard from '../components/Class/components/ClassCard';\nimport sampleClassList from '../components/Class/utils/sampleClassList';\nimport NewClassModal from '../components/Class/components/NewClassModal';\nimport { classNameDescending, classNameAscending } from '../components/Class/utils/classSortOptions'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar Classes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Classes, _Component);\n\n  function Classes(props) {\n    var _this;\n\n    _classCallCheck(this, Classes);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Classes).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        nameFilter: \"\",\n        sessionFilters: [],\n        gainFilters: [],\n        statusFilters: [],\n        locationFilter: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetLocationFilter\", function (location) {\n      return _this.setState({\n        classesAreFiltered: true,\n        locationFilter: location\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (nameFilter) {\n      return _this.setState({\n        classesAreFiltered: true,\n        nameFilter: nameFilter\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function (filter) {\n      return _this.setState(_defineProperty({\n        classesAreFiltered: false\n      }, filter, ''));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenNewClassModal\", function () {\n      return _this.setState({\n        newClassModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseNewClassModal\", function () {\n      return _this.setState({\n        newClassModalOpen: false,\n        newClass: {}\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortClasses\", function (classList) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'classNameDescending':\n          return classList.sort(classNameDescending);\n\n        case 'classNameAscending':\n          return classList.sort(classNameAscending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteClass\", function (index) {\n      var classList = _this.state.classList;\n\n      var newClassArray = _this.arrayItemRemover(classList, classList[index]);\n\n      _this.setState({\n        classList: newClassArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloneClass\", function (index) {\n      var classList = _this.state.classList;\n\n      _this.setState(function (prevState) {\n        prevState.classList.push(classList[index]);\n        return {\n          classList: prevState.classList\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAddNewClass\", function (savedClass) {\n      console.log(savedClass);\n\n      _this.setState(function (prevState) {\n        prevState.classList.push(savedClass);\n        return {\n          classList: prevState.classList\n        };\n      });\n\n      _this.onCloseNewClassModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterLocations\", function () {\n      var _this$state = _this.state,\n          classList = _this$state.classList,\n          locationFilter = _this$state.locationFilter;\n      return classList.reduce(function (finalArray, currentClass) {\n        var location = currentClass.location;\n        var locationString = location.replace(/\\s/g, \"\").toLowerCase();\n\n        if (locationString.indexOf(locationFilter) !== -1 && finalArray.indexOf(currentClass) === -1) {\n          finalArray.push(currentClass);\n        }\n\n        return finalArray;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state2 = _this.state,\n          classList = _this$state2.classList,\n          nameFilter = _this$state2.nameFilter;\n      return classList.reduce(function (finalArray, currentClass) {\n        var name = currentClass.name;\n        var classString = name.replace(/\\s/g, \"\").toLowerCase();\n\n        if (classString.indexOf(nameFilter) !== -1 && finalArray.indexOf(currentClass) === -1) {\n          finalArray.push(currentClass);\n        }\n\n        return finalArray;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterClasses\", function () {\n      var _this$state3 = _this.state,\n          sessionFilters = _this$state3.sessionFilters,\n          gainFilters = _this$state3.gainFilters,\n          statusFilters = _this$state3.statusFilters,\n          locationFilter = _this$state3.locationFilter,\n          allClasses = _this$state3.classList;\n      var classes = allClasses;\n\n      if (sessionFilters.length && sessionFilters.indexOf(\"all\") === -1) {\n        classes = classes.filter(function (classItem) {\n          return sessionFilters.indexOf(classItem.session) !== -1;\n        });\n      }\n\n      if (gainFilters.length && gainFilters.indexOf('all') === -1) {\n        classes = classes.filter(function (classItem) {\n          return gainFilters.indexOf(classItem.gain) !== -1;\n        });\n      }\n\n      if (statusFilters.length && statusFilters.indexOf('all') === -1) {\n        classes = classes.filter(function (classItem) {\n          return statusFilters.indexOf(classItem.status) !== -1;\n        });\n      }\n\n      if (locationFilter.length && locationFilter.indexOf('all') === -1) {\n        classes = classes.filter(function (classItem) {\n          return locationFilter.indexOf(classItem.location) !== -1;\n        });\n      }\n\n      return classes;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableClasses\", function () {\n      var _this$state4 = _this.state,\n          sessionFilters = _this$state4.sessionFilters,\n          gainFilters = _this$state4.gainFilters,\n          statusFilters = _this$state4.statusFilters,\n          classList = _this$state4.classList,\n          nameFilter = _this$state4.nameFilter,\n          sort = _this$state4.sort,\n          locationFilter = _this$state4.locationFilter;\n      var mappableClasses = classList;\n\n      if (nameFilter.length) {\n        mappableClasses = _this.onFilterByName();\n      }\n\n      if (sessionFilters.length || gainFilters.length || statusFilters.length) {\n        mappableClasses = _this.onFilterClasses();\n      }\n\n      if (locationFilter.length) {\n        mappableClasses = _this.onFilterClasses();\n      }\n\n      if (sort) {\n        return _this.onSortClasses(mappableClasses);\n      }\n\n      return mappableClasses;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterChange\", function (event, name) {\n      var value = event.target ? event.target.value : event;\n      var updatedState = update(_this.state, {\n        $merge: _defineProperty({}, name, value)\n      });\n\n      _this.setState(updatedState);\n\n      if (name === 'name') {\n        if (event === '') {\n          return _this.onUnsetFilteredState();\n        }\n\n        return _this.onSetFilteredState(event);\n      }\n\n      if (name === 'locationFilter') {\n        if (event === \"\") {\n          return _this.onUnsetFilteredState();\n        }\n\n        return _this.onSetFilteredState(event);\n      } else if (name === 'sort') {\n        return _this.onSetSort(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentSessionFilters = _this$state5.sessionFilters,\n          currentGainFilters = _this$state5.gainFilters,\n          currentStatusFilters = _this$state5.statusFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'sessions':\n          modifiedFilterCurrentState = currentSessionFilters;\n          modifiedFilterName = 'sessionFilters';\n          break;\n\n        case 'gain':\n          modifiedFilterCurrentState = currentGainFilters;\n          modifiedFilterName = 'gainFilters';\n          break;\n\n        case 'status':\n          modifiedFilterCurrentState = currentStatusFilters;\n          modifiedFilterName = 'statusFilters';\n          break;\n\n        default:\n          break;\n      } // Decide whether we're adding or removing the selected filter\n\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapClassList\", function () {\n      return _this.getMappableClasses().map(function (classItem, index) {\n        return React.createElement(ClassCard, {\n          classItem: classItem,\n          key: classItem.name,\n          index: index,\n          onDeleteClass: function onDeleteClass() {\n            return _this.onDeleteClass(index);\n          },\n          onCloneClass: function onCloneClass() {\n            return _this.onCloneClass(index);\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"arrayItemRemover\", function (array, value) {\n      return array.filter(function (item) {\n        return item !== value;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMatchTotal\", function () {\n      if (_this.getMappableClasses().length === 1) {\n        return React.createElement(\"b\", {\n          className: \"result\"\n        }, \"- \", _this.getMappableClasses().length, \" match -\");\n      }\n\n      return React.createElement(\"b\", {\n        className: \"result\"\n      }, \"- \", _this.getMappableClasses().length, \" matches -\");\n    });\n\n    _this.state = {\n      sort: \"\",\n      classList: sampleClassList,\n      newClassModalOpen: false,\n      newClass: {},\n      nameFilter: \"\",\n      sessionFilters: [],\n      gainFilters: [],\n      statusFilters: [],\n      locationFilter: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Classes, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          newClassModalOpen = _this$state6.newClassModalOpen,\n          sessionFilters = _this$state6.sessionFilters,\n          gainFilters = _this$state6.gainFilters,\n          statusFilters = _this$state6.statusFilters;\n      return React.createElement(\"main\", {\n        id: \"main\",\n        role: \"main\"\n      }, React.createElement(\"div\", {\n        className: \"main-holder grey lighten-5 switcher-section\"\n      }, React.createElement(\"div\", {\n        className: \"title-row card-panel\"\n      }, React.createElement(\"div\", {\n        className: \"mobile-header\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-target\": \"slide-out\",\n        className: \"sidenav-trigger\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"menu\"))), React.createElement(\"nav\", {\n        className: \"breadcrumb-holder\"\n      }, React.createElement(\"div\", {\n        className: \"nav-wrapper \"\n      }, React.createElement(\"a\", {\n        href: \"#!\",\n        className: \"breadcrumb\"\n      }, \"< Classes\"))), React.createElement(\"h2\", {\n        className: \"h1 white-text\"\n      }, React.createElement(\"span\", {\n        className: \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"icon-members\"\n      }), React.createElement(\"span\", {\n        className: \"heading-block\"\n      }, \"Classes\")))), React.createElement(FilterSection, {\n        sessionFilters: sessionFilters,\n        statusFilters: statusFilters,\n        gainFilters: gainFilters,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetSort: this.onSetSort,\n        onSetLocationFilter: this.onSetLocationFilter,\n        handleFilterClick: this.handleFilterClick,\n        onClearFilters: this.onClearFilters\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"container-md\"\n      }, React.createElement(\"div\", {\n        className: \"result-row center-align\"\n      }, this.renderMatchTotal())), React.createElement(\"div\", {\n        className: \"row d-flex-content card-width-366\"\n      }, this.mapClassList())), React.createElement(\"div\", {\n        className: \"add-btn-block\"\n      }, React.createElement(NewClassModal, {\n        open: newClassModalOpen,\n        onOpenNewClassModal: this.onOpenNewClassModal,\n        onCloseNewClassModal: this.onCloseNewClassModal,\n        onAddNewClass: this.onAddNewClass\n      }), React.createElement(\"a\", {\n        href: \"#modal_add_new_class\",\n        className: \"modal-trigger waves-effect waves-teal btn add-btn\",\n        onClick: this.onOpenNewClassModal\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \" New Class\"))));\n    }\n  }]);\n\n  return Classes;\n}(Component);\n\nexport default Classes;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\pages\\classes.js"],"names":["React","Component","update","FilterSection","ClassCard","sampleClassList","NewClassModal","classNameDescending","classNameAscending","Classes","props","setState","nameFilter","sessionFilters","gainFilters","statusFilters","locationFilter","sort","location","classesAreFiltered","filter","newClassModalOpen","newClass","classList","state","index","newClassArray","arrayItemRemover","prevState","push","savedClass","console","log","onCloseNewClassModal","reduce","finalArray","currentClass","locationString","replace","toLowerCase","indexOf","name","classString","allClasses","classes","length","classItem","session","gain","status","mappableClasses","onFilterByName","onFilterClasses","onSortClasses","event","value","target","updatedState","$merge","onUnsetFilteredState","onSetFilteredState","onSetSort","filterType","currentSessionFilters","currentGainFilters","currentStatusFilters","modifiedFilterCurrentState","modifiedFilterName","modifiedFilterUpdatedState","$push","filterIndex","$splice","getMappableClasses","map","onDeleteClass","onCloneClass","array","item","onSetLocationFilter","handleFilterClick","onClearFilters","renderMatchTotal","mapClassList","onOpenNewClassModal","onAddNewClass"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport update from 'immutability-helper';\nimport FilterSection from '../components/Class/components/FilterSection';\nimport ClassCard from '../components/Class/components/ClassCard';\nimport sampleClassList from '../components/Class/utils/sampleClassList';\nimport NewClassModal from '../components/Class/components/NewClassModal';\nimport { classNameDescending, classNameAscending } from '../components/Class/utils/classSortOptions';\n// eslint-disable-next-line react/prefer-stateless-function\n\nclass Classes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: \"\",\n      classList: sampleClassList,\n      newClassModalOpen: false,\n      newClass: {},\n      nameFilter: \"\",\n      sessionFilters: [],\n      gainFilters: [],\n      statusFilters: [],\n      locationFilter: \"\",\n    };\n  }\n\n  onClearFilters = () => this.setState({ nameFilter: \"\", sessionFilters: [], gainFilters: [], statusFilters: [], locationFilter: \"\"})\n\n  onSetSort = (sort) => this.setState({ sort });\n  onSetLocationFilter = (location) => this.setState({ classesAreFiltered: true, locationFilter: location})\n\n  onSetFilteredState = (nameFilter) => this.setState({ classesAreFiltered: true, nameFilter })\n  onUnsetFilteredState = (filter) => this.setState({ classesAreFiltered: false, [filter]: '' })\n  // onSetLocationFilteredState = (locationFilter) => this.setState({classesAreFiltered: true, locationFilter})\n\n  onOpenNewClassModal = () => this.setState({newClassModalOpen: true})\n  onCloseNewClassModal = () => this.setState({newClassModalOpen: false, newClass: {}})\n\n  onSortClasses = (classList) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'classNameDescending':\n        return classList.sort(classNameDescending);\n      case 'classNameAscending':\n        return classList.sort(classNameAscending);\n      default:\n        break;\n    }\n  }\n\n  onDeleteClass = (index) => {\n    const { classList } = this.state;\n    const newClassArray = this.arrayItemRemover(classList, classList[index])\n    this.setState({classList: newClassArray})\n  }\n\n  onCloneClass = (index) => {\n    const { classList } = this.state;\n    this.setState(prevState => {\n      prevState.classList.push(classList[index]);\n      return { classList: prevState.classList}\n    })\n  }\n\n  onAddNewClass = (savedClass) => {\n    console.log(savedClass);\n      this.setState(prevState => {\n        prevState.classList.push(savedClass);\n        return { classList: prevState.classList}\n      })\n    this.onCloseNewClassModal();\n  }\n\n  onFilterLocations = () => {\n    const { classList, locationFilter} = this.state;\n    return classList.reduce((finalArray, currentClass) => {\n      const { location } = currentClass;\n      const locationString = location.replace(/\\s/g, \"\").toLowerCase();\n      if (locationString.indexOf(locationFilter) !== -1 && finalArray.indexOf(currentClass) === -1) {\n        finalArray.push(currentClass);\n      }\n      return finalArray;\n     }, []);\n  }\n\n\n  onFilterByName = () => {\n    const { classList, nameFilter } = this.state;\n    return classList.reduce((finalArray, currentClass) => {\n      const { name } = currentClass;\n      const classString = name.replace(/\\s/g, \"\").toLowerCase();\n      if (classString.indexOf(nameFilter) !==-1 && finalArray.indexOf(currentClass) === -1) {\n        finalArray.push(currentClass);\n      }\n      return finalArray;\n    }, []);\n  }\n\n  onFilterClasses = () => {\n    const { sessionFilters, gainFilters, statusFilters, locationFilter, classList: allClasses} = this.state;\n    let classes = allClasses;\n    if (sessionFilters.length && sessionFilters.indexOf(\"all\") === -1){\n      classes = classes.filter(classItem => sessionFilters.indexOf(classItem.session) !== -1);\n    }\n    if (gainFilters.length && gainFilters.indexOf('all') === -1) {\n      classes = classes.filter(classItem => gainFilters.indexOf(classItem.gain) !== -1)\n    }\n    if (statusFilters.length && statusFilters.indexOf('all') === -1) {\n      classes = classes.filter(classItem => statusFilters.indexOf(classItem.status) !== -1)\n    }\n    if (locationFilter.length && locationFilter.indexOf('all') === -1) {\n      classes = classes.filter(classItem => locationFilter.indexOf(classItem.location) !== -1)\n    }\n    return classes;\n  }\n\n  getMappableClasses = () => {\n    const { sessionFilters, gainFilters, statusFilters, classList, nameFilter, sort, locationFilter} = this.state;\n    let mappableClasses = classList;\n    if (nameFilter.length) {\n      mappableClasses = this.onFilterByName();\n    }\n    if (sessionFilters.length || gainFilters.length || statusFilters.length) {\n      mappableClasses = this.onFilterClasses();\n    }\n    if (locationFilter.length) {\n      mappableClasses = this.onFilterClasses();\n    }\n    if (sort) {\n      return this.onSortClasses(mappableClasses);\n    }\n    return mappableClasses;\n  }\n\n  handleFilterChange = (event, name) => {\n    const value = event.target ? event.target.value : event;\n    const updatedState = update(this.state, {\n      $merge: { [name]: value },\n    });\n    this.setState(updatedState);\n    if (name === 'name') {\n      if (event === '') {\n        return this.onUnsetFilteredState();\n      }\n      return this.onSetFilteredState(event);\n    }\n    if (name === 'locationFilter') {\n      if (event === \"\") {\n        return this.onUnsetFilteredState();\n      }\n      return this.onSetFilteredState(event);\n    } else if (name === 'sort') {\n      return this.onSetSort(event);\n    }\n  }\n\n  handleFilterClick = (filterType, filter) => {\n    const { sessionFilters: currentSessionFilters, gainFilters: currentGainFilters, statusFilters: currentStatusFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'sessions':\n        modifiedFilterCurrentState = currentSessionFilters;\n        modifiedFilterName = 'sessionFilters';\n        break;\n      case 'gain':\n        modifiedFilterCurrentState = currentGainFilters;\n        modifiedFilterName = 'gainFilters';\n        break;\n      case 'status':\n          modifiedFilterCurrentState = currentStatusFilters;\n          modifiedFilterName = 'statusFilters';\n          break;\n        default:\n        break;\n    }\n    // Decide whether we're adding or removing the selected filter\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  mapClassList = () => this.getMappableClasses().map((classItem, index) => (\n      <ClassCard\n        classItem={classItem}\n        key={classItem.name}\n        index={index}\n        onDeleteClass={() => this.onDeleteClass(index)}\n        onCloneClass={() => this.onCloneClass(index)}\n        />\n  ))\n\n  arrayItemRemover = (array, value) => array.filter((item) => item !== value)\n\n  renderMatchTotal = () => {\n      if (this.getMappableClasses().length === 1){\n        return <b className=\"result\">- {this.getMappableClasses().length} match -</b>\n      }\n      return  <b className=\"result\">- {this.getMappableClasses().length} matches -</b>\n  }\n\n\n  render() {\n    const { newClassModalOpen, sessionFilters, gainFilters, statusFilters } = this.state;\n    return (\n      <main id=\"main\" role=\"main\">\n        <div className=\"main-holder grey lighten-5 switcher-section\">\n          <div className=\"title-row card-panel\">\n            <div className=\"mobile-header\">\n              <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n            </div>\n            <nav className=\"breadcrumb-holder\">\n              <div className=\"nav-wrapper \">\n                <a href=\"#!\" className=\"breadcrumb\">&lt; Classes</a>\n              </div>\n            </nav>\n            <h2 className=\"h1 white-text\">\n              <span className=\"heading-holder\">\n                <i className=\"icon-members\"></i>\n                <span className=\"heading-block\">Classes</span>\n              </span>\n            </h2>\n          </div>\n          <FilterSection\n            sessionFilters={sessionFilters}\n            statusFilters={statusFilters}\n            gainFilters={gainFilters}\n            onSetFilteredState={this.onSetFilteredState}\n            onUnsetFilteredState={this.onUnsetFilteredState}\n            onSetSort={this.onSetSort}\n            onSetLocationFilter={this.onSetLocationFilter}\n            handleFilterClick={this.handleFilterClick}\n            onClearFilters={this.onClearFilters}\n\n          />\n          <div className=\"content-section\">\n            <div className=\"container-md\">\n              <div className=\"result-row center-align\">\n               {this.renderMatchTotal()}\n              </div>\n            </div>\n            <div className=\"row d-flex-content card-width-366\">\n              {this.mapClassList()}\n            </div>\n          </div>\n          <div className=\"add-btn-block\">\n            <NewClassModal\n              open={newClassModalOpen}\n              onOpenNewClassModal={this.onOpenNewClassModal}\n              onCloseNewClassModal={this.onCloseNewClassModal}\n              onAddNewClass={this.onAddNewClass}\n\n              />\n        <a href=\"#modal_add_new_class\" className=\"modal-trigger waves-effect waves-teal btn add-btn\" onClick={this.onOpenNewClassModal}><i className=\"material-icons\">add</i> New Class</a>\n      </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Classes;\n"]},"metadata":{},"sourceType":"module"}