{"ast":null,"code":"var moment = require('moment');\n\nvar uuidv4 = require('uuid/v4');\n\nvar faker = require('faker');\n\nexport default {\n  sessions: [{\n    key: uuidv4(),\n    datetime: moment().format('M/D/YYYY'),\n    // datetime: \"2/6/2019\",\n    sessions: [{\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }]\n  }, {\n    key: uuidv4(),\n    datetime: moment().add(1, 'd').format('M/D/YYYY'),\n    sessions: [{\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }, {\n      uuid: uuidv4(),\n      sessionStats: {\n        complete: Math.floor(Math.random() * 100),\n        overdue: Math.floor(Math.random() * 10),\n        practiceTests: Math.floor(Math.random() * 10),\n        sessions: Math.floor(Math.random() * 23) + 1,\n        numberOfSessions: 12,\n        sessionNumber: 10,\n        numberOfFlags: Math.floor(Math.random() * 10),\n        datetime: moment().format('M/D/YYYY @ 4:30 PM')\n      },\n      testStats: {\n        currentScore: Math.floor(Math.random() * (1510 - 1040)) + 1040,\n        initial: 1040,\n        target: 1510\n      },\n      user: {\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        initials: 'JS',\n        email: faker.internet.email()\n      }\n    }]\n  }]\n};","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Dashboard/utils/sampleUpComingSessions.js"],"names":["moment","require","uuidv4","faker","sessions","key","datetime","format","uuid","sessionStats","complete","Math","floor","random","overdue","practiceTests","numberOfSessions","sessionNumber","numberOfFlags","testStats","currentScore","initial","target","user","firstName","name","lastName","initials","email","internet","add"],"mappings":"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","sourcesContent":["const moment = require('moment');\nconst uuidv4 = require('uuid/v4');\nconst faker = require('faker');\n\nexport default {\n    sessions: [\n        {\n            key: uuidv4(),\n            datetime: moment().format('M/D/YYYY'),\n            // datetime: \"2/6/2019\",\n            sessions: [\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n            ],\n        },\n        {\n            key: uuidv4(),\n            datetime: moment().add(1, 'd').format('M/D/YYYY'),\n            sessions: [\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n                {\n                    uuid: uuidv4(),\n                    sessionStats: {\n                        complete: Math.floor(Math.random() * 100),\n                        overdue: Math.floor(Math.random() * 10),\n                        practiceTests: Math.floor(Math.random() * 10),\n                        sessions: Math.floor(Math.random() * 23) + 1,\n                        numberOfSessions: 12,\n                        sessionNumber: 10,\n                        numberOfFlags: Math.floor(Math.random() * 10),\n                        datetime: moment().format('M/D/YYYY @ 4:30 PM'),\n                    },\n                    testStats: {\n                        currentScore: Math.floor(Math.random() * (1510-1040)) + 1040,\n                        initial: 1040,\n                        target: 1510,\n                    },\n                    user: {\n                        firstName: faker.name.firstName(),\n                        lastName: faker.name.lastName(),\n                        initials: 'JS',\n                        email: faker.internet.email(),\n                    },\n                },\n            ],\n        },\n    ],\n\n}"]},"metadata":{},"sourceType":"module"}