{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { toast } from 'react-toastify';\nimport Toast from '../../Toast';\nimport StudentInformation from './components/StudentInformation';\nimport ContactInformation from './components/ContactInformation';\nimport EmailAddress from './components/EmailAddress';\nimport Location from './components/Location';\nimport Instructor from './components/Instructor';\nimport Class from './components/Class';\nimport AccountStatus from './components/AccountStatus';\nimport AccountType from './components/AccountType';\nimport CourseContext from './components/CourseContext';\nimport AccountSettings from './components/AccountSettings';\nimport Actions from './components/Actions';\nimport DeleteAccount from './components/DeleteAccount';\nimport ClassModal from '../ClassModal';\nimport LocationModal from '../../Location/components/LocationModal';\nimport InstructorModal from '../../Instructor/components/InstructorModal';\nimport { nestedEditFieldValidation } from '../../utils/fieldValidation';\n\nvar AccountPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccountPage, _React$Component);\n\n  function AccountPage(props) {\n    var _this;\n\n    _classCallCheck(this, AccountPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (!_this.state.originalUser || nextProps.user.id !== _this.state.originalUser.id) {\n        var _nextProps$user = nextProps.user;\n        _nextProps$user = _nextProps$user === void 0 ? {} : _nextProps$user;\n        var id = _nextProps$user.id,\n            studentInformation = _nextProps$user.studentInformation,\n            contactInformation = _nextProps$user.contactInformation,\n            emailAddress = _nextProps$user.emailAddress,\n            location = _nextProps$user.location,\n            instructor = _nextProps$user.instructor,\n            course = _nextProps$user.course,\n            courseContext = _nextProps$user.courseContext,\n            accountSettings = _nextProps$user.accountSettings;\n        var updatedUser = {\n          id: id,\n          studentInformation: studentInformation,\n          contactInformation: contactInformation,\n          emailAddress: emailAddress,\n          location: location,\n          instructor: instructor,\n          course: course,\n          courseContext: courseContext,\n          accountSettings: accountSettings\n        };\n        var originalUserState = _this.state.originalUser;\n        var originalUser = update(originalUserState, {\n          $merge: nextProps.user\n        });\n\n        _this.setState({\n          originalUser: originalUser,\n          updatedUser: updatedUser\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseInstructorModal\", function () {\n      return _this.setState({\n        instructorModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenClassModal\", function () {\n      return _this.setState({\n        classModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseClassModal\", function () {\n      return _this.setState({\n        classModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetValidation\", function (validation, cb) {\n      return _this.setState({\n        validation: validation\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveChanges\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedUser, valid;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n\n                updatedUser = _this.state.updatedUser;\n                _context.next = 4;\n                return nestedEditFieldValidation(_this.state, _this.state.updatedUser, _this.onSetValidation, function (validation) {\n                  return console.warn('validation', validation);\n                });\n\n              case 4:\n                valid = _context.sent;\n\n                if (!valid) {\n                  // return onSaveChangesError();\n                  console.warn('not valid');\n                }\n\n                _this.setState({\n                  originalUser: _this.state.updatedUser\n                }); // return onSavePassageChanges(updatedUser);\n\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onDeleteAccount\", function () {\n      console.warn('Stubbed out delete user');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSendWelcomeEmail\", function (event) {\n      event.preventDefault();\n      console.warn('Stubbed out send email');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSendPasswordResetEmail\", function (event) {\n      event.preventDefault();\n      console.warn('Stubbed out password reset email');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetPassword\", function (event) {\n      event.preventDefault();\n      var _this$state$actions = _this.state.actions,\n          password = _this$state$actions.password,\n          confirmPassword = _this$state$actions.confirmPassword;\n\n      if (password !== confirmPassword) {\n        console.warn('Toast is broken, have a console log'); // return this.notify\n      }\n\n      if (!confirmPassword.length) {\n        console.warn('Toast is broken, have a console log'); // return this.notify()\n      }\n\n      return console.warn('stubbed out password reset');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRemoveOption\", function (optionIndex, section, array) {\n      var updatedUser = update(_this.state.updatedUser, _defineProperty({}, section, _defineProperty({}, array, {\n        $splice: [[optionIndex, 1]]\n      })));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initialUserMount\", function () {\n      return _this.state.originalUser.id !== _this.props.user.id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleActionsChange\", function (event, name) {\n      var checkBox = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var previousActions = _this.state.actions;\n      var value;\n\n      if (checkBox) {\n        value = !previousActions.ccAdmin;\n      } else {\n        value = event.target.value;\n      }\n\n      var updatedState = update(_this.state, {\n        actions: {\n          $merge: _defineProperty({}, name, value)\n        }\n      });\n\n      _this.setState(updatedState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionsChange\", function (selectedOptions, section, array) {\n      var updatedUser = update(_this.state.updatedUser, _defineProperty({}, section, _defineProperty({}, array, {\n        $set: selectedOptions\n      })));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (event, name, section) {\n      var checkBox = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var previousUserState = _this.state.updatedUser;\n      var value;\n\n      if (checkBox) {\n        value = !previousUserState[section][name];\n      } else {\n        value = event.target ? event.target.value : event;\n      }\n\n      var updatedUser = update(previousUserState, _defineProperty({}, section, {\n        $merge: _defineProperty({}, name, value)\n      }));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _this.state = {\n      locationModalOpen: false,\n      instructorModalOpen: false,\n      classModalOpen: false,\n      originalUser: {\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: ''\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: ''\n        },\n        emailAddress: {\n          email: ''\n        },\n        location: {\n          locations: []\n        },\n        instructor: {\n          instructors: []\n        },\n        course: {\n          classes: []\n        },\n        courseContext: {\n          courseStartDateOption: '',\n          courseStartDate: '',\n          courseEndDateOption: '',\n          courseEndDate: '',\n          targetTestDate: '',\n          targetScore: '',\n          highSchool: '',\n          graduationYear: ''\n        },\n        accountSettings: {\n          loginBeforeActivation: false,\n          unstructuredCourseMode: false,\n          defaultSessionDuration: '',\n          videoSolutionsRequired: false,\n          preventLogin: false,\n          inactive: false,\n          excludeFromStatistics: false\n        }\n      },\n      updatedUser: {\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: ''\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: ''\n        },\n        emailAddress: {\n          email: ''\n        },\n        location: {\n          locations: []\n        },\n        instructor: {\n          instructors: []\n        },\n        course: {\n          classes: []\n        },\n        courseContext: {\n          courseStartDateOption: '',\n          courseStartDate: '',\n          courseEndDateOption: '',\n          courseEndDate: '',\n          targetTestDate: '',\n          targetScore: '',\n          highSchool: '',\n          graduationYear: ''\n        },\n        accountSettings: {\n          loginBeforeActivation: false,\n          unstructuredCourseMode: false,\n          defaultSessionDuration: '',\n          videoSolutionsRequired: false,\n          preventLogin: false,\n          inactive: false,\n          excludeFromStatistics: false\n        }\n      },\n      actions: {\n        ccAdmin: false,\n        requireUserToChange: false,\n        password: '',\n        confirmPassword: ''\n      },\n      validation: {\n        studentInformation: {\n          firstName: true,\n          lastName: true,\n          gender: true\n        },\n        emailAddress: {\n          email: true\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AccountPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$user = this.props.user;\n      _this$props$user = _this$props$user === void 0 ? {} : _this$props$user;\n      var id = _this$props$user.id,\n          studentInformation = _this$props$user.studentInformation,\n          contactInformation = _this$props$user.contactInformation,\n          emailAddress = _this$props$user.emailAddress,\n          location = _this$props$user.location,\n          instructor = _this$props$user.instructor,\n          course = _this$props$user.course,\n          courseContext = _this$props$user.courseContext,\n          accountSettings = _this$props$user.accountSettings;\n      var updatedUser = {\n        id: id,\n        studentInformation: studentInformation,\n        contactInformation: contactInformation,\n        emailAddress: emailAddress,\n        location: location,\n        instructor: instructor,\n        course: course,\n        courseContext: courseContext,\n        accountSettings: accountSettings\n      };\n      var originalUserState = this.state.originalUser;\n      var originalUser = update(originalUserState, {\n        $merge: updatedUser\n      });\n      this.setState({\n        originalUser: originalUser,\n        updatedUser: updatedUser\n      }); // eslint-disable-line\n    } // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the user edit page\n    // This resets the component state to reflect the details of the next user the user clicks on\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          locationModalOpen = _this$state.locationModalOpen,\n          instructorModalOpen = _this$state.instructorModalOpen,\n          classModalOpen = _this$state.classModalOpen,\n          actions = _this$state.actions,\n          _this$state$updatedUs = _this$state.updatedUser,\n          updatedStudentInformation = _this$state$updatedUs.studentInformation,\n          updatedContactInformation = _this$state$updatedUs.contactInformation,\n          updatedEmailAddress = _this$state$updatedUs.emailAddress,\n          updatedLocation = _this$state$updatedUs.location,\n          updatedInstructor = _this$state$updatedUs.instructor,\n          updatedClasses = _this$state$updatedUs.course,\n          updatedCourseContext = _this$state$updatedUs.courseContext,\n          updatedAccountSettings = _this$state$updatedUs.accountSettings;\n      var _this$props$user2 = this.props.user;\n      _this$props$user2 = _this$props$user2 === void 0 ? {} : _this$props$user2;\n      var studentInformation = _this$props$user2.studentInformation,\n          contactInformation = _this$props$user2.contactInformation,\n          emailAddress = _this$props$user2.emailAddress,\n          location = _this$props$user2.location,\n          instructor = _this$props$user2.instructor,\n          course = _this$props$user2.course,\n          courseContext = _this$props$user2.courseContext,\n          accountSettings = _this$props$user2.accountSettings,\n          accountStatus = _this$props$user2.accountStatus,\n          accountType = _this$props$user2.accountType;\n      return React.createElement(React.Fragment, null, React.createElement(Toast, null), React.createElement(ClassModal, {\n        open: classModalOpen,\n        onClose: this.onCloseClassModal,\n        handleClassChange: this.handleOptionsChange\n      }), React.createElement(LocationModal, {\n        open: locationModalOpen,\n        onClose: this.onCloseLocationModal,\n        handleLocationsChange: function handleLocationsChange(selectedLocations) {\n          return _this2.handleOptionsChange(selectedLocations, 'location', 'locations');\n        }\n      }), React.createElement(InstructorModal, {\n        open: instructorModalOpen,\n        onClose: this.onCloseInstructorModal,\n        handleInstructorsChange: function handleInstructorsChange(selectedInstructors) {\n          return _this2.handleOptionsChange(selectedInstructors, 'instructor', 'instructors');\n        }\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0 d-flex-content large\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l5\"\n      }, React.createElement(StudentInformation, {\n        state: this.initialUserMount() ? studentInformation : updatedStudentInformation,\n        handleDetailsChange: this.handleDetailsChange\n      }), React.createElement(ContactInformation, {\n        state: this.initialUserMount() ? contactInformation : updatedContactInformation,\n        handleDetailsChange: this.handleDetailsChange\n      }), React.createElement(EmailAddress, {\n        state: this.initialUserMount() ? emailAddress : updatedEmailAddress,\n        handleDetailsChange: this.handleDetailsChange\n      })), React.createElement(\"div\", {\n        className: \"col s12 l5\"\n      }, React.createElement(Location, {\n        state: this.initialUserMount() ? location : updatedLocation,\n        onOpenLocationModal: this.onOpenLocationModal,\n        onRemoveLocation: this.onRemoveOption\n      }), React.createElement(Instructor, {\n        state: this.initialUserMount() ? instructor : updatedInstructor,\n        onOpenInstructorModal: this.onOpenInstructorModal,\n        onRemoveInstructor: this.onRemoveOption\n      }), React.createElement(Class, {\n        state: this.initialUserMount() ? course : updatedClasses,\n        onOpenClassModal: this.onOpenClassModal,\n        onRemoveClass: this.onRemoveOption\n      }))), React.createElement(\"div\", {\n        className: \"row mb-0 d-flex-content large sameheight\"\n      }, React.createElement(AccountStatus, {\n        state: accountStatus\n      }), React.createElement(AccountType, {\n        state: accountType\n      })), React.createElement(CourseContext, {\n        state: this.initialUserMount() ? courseContext : updatedCourseContext,\n        handleDetailsChange: this.handleDetailsChange\n      }), React.createElement(AccountSettings, {\n        state: this.initialUserMount() ? accountSettings : updatedAccountSettings,\n        handleDetailsChange: this.handleDetailsChange\n      }), React.createElement(Actions, {\n        state: actions,\n        handleActionsChange: this.handleActionsChange,\n        onResetPassword: this.onResetPassword,\n        onSendWelcomeEmail: this.onSendWelcomeEmail,\n        onSendPasswordResetEmail: this.onSendPasswordResetEmail\n      }), React.createElement(DeleteAccount, {\n        activeButton: accountStatus.status !== 'Activated',\n        onDeleteAccount: this.onDeleteAccount\n      }), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onSaveChanges,\n        className: \"btn\"\n      }, \"Save\"))));\n    }\n  }]);\n\n  return AccountPage;\n}(React.Component);\n\nAccountPage.propTypes = {\n  user: PropTypes.object\n};\nexport default AccountPage;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\AccountPage\\index.js"],"names":["React","PropTypes","update","toast","Toast","StudentInformation","ContactInformation","EmailAddress","Location","Instructor","Class","AccountStatus","AccountType","CourseContext","AccountSettings","Actions","DeleteAccount","ClassModal","LocationModal","InstructorModal","nestedEditFieldValidation","AccountPage","props","nextProps","state","originalUser","user","id","studentInformation","contactInformation","emailAddress","location","instructor","course","courseContext","accountSettings","updatedUser","originalUserState","$merge","setState","locationModalOpen","instructorModalOpen","classModalOpen","validation","cb","event","preventDefault","onSetValidation","console","warn","valid","actions","password","confirmPassword","length","optionIndex","section","array","$splice","name","checkBox","previousActions","value","ccAdmin","target","updatedState","selectedOptions","$set","previousUserState","firstName","lastName","gender","phone","addressLine1","addressLine2","city","zipCode","email","locations","instructors","classes","courseStartDateOption","courseStartDate","courseEndDateOption","courseEndDate","targetTestDate","targetScore","highSchool","graduationYear","loginBeforeActivation","unstructuredCourseMode","defaultSessionDuration","videoSolutionsRequired","preventLogin","inactive","excludeFromStatistics","requireUserToChange","updatedStudentInformation","updatedContactInformation","updatedEmailAddress","updatedLocation","updatedInstructor","updatedClasses","updatedCourseContext","updatedAccountSettings","accountStatus","accountType","onCloseClassModal","handleOptionsChange","onCloseLocationModal","selectedLocations","onCloseInstructorModal","selectedInstructors","initialUserMount","handleDetailsChange","onOpenLocationModal","onRemoveOption","onOpenInstructorModal","onOpenClassModal","handleActionsChange","onResetPassword","onSendWelcomeEmail","onSendPasswordResetEmail","status","onDeleteAccount","onSaveChanges","Component","propTypes","object"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { toast } from 'react-toastify';\n\nimport Toast from '../../Toast';\nimport StudentInformation from './components/StudentInformation';\nimport ContactInformation from './components/ContactInformation';\nimport EmailAddress from './components/EmailAddress';\nimport Location from './components/Location';\nimport Instructor from './components/Instructor';\nimport Class from './components/Class';\nimport AccountStatus from './components/AccountStatus';\nimport AccountType from './components/AccountType';\nimport CourseContext from './components/CourseContext';\nimport AccountSettings from './components/AccountSettings';\nimport Actions from './components/Actions';\nimport DeleteAccount from './components/DeleteAccount';\n\nimport ClassModal from '../ClassModal';\nimport LocationModal from '../../Location/components/LocationModal';\nimport InstructorModal from '../../Instructor/components/InstructorModal';\n\nimport { nestedEditFieldValidation } from '../../utils/fieldValidation';\n\nclass AccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locationModalOpen: false,\n      instructorModalOpen: false,\n      classModalOpen: false,\n      originalUser: {\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: '',\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: '',\n        },\n        emailAddress: {\n          email: '',\n        },\n        location: {\n          locations: [],\n        },\n        instructor: {\n          instructors: [],\n        },\n        course: {\n          classes: [],\n        },\n        courseContext: {\n          courseStartDateOption: '',\n          courseStartDate: '',\n          courseEndDateOption: '',\n          courseEndDate: '',\n          targetTestDate: '',\n          targetScore: '',\n          highSchool: '',\n          graduationYear: '',\n        },\n        accountSettings: {\n          loginBeforeActivation: false,\n          unstructuredCourseMode: false,\n          defaultSessionDuration: '',\n          videoSolutionsRequired: false,\n          preventLogin: false,\n          inactive: false,\n          excludeFromStatistics: false,\n        },\n      },\n      updatedUser: {\n        studentInformation: {\n          firstName: '',\n          lastName: '',\n          gender: '',\n        },\n        contactInformation: {\n          phone: '',\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          state: '',\n          zipCode: '',\n        },\n        emailAddress: {\n          email: '',\n        },\n        location: {\n          locations: [],\n        },\n        instructor: {\n          instructors: [],\n        },\n        course: {\n          classes: [],\n        },\n        courseContext: {\n          courseStartDateOption: '',\n          courseStartDate: '',\n          courseEndDateOption: '',\n          courseEndDate: '',\n          targetTestDate: '',\n          targetScore: '',\n          highSchool: '',\n          graduationYear: '',\n        },\n        accountSettings: {\n          loginBeforeActivation: false,\n          unstructuredCourseMode: false,\n          defaultSessionDuration: '',\n          videoSolutionsRequired: false,\n          preventLogin: false,\n          inactive: false,\n          excludeFromStatistics: false,\n        },\n      },\n      actions: {\n        ccAdmin: false,\n        requireUserToChange: false,\n        password: '',\n        confirmPassword: '',\n      },\n      validation: {\n        studentInformation: {\n          firstName: true,\n          lastName: true,\n          gender: true,\n        },\n        emailAddress: {\n          email: true,\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    const { user: { id, studentInformation, contactInformation, emailAddress, location, instructor, course, courseContext, accountSettings } = {} } = this.props;\n    const updatedUser = { id, studentInformation, contactInformation, emailAddress, location, instructor, course, courseContext, accountSettings };\n    const { originalUser: originalUserState } = this.state;\n    const originalUser = update(originalUserState, {\n      $merge: updatedUser,\n    });\n    this.setState({ originalUser, updatedUser }); // eslint-disable-line\n  }\n\n  // TODO: This seems to be working well - confirm that only one isntance of this edit modal is opening on the user edit page\n  // This resets the component state to reflect the details of the next user the user clicks on\n  componentWillReceiveProps = (nextProps) => {\n    if ((!this.state.originalUser || nextProps.user.id !== this.state.originalUser.id)) {\n      const { user: { id, studentInformation, contactInformation, emailAddress, location, instructor, course, courseContext, accountSettings } = {} } = nextProps;\n      const updatedUser = { id, studentInformation, contactInformation, emailAddress, location, instructor, course, courseContext, accountSettings };\n      const { originalUser: originalUserState } = this.state;\n      const originalUser = update(originalUserState, {\n        $merge: nextProps.user,\n      });\n      this.setState({ originalUser, updatedUser });\n    }\n  }\n\n  onOpenLocationModal = () => this.setState({ locationModalOpen: true });\n  onCloseLocationModal = () => this.setState({ locationModalOpen: false });\n\n  onOpenInstructorModal = () => this.setState({ instructorModalOpen: true });\n  onCloseInstructorModal = () => this.setState({ instructorModalOpen: false });\n\n  onOpenClassModal = () => this.setState({ classModalOpen: true });\n  onCloseClassModal = () => this.setState({ classModalOpen: false });\n\n  // This function is passed into nestedCreateFieldValidation, it takes the result of the validation check and a callback function\n  // The updated component validation state is set and then the callback is dispatched - in this case, the callback handles the toast warning at the container level\n  onSetValidation = (validation, cb) => this.setState({ validation }, cb);\n\n  // TODO: Clean this up once the react toast bugs are fixed. Just logging the validation response for now\n  onSaveChanges = async (event) => {\n    event.preventDefault();\n    // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n    const { updatedUser } = this.state;\n    const valid = await nestedEditFieldValidation(this.state, this.state.updatedUser, this.onSetValidation, (validation) => console.warn('validation', validation));\n    if (!valid) {\n      // return onSaveChangesError();\n      console.warn('not valid');\n    }\n    this.setState({ originalUser: this.state.updatedUser });\n    // return onSavePassageChanges(updatedUser);\n  }\n\n  onDeleteAccount = () => {\n    console.warn('Stubbed out delete user');\n  }\n\n  onSendWelcomeEmail = (event) => {\n    event.preventDefault();\n    console.warn('Stubbed out send email');\n  }\n\n  onSendPasswordResetEmail = (event) => {\n    event.preventDefault();\n    console.warn('Stubbed out password reset email');\n  }\n\n  onResetPassword = (event) => {\n    event.preventDefault();\n    const { actions: { password, confirmPassword } } = this.state;\n    if (password !== confirmPassword) {\n      console.warn('Toast is broken, have a console log');\n      // return this.notify\n    }\n    if (!confirmPassword.length) {\n      console.warn('Toast is broken, have a console log');\n      // return this.notify()\n    }\n    return console.warn('stubbed out password reset');\n  }\n\n  onRemoveOption = (optionIndex, section, array) => {\n    const updatedUser = update(this.state.updatedUser, {\n      [section]: {\n        [array]: {\n          $splice: [[optionIndex, 1]],\n        },\n      },\n    });\n    this.setState({ updatedUser });\n  }\n\n  initialUserMount = () => this.state.originalUser.id !== this.props.user.id;\n\n  handleActionsChange = (event, name, checkBox = false) => {\n    const { actions: previousActions } = this.state;\n    let value;\n    if (checkBox) {\n      value = !previousActions.ccAdmin;\n    } else {\n      value = event.target.value;\n    }\n    const updatedState = update(this.state, {\n      actions: { $merge: { [name]: value } },\n    });\n    this.setState(updatedState);\n  }\n\n  handleOptionsChange = (selectedOptions, section, array) => {\n    const updatedUser = update(this.state.updatedUser, {\n      [section]: {\n        [array]: {\n          $set: selectedOptions,\n        },\n      },\n    });\n    this.setState({ updatedUser });\n  }\n\n  // Checkbox is passed in as a boolean to avoid creating a mostly similar function just for the active checkbox\n  // We pull the value based on the field type then merge that updated key/value pair with the last version of component state\n  handleDetailsChange = (event, name, section, checkBox = false) => {\n    const { updatedUser: previousUserState } = this.state;\n    let value;\n    if (checkBox) {\n      value = !previousUserState[section][name];\n    } else {\n      value = event.target ? event.target.value : event;\n    }\n    const updatedUser = update(previousUserState, {\n      [section]: { $merge: { [name]: value } },\n    });\n    this.setState({ updatedUser });\n  }\n\n  render() {\n    const { locationModalOpen, instructorModalOpen, classModalOpen, actions,\n      updatedUser: { studentInformation: updatedStudentInformation, contactInformation: updatedContactInformation, emailAddress: updatedEmailAddress, location: updatedLocation,\n        instructor: updatedInstructor, course: updatedClasses, courseContext: updatedCourseContext, accountSettings: updatedAccountSettings } } = this.state;\n    const { user: { studentInformation, contactInformation, emailAddress, location, instructor, course, courseContext, accountSettings, accountStatus, accountType } = {} } = this.props;\n    return (\n      <React.Fragment>\n        <Toast />\n        <ClassModal\n          open={classModalOpen}\n          onClose={this.onCloseClassModal}\n          handleClassChange={this.handleOptionsChange}\n        />\n        <LocationModal\n          open={locationModalOpen}\n          onClose={this.onCloseLocationModal}\n          handleLocationsChange={(selectedLocations) => this.handleOptionsChange(selectedLocations, 'location', 'locations')}\n        />\n        <InstructorModal\n          open={instructorModalOpen}\n          onClose={this.onCloseInstructorModal}\n          handleInstructorsChange={(selectedInstructors) => this.handleOptionsChange(selectedInstructors, 'instructor', 'instructors')}\n        />\n        <div className=\"content-section\">\n          <div className=\"content-section-holder\">\n            <div className=\"row mb-0 d-flex-content large\">\n              <div className=\"col s12 l5\">\n                <StudentInformation\n                  state={this.initialUserMount() ? studentInformation : updatedStudentInformation}\n                  handleDetailsChange={this.handleDetailsChange}\n                />\n                <ContactInformation\n                  state={this.initialUserMount() ? contactInformation : updatedContactInformation}\n                  handleDetailsChange={this.handleDetailsChange}\n                />\n                <EmailAddress\n                  state={this.initialUserMount() ? emailAddress : updatedEmailAddress}\n                  handleDetailsChange={this.handleDetailsChange}\n                />\n              </div>\n              <div className=\"col s12 l5\">\n                <Location\n                  state={this.initialUserMount() ? location : updatedLocation}\n                  onOpenLocationModal={this.onOpenLocationModal}\n                  onRemoveLocation={this.onRemoveOption}\n                />\n                <Instructor\n                  state={this.initialUserMount() ? instructor : updatedInstructor}\n                  onOpenInstructorModal={this.onOpenInstructorModal}\n                  onRemoveInstructor={this.onRemoveOption}\n                />\n                <Class\n                  state={this.initialUserMount() ? course : updatedClasses}\n                  onOpenClassModal={this.onOpenClassModal}\n                  onRemoveClass={this.onRemoveOption}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-0 d-flex-content large sameheight\">\n              <AccountStatus\n                state={accountStatus}\n              />\n              <AccountType\n                state={accountType}\n              />\n            </div>\n            <CourseContext\n              state={this.initialUserMount() ? courseContext : updatedCourseContext}\n              handleDetailsChange={this.handleDetailsChange}\n            />\n            <AccountSettings\n              state={this.initialUserMount() ? accountSettings : updatedAccountSettings}\n              handleDetailsChange={this.handleDetailsChange}\n            />\n            <Actions\n              state={actions}\n              handleActionsChange={this.handleActionsChange}\n              onResetPassword={this.onResetPassword}\n              onSendWelcomeEmail={this.onSendWelcomeEmail}\n              onSendPasswordResetEmail={this.onSendPasswordResetEmail}\n            />\n            <DeleteAccount\n              activeButton={accountStatus.status !== 'Activated'}\n              onDeleteAccount={this.onDeleteAccount}\n            />\n            <a\n              href=\"#\"\n              onClick={this.onSaveChanges}\n              className=\"btn\"\n            >\n            Save\n            </a>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nAccountPage.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default AccountPage;\n"]},"metadata":{},"sourceType":"module"}