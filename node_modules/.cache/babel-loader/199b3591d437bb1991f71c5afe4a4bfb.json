{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nvar PracticeQuestions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PracticeQuestions, _React$Component);\n\n  function PracticeQuestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PracticeQuestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PracticeQuestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapQuestions\", function () {\n      return _this.props.questions.map(function (question) {\n        return React.createElement(Question, {\n          key: question.id,\n          question: question,\n          answerSheetComplete: _this.props.answerSheetComplete,\n          onOpenQuestionModal: _this.props.onOpenQuestionModal\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PracticeQuestions, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"col s12 l6\"\n      }, React.createElement(\"div\", {\n        className: \"card-block\"\n      }, React.createElement(\"h2\", null, \"Practice\"), React.createElement(\"div\", {\n        className: \"card\"\n      }, React.createElement(\"div\", {\n        className: \"card-content\"\n      }, React.createElement(\"ol\", {\n        className: \"answers-list\"\n      }, this.mapQuestions())))));\n    }\n  }]);\n\n  return PracticeQuestions;\n}(React.Component);\n\nPracticeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired\n};\nexport default PracticeQuestions;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/LessonDetailAnswerSheet/components/PracticeQuestions/index.js"],"names":["React","PropTypes","Question","PracticeQuestions","props","questions","map","question","id","answerSheetComplete","onOpenQuestionModal","mapQuestions","Component","propTypes","array","isRequired","bool","func"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;;IAEMC,iB;;;;;;;;;;;;;;;;;;mEACW;AAAA,aAAM,MAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,QAAQ;AAAA,eACpD,oBAAC,QAAD;AACE,UAAA,GAAG,EAAEA,QAAQ,CAACC,EADhB;AAEE,UAAA,QAAQ,EAAED,QAFZ;AAGE,UAAA,mBAAmB,EAAE,MAAKH,KAAL,CAAWK,mBAHlC;AAIE,UAAA,mBAAmB,EAAE,MAAKL,KAAL,CAAWM;AAJlC,UADoD;AAAA,OAAjC,CAAN;AAAA,K;;;;;;;6BASN;AACP,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,2CADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACG,KAAKC,YAAL,EADH,CADF,CADF,CAFF,CADF,CADF;AAcD;;;;EAzB6BX,KAAK,CAACY,S;;AA4BtCT,iBAAiB,CAACU,SAAlB,GAA8B;AAC5BR,EAAAA,SAAS,EAAEJ,SAAS,CAACa,KAAV,CAAgBC,UADC;AAE5BN,EAAAA,mBAAmB,EAAER,SAAS,CAACe,IAAV,CAAeD,UAFR;AAG5BL,EAAAA,mBAAmB,EAAET,SAAS,CAACgB,IAAV,CAAeF;AAHR,CAA9B;AAMA,eAAeZ,iBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nclass PracticeQuestions extends React.Component {\n  mapQuestions = () => this.props.questions.map(question => (\n    <Question\n      key={question.id}\n      question={question}\n      answerSheetComplete={this.props.answerSheetComplete}\n      onOpenQuestionModal={this.props.onOpenQuestionModal}\n    />\n  ))\n\n  render() {\n    return (\n      <div className=\"col s12 l6\">\n        <div className=\"card-block\">\n          <h2>Practice</h2>\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <ol className=\"answers-list\">\n                {this.mapQuestions()}\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPracticeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired,\n};\n\nexport default PracticeQuestions;\n"]},"metadata":{},"sourceType":"module"}