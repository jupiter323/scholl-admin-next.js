{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nconst getIndicatorStatus = (activeSection, active) => ({\n  left: activeSection === 'subjectScores' ? '50%' : '0',\n  right: activeSection === 'subjectScores' ? '0' : '50%',\n  backgroundColor: active ? '#00bbf7' : '#b2b2b2'\n}); // TODO: Implement final line chart data implementation later\n\n\nclass TestScores extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetOpenSection\", (event, openSection) => {\n      event.preventDefault();\n      this.setState({\n        openSection\n      });\n    });\n\n    this.state = {\n      openSection: 'compositeScore'\n    };\n  }\n\n  render() {\n    const {\n      openSection\n    } = this.state;\n    const {\n      state: {\n        compositeScore,\n        subjectScores\n      },\n      active\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"col s12 l7 card-width-747\"\n    }, React.createElement(\"div\", {\n      className: \"card-main card card-chart\"\n    }, React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"h2\", null, \"Test Scores\"), React.createElement(\"div\", {\n      className: \"tabs-container tabs-charts-container\"\n    }, !active ? React.createElement(\"div\", {\n      className: \"card-note-box\",\n      style: {\n        display: 'block'\n      }\n    }, React.createElement(\"span\", {\n      className: \"title\"\n    }, \"Nothing to see here yet.\"), React.createElement(\"span\", {\n      className: \"text-frame\"\n    }, \"Once this student has taken multiple tests, you can track the progress here. \")) : null, React.createElement(\"ul\", {\n      className: \"tabs\",\n      style: {\n        filter: !active ? 'blur(3px)' : \"\"\n      }\n    }, React.createElement(\"li\", {\n      className: \"tab col s6 l6\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: event => this.onSetOpenSection(event, 'compositeScore'),\n      className: openSection === 'compositeScore' ? 'active' : ''\n    }, \"Composite Score\")), React.createElement(\"li\", {\n      className: \"tab col s6 l6\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: event => this.onSetOpenSection(event, 'subjectScores'),\n      className: openSection === 'subjectScores' ? 'active' : ''\n    }, \"Subject Scores\")), React.createElement(\"li\", {\n      className: \"indicator\",\n      style: getIndicatorStatus(openSection, active)\n    })), React.createElement(\"div\", {\n      id: \"scores_tab01\",\n      className: openSection === 'compositeScore' ? '' : 'tab-content',\n      style: active ? {} : {\n        filter: 'blur(3px)'\n      }\n    }, React.createElement(\"div\", {\n      className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n    }, React.createElement(\"ul\", {\n      className: \"panel-list\"\n    }, React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Reading\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.reading) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Writing\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.writing) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Math\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.math) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Composite\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.composite) : null))), React.createElement(\"div\", {\n      className: \"chart-line-container js-scrollable-chart\"\n    }, React.createElement(Line, {\n      data: data\n    }))), React.createElement(\"div\", {\n      id: \"scores_tab02\",\n      className: openSection === 'subjectScores' ? '' : 'tab-content',\n      style: active ? {} : {\n        filter: 'blur(3px)'\n      }\n    }, React.createElement(\"div\", {\n      className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n    }, React.createElement(\"ul\", {\n      className: \"panel-list\"\n    }, React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Reading\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.reading) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Writing\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.writing) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Math\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.math) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Composite\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.composite) : null))), React.createElement(\"div\", {\n      className: \"chart-line-container js-scrollable-chart\"\n    }, React.createElement(Line, {\n      data: data\n    })))))));\n  }\n\n}\n\n;\nexport default TestScores;","map":null,"metadata":{},"sourceType":"module"}