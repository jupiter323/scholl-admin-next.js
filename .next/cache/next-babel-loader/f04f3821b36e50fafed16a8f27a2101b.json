{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassCard from \"./components/ClassCard\";\nimport FilterSection from \"./components/FilterSection\";\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\nimport ClassModal from \"../ClassModal\";\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetFilteredLocationState\", filterLocation => this.setState({\n      classesAreFiltered: true,\n      filterLocation\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredLocationState\", () => this.setState({\n      filterLocation: \"\"\n    }, this.checkForFilteredState));\n\n    _defineProperty(this, \"onSetDropdown\", dropdownIndex => this.setState({\n      dropdownIsOpen: true,\n      dropdownIndex\n    }));\n\n    _defineProperty(this, \"onCloseDropdown\", () => this.setState({\n      dropdownIsOpen: false,\n      dropdownIndex: null\n    }));\n\n    _defineProperty(this, \"onCloneClass\", index => {\n      const {\n        onCloneClass\n      } = this.props;\n      this.onCloseDropdown();\n      onCloneClass(index);\n    });\n\n    _defineProperty(this, \"onDeleteClass\", index => {\n      const {\n        onDeleteClass\n      } = this.props;\n      this.onCloseDropdown();\n      onDeleteClass(index);\n    });\n\n    _defineProperty(this, \"checkForFilteredState\", () => {\n      const {\n        filterName,\n        filterLocation\n      } = this.state;\n\n      if (!filterName.length && !filterLocation.length) {\n        this.setState({\n          classesAreFiltered: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"onOpenClassModal\", event => {\n      event.preventDefault();\n      this.setState({\n        classModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"onSetSort\", sort => this.setState({\n      sort\n    }));\n\n    _defineProperty(this, \"onSetFilteredState\", filterName => this.setState({\n      classesAreFiltered: true,\n      filterName\n    }));\n\n    _defineProperty(this, \"onUnsetFilteredState\", () => this.setState({\n      classesAreFiltered: false,\n      filterName: ''\n    }));\n\n    _defineProperty(this, \"onFilterByName\", () => {\n      const {\n        classes\n      } = this.props;\n      const {\n        filterName\n      } = this.state;\n      return classes.reduce((finalArr, currentClass) => {\n        const {\n          accountInfo: {\n            lastName,\n            firstName\n          }\n        } = currentClass;\n        const classString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n\n        if (classString.indexOf(filterName) !== -1 && finalArr.indexOf(currentClass) === -1) {\n          finalArr.push(currentClass);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onFilterByLocation\", (preFilteredClasses = []) => {\n      const {\n        classes: allClasses\n      } = this.props;\n      const {\n        filterLocation\n      } = this.state;\n      let classes;\n\n      if (preFilteredClasses.length) {\n        classes = preFilteredClasses;\n      } else {\n        classes = allClasses;\n      }\n\n      return classes.reduce((finalArr, currentInstructor) => {\n        const {\n          contactInfo: {\n            city\n          }\n        } = currentInstructor;\n\n        if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n          finalArr.push(currentInstructor);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(this, \"onSortClasses\", classes => {\n      const {\n        sort\n      } = this.state;\n\n      switch (sort) {\n        case 'firstNameAscending':\n          return classes.sort(firstNameAscending);\n\n        case 'firstNameDescending':\n          return classes.sort(firstNameDescending);\n\n        case 'lastNameAscending':\n          return classes.sort(lastNameAscending);\n\n        case 'lastNameDescending':\n          return classes.sort(lastNameDescending);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"getMappableClasses\", () => {\n      const {\n        filterName,\n        filterLocation,\n        sort\n      } = this.state;\n      const {\n        classes: allClasses\n      } = this.props;\n      let classes;\n\n      if (filterName.length && !filterLocation.length) {\n        classes = this.onFilterByName();\n      } else if (!filterName.length && filterLocation.length) {\n        classes = this.onFilterByLocation();\n      } else if (filterName.length && filterLocation.length) {\n        const filteredByName = this.onFilterByName();\n        classes = this.onFilterByLocation(filteredByName);\n      } else {\n        classes = allClasses;\n      }\n\n      if (sort) {\n        return this.onSortClasses(classes);\n      }\n\n      return classes;\n    });\n\n    _defineProperty(this, \"onCloseClassModal\", () => this.setState({\n      classModalOpen: false\n    }));\n\n    _defineProperty(this, \"mapClassCards\", () => {\n      const classes = this.getMappableClasses();\n      return classes.map((item, index) => __jsx(ClassCard, {\n        key: index,\n        index: index,\n        classroom: item,\n        onSetDropdown: this.onSetDropdown,\n        onCloseDropdown: this.onCloseDropdown,\n        onCloneClass: () => this.onCloneClass(index),\n        onDeleteClass: () => this.onDeleteClass(index),\n        dropdownIsOpen: this.state.dropdownIsOpen,\n        dropdownIndex: this.state.dropdownIndex,\n        onHandleClassCard: () => this.props.onHandleClassCard(index),\n        onSaveClassChanges: this.props.onSaveClassChanges\n      }));\n    });\n\n    this.state = {\n      classesAreFiltered: false,\n      filterName: \"\",\n      filterLocation: '',\n      sort: '',\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      classModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      classModalOpen\n    } = this.state;\n    const {\n      onSaveNewClass\n    } = this.props;\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"title-row card-panel\"\n    }, __jsx(\"div\", {\n      className: \"mobile-header\"\n    }, __jsx(\"a\", {\n      href: \"#\",\n      \"data-target\": \"slide-out\",\n      className: \"sidenav-trigger\"\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"menu\"))), __jsx(\"nav\", {\n      className: \"breadcrumb-holder\"\n    }, __jsx(\"div\", {\n      className: \"nav-wrapper \"\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      className: \"breadcrumb\"\n    }, \"< Classes\"))), __jsx(\"h2\", {\n      className: \"h1 white-text\"\n    }, __jsx(\"span\", {\n      className: \"heading-holder\"\n    }, __jsx(\"i\", {\n      className: \"icon-members\"\n    }), __jsx(\"span\", {\n      className: \"heading-block\"\n    }, \"Classes\")))), __jsx(FilterSection, {\n      onSetSort: this.onSetSort,\n      onSetFilteredState: this.onSetFilteredState,\n      onUnsetFilteredState: this.onUnsetFilteredState,\n      onSetFilteredLocationState: this.onSetFilteredLocationState,\n      onUnsetFilteredLocationState: this.onUnsetFilteredLocationState\n    }), __jsx(\"div\", {\n      className: \"content-section\"\n    }, __jsx(\"div\", {\n      className: \"container-md\"\n    }, __jsx(\"div\", {\n      className: \"result-row center-align\"\n    }, __jsx(\"b\", {\n      className: \"result\"\n    }, \"- 23 matches -\"))), __jsx(\"div\", {\n      className: \"row d-flex-content card-width-366\"\n    }, this.mapClassCards())), __jsx(\"div\", {\n      className: \"add-btn-block\"\n    }, __jsx(\"a\", {\n      href: \"#modal_add_new_class\",\n      className: \"modal-trigger waves-effect waves-teal btn add-btn\",\n      onClick: () => this.onOpenClassModal(event)\n    }, __jsx(\"i\", {\n      className: \"material-icons\"\n    }, \"add\"), \" New Class\")), __jsx(ClassModal, {\n      open: classModalOpen,\n      onClose: this.onCloseClassModal,\n      onSave: onSaveNewClass\n    }));\n  }\n\n}\n\nListPage.propTypes = {\n  classes: PropTypes.array.isRequired,\n  onHandleClassCard: PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass: PropTypes.func.isRequired,\n  onSaveNewClass: PropTypes.func.isRequired,\n  onSaveClassChanges: PropTypes.func.isRequired\n};\nexport default ListPage;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Classes/ListPage/index.js"],"names":["React","PropTypes","ClassCard","FilterSection","firstNameAscending","firstNameDescending","lastNameAscending","lastNameDescending","ClassModal","ListPage","Component","constructor","props","filterLocation","setState","classesAreFiltered","checkForFilteredState","dropdownIndex","dropdownIsOpen","index","onCloneClass","onCloseDropdown","onDeleteClass","filterName","state","length","event","preventDefault","classModalOpen","sort","classes","reduce","finalArr","currentClass","accountInfo","lastName","firstName","classString","toLowerCase","indexOf","push","preFilteredClasses","allClasses","currentInstructor","contactInfo","city","onFilterByName","onFilterByLocation","filteredByName","onSortClasses","getMappableClasses","map","item","onSetDropdown","onHandleClassCard","onSaveClassChanges","render","onSaveNewClass","onSetSort","onSetFilteredState","onUnsetFilteredState","onSetFilteredLocationState","onUnsetFilteredLocationState","mapClassCards","onOpenClassModal","onCloseClassModal","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ClassCard from \"./components/ClassCard\";\nimport FilterSection from \"./components/FilterSection\";\nimport { firstNameAscending, firstNameDescending, lastNameAscending, lastNameDescending } from '../../utils/sortFunctions';\nimport ClassModal from \"../ClassModal\";\n\n\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classesAreFiltered: false,\n      filterName: \"\",\n      filterLocation: '',\n      sort: '',\n      dropdownIndex: null,\n      dropdownIsOpen: false,\n      classModalOpen: false,\n    };\n  }\n\n  onSetFilteredLocationState = filterLocation => this.setState({ classesAreFiltered: true, filterLocation });\n\n  onUnsetFilteredLocationState = () => this.setState({ filterLocation: \"\" }, this.checkForFilteredState);\n\n  onSetDropdown = dropdownIndex => this.setState({ dropdownIsOpen: true, dropdownIndex });\n\n  onCloseDropdown = () => this.setState({ dropdownIsOpen: false, dropdownIndex: null });\n\n  onCloneClass = index => {\n    const { onCloneClass } = this.props;\n    this.onCloseDropdown();\n    onCloneClass(index);\n  };\n\n  onDeleteClass = index => {\n    const { onDeleteClass } = this.props;\n    this.onCloseDropdown();\n    onDeleteClass(index);\n  };\n\n  checkForFilteredState = () => {\n    const { filterName, filterLocation } = this.state;\n    if (!filterName.length && !filterLocation.length) {\n      this.setState({ classesAreFiltered: false });\n    }\n  };\n\n  onOpenClassModal = event => {\n    event.preventDefault();\n    this.setState({ classModalOpen: true });\n  };\n\n  onSetSort = (sort) => this.setState({ sort })\n\n  onSetFilteredState = (filterName) => this.setState({ classesAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ classesAreFiltered: false, filterName: '' })\n\n  onFilterByName = () => {\n    const { classes } = this.props;\n    const { filterName } = this.state;\n    return classes.reduce((finalArr, currentClass) => {\n      const { accountInfo: { lastName, firstName } } = currentClass;\n      const classString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (classString.indexOf(filterName) !== -1 && finalArr.indexOf(currentClass) === -1) {\n        finalArr.push(currentClass);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByLocation = (preFilteredClasses = []) => {\n    const { classes: allClasses } = this.props;\n    const { filterLocation } = this.state;\n    let classes;\n    if (preFilteredClasses.length) {\n      classes = preFilteredClasses;\n    } else {\n      classes = allClasses;\n    }\n    return classes.reduce((finalArr, currentInstructor) => {\n      const { contactInfo: { city } } = currentInstructor;\n      if (city === filterLocation && finalArr.indexOf(currentInstructor) === -1) {\n        finalArr.push(currentInstructor);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortClasses = (classes) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'firstNameAscending':\n        return classes.sort(firstNameAscending);\n      case 'firstNameDescending':\n        return classes.sort(firstNameDescending);\n      case 'lastNameAscending':\n        return classes.sort(lastNameAscending);\n      case 'lastNameDescending':\n        return classes.sort(lastNameDescending);\n      default:\n        break;\n    }\n  }\n\n  getMappableClasses = () => {\n    const { filterName, filterLocation, sort } = this.state;\n    const { classes: allClasses } = this.props;\n    let classes;\n    if (filterName.length && !filterLocation.length) {\n      classes = this.onFilterByName();\n    } else if (!filterName.length && filterLocation.length) {\n      classes = this.onFilterByLocation();\n    } else if (filterName.length && filterLocation.length) {\n      const filteredByName = this.onFilterByName();\n      classes = this.onFilterByLocation(filteredByName);\n    } else {\n      classes = allClasses;\n    }\n    if (sort) {\n      return this.onSortClasses(classes);\n    }\n    return classes;\n  }\n\n  onCloseClassModal = () => this.setState({ classModalOpen: false });\n\n  mapClassCards = () => {\n    const classes = this.getMappableClasses();\n    return classes.map((item, index) => (\n      <ClassCard\n        key={index}\n        index={index}\n        classroom={item}\n        onSetDropdown={this.onSetDropdown}\n        onCloseDropdown={this.onCloseDropdown}\n        onCloneClass={() => this.onCloneClass(index)}\n        onDeleteClass={() => this.onDeleteClass(index)}\n        dropdownIsOpen={this.state.dropdownIsOpen}\n        dropdownIndex={this.state.dropdownIndex}\n        onHandleClassCard={() => this.props.onHandleClassCard(index)}\n        onSaveClassChanges = {this.props.onSaveClassChanges}\n      />\n    ));\n  };\n\n  render() {\n    const { classModalOpen} = this.state;\n    const { onSaveNewClass } = this.props;\n    return (\n      <div>\n        <div className=\"title-row card-panel\">\n          <div className=\"mobile-header\">\n            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\n              <i className=\"material-icons\">menu</i>\n            </a>\n          </div>\n          <nav className=\"breadcrumb-holder\">\n            <div className=\"nav-wrapper \">\n              <a href=\"#!\" className=\"breadcrumb\">\n                &lt; Classes\n              </a>\n            </div>\n          </nav>\n          <h2 className=\"h1 white-text\">\n            <span className=\"heading-holder\">\n              <i className=\"icon-members\" />\n              <span className=\"heading-block\">Classes</span>\n            </span>\n          </h2>\n        </div>\n        <FilterSection\n          onSetSort={this.onSetSort}\n          onSetFilteredState={this.onSetFilteredState}\n          onUnsetFilteredState={this.onUnsetFilteredState}\n          onSetFilteredLocationState={this.onSetFilteredLocationState}\n          onUnsetFilteredLocationState={this.onUnsetFilteredLocationState}\n        />\n        <div className=\"content-section\">\n          <div className=\"container-md\">\n            <div className=\"result-row center-align\">\n              <b className=\"result\">- 23 matches -</b>\n            </div>\n          </div>\n          <div className=\"row d-flex-content card-width-366\">\n            {this.mapClassCards()}\n          </div>\n        </div>\n        <div className=\"add-btn-block\">\n          <a\n            href=\"#modal_add_new_class\"\n            className=\"modal-trigger waves-effect waves-teal btn add-btn\"\n            onClick={() => this.onOpenClassModal(event)}\n          >\n            <i className=\"material-icons\">add</i> New Class\n          </a>\n        </div>\n        <ClassModal\n          open={classModalOpen}\n          onClose={this.onCloseClassModal}\n          onSave = {onSaveNewClass}\n        />\n\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  classes: PropTypes.array.isRequired,\n  onHandleClassCard: PropTypes.func.isRequired,\n  onCloneClass: PropTypes.func.isRequired,\n  onDeleteClass: PropTypes.func.isRequired,\n  onSaveNewClass: PropTypes.func.isRequired,\n  onSaveClassChanges:PropTypes.func.isRequired,\n};\n\nexport default ListPage;\n"]},"metadata":{},"sourceType":"module"}