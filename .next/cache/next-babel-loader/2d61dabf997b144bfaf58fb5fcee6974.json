{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport Portal from '../../Portal';\nimport PracticeQuestions from './components/PracticeQuestions';\nimport ChallengeQuestions from './components/ChallengeQuestions';\nimport QuestionModal from './components/QuestionModal';\nimport sampleQuestions from './utils/sampleQuestions';\n\nvar LessonDetailAnswerSheet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LessonDetailAnswerSheet, _React$Component);\n\n  function LessonDetailAnswerSheet(props) {\n    var _this;\n\n    _classCallCheck(this, LessonDetailAnswerSheet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LessonDetailAnswerSheet).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToggleQuestionModal\", function () {\n      var selectedQuestion = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _this.setState(function (_ref) {\n        var questionModalOpen = _ref.questionModalOpen;\n        return {\n          questionModalOpen: !questionModalOpen,\n          selectedQuestion: selectedQuestion\n        };\n      });\n    });\n\n    _this.state = {\n      selectedQuestion: {},\n      questionModalOpen: false,\n      questions: sampleQuestions,\n      answerSheetComplete: _this.props.lesson.completionDate && true\n    };\n    return _this;\n  }\n\n  _createClass(LessonDetailAnswerSheet, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          questionModalOpen = _this$state.questionModalOpen,\n          selectedQuestion = _this$state.selectedQuestion,\n          questions = _this$state.questions,\n          answerSheetComplete = _this$state.answerSheetComplete;\n      var _this$props = this.props,\n          open = _this$props.open,\n          onCloseDetailModal = _this$props.onCloseDetailModal,\n          user = _this$props.user,\n          _this$props$lesson = _this$props.lesson,\n          lessonName = _this$props$lesson.lessonName,\n          unit = _this$props$lesson.unit,\n          passage = _this$props$lesson.passage,\n          completionDate = _this$props$lesson.completionDate,\n          completionTime = _this$props$lesson.completionTime,\n          assignTime = _this$props$lesson.assignTime,\n          assignDate = _this$props$lesson.assignDate,\n          dueDate = _this$props$lesson.dueDate,\n          dueTime = _this$props$lesson.dueTime,\n          type = _this$props$lesson.type;\n      var _user$studentInformat = user.studentInformation,\n          firstName = _user$studentInformat.firstName,\n          lastName = _user$studentInformat.lastName;\n      return React.createElement(React.Fragment, null, React.createElement(QuestionModal, {\n        open: questionModalOpen,\n        question: selectedQuestion,\n        onCloseModal: this.onToggleQuestionModal\n      }), React.createElement(Portal, {\n        selector: \"#modal\"\n      }, open && React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"overlay\"\n      }, React.createElement(\"div\", {\n        style: {\n          zIndex: '1003',\n          display: 'block',\n          position: 'absolute',\n          top: '0',\n          backroundColor: \"rgba(0, 0, 0, 0.7)\"\n        },\n        className: \"jsx-2165974909\" + \" \" + \"wrapper modal\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"header-row card-panel light-blue lighten-1 white-text\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"position-top right-align\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"icons-row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"dropdown-block col\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-2165974909\" + \" \" + \"material-icons dots-icon\"\n      }, \"more_vert\")), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: onCloseDetailModal,\n        style: {\n          color: 'white'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"icon-close\"\n      }))), React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"icon-col col s1\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-2165974909\" + \" \" + \"icon-books\"\n      })), React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"col s2\"\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '17px'\n        },\n        className: \"jsx-2165974909\"\n      }, \"p.\".concat(passage, \" (\").concat(type, \")\"), \" \")), React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"col s7\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"card-panel-text center-align\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"text-small\"\n      }, unit), React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"text-large\"\n      }, lessonName))), React.createElement(\"div\", {\n        style: {\n          marginTop: '-47px'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"col s2\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"card-panel-text center-align\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\"\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '17px'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"name\"\n      }, firstName, \" \", lastName)), completionDate ? React.createElement(\"div\", {\n        className: \"jsx-2165974909\"\n      }, React.createElement(\"time\", {\n        dateTime: \"\",\n        style: {\n          color: 'white',\n          fontWeight: 'unset',\n          marginTop: '-50px',\n          fontSize: '17px'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"date\"\n      }, \"Completed \".concat(completionDate, \" at \").concat(completionTime))) : [React.createElement(\"div\", {\n        className: \"jsx-2165974909\",\n        key: \"0\"\n      }, React.createElement(\"time\", {\n        dateTime: \"\",\n        style: {\n          color: 'white',\n          fontWeight: 'unset',\n          marginTop: '-50px',\n          fontSize: '17px'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"date\"\n      }, \"Assigned \".concat(assignDate, \" at \").concat(assignTime))), React.createElement(\"div\", {\n        className: \"jsx-2165974909\",\n        key: \"1\"\n      }, React.createElement(\"time\", {\n        dateTime: \"\",\n        style: {\n          color: 'white',\n          fontWeight: 'unset',\n          marginTop: '-28px',\n          fontSize: '17px'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"date\"\n      }, dueDate && \"Due \".concat(dueDate, \" at \").concat(dueTime)))])))), React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"nav-header nav-header-special white\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"nav-additional\"\n      }, React.createElement(\"ul\", {\n        style: {\n          paddingLeft: '25%'\n        },\n        className: \"jsx-2165974909\" + \" \" + \"menu-additional\"\n      }, React.createElement(\"li\", {\n        className: \"jsx-2165974909\" + \" \" + \"col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"jsx-2165974909\"\n      }, \"Summary\")), React.createElement(\"li\", {\n        className: \"jsx-2165974909\" + \" \" + \"col s3\"\n      }, React.createElement(\"a\", {\n        href: \"#answer\",\n        className: \"jsx-2165974909\" + \" \" + \"active\"\n      }, \"Answer Sheet\"))))), React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"container-sm\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-2165974909\" + \" \" + \"main-row row\"\n      }, React.createElement(ChallengeQuestions, {\n        answerSheetComplete: answerSheetComplete,\n        onOpenQuestionModal: this.onToggleQuestionModal,\n        questions: questions.filter(function (question) {\n          return question.questionType === 'Challenge';\n        })\n      }), React.createElement(PracticeQuestions, {\n        answerSheetComplete: answerSheetComplete,\n        onOpenQuestionModal: this.onToggleQuestionModal,\n        questions: questions.filter(function (question) {\n          return question.questionType === 'Practice';\n        })\n      })))))), React.createElement(_JSXStyle, {\n        id: \"2165974909\"\n      }, [\".overlay.jsx-2165974909{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:1004;}\"])));\n    }\n  }]);\n\n  return LessonDetailAnswerSheet;\n}(React.Component);\n\nexport default LessonDetailAnswerSheet;","map":null,"metadata":{},"sourceType":"module"}