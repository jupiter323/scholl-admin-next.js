{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar styles = {\n  red: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#fff',\n    border: '1px solid',\n    backgroundColor: '#db1d41',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenFilled: {\n    position: 'relative',\n    color: '#fff',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#32955c',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  greenBorderOnly: {\n    position: 'relative',\n    color: '#32955c',\n    borderColor: '#32955c',\n    border: '1px solid',\n    backgroundColor: '#fff',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  },\n  plain: {\n    position: 'relative',\n    color: '#a6a8ab',\n    border: '1px solid',\n    borderColor: '#a6a8ab',\n    height: '19px',\n    width: '19px',\n    borderRadius: '50%'\n  } // maybe move correct state up to parent so component didmount will not rerender????? \n\n};\n\nvar BubbleGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BubbleGroup, _React$Component);\n\n  function BubbleGroup(props) {\n    var _this;\n\n    _classCallCheck(this, BubbleGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BubbleGroup).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var _this$props$question = _this.props.question,\n          studentChoice = _this$props$question.studentChoice,\n          answer = _this$props$question.answer;\n\n      _this.setState({\n        selected: studentChoice\n      });\n\n      if (studentChoice === answer) {\n        _this.setState({\n          correct: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onHandleBubbleChange\", function (event, letter) {\n      _this.setState({\n        selected: event.target.value\n      }, function () {\n        return _this.checkIfCorrect(letter);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectedBubbleClick\", function (event) {\n      var selected = _this.state.selected; // const { question: {studentChoice} }  = this.props;\n\n      if (selected === event.target.value) {\n        _this.setState({\n          selected: \"\"\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkIfCorrect\", function (letter) {\n      var question = _this.props.question;\n\n      if (letter === question.answer) {\n        _this.setState({\n          correct: true\n        });\n      } else {\n        _this.setState({\n          correct: false\n        });\n      } // update counter on writing page\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapEmptyBubbles\", function (id) {\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      return letters.map(function (letter) {\n        return React.createElement(\"li\", {\n          key: letter\n        }, React.createElement(\"form\", null, React.createElement(\"input\", {\n          type: \"radio\",\n          id: \"\".concat(id).concat(letter),\n          name: \"letter\",\n          value: letter,\n          checked: _this.state.selected === letter,\n          onChange: function onChange(event) {\n            return _this.onHandleBubbleChange(event, letter);\n          },\n          onClick: function onClick(event) {\n            return _this.onSelectedBubbleClick(event);\n          }\n        }), React.createElement(\"label\", {\n          htmlFor: \"\".concat(id).concat(letter),\n          style: _this.state.selected ? _this.renderBubbleStyle(letter) : styles.plain\n        }, React.createElement(\"span\", {\n          style: {\n            display: 'block',\n            marginTop: '2px',\n            paddingLeft: \"4.5px\"\n          }\n        }, letter))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderEmptyBubble\", function (letter, id) {\n      return React.createElement(\"li\", {\n        key: letter\n      }, React.createElement(\"form\", null, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"\".concat(id).concat(letter),\n        name: \"letter\",\n        value: letter,\n        checked: _this.state.selected === letter,\n        onChange: function onChange(event) {\n          return _this.onHandleBubbleChange(event, letter);\n        },\n        onClick: function onClick(event) {\n          return _this.onSelectedBubbleClick(event);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"\".concat(id).concat(letter),\n        style: _this.state.selected ? _this.renderBubbleStyle(letter) : styles.plain\n      }, React.createElement(\"span\", {\n        style: {\n          display: 'block',\n          marginTop: '2px',\n          paddingLeft: \"4.5px\"\n        }\n      }, letter))));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubbleStyle\", function (letter) {\n      var _this$state = _this.state,\n          correct = _this$state.correct,\n          selected = _this$state.selected;\n      var answer = _this.props.question.answer;\n\n      if (selected === letter && correct) {\n        return styles.greenFilled;\n      }\n\n      if (selected === letter && !correct) {\n        return styles.red;\n      }\n\n      if (letter !== selected && letter === !answer) {\n        return styles.plain;\n      }\n\n      if (letter !== selected && letter === answer) {\n        return styles.greenBorderOnly;\n      }\n\n      return styles.plain;\n    });\n\n    _this.state = {\n      selected: _this.props.question.studentChoice,\n      correct: null\n    };\n    return _this;\n  }\n\n  _createClass(BubbleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.question.id;\n      return (// <If condition={studentChoice === \"\"}>\n        React.createElement(React.Fragment, null, this.renderEmptyBubble(\"A\", id), this.renderEmptyBubble(\"B\", id), this.renderEmptyBubble(\"C\", id), this.renderEmptyBubble(\"D\", id)) // </If>\n        // map through bubbles and student answer\n\n      );\n    }\n  }]);\n\n  return BubbleGroup;\n}(React.Component);\n\nBubbleGroup.propTypes = {\n  question: PropTypes.object.isRequired // correct: PropTypes.boolean.isRequired,\n  // selected: PropTypes.string.isRequired,\n\n};\nexport default BubbleGroup;","map":{"version":3,"sources":["C:\\Users\\KFROE\\OneDrive\\Desktop\\Clear Choice\\clear-choice-admin\\components\\Student\\DetailTestAnswerSheetComplete\\components\\WritingPage\\components\\Bubble\\index.js"],"names":["React","PropTypes","styles","red","position","color","borderColor","border","backgroundColor","height","width","borderRadius","greenFilled","greenBorderOnly","plain","BubbleGroup","props","question","studentChoice","answer","setState","selected","correct","event","letter","target","value","checkIfCorrect","state","id","letters","map","onHandleBubbleChange","onSelectedBubbleClick","renderBubbleStyle","display","marginTop","paddingLeft","renderEmptyBubble","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  red: { position: 'relative', color: '#fff', borderColor: '#fff', border: '1px solid', backgroundColor: '#db1d41', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenFilled: { position: 'relative', color: '#fff', borderColor: '#32955c', border: '1px solid', backgroundColor: '#32955c', height: '19px', width: '19px', borderRadius: '50%' },\r\n  greenBorderOnly: { position: 'relative', color: '#32955c', borderColor: '#32955c', border: '1px solid', backgroundColor: '#fff', height: '19px', width: '19px', borderRadius: '50%' },\r\n  plain: { position: 'relative', color: '#a6a8ab', border: '1px solid', borderColor: '#a6a8ab', height: '19px', width: '19px', borderRadius: '50%' }\r\n}\r\n// maybe move correct state up to parent so component didmount will not rerender????? \r\nclass BubbleGroup extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state= {\r\n      selected: this.props.question.studentChoice,\r\n      correct: null,\r\n    }\r\n  }\r\ncomponentDidMount = () => {\r\n    const { question: {studentChoice, answer } } = this.props\r\n    this.setState({selected: studentChoice});\r\n    if(studentChoice === answer) {\r\n      this.setState({correct: true})\r\n    }\r\n  }\r\n    // this.checkIfCorrect();\r\n    // update counter on writing page\r\n  // };\r\n  // componentDidMount = () => {\r\n  //   const { question: { studentChoice, answer} } = this.props;\r\n  //     this.setState = ({selected: studentChoice}, () => {\r\n  //       this.checkIfCorrect(this.state.selected)\r\n  //     })\r\n  // }\r\n\r\n  onHandleBubbleChange = (event, letter) => {\r\n   this.setState({selected: event.target.value},\r\n    () => this.checkIfCorrect(letter))\r\n  }\r\n\r\n// clears state when selected button is clicked again, unless it was studentChoice from props\r\n  onSelectedBubbleClick = (event) => {\r\n    const { selected } = this.state;\r\n    // const { question: {studentChoice} }  = this.props;\r\n    if (selected === event.target.value){\r\n      this.setState({selected: \"\"})\r\n    }\r\n  }\r\n\r\n  checkIfCorrect = (letter) => {\r\n    const { question } = this.props;\r\n    if(letter === question.answer) {\r\n      this.setState({correct: true});\r\n    }else{\r\n      this.setState({correct: false})\r\n    }\r\n    // update counter on writing page\r\n  }\r\n\r\nmapEmptyBubbles = (id) => {\r\n  const letters = [\"A\", \"B\", \"C\", \"D\"];\r\n  return letters.map(letter => (\r\n    <li key={letter}>\r\n      <form>\r\n        <input\r\n          type=\"radio\"\r\n          id={`${id}${letter}`}\r\n          name=\"letter\"\r\n          value={letter}\r\n          checked={this.state.selected === letter}\r\n          onChange={(event) => this.onHandleBubbleChange(event, letter)}\r\n          onClick={(event)=> this.onSelectedBubbleClick(event)}\r\n          />\r\n        <label\r\n          htmlFor={`${id}${letter}`}\r\n          style={this.state.selected ? this.renderBubbleStyle(letter) : styles.plain}\r\n          >\r\n        <span style={{ display: 'block', marginTop: '2px', paddingLeft: \"4.5px\" }}>{letter}</span>\r\n        </label>\r\n      </form>\r\n    </li>\r\n  ))\r\n}\r\nrenderEmptyBubble = (letter, id) => (\r\n  <li key={letter}>\r\n      <form>\r\n        <input\r\n          type=\"radio\"\r\n          id={`${id}${letter}`}\r\n          name=\"letter\"\r\n          value={letter}\r\n          checked={this.state.selected === letter}\r\n          onChange={(event) => this.onHandleBubbleChange(event, letter)}\r\n          onClick={(event)=> this.onSelectedBubbleClick(event)}\r\n          />\r\n        <label\r\n          htmlFor={`${id}${letter}`}\r\n          style={this.state.selected ? this.renderBubbleStyle(letter) : styles.plain}\r\n          >\r\n        <span style={{ display: 'block', marginTop: '2px', paddingLeft: \"4.5px\" }}>{letter}</span>\r\n        </label>\r\n      </form>\r\n    </li>\r\n)\r\n\r\nrenderBubbleStyle = ( letter ) => {\r\n  const { correct, selected } = this.state;\r\n  const { question: { answer } } = this.props;\r\n  if (selected === letter && correct) {\r\n    return styles.greenFilled\r\n  }\r\n  if (selected === letter && !correct) {\r\n    return styles.red\r\n  }\r\n  if (letter !== selected && letter === !answer) {\r\n    return styles.plain\r\n  }if(letter !== selected && letter === answer){\r\n    return styles.greenBorderOnly\r\n  }\r\n  return styles.plain\r\n}\r\n\r\n\r\n  render() {\r\n    const { question: { id } } = this.props\r\n      return (\r\n          // <If condition={studentChoice === \"\"}>\r\n        <React.Fragment>\r\n          {this.renderEmptyBubble(\"A\", id)}\r\n          {this.renderEmptyBubble(\"B\", id)}\r\n          {this.renderEmptyBubble(\"C\", id)}\r\n          {this.renderEmptyBubble(\"D\", id)}\r\n          </React.Fragment>\r\n          // </If>\r\n          // map through bubbles and student answer\r\n      )\r\n  }\r\n}\r\n\r\nBubbleGroup.propTypes = {\r\n  question: PropTypes.object.isRequired,\r\n  // correct: PropTypes.boolean.isRequired,\r\n  // selected: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default BubbleGroup;\r\n"]},"metadata":{},"sourceType":"module"}