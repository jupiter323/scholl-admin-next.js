{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonWorksheetTestSection/components/PracticeQuestions/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nvar PracticeQuestions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PracticeQuestions, _React$Component);\n\n  function PracticeQuestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PracticeQuestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PracticeQuestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"mapQuestions\", function () {\n      return _this.props.questions.map(function (question) {\n        return __jsx(Question, {\n          key: question.id,\n          question: question,\n          questionDropdownIndex: _this.props.questionDropdownIndex,\n          questionDropdownOpen: _this.props.questionDropdownOpen,\n          answerSheetComplete: _this.props.answerSheetComplete,\n          onOpenQuestionModal: _this.props.onOpenQuestionModal,\n          handleQuestionDropdownClick: _this.props.handleQuestionDropdownClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 7\n          },\n          __self: this\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PracticeQuestions, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"col s12 l6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Practice\"), __jsx(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"ol\", {\n        className: \"answers-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.mapQuestions())))));\n    }\n  }]);\n\n  return PracticeQuestions;\n}(React.Component);\n\nPracticeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  questionDropdownIndex: PropTypes.number,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired,\n  questionDropdownOpen: PropTypes.bool.isRequired,\n  handleQuestionDropdownClick: PropTypes.func.isRequired\n};\nexport default PracticeQuestions;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/LessonWorksheetTestSection/components/PracticeQuestions/index.js"],"names":["React","PropTypes","Question","PracticeQuestions","props","questions","map","question","id","questionDropdownIndex","questionDropdownOpen","answerSheetComplete","onOpenQuestionModal","handleQuestionDropdownClick","mapQuestions","Component","propTypes","array","isRequired","number","bool","func"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;;IAEMC,iB;;;;;;;;;;;;;;;;;;mEACW;AAAA,aAAM,MAAKC,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,QAAQ;AAAA,eACpD,MAAC,QAAD;AACE,UAAA,GAAG,EAAEA,QAAQ,CAACC,EADhB;AAEE,UAAA,QAAQ,EAAED,QAFZ;AAGE,UAAA,qBAAqB,EAAE,MAAKH,KAAL,CAAWK,qBAHpC;AAIE,UAAA,oBAAoB,EAAE,MAAKL,KAAL,CAAWM,oBAJnC;AAKE,UAAA,mBAAmB,EAAE,MAAKN,KAAL,CAAWO,mBALlC;AAME,UAAA,mBAAmB,EAAE,MAAKP,KAAL,CAAWQ,mBANlC;AAOE,UAAA,2BAA2B,EAAE,MAAKR,KAAL,CAAWS,2BAP1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoD;AAAA,OAAjC,CAAN;AAAA,K;;;;;;;6BAYN;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,YAAL,EADH,CADF,CADF,CAFF,CADF,CADF;AAcD;;;;EA5B6Bd,KAAK,CAACe,S;;AA+BtCZ,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BX,EAAAA,SAAS,EAAEJ,SAAS,CAACgB,KAAV,CAAgBC,UADC;AAE5BT,EAAAA,qBAAqB,EAAER,SAAS,CAACkB,MAFL;AAG5BR,EAAAA,mBAAmB,EAAEV,SAAS,CAACmB,IAAV,CAAeF,UAHR;AAI5BN,EAAAA,mBAAmB,EAAEX,SAAS,CAACoB,IAAV,CAAeH,UAJR;AAK5BR,EAAAA,oBAAoB,EAAET,SAAS,CAACmB,IAAV,CAAeF,UALT;AAM5BL,EAAAA,2BAA2B,EAAEZ,SAAS,CAACoB,IAAV,CAAeH;AANhB,CAA9B;AASA,eAAef,iBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../Question';\n\nclass PracticeQuestions extends React.Component {\n  mapQuestions = () => this.props.questions.map(question => (\n    <Question\n      key={question.id}\n      question={question}\n      questionDropdownIndex={this.props.questionDropdownIndex}\n      questionDropdownOpen={this.props.questionDropdownOpen}\n      answerSheetComplete={this.props.answerSheetComplete}\n      onOpenQuestionModal={this.props.onOpenQuestionModal}\n      handleQuestionDropdownClick={this.props.handleQuestionDropdownClick}\n    />\n  ))\n\n  render() {\n    return (\n      <div className=\"col s12 l6\">\n        <div className=\"card-block\">\n          <h2>Practice</h2>\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <ol className=\"answers-list\">\n                {this.mapQuestions()}\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPracticeQuestions.propTypes = {\n  questions: PropTypes.array.isRequired,\n  questionDropdownIndex: PropTypes.number,\n  answerSheetComplete: PropTypes.bool.isRequired,\n  onOpenQuestionModal: PropTypes.func.isRequired,\n  questionDropdownOpen: PropTypes.bool.isRequired,\n  handleQuestionDropdownClick: PropTypes.func.isRequired,\n};\n\nexport default PracticeQuestions;\n"]},"metadata":{},"sourceType":"module"}