{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/Bubble/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport update from \"immutability-helper\";\nvar styles = {\n  red: {\n    position: \"relative\",\n    color: \"#fff\",\n    borderColor: \"#fff\",\n    border: \"1px solid\",\n    backgroundColor: \"#db1d41\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\"\n  },\n  greenFilled: {\n    position: \"relative\",\n    color: \"#fff\",\n    borderColor: \"#32955c\",\n    border: \"1px solid\",\n    backgroundColor: \"#32955c\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\"\n  },\n  greenBorderOnly: {\n    position: \"relative\",\n    color: \"#32955c\",\n    border: \"1px solid #32955c\",\n    backgroundColor: \"#fff\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\"\n  },\n  plain: {\n    position: \"relative\",\n    color: \"#a6a8ab\",\n    border: \"1px solid #a6a8ab\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\"\n  },\n  blueFilled: {\n    position: \"relative\",\n    color: \"#fff\",\n    border: \"1px solid #40c4ff\",\n    backgroundColor: \"#40c4ff\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\"\n  }\n};\n\nvar BubbleGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BubbleGroup, _React$Component);\n\n  function BubbleGroup(props) {\n    var _this;\n\n    _classCallCheck(this, BubbleGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BubbleGroup).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var problem = _this.props.problem;\n\n      if (!problem.student_answer) {\n        return;\n      }\n\n      var cells = _this.state.problemCells;\n      var selectedIndex = -1;\n      cells.map(function (cell, index) {\n        if (cell.label === problem.student_answer) {\n          cells[index] = _objectSpread({}, cell, {\n            selected: true\n          });\n          selectedIndex = index;\n        }\n      });\n      return _this.setState({\n        problemCells: _toConsumableArray(cells),\n        selectedIndex: selectedIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickBadge\", function (index) {\n      var _update2;\n\n      var currentBadge = _this.state.problemCells[index];\n      var selectedIndex = _this.state.selectedIndex;\n\n      if (selectedIndex === -1) {\n        var _updatedProblemCells = update(_this.state.problemCells, _defineProperty({}, index, {\n          selected: {\n            $set: !currentBadge.selected\n          }\n        }));\n\n        return _this.onSaveStudentAnswer(_updatedProblemCells, index);\n      }\n\n      var updatedProblemCells = update(_this.state.problemCells, (_update2 = {}, _defineProperty(_update2, index, {\n        selected: {\n          $set: !currentBadge.selected\n        }\n      }), _defineProperty(_update2, selectedIndex, {\n        selected: {\n          $set: false\n        }\n      }), _update2));\n\n      if (selectedIndex === index) {\n        return _this.onSaveStudentAnswer(updatedProblemCells, -1);\n      }\n\n      return _this.onSaveStudentAnswer(updatedProblemCells, index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveStudentAnswer\", function (updatedProblemCells, index) {\n      var _this$props = _this.props,\n          onAddStudentAnswerToTest = _this$props.onAddStudentAnswerToTest,\n          problem = _this$props.problem,\n          testSection = _this$props.testSection;\n\n      _this.setState({\n        problemCells: updatedProblemCells,\n        selectedIndex: index\n      });\n\n      var label = index === -1 ? null : _this.state.problemCells[index].label;\n      onAddStudentAnswerToTest(problem, label, testSection.student_test_id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapEmptyBubbles\", function (id) {\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      return letters.map(function (letter, index) {\n        return __jsx(\"li\", {\n          key: letter,\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: function onClick() {\n            return _this.handleClickBadge(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, __jsx(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          htmlFor: \"\".concat(id).concat(letter),\n          style: _this.renderBubbleStyle(letter),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          style: {\n            cursor: \"pointer\",\n            display: \"block\",\n            marginTop: \"2px\",\n            paddingLeft: \"4.5px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, letter))));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderBubbleStyle\", function (letter) {\n      var _this$props$problem = _this.props.problem,\n          correct_answer = _this$props$problem.correct_answer,\n          student_answer = _this$props$problem.student_answer;\n      var _this$state = _this.state,\n          selectedIndex = _this$state.selectedIndex,\n          problemCells = _this$state.problemCells;\n      var selectedAnswer = problemCells[selectedIndex] ? problemCells[selectedIndex].label : null;\n      var studentAnswer = student_answer || selectedAnswer;\n\n      if (studentAnswer === letter && studentAnswer === correct_answer) {\n        return styles.greenFilled;\n      }\n\n      if (studentAnswer === letter && studentAnswer !== correct_answer && correct_answer) {\n        return styles.red;\n      }\n\n      if (letter !== studentAnswer && letter === correct_answer) {\n        return styles.greenBorderOnly;\n      }\n\n      if (!correct_answer && studentAnswer === letter) {\n        return styles.blueFilled;\n      }\n\n      return styles.plain;\n    });\n\n    _this.state = {\n      selectedIndex: -1,\n      problemCells: [{\n        id: 0,\n        label: \"A\",\n        selected: false\n      }, {\n        id: 1,\n        label: \"B\",\n        selected: false\n      }, {\n        id: 2,\n        label: \"C\",\n        selected: false\n      }, {\n        id: 3,\n        label: \"D\",\n        selected: false\n      }]\n    };\n    return _this;\n  }\n  /**\n   * This exists to revert the user's answser choice if request fails but it is slow to update. Needs better solution in the future.\n   */\n\n\n  _createClass(BubbleGroup, [{\n    key: \"render\",\n    value: function render() {\n      var test_problem_id = this.props.problem.test_problem_id;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.mapEmptyBubbles(test_problem_id));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var letters = [\"A\", \"B\", \"C\", \"D\"];\n      var student_answer = props.problem.student_answer;\n      var problemCells = state.problemCells,\n          selectedIndex = state.selectedIndex;\n\n      if (letters.indexOf(student_answer) !== selectedIndex) {\n        var revertedProblemCells = problemCells.map(function (cell, index) {\n          if (index === letters.indexOf(student_answer)) {\n            cell.selected = true;\n            return cell;\n          }\n\n          if (cell.selected) {\n            cell.selected = false;\n            return cell;\n          }\n\n          return cell;\n        });\n        return {\n          selectedIndex: letters.indexOf(student_answer),\n          problemCells: revertedProblemCells\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return BubbleGroup;\n}(React.Component);\n\nBubbleGroup.propTypes = {\n  problem: PropTypes.object.isRequired\n};\nexport default BubbleGroup;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/DetailTestAnswerSheetComplete/components/WritingPage/components/Bubble/index.js"],"names":["React","PropTypes","update","styles","red","position","color","borderColor","border","backgroundColor","height","width","borderRadius","greenFilled","greenBorderOnly","plain","blueFilled","BubbleGroup","props","problem","student_answer","cells","state","problemCells","selectedIndex","map","cell","index","label","selected","setState","currentBadge","updatedProblemCells","$set","onSaveStudentAnswer","onAddStudentAnswerToTest","testSection","student_test_id","id","letters","letter","cursor","handleClickBadge","renderBubbleStyle","display","marginTop","paddingLeft","correct_answer","selectedAnswer","studentAnswer","test_problem_id","mapEmptyBubbles","indexOf","revertedProblemCells","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport update from \"immutability-helper\";\n\nconst styles = {\n  red: {\n    position: \"relative\",\n    color: \"#fff\",\n    borderColor: \"#fff\",\n    border: \"1px solid\",\n    backgroundColor: \"#db1d41\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\",\n  },\n  greenFilled: {\n    position: \"relative\",\n    color: \"#fff\",\n    borderColor: \"#32955c\",\n    border: \"1px solid\",\n    backgroundColor: \"#32955c\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\",\n  },\n  greenBorderOnly: {\n    position: \"relative\",\n    color: \"#32955c\",\n    border: \"1px solid #32955c\",\n    backgroundColor: \"#fff\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\",\n  },\n  plain: {\n    position: \"relative\",\n    color: \"#a6a8ab\",\n    border: \"1px solid #a6a8ab\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\",\n  },\n  blueFilled: {\n    position: \"relative\",\n    color: \"#fff\",\n    border: \"1px solid #40c4ff\",\n    backgroundColor: \"#40c4ff\",\n    height: \"19px\",\n    width: \"19px\",\n    borderRadius: \"50%\",\n  },\n};\n\nclass BubbleGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: -1,\n      problemCells: [\n        {\n          id: 0,\n          label: \"A\",\n          selected: false,\n        },\n        {\n          id: 1,\n          label: \"B\",\n          selected: false,\n        },\n        {\n          id: 2,\n          label: \"C\",\n          selected: false,\n        },\n        {\n          id: 3,\n          label: \"D\",\n          selected: false,\n        },\n      ],\n    };\n  }\n\n  /**\n   * This exists to revert the user's answser choice if request fails but it is slow to update. Needs better solution in the future.\n   */\n  static getDerivedStateFromProps(props, state) {\n    const letters = [\"A\", \"B\", \"C\", \"D\"];\n    const { problem: { student_answer } } = props;\n    const { problemCells, selectedIndex } = state;\n    if (letters.indexOf(student_answer) !== selectedIndex) {\n      const revertedProblemCells = problemCells.map((cell, index) => {\n        if (index === letters.indexOf(student_answer)) {\n          cell.selected = true;\n          return cell;\n        }\n        if (cell.selected) {\n          cell.selected = false;\n          return cell;\n        }\n        return cell;\n      });\n      return { selectedIndex: letters.indexOf(student_answer), problemCells: revertedProblemCells };\n    }\n    return null\n  }\n\n  componentDidMount = () => {\n    const { problem } = this.props;\n    if (!problem.student_answer) {\n      return;\n    }\n    const cells = this.state.problemCells;\n    let selectedIndex = -1;\n    cells.map((cell, index) => {\n      if (cell.label === problem.student_answer) {\n        cells[index] = { ...cell, selected: true };\n        selectedIndex = index;\n      }\n    });\n    return this.setState({ problemCells: [...cells], selectedIndex });\n  };\n\n  handleClickBadge = (index) => {\n    const currentBadge = this.state.problemCells[index];\n    const selectedIndex = this.state.selectedIndex;\n    if (selectedIndex === -1) {\n      const updatedProblemCells = update(this.state.problemCells, {\n        [index]: { selected: { $set: !currentBadge.selected } },\n      });\n      return this.onSaveStudentAnswer(updatedProblemCells, index);\n    }\n    const updatedProblemCells = update(this.state.problemCells, {\n      [index]: { selected: { $set: !currentBadge.selected } },\n      [selectedIndex]: { selected: { $set: false } },\n    });\n    if (selectedIndex === index) {\n      return this.onSaveStudentAnswer(updatedProblemCells, -1);\n    }\n    return this.onSaveStudentAnswer(updatedProblemCells, index);\n  };\n\n  onSaveStudentAnswer = (updatedProblemCells, index) => {\n    const { onAddStudentAnswerToTest, problem, testSection } = this.props;\n    this.setState({ problemCells: updatedProblemCells, selectedIndex: index });\n    const label = index === -1 ? null : this.state.problemCells[index].label;\n    onAddStudentAnswerToTest(problem, label, testSection.student_test_id);\n  };\n\n  mapEmptyBubbles = id => {\n    const letters = [\"A\", \"B\", \"C\", \"D\"];\n    return letters.map((letter, index) => (\n      <li\n        key={letter}\n        style={{ cursor: \"pointer\" }}\n        onClick={() => this.handleClickBadge(index)}\n      >\n        <form>\n          <label\n            htmlFor={`${id}${letter}`}\n            style={this.renderBubbleStyle(letter)}\n          >\n            <span style={{ cursor: \"pointer\", display: \"block\", marginTop: \"2px\", paddingLeft: \"4.5px\" }}>\n              {letter}\n            </span>\n          </label>\n        </form>\n      </li>\n    ));\n  };\n\n  renderBubbleStyle = letter => {\n    const {\n      problem: { correct_answer, student_answer },\n    } = this.props;\n    const { selectedIndex, problemCells } = this.state;\n    const selectedAnswer = problemCells[selectedIndex] ? problemCells[selectedIndex].label : null;\n    const studentAnswer = student_answer || selectedAnswer;\n    if (studentAnswer === letter && studentAnswer === correct_answer) {\n      return styles.greenFilled;\n    }\n    if (studentAnswer === letter && studentAnswer !== correct_answer && correct_answer) {\n      return styles.red;\n    }\n    if (letter !== studentAnswer && letter === correct_answer) {\n      return styles.greenBorderOnly;\n    }\n    if (!correct_answer && studentAnswer === letter) {\n      return styles.blueFilled;\n    }\n    return styles.plain;\n  };\n\n  render() {\n    const {\n      problem: { test_problem_id },\n    } = this.props;\n    return <React.Fragment>{this.mapEmptyBubbles(test_problem_id)}</React.Fragment>;\n  }\n}\n\nBubbleGroup.propTypes = {\n  problem: PropTypes.object.isRequired,\n};\n\nexport default BubbleGroup;\n"]},"metadata":{},"sourceType":"module"}