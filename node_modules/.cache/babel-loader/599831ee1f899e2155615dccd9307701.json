{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { Sticky } from 'react-sticky';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\nimport sampleWorksheets from '../utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../utils/sortFunctions';\nimport { worksheetTypeMap, worksheetSourceMap, worksheetDifficultyMap, worksheetSubjectMap } from '../utils/worksheetFilterMap';\n\nvar ListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListPage, _React$Component);\n\n  function ListPage(props) {\n    var _this;\n\n    _classCallCheck(this, ListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetSort\", function (sort) {\n      return _this.setState({\n        sort: sort\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeView\", function (view) {\n      return _this.setState({\n        currentView: view\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredState\", function (filterName) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterName: filterName\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredState\", function () {\n      return _this.setState({\n        worksheetsAreFiltered: false,\n        filterName: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetFilteredTopicState\", function (filterTopic) {\n      return _this.setState({\n        worksheetsAreFiltered: true,\n        filterTopic: filterTopic\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUnsetFilteredTopicState\", function () {\n      return _this.setState({\n        filterTopic: ''\n      }, _this.checkForFilteredState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClearFilters\", function () {\n      return _this.setState({\n        subjectFilters: [],\n        difficultyFilters: [],\n        typeFilters: [],\n        sourceFilters: [],\n        workbookFilters: [],\n        topicFilter: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAssignWorksheet\", function (assignType) {\n      console.warn('Stubbed out assign worksheet click', assignType);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByName\", function () {\n      var _this$state = _this.state,\n          worksheets = _this$state.worksheets,\n          filterName = _this$state.filterName;\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var _currentWorksheet$acc = currentWorksheet.accountInfo,\n            lastName = _currentWorksheet$acc.lastName,\n            firstName = _currentWorksheet$acc.firstName;\n        var worksheetString = \"\".concat(firstName.toLowerCase()).concat(lastName.toLowerCase());\n\n        if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterByTopic\", function () {\n      var preFilteredWorksheets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var _this$state2 = _this.state,\n          allWorksheets = _this$state2.worksheets,\n          filterTopic = _this$state2.filterTopic;\n      var worksheets;\n\n      if (preFilteredWorksheets.length) {\n        worksheets = preFilteredWorksheets;\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      return worksheets.reduce(function (finalArr, currentWorksheet) {\n        var topic = currentWorksheet.topic;\n\n        if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n          finalArr.push(currentWorksheet);\n        }\n\n        return finalArr;\n      }, []);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSortWorksheets\", function (worksheets) {\n      var sort = _this.state.sort;\n\n      switch (sort) {\n        case 'dueDate':\n          return worksheets.sort(dueDate);\n\n        case 'assignDate':\n          return worksheets.sort(assignDate);\n\n        case 'problems':\n          return worksheets.sort(problems);\n\n        case 'completed':\n          return worksheets.sort(completed);\n\n        case 'flags':\n          return worksheets.sort(flags);\n\n        case 'score':\n          return worksheets.sort(score);\n\n        case 'timeEstimate':\n          return worksheets.sort(timeEstimate);\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterWorksheets\", function () {\n      var _this$state3 = _this.state,\n          subjectFilters = _this$state3.subjectFilters,\n          difficultyFilters = _this$state3.difficultyFilters,\n          typeFilters = _this$state3.typeFilters,\n          sourceFilters = _this$state3.sourceFilters,\n          allWorksheets = _this$state3.worksheets;\n      var worksheets = allWorksheets;\n\n      if (subjectFilters.length) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return subjectFilters.indexOf(worksheetSubjectMap[worksheet.subject]) !== -1;\n        });\n      }\n\n      if (typeFilters.length && typeFilters.indexOf('mixedType') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return typeFilters.indexOf(worksheetTypeMap[worksheet.problemType]) !== -1;\n        });\n      }\n\n      if (sourceFilters.length) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return sourceFilters.indexOf(worksheetSourceMap[worksheet.worksheetSource]) !== -1;\n        });\n      }\n\n      if (difficultyFilters.length && difficultyFilters.indexOf('mixedDifficulty') === -1) {\n        worksheets = worksheets.filter(function (worksheet) {\n          return difficultyFilters.indexOf(worksheetDifficultyMap[worksheet.difficulty]) !== -1;\n        });\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMappableWorksheets\", function () {\n      var _this$state4 = _this.state,\n          filterName = _this$state4.filterName,\n          filterTopic = _this$state4.filterTopic,\n          allWorksheets = _this$state4.worksheets,\n          sort = _this$state4.sort,\n          subjectFilters = _this$state4.subjectFilters,\n          difficultyFilters = _this$state4.difficultyFilters,\n          typeFilters = _this$state4.typeFilters,\n          sourceFilters = _this$state4.sourceFilters;\n      var worksheets;\n\n      if (filterName.length && !filterTopic.length) {\n        worksheets = _this.onFilterByName();\n      } else if (!filterName.length && filterTopic.length) {\n        worksheets = _this.onFilterByTopic();\n      } else if (filterName.length && filterTopic.length) {\n        var filteredByName = _this.onFilterByName();\n\n        worksheets = _this.onFilterByTopic(filteredByName);\n      } else {\n        worksheets = allWorksheets;\n      }\n\n      if (subjectFilters.length || difficultyFilters.length || typeFilters.length || sourceFilters.length) {\n        worksheets = _this.onFilterWorksheets();\n      }\n\n      if (sort) {\n        return _this.onSortWorksheets(worksheets);\n      }\n\n      return worksheets;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilterClick\", function (filterType, filter) {\n      var _this$state5 = _this.state,\n          currentSubjectFilters = _this$state5.subjectFilters,\n          currentDifficultyFilters = _this$state5.difficultyFilters,\n          currentTypeFilters = _this$state5.typeFilters,\n          currentSourceFilters = _this$state5.sourceFilters;\n      var modifiedFilterCurrentState;\n      var modifiedFilterName;\n      var modifiedFilterUpdatedState;\n\n      switch (filterType) {\n        case 'subject':\n          modifiedFilterCurrentState = currentSubjectFilters;\n          modifiedFilterName = 'subjectFilters';\n          break;\n\n        case 'difficulty':\n          modifiedFilterCurrentState = currentDifficultyFilters;\n          modifiedFilterName = 'difficultyFilters';\n          break;\n\n        case 'type':\n          modifiedFilterCurrentState = currentTypeFilters;\n          modifiedFilterName = 'typeFilters';\n          break;\n\n        case 'source':\n          modifiedFilterCurrentState = currentSourceFilters;\n          modifiedFilterName = 'sourceFilters';\n          break;\n\n        default:\n          break;\n      }\n\n      if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $push: [filter]\n        });\n      } else {\n        var filterIndex = modifiedFilterCurrentState.indexOf(filter);\n        modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n          $splice: [[filterIndex, 1]]\n        });\n      }\n\n      _this.setState(_defineProperty({}, modifiedFilterName, modifiedFilterUpdatedState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderWorksheetView\", function () {\n      var currentView = _this.state.currentView;\n      var onSetActiveWorksheet = _this.props.onSetActiveWorksheet;\n\n      switch (currentView) {\n        case 'list':\n          return React.createElement(ListView, {\n            onSetActiveWorksheet: onSetActiveWorksheet,\n            worksheets: _this.getMappableWorksheets()\n          });\n\n        case 'full':\n          return React.createElement(FullView, {\n            onSetActiveWorksheet: onSetActiveWorksheet,\n            worksheets: _this.getMappableWorksheets()\n          });\n\n        default:\n          break;\n      }\n    });\n\n    _this.state = {\n      sort: '',\n      subjectFilters: [],\n      difficultyFilters: [],\n      typeFilters: [],\n      sourceFilters: [],\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      worksheets: sampleWorksheets\n    };\n    return _this;\n  }\n\n  _createClass(ListPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          currentView = _this$state6.currentView,\n          subjectFilters = _this$state6.subjectFilters,\n          difficultyFilters = _this$state6.difficultyFilters,\n          typeFilters = _this$state6.typeFilters,\n          sourceFilters = _this$state6.sourceFilters;\n      return React.createElement(React.Fragment, null, React.createElement(Sticky, null, function (_ref) {\n        var style = _ref.style;\n        return React.createElement(\"div\", {\n          className: \"title-row card-panel\",\n          style: _objectSpread({}, style, {\n            zIndex: 1999\n          })\n        }, React.createElement(\"div\", {\n          className: \"mobile-header\"\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          \"data-target\": \"slide-out\",\n          className: \"sidenav-trigger\"\n        }, React.createElement(\"i\", {\n          className: \"material-icons\"\n        }, \"menu\"))), React.createElement(\"h2\", {\n          className: \"h1 white-text\"\n        }, React.createElement(\"span\", {\n          className: \"heading-holder\"\n        }, React.createElement(\"i\", {\n          className: \"icon-sheets-w\"\n        }), React.createElement(\"span\", {\n          className: \"heading-block\"\n        }, \"Custom Worksheet Library\"))));\n      }), React.createElement(FilterSection, {\n        currentView: currentView,\n        typeFilters: typeFilters,\n        sourceFilters: sourceFilters,\n        subjectFilters: subjectFilters,\n        difficultyFilters: difficultyFilters,\n        onSetSort: this.onSetSort,\n        onChangeView: this.onChangeView,\n        onClearFilters: this.onClearFilters,\n        handleFilterClick: this.handleFilterClick,\n        onSetFilteredState: this.onSetFilteredState,\n        onUnsetFilteredState: this.onUnsetFilteredState,\n        onSetFilteredTopicState: this.onSetFilteredTopicState,\n        onUnsetFilteredTopicState: this.onUnsetFilteredTopicState\n      }), this.renderWorksheetView(), React.createElement(\"div\", {\n        className: \"add-btn-block\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"dropdown-trigger waves-effect waves-teal btn add-btn\",\n        \"data-target\": \"dropdown_assign_selected\"\n      }, React.createElement(\"i\", {\n        className: \"material-icons\"\n      }, \"add\"), \" Custom Worksheet\"), React.createElement(\"ul\", {\n        id: \"dropdown_assign_selected\",\n        className: \"dropdown-content dropdown-small\"\n      }, React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"From Saved\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\"\n      }, \"Create New\")))));\n    }\n  }]);\n\n  return ListPage;\n}(React.Component);\n\nListPage.propTypes = {\n  onSetActiveWorksheet: PropTypes.func.isRequired\n};\nexport default ListPage;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Worksheet/ListPage/index.js"],"names":["React","PropTypes","update","Sticky","FilterSection","FullView","ListView","sampleWorksheets","dueDate","assignDate","problems","completed","flags","score","timeEstimate","worksheetTypeMap","worksheetSourceMap","worksheetDifficultyMap","worksheetSubjectMap","ListPage","props","sort","setState","view","currentView","filterName","worksheetsAreFiltered","filterTopic","checkForFilteredState","subjectFilters","difficultyFilters","typeFilters","sourceFilters","workbookFilters","topicFilter","assignType","console","warn","state","worksheets","reduce","finalArr","currentWorksheet","accountInfo","lastName","firstName","worksheetString","toLowerCase","indexOf","push","preFilteredWorksheets","allWorksheets","length","topic","filter","worksheet","subject","problemType","worksheetSource","difficulty","onFilterByName","onFilterByTopic","filteredByName","onFilterWorksheets","onSortWorksheets","filterType","currentSubjectFilters","currentDifficultyFilters","currentTypeFilters","currentSourceFilters","modifiedFilterCurrentState","modifiedFilterName","modifiedFilterUpdatedState","$push","filterIndex","$splice","onSetActiveWorksheet","getMappableWorksheets","style","zIndex","onSetSort","onChangeView","onClearFilters","handleFilterClick","onSetFilteredState","onUnsetFilteredState","onSetFilteredTopicState","onUnsetFilteredTopicState","renderWorksheetView","Component","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { Sticky } from 'react-sticky';\nimport FilterSection from './components/FilterSection';\nimport FullView from './components/FullView';\nimport ListView from './components/ListView';\n\nimport sampleWorksheets from '../utils/sampleWorksheets';\nimport { dueDate, assignDate, problems, completed, flags, score, timeEstimate } from '../utils/sortFunctions';\nimport { worksheetTypeMap, worksheetSourceMap, worksheetDifficultyMap, worksheetSubjectMap } from '../utils/worksheetFilterMap';\n\nclass ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: '',\n      subjectFilters: [],\n      difficultyFilters: [],\n      typeFilters: [],\n      sourceFilters: [],\n      filterName: '',\n      filterTopic: '',\n      currentView: 'full',\n      worksheets: sampleWorksheets,\n    };\n  }\n\n  onSetSort = (sort) => this.setState({ sort })\n  onChangeView = (view) => this.setState({ currentView: view });\n\n  onSetFilteredState = (filterName) => this.setState({ worksheetsAreFiltered: true, filterName })\n  onUnsetFilteredState = () => this.setState({ worksheetsAreFiltered: false, filterName: '' })\n\n  onSetFilteredTopicState = (filterTopic) => this.setState({ worksheetsAreFiltered: true, filterTopic })\n  onUnsetFilteredTopicState = () => this.setState({ filterTopic: '' }, this.checkForFilteredState)\n\n  onClearFilters = () => this.setState({ subjectFilters: [], difficultyFilters: [], typeFilters: [], sourceFilters: [], workbookFilters: [], topicFilter: '' })\n\n  onAssignWorksheet = (assignType) => {\n    console.warn('Stubbed out assign worksheet click', assignType);\n  }\n\n  onFilterByName = () => {\n    const { worksheets, filterName } = this.state;\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { accountInfo: { lastName, firstName } } = currentWorksheet;\n      const worksheetString = `${firstName.toLowerCase()}${lastName.toLowerCase()}`;\n      if (worksheetString.indexOf(filterName) !== -1 && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  onFilterByTopic = (preFilteredWorksheets = []) => {\n    const { worksheets: allWorksheets, filterTopic } = this.state;\n    let worksheets;\n    if (preFilteredWorksheets.length) {\n      worksheets = preFilteredWorksheets;\n    } else {\n      worksheets = allWorksheets;\n    }\n    return worksheets.reduce((finalArr, currentWorksheet) => {\n      const { topic } = currentWorksheet;\n      if (topic === filterTopic && finalArr.indexOf(currentWorksheet) === -1) {\n        finalArr.push(currentWorksheet);\n      }\n      return finalArr;\n    }, []);\n  }\n\n  // eslint-disable-next-line consistent-return\n  onSortWorksheets = (worksheets) => {\n    const { sort } = this.state;\n    switch (sort) {\n      case 'dueDate':\n        return worksheets.sort(dueDate);\n      case 'assignDate':\n        return worksheets.sort(assignDate);\n      case 'problems':\n        return worksheets.sort(problems);\n      case 'completed':\n        return worksheets.sort(completed);\n      case 'flags':\n        return worksheets.sort(flags);\n      case 'score':\n        return worksheets.sort(score);\n      case 'timeEstimate':\n        return worksheets.sort(timeEstimate);\n      default:\n        break;\n    }\n  }\n\n  onFilterWorksheets = () => {\n    const { subjectFilters, difficultyFilters, typeFilters, sourceFilters, worksheets: allWorksheets } = this.state;\n    let worksheets = allWorksheets;\n    if (subjectFilters.length) {\n      worksheets = worksheets.filter(worksheet => subjectFilters.indexOf(worksheetSubjectMap[worksheet.subject]) !== -1);\n    }\n    if (typeFilters.length && typeFilters.indexOf('mixedType') === -1) {\n      worksheets = worksheets.filter(worksheet => typeFilters.indexOf(worksheetTypeMap[worksheet.problemType]) !== -1);\n    }\n    if (sourceFilters.length) {\n      worksheets = worksheets.filter(worksheet => sourceFilters.indexOf(worksheetSourceMap[worksheet.worksheetSource]) !== -1);\n    }\n    if (difficultyFilters.length && difficultyFilters.indexOf('mixedDifficulty') === -1) {\n      worksheets = worksheets.filter(worksheet => difficultyFilters.indexOf(worksheetDifficultyMap[worksheet.difficulty]) !== -1);\n    }\n    return worksheets;\n  }\n\n  getMappableWorksheets = () => {\n    const { filterName, filterTopic, worksheets: allWorksheets, sort, subjectFilters, difficultyFilters, typeFilters, sourceFilters } = this.state;\n    let worksheets;\n    if (filterName.length && !filterTopic.length) {\n      worksheets = this.onFilterByName();\n    } else if (!filterName.length && filterTopic.length) {\n      worksheets = this.onFilterByTopic();\n    } else if (filterName.length && filterTopic.length) {\n      const filteredByName = this.onFilterByName();\n      worksheets = this.onFilterByTopic(filteredByName);\n    } else {\n      worksheets = allWorksheets;\n    }\n    if (subjectFilters.length || difficultyFilters.length || typeFilters.length || sourceFilters.length) {\n      worksheets = this.onFilterWorksheets();\n    }\n    if (sort) {\n      return this.onSortWorksheets(worksheets);\n    }\n    return worksheets;\n  }\n\n  // eslint-disable-next-line consistent-return\n  handleFilterClick = (filterType, filter) => {\n    const { subjectFilters: currentSubjectFilters, difficultyFilters: currentDifficultyFilters,\n      typeFilters: currentTypeFilters, sourceFilters: currentSourceFilters } = this.state;\n    let modifiedFilterCurrentState;\n    let modifiedFilterName;\n    let modifiedFilterUpdatedState;\n    switch (filterType) {\n      case 'subject':\n        modifiedFilterCurrentState = currentSubjectFilters;\n        modifiedFilterName = 'subjectFilters';\n        break;\n      case 'difficulty':\n        modifiedFilterCurrentState = currentDifficultyFilters;\n        modifiedFilterName = 'difficultyFilters';\n        break;\n      case 'type':\n        modifiedFilterCurrentState = currentTypeFilters;\n        modifiedFilterName = 'typeFilters';\n        break;\n      case 'source':\n        modifiedFilterCurrentState = currentSourceFilters;\n        modifiedFilterName = 'sourceFilters';\n        break;\n      default:\n        break;\n    }\n    if (modifiedFilterCurrentState.indexOf(filter) === -1) {\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $push: [filter],\n      });\n    } else {\n      const filterIndex = modifiedFilterCurrentState.indexOf(filter);\n      modifiedFilterUpdatedState = update(modifiedFilterCurrentState, {\n        $splice: [[ filterIndex, 1 ]],\n      });\n    }\n    this.setState({ [modifiedFilterName]: modifiedFilterUpdatedState });\n  }\n\n  // eslint-disable-next-line consistent-return\n  renderWorksheetView = () => {\n    const { currentView } = this.state;\n    const { onSetActiveWorksheet } = this.props;\n    switch (currentView) {\n      case 'list':\n        return <ListView onSetActiveWorksheet={onSetActiveWorksheet} worksheets={this.getMappableWorksheets()} />\n      case 'full':\n        return <FullView onSetActiveWorksheet={onSetActiveWorksheet} worksheets={this.getMappableWorksheets()} />\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { currentView, subjectFilters, difficultyFilters, typeFilters, sourceFilters } = this.state;\n    return (\n      <React.Fragment>\n        <Sticky>\n        {({ style }) => (\n            <div className=\"title-row card-panel\" style={{ ...style, zIndex: 1999 }}>\n          <div className=\"mobile-header\">\n            <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n          </div>\n          <h2 className=\"h1 white-text\">\n            <span className=\"heading-holder\">\n              <i className=\"icon-sheets-w\"></i>\n              <span className=\"heading-block\">Custom Worksheet Library</span>\n            </span>\n          </h2>\n        </div>\n        )}\n        </Sticky>\n        <FilterSection\n          currentView={currentView}\n          typeFilters={typeFilters}\n          sourceFilters={sourceFilters}\n          subjectFilters={subjectFilters}\n          difficultyFilters={difficultyFilters}\n          onSetSort={this.onSetSort}\n          onChangeView={this.onChangeView}\n          onClearFilters={this.onClearFilters}\n          handleFilterClick={this.handleFilterClick}\n          onSetFilteredState={this.onSetFilteredState}\n          onUnsetFilteredState={this.onUnsetFilteredState}\n          onSetFilteredTopicState={this.onSetFilteredTopicState}\n          onUnsetFilteredTopicState={this.onUnsetFilteredTopicState}\n        />\n        {this.renderWorksheetView()}\n        <div className=\"add-btn-block\">\n          <a href=\"#\" className=\"dropdown-trigger waves-effect waves-teal btn add-btn\" data-target='dropdown_assign_selected'><i className=\"material-icons\">add</i> Custom Worksheet</a>\n          <ul id='dropdown_assign_selected' className='dropdown-content dropdown-small'>\n            <li><a href=\"#\">From Saved</a></li>\n            <li><a href=\"#\">Create New</a></li>\n          </ul>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nListPage.propTypes = {\n  onSetActiveWorksheet: PropTypes.func.isRequired,\n}\n\nexport default ListPage;\n"]},"metadata":{},"sourceType":"module"}