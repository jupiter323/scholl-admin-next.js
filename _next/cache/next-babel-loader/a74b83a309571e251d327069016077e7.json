{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/components/StudentCard/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\n\nconst data = (current = 0, target = 0, initial = 0) => ({\n  datasets: [{\n    data: [current - initial, target - initial - (current - initial)],\n    backgroundColor: ['#0085ce', '#eaeaea']\n  }]\n});\n\nclass StudentCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onOpenEditModal\", () => {\n      this.props.onCloseDropdown();\n      this.setState({\n        editModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"onCloseEditModal\", () => this.setState({\n      editModalOpen: false\n    }));\n\n    _defineProperty(this, \"handleDropdownClick\", event => {\n      const {\n        onSetDropdown,\n        onCloseDropdown,\n        dropdownIsOpen,\n        index\n      } = this.props;\n      event.preventDefault();\n\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n\n      return onSetDropdown(index);\n    });\n\n    this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      onHandleStudentCard,\n      onSaveStudentChanges,\n      onDeleteStudent,\n      onCloneStudent,\n      index,\n      dropdownIndex,\n      student,\n      student: {\n        id,\n        active,\n        tutor,\n        testScores: {\n          initialScore,\n          currentScore\n        },\n        courseContext: {\n          targetScore\n        },\n        studentInformation: {\n          firstName,\n          lastName\n        },\n        emailAddress: {\n          email\n        },\n        stats\n      },\n      dropdownIsOpen\n    } = this.props;\n    const {\n      editModalOpen\n    } = this.state;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(EditModal, {\n      open: editModalOpen,\n      onSaveStudentChanges: onSaveStudentChanges,\n      onCloseEditModal: this.onCloseEditModal,\n      student: student,\n      handleDetailsChange: this.handleDetailsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"card-main-col col s12 m8 l7 xl5\",\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: active ? \"card-main card-location card card-large\" : \"card-main card-location card-disabled card-large card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"owner-box card-panel card-panel-panel card-panel-large\",\n      style: {\n        backgroundColor: active ? \"#0085ce\" : \"#9b9b9b\",\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-panel-row row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"user-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"user-circle\",\n      style: {\n        backgroundColor: active ? \"#14b14b\" : \"#808080\",\n        color: \"#fff\",\n        height: \"45px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"#\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"user-text\",\n      style: {\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      className: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      value: student,\n      onClick: () => onHandleStudentCard({\n        index\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, lastName, \", \", firstName)), __jsx(\"a\", {\n      href: `mailto:${email}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, email)))), __jsx(\"div\", {\n      className: \"col s2 right-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"block-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"icon-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"text-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Student\"))), __jsx(\"div\", {\n      className: \"col s1 right-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row icons-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"dropdown-block col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"dropdown-trigger btn\",\n      \"data-target\": \"dropdown01\",\n      onClick: this.handleDropdownClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      className: \"material-icons dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"more_vert\")), dropdownIsOpen && dropdownIndex === index ? __jsx(\"ul\", {\n      id: \"dropdown01\",\n      className: \"dropdown-content dropdown-wide\",\n      style: {\n        display: \"block\",\n        opacity: \"1\",\n        transform: \"scaleX(1) scaleY(1)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#\",\n      className: \"modal-trigger link-block\",\n      onClick: this.onOpenEditModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Edit\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      onClick: () => onCloneStudent(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Clone\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Show Owner\")), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#!\",\n      onClick: () => onDeleteStudent(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Delete\"))) : null))))), __jsx(\"div\", {\n      className: \"card-content\",\n      ref: this.studentCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row d-flex align-items-center mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chart-container chart-container-large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chart-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, active ? __jsx(Doughnut, {\n      data: () => data(currentScore, targetScore, initialScore),\n      height: 210,\n      options: {\n        circumference: 1.45 * Math.PI,\n        rotation: -3.85,\n        cutoutPercentage: 60,\n        tooltips: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }) : null, __jsx(\"span\", {\n      className: \"chart-value\",\n      style: {\n        backgroundColor: \"#0085ce\",\n        bottom: \"7px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      \"data-count-up\": true,\n      \"data-start-val\": initialScore,\n      \"data-end-val\": currentScore,\n      \"data-duration\": \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, currentScore))), __jsx(\"div\", {\n      className: \"chart-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"chart-col chart-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"amount\",\n      style: {\n        color: \"#0085ce\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, initialScore), __jsx(\"span\", {\n      className: \"amount-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"\\xA0 initial\")), __jsx(\"div\", {\n      className: \"chart-col chart-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, targetScore), __jsx(\"span\", {\n      className: \"amount-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"\\xA0 target\"))))), __jsx(\"div\", {\n      className: \"col s12 m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"points-list-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: \"style-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, stats.complete), __jsx(\"span\", {\n      className: \"point-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"complete\")), __jsx(\"li\", {\n      className: \"style-red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, stats.overdue), __jsx(\"span\", {\n      className: \"point-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"overdue\")), __jsx(\"li\", {\n      className: \"style-orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, stats.practice_tests), __jsx(\"span\", {\n      className: \"point-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"practice tests\")), __jsx(\"li\", {\n      className: \"style-blue-lighter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"badge-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, stats.sessions_complete), \" \", __jsx(\"span\", {\n      className: \"of\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"of \", stats.total_sessions)), __jsx(\"span\", {\n      className: \"point-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"sessions\"))))), __jsx(\"div\", {\n      className: \"card-inner-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"category-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: \"category-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"category-badge badge-purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"category-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, tutor)))))))));\n  }\n\n}\n\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired,\n  onHandleStudentCard: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  onDeleteStudent: PropTypes.func.isRequired,\n  onCloneStudent: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIndex: PropTypes.number,\n  onSaveStudentChanges: PropTypes.func.isRequired\n};\nexport default StudentCard;","map":{"version":3,"sources":["/Users/wolf/Documents/clearchoice/admin/feature-view-updated-course/clear-choice-admin/components/Student/components/StudentCard/index.js"],"names":["React","PropTypes","Doughnut","EditModal","data","current","target","initial","datasets","backgroundColor","StudentCard","Component","constructor","props","onCloseDropdown","setState","editModalOpen","event","onSetDropdown","dropdownIsOpen","index","preventDefault","state","cloneModalOpen","showOwnerModalOpen","deleteModalOpen","activateAccountModalOpen","assignInstructorModalOpen","render","onHandleStudentCard","onSaveStudentChanges","onDeleteStudent","onCloneStudent","dropdownIndex","student","id","active","tutor","testScores","initialScore","currentScore","courseContext","targetScore","studentInformation","firstName","lastName","emailAddress","email","stats","onCloseEditModal","handleDetailsChange","color","height","handleDropdownClick","display","opacity","transform","onOpenEditModal","studentCard","circumference","Math","PI","rotation","cutoutPercentage","tooltips","bottom","complete","overdue","practice_tests","sessions_complete","total_sessions","propTypes","object","isRequired","func","bool","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport EditModal from './components/EditModal';\nconst data = (current = 0, target = 0, initial = 0) => ({\n  datasets: [{\n    data: [current - initial, (target - initial) - (current - initial)],\n    backgroundColor: [\n      '#0085ce',\n      '#eaeaea',\n    ],\n  }],\n});\n\nclass StudentCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editModalOpen: false,\n      cloneModalOpen: false,\n      showOwnerModalOpen: false,\n      deleteModalOpen: false,\n      activateAccountModalOpen: false,\n      assignInstructorModalOpen: false,\n    };\n  }\n\n    onOpenEditModal = () => {\n      this.props.onCloseDropdown();\n      this.setState({ editModalOpen: true });\n    }\n    onCloseEditModal = () => this.setState({ editModalOpen: false })\n\n    handleDropdownClick = (event) => {\n      const { onSetDropdown, onCloseDropdown, dropdownIsOpen, index } = this.props;\n      event.preventDefault();\n      if (dropdownIsOpen) {\n        return onCloseDropdown();\n      }\n      return onSetDropdown(index);\n    }\n\n    render() {\n      const { onHandleStudentCard, onSaveStudentChanges, onDeleteStudent, onCloneStudent, index, dropdownIndex, student, student: { id, active, tutor, testScores: { initialScore, currentScore }, courseContext: { targetScore }, studentInformation: { firstName, lastName },\n        emailAddress: { email }, stats }, dropdownIsOpen } = this.props;\n      const { editModalOpen } = this.state;\n      return (\n        <React.Fragment>\n          <EditModal\n            open={editModalOpen}\n            onSaveStudentChanges={onSaveStudentChanges}\n            onCloseEditModal={this.onCloseEditModal}\n            student={student}\n            handleDetailsChange={this.handleDetailsChange}\n          />\n\n          <div className=\"card-main-col col s12 m8 l7 xl5\" id={id}>\n            <div\n              className={\n                active\n                  ? \"card-main card-location card card-large\"\n                  : \"card-main card-location card-disabled card-large card\"\n              }\n            >\n              <div\n                className=\"owner-box card-panel card-panel-panel card-panel-large\"\n                style={{\n                  backgroundColor: active ? \"#0085ce\" : \"#9b9b9b\",\n                  color: \"#fff\",\n                }}\n              >\n                <div className=\"card-panel-row row\">\n                  <div className=\"col s9\">\n                    <div className=\"user-block\">\n                      <div\n                        className=\"user-circle\"\n                        style={{\n                          backgroundColor: active ? \"#14b14b\" : \"#808080\",\n                          color: \"#fff\",\n                          height: \"45px\",\n                        }}\n                      >\n                        <img src=\"#\" alt=\"\" />\n                      </div>\n                      <div className=\"user-text\" style={{ color: \"#fff\" }}>\n                        <h4 className=\"h3\">\n                          <a\n                            href=\"#\"\n                            value={student}\n                            onClick={() => onHandleStudentCard({ index })}\n                          >\n                            {lastName}, {firstName}\n                          </a>\n                        </h4>\n                        <a href={`mailto:${email}`}>{email}</a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s2 right-align\">\n                    <span className=\"block-icon\">\n                      <i className=\"icon-user\"></i>\n                      <span className=\"text-icon\">Student</span>\n                    </span>\n                  </div>\n                  <div className=\"col s1 right-align\">\n                    <div className=\"row icons-row\">\n                      <div className=\"dropdown-block col\">\n                        <a\n                          href=\"#\"\n                          className=\"dropdown-trigger btn\"\n                          data-target=\"dropdown01\"\n                          onClick={this.handleDropdownClick}\n                        >\n                          <i className=\"material-icons dots-icon\">more_vert</i>\n                        </a>\n                        <If condition={dropdownIsOpen && dropdownIndex === index}>\n                          <ul\n                            id=\"dropdown01\"\n                            className=\"dropdown-content dropdown-wide\"\n                            style={{\n                              display: \"block\",\n                              opacity: \"1\",\n                              transform: \"scaleX(1) scaleY(1)\",\n                            }}\n                          >\n                            <li>\n                              <a\n                                href=\"#\"\n                                className=\"modal-trigger link-block\"\n                                onClick={this.onOpenEditModal}\n                              >\n                              Edit\n                              </a>\n                            </li>\n                            <li>\n                              <a href=\"#!\" onClick={() => onCloneStudent(index)}>\n                              Clone\n                              </a>\n                            </li>\n                            <li>\n                              <a href=\"#!\">Show Owner</a>\n                            </li>\n                            <li>\n                              <a href=\"#!\" onClick={() => onDeleteStudent(index)}>\n                              Delete\n                              </a>\n                            </li>\n                          </ul>\n                        </If>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* card content */}\n              <div className=\"card-content\" ref={this.studentCard}>\n                <div className=\"row d-flex align-items-center mb-0\">\n                  <div className=\"col s12 m6\">\n                    <div className=\"chart-container chart-container-large\">\n                      <div className=\"chart-holder\">\n                        <If condition={active}>\n                          <Doughnut\n                            data={() =>\n                              data(currentScore, targetScore, initialScore)\n                            }\n                            height={210}\n                            options={{\n                              circumference: 1.45 * Math.PI,\n                              rotation: -3.85,\n                              cutoutPercentage: 60,\n                              tooltips: false,\n                            }}\n                          />\n                        </If>\n                        <span\n                          className=\"chart-value\"\n                          style={{ backgroundColor: \"#0085ce\", bottom: \"7px\" }}\n                        >\n                          <span\n                            data-count-up\n                            data-start-val={initialScore}\n                            data-end-val={currentScore}\n                            data-duration=\"1\"\n                          >\n                            {currentScore}\n                          </span>\n                        </span>\n                      </div>\n                      <div className=\"chart-row\">\n                        <div className=\"chart-col chart-start\">\n                          <span className=\"amount\" style={{ color: \"#0085ce\" }}>\n                            {initialScore}\n                          </span>\n                          <span className=\"amount-text\">&nbsp; initial</span>\n                        </div>\n                        <div className=\"chart-col chart-end\">\n                          <span className=\"amount\">{targetScore}</span>\n                          <span className=\"amount-text\">&nbsp; target</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col s12 m6\">\n                    <ul className=\"points-list-bordered\">\n                      <li className=\"style-green\">\n                        <span className=\"badge-circle\">\n                          {stats.complete}\n                        </span>\n                        <span className=\"point-text\">complete</span>\n                      </li>\n                      <li className=\"style-red\">\n                        <span className=\"badge-circle\">\n                          {stats.overdue}\n                        </span>\n                        <span className=\"point-text\">overdue</span>\n                      </li>\n                      <li className=\"style-orange\">\n                        <span className=\"badge-circle\">\n                          {stats.practice_tests}\n                        </span>\n                        <span className=\"point-text\">practice tests</span>\n                      </li>\n                      <li className=\"style-blue-lighter\">\n                        <span className=\"badge-circle\">\n                          <span>{stats.sessions_complete}</span>{\" \"}\n                          <span className=\"of\">\n                          of {stats.total_sessions}\n                          </span>\n                        </span>\n                        <span className=\"point-text\">sessions</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div className=\"card-inner-row\">\n                  <div className=\"row-holder\">\n                    <ul className=\"category-list\">\n                      <li className=\"category-box\">\n                        <span className=\"category-badge badge-purple\"></span>\n                        <span className=\"category-text\">{tutor}</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* </div> */}\n        </React.Fragment>\n      );\n    }\n}\n\nStudentCard.propTypes = {\n  student: PropTypes.object.isRequired,\n  onHandleStudentCard: PropTypes.func.isRequired,\n  dropdownIsOpen: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  onDeleteStudent: PropTypes.func.isRequired,\n  onCloneStudent: PropTypes.func.isRequired,\n  onSetDropdown: PropTypes.func.isRequired,\n  onCloseDropdown: PropTypes.func.isRequired,\n  dropdownIndex: PropTypes.number,\n  onSaveStudentChanges: PropTypes.func.isRequired,\n};\n\nexport default StudentCard;\n"]},"metadata":{},"sourceType":"module"}