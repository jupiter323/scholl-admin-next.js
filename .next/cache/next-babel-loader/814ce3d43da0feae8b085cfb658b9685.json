{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport UserInfo from './components/UserInfo';\nimport ContactInfo from './components/ContactInfo';\nimport UserLocation from './components/UserLocation';\nimport LocationModal from '../../Location/components/LocationModal';\nimport { nestedEditFieldValidation } from '../../utils/fieldValidation';\n\nvar DetailAccountPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DetailAccountPage, _React$Component);\n\n  function DetailAccountPage(props) {\n    var _this;\n\n    _classCallCheck(this, DetailAccountPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetailAccountPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillReceiveProps\", function (nextProps) {\n      if (!_this.state.originalUser || nextProps.user.id !== _this.state.originalUser.id) {\n        var _nextProps$user = nextProps.user;\n        _nextProps$user = _nextProps$user === void 0 ? {} : _nextProps$user;\n        var id = _nextProps$user.id,\n            userInfo = _nextProps$user.userInfo,\n            contactInfo = _nextProps$user.contactInfo,\n            userLocation = _nextProps$user.userLocation;\n        var updatedUser = {\n          id: id,\n          userInfo: userInfo,\n          contactInfo: contactInfo,\n          userLocation: userLocation\n        };\n        var originalUserState = _this.state.originalUser;\n        var originalUser = update(originalUserState, {\n          $merge: nextProps.user\n        });\n\n        _this.setState({\n          originalUser: originalUser,\n          updatedUser: updatedUser\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseLocationModal\", function () {\n      return _this.setState({\n        locationModalOpen: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSetValidation\", function (validation, cb) {\n      return _this.setState({\n        validation: validation\n      }, cb);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSaveChanges\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var updatedUser, valid;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault(); // const { onSavePassageChanges, onSaveChangesError, onSetPassageValidation } = this.props;\n\n                updatedUser = _this.state.updatedUser;\n                _context.next = 4;\n                return nestedEditFieldValidation(_this.state, _this.state.updatedUser, _this.onSetValidation, function (validation) {\n                  return console.warn('validation', validation);\n                });\n\n              case 4:\n                valid = _context.sent;\n\n                if (!valid) {\n                  // return onSaveChangesError();\n                  console.warn('not valid');\n                }\n\n                _this.setState({\n                  originalUser: _this.state.updatedUser\n                }); // return onSavePassageChanges(updatedUser);\n\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onRemoveOption\", function (optionIndex, section, array) {\n      var updatedUser = update(_this.state.updatedUser, _defineProperty({}, section, _defineProperty({}, array, {\n        $splice: [[optionIndex, 1]]\n      })));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initialUserMount\", function () {\n      return _this.state.originalUser.id !== _this.props.user.id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (event, name, section) {\n      var previousUserState = _this.state.updatedUser;\n      var value = event.target ? event.target.value : event;\n      var updatedUser = update(previousUserState, _defineProperty({}, section, {\n        $merge: _defineProperty({}, name, value)\n      }));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionsChange\", function (selectedOptions, section, array) {\n      var updatedUser = update(_this.state.updatedUser, _defineProperty({}, section, _defineProperty({}, array, {\n        $set: selectedOptions\n      })));\n\n      _this.setState({\n        updatedUser: updatedUser\n      });\n    });\n\n    _this.state = {\n      locationModalOpen: false,\n      originalUser: {\n        userInfo: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          gender: ''\n        },\n        contactInfo: {\n          phone: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: ''\n        },\n        userLocation: {\n          locations: []\n        }\n      },\n      updatedUser: {\n        userInfo: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          gender: ''\n        },\n        contactInfo: {\n          phone: '',\n          streetAddress: '',\n          city: '',\n          state: '',\n          zip: ''\n        },\n        userLocation: {\n          locations: []\n        }\n      },\n      validation: {\n        userInfo: {\n          firstName: true,\n          lastName: true,\n          email: true,\n          gender: true\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(DetailAccountPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$user = this.props.user;\n      _this$props$user = _this$props$user === void 0 ? {} : _this$props$user;\n      var id = _this$props$user.id,\n          userInfo = _this$props$user.userInfo,\n          contactInfo = _this$props$user.contactInfo,\n          userLocation = _this$props$user.userLocation;\n      var updatedUser = {\n        id: id,\n        userInfo: userInfo,\n        contactInfo: contactInfo,\n        userLocation: userLocation\n      };\n      var originalUserState = this.state.originalUser;\n      var originalUser = update(originalUserState, {\n        $merge: updatedUser\n      });\n      this.setState({\n        originalUser: originalUser,\n        updatedUser: updatedUser\n      }); // eslint-disable-line\n    } // This resets the component state to reflect the details of the next user the user clicks on\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          locationModalOpen = _this$state.locationModalOpen,\n          _this$state$updatedUs = _this$state.updatedUser,\n          updatedUserInfo = _this$state$updatedUs.userInfo,\n          updatedContactInfo = _this$state$updatedUs.contactInfo,\n          updatedUserLocation = _this$state$updatedUs.userLocation;\n      var _this$props$user2 = this.props.user,\n          userInfo = _this$props$user2.userInfo,\n          contactInfo = _this$props$user2.contactInfo,\n          userLocation = _this$props$user2.userLocation;\n      return React.createElement(React.Fragment, null, React.createElement(LocationModal, {\n        open: locationModalOpen,\n        onClose: this.onCloseLocationModal,\n        handleLocationsChange: function handleLocationsChange(selectedLocations) {\n          return _this2.handleOptionsChange(selectedLocations, 'userLocation', 'locations');\n        }\n      }), React.createElement(\"div\", {\n        className: \"content-section\"\n      }, React.createElement(\"div\", {\n        className: \"content-section-holder\"\n      }, React.createElement(\"div\", {\n        className: \"row mb-0 d-flex-content large\"\n      }, React.createElement(\"div\", {\n        className: \"col s12 l5\"\n      }, React.createElement(UserInfo, {\n        state: this.initialUserMount() ? userInfo : updatedUserInfo,\n        handleDetailsChange: this.handleDetailsChange\n      }), React.createElement(ContactInfo, {\n        state: this.initialUserMount() ? contactInfo : updatedContactInfo,\n        handleDetailsChange: this.handleDetailsChange\n      })), React.createElement(UserLocation, {\n        state: this.initialUserMount() ? userLocation : updatedUserLocation,\n        onOpenLocationModal: this.onOpenLocationModal,\n        onRemoveLocation: this.onRemoveOption\n      })), React.createElement(\"div\", {\n        className: \"btn-holder align-right-sm\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn\",\n        onClick: this.onSaveChanges\n      }, \"Save\")))));\n    }\n  }]);\n\n  return DetailAccountPage;\n}(React.Component);\n\nexport default DetailAccountPage;","map":null,"metadata":{},"sourceType":"module"}