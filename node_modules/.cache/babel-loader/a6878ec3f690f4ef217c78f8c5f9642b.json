{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport Portal from '../../../../Portal';\nimport ClickOffComponentWrapper from '../../../../ClickOffComponentWrapper';\n\nvar AssignSessionModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignSessionModal, _React$Component);\n\n  function AssignSessionModal(props) {\n    var _this;\n\n    _classCallCheck(this, AssignSessionModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignSessionModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onResetModal\", function () {\n      return _this.setState({\n        date: '',\n        startTime: '',\n        endTime: '',\n        notes: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCloseModal\", function () {\n      var onClose = _this.props.onClose;\n      onClose();\n\n      _this.onResetModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"assignSession\", function () {\n      var onAssignSession = _this.props.onAssignSession;\n      var _this$state = _this.state,\n          unformattedDate = _this$state.date,\n          unformattedStartTime = _this$state.startTime,\n          unformattedEndTime = _this$state.endTime,\n          notes = _this$state.notes;\n      var date = moment(unformattedDate).format('MM/DD/YY');\n      var startTime = moment(unformattedStartTime).format('hh:mm');\n      var endTime = moment(unformattedEndTime).format('hh:mm');\n      onAssignSession({\n        date: date,\n        startTime: startTime,\n        endTime: endTime,\n        notes: notes,\n        title: 'Session'\n      });\n\n      _this.onResetModal();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDetailsChange\", function (_ref) {\n      var target = _ref.target;\n      return _this.setState(_defineProperty({}, target.name, target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDatePickerChange\", function (field, value) {\n      return _this.setState(_defineProperty({}, field, value));\n    });\n\n    _this.state = {\n      date: '',\n      startTime: '',\n      endTime: '',\n      notes: ''\n    };\n    return _this;\n  }\n\n  _createClass(AssignSessionModal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var modalDate = this.props.modalDate;\n\n      if (prevState.date === '' && modalDate) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          date: new Date(modalDate)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var open = this.props.open;\n      var _this$state2 = this.state,\n          date = _this$state2.date,\n          startTime = _this$state2.startTime,\n          endTime = _this$state2.endTime,\n          notes = _this$state2.notes;\n      return React.createElement(Portal, {\n        selector: \"#modal\"\n      }, open && React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"overlay\"\n      }, React.createElement(ClickOffComponentWrapper, {\n        onOuterClick: this.onCloseModal\n      }, React.createElement(\"div\", {\n        id: \"modal_assign_session\",\n        className: \"jsx-1216404812\" + \" \" + \"modal modal-custom modal-calendar\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"card-modal card\"\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: '#14b04b',\n          color: '#fff'\n        },\n        className: \"jsx-1216404812\" + \" \" + \"card-panel card-panel-title\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"card-panel-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"col\"\n      }, React.createElement(\"h2\", {\n        className: \"jsx-1216404812\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-1216404812\" + \" \" + \"heading-holder\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-1216404812\" + \" \" + \"icon-clock2\"\n      }), React.createElement(\"span\", {\n        className: \"jsx-1216404812\" + \" \" + \"heading-block\"\n      }, \" New Session\")))), React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"col right-align\"\n      }, React.createElement(\"a\", {\n        href: \"#!\",\n        className: \"jsx-1216404812\" + \" \" + \"panel-link close modal-close\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-1216404812\" + \" \" + \"icon-close-thin\"\n      }))))), React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"card-content\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"card-body\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"modal-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"col s12\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"datepicker-field input-field\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-1216404812\" + \" \" + \"icon-calendar\"\n      }), React.createElement(DatePicker, {\n        selected: date,\n        className: \"full-width\",\n        dateFormat: \"MM/dd/yy\",\n        id: \"date\",\n        name: \"date\",\n        onChange: function onChange(event) {\n          return _this2.handleDatePickerChange('date', event);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        className: \"jsx-1216404812\" + \" \" + ((date ? 'label active' : 'label') || \"\")\n      }, \"Date\")))), React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"modal-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"col s6\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"datepicker-field input-field\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-1216404812\" + \" \" + \"icon-clock2\"\n      }), React.createElement(DatePicker, {\n        selected: startTime,\n        showTimeSelect: true,\n        showTimeSelectOnly: true,\n        timeIntervals: 15,\n        dateFormat: \"h:mm aa\",\n        timeCaption: \"Time\",\n        id: \"startTime\",\n        name: \"startTime\",\n        onChange: function onChange(event) {\n          return _this2.handleDatePickerChange('startTime', event);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"startTime\",\n        className: \"jsx-1216404812\" + \" \" + ((startTime ? 'label active' : 'label') || \"\")\n      }, \"Start Time\"))), React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"col s6\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"datepicker-field input-field\"\n      }, React.createElement(\"i\", {\n        className: \"jsx-1216404812\" + \" \" + \"icon-clock2\"\n      }), React.createElement(DatePicker, {\n        selected: endTime,\n        showTimeSelect: true,\n        showTimeSelectOnly: true,\n        timeIntervals: 15,\n        dateFormat: \"h:mm aa\",\n        timeCaption: \"Time\",\n        id: \"endTime\",\n        name: \"endTime\",\n        onChange: function onChange(event) {\n          return _this2.handleDatePickerChange('endTime', event);\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"endTime\",\n        className: \"jsx-1216404812\" + \" \" + ((endTime ? 'label active' : 'label') || \"\")\n      }, \"End Time\")))), React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"modal-row row\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"col s12\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"input-field input-field-textarea\"\n      }, React.createElement(\"textarea\", {\n        id: \"notes\",\n        name: \"notes\",\n        cols: \"40\",\n        rows: \"7\",\n        value: notes,\n        onChange: this.handleDetailsChange,\n        className: \"jsx-1216404812\" + \" \" + \"textarea-scroll\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"notes\",\n        className: \"jsx-1216404812\" + \" \" + ((notes ? 'label active' : 'label') || \"\")\n      }, \"Session Notes:\"))))), React.createElement(\"div\", {\n        className: \"jsx-1216404812\" + \" \" + \"modal-footer modal-footer-width\"\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.onCloseModal,\n        className: \"jsx-1216404812\" + \" \" + \"modal-close waves-effect waves-teal btn-flat pink-text text-darken-1\"\n      }, \"Cancel\"), React.createElement(\"a\", {\n        href: \"#\",\n        onClick: this.assignSession,\n        className: \"jsx-1216404812\" + \" \" + \"link-btn waves-effect waves-teal btn-flat\"\n      }, \"Add Session\"))))))), React.createElement(_JSXStyle, {\n        id: \"1216404812\"\n      }, [\".overlay.jsx-1216404812{position:fixed;background-color:rgba(0,0,0,0.7);top:0;right:0;bottom:0;left:0;z-index:999;}\", \".card-modal.jsx-1216404812{margin:0;border-radius:6px;}\", \".modal.jsx-1216404812{display:block;background-color:white;position:absolute;top:10%;right:10%;left:10%;box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);}\", \".modal-custom.jsx-1216404812{opacity:1;visibility:visible;}\"]));\n    }\n  }]);\n\n  return AssignSessionModal;\n}(React.Component);\n\nexport default AssignSessionModal;","map":null,"metadata":{},"sourceType":"module"}