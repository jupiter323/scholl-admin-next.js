{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nconst getIndicatorStatus = (activeSection, active) => ({\n  left: activeSection === 'subjectScores' ? '50%' : '0',\n  right: activeSection === 'subjectScores' ? '0' : '50%',\n  backgroundColor: active ? '#00bbf7' : '#b2b2b2'\n}); // TODO: Implement final line chart data implementation later\n\n\nclass TestScores extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSetOpenSection\", (event, openSection) => {\n      event.preventDefault();\n      this.setState({\n        openSection\n      });\n    });\n\n    this.state = {\n      openSection: 'compositeScore'\n    };\n  }\n\n  render() {\n    const {\n      openSection\n    } = this.state;\n    const {\n      state: {\n        compositeScore,\n        subjectScores\n      },\n      active\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"col s12 l7 card-width-747\"\n    }, React.createElement(\"div\", {\n      className: \"card-main card card-chart\"\n    }, React.createElement(\"div\", {\n      className: \"card-content\"\n    }, React.createElement(\"h2\", null, \"Test Scores\"), React.createElement(\"div\", {\n      className: \"tabs-container tabs-charts-container\"\n    }, !active ? React.createElement(\"div\", {\n      className: \"card-note-box\",\n      style: {\n        display: 'block'\n      }\n    }, React.createElement(\"span\", {\n      className: \"title\"\n    }, \"Nothing to see here yet.\"), React.createElement(\"span\", {\n      className: \"text-frame\"\n    }, \"Once this student has taken multiple tests, you can track the progress here. \")) : null, React.createElement(\"ul\", {\n      className: \"tabs\",\n      style: {\n        filter: !active ? 'blur(3px)' : \"\"\n      }\n    }, React.createElement(\"li\", {\n      className: \"tab col s6 l6\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: event => this.onSetOpenSection(event, 'compositeScore'),\n      className: openSection === 'compositeScore' ? 'active' : ''\n    }, \"Composite Score\")), React.createElement(\"li\", {\n      className: \"tab col s6 l6\"\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: event => this.onSetOpenSection(event, 'subjectScores'),\n      className: openSection === 'subjectScores' ? 'active' : ''\n    }, \"Subject Scores\")), React.createElement(\"li\", {\n      className: \"indicator\",\n      style: getIndicatorStatus(openSection, active)\n    })), React.createElement(\"div\", {\n      id: \"scores_tab01\",\n      className: openSection === 'compositeScore' ? '' : 'tab-content',\n      style: active ? {} : {\n        filter: 'blur(3px)'\n      }\n    }, React.createElement(\"div\", {\n      className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n    }, React.createElement(\"ul\", {\n      className: \"panel-list\"\n    }, React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Reading\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.reading) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Writing\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.writing) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Math\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.math) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Composite\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", compositeScore.composite) : null))), React.createElement(\"div\", {\n      className: \"chart-line-container js-scrollable-chart\"\n    }, React.createElement(Line, {\n      data: data\n    }))), React.createElement(\"div\", {\n      id: \"scores_tab02\",\n      className: openSection === 'subjectScores' ? '' : 'tab-content',\n      style: active ? {} : {\n        filter: 'blur(3px)'\n      }\n    }, React.createElement(\"div\", {\n      className: active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'\n    }, React.createElement(\"ul\", {\n      className: \"panel-list\"\n    }, React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Reading\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.reading) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Writing\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.writing) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Math\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.math) : null), React.createElement(\"li\", {\n      className: \"panel-block\"\n    }, React.createElement(\"strong\", {\n      className: \"text-small\"\n    }, \"Composite\"), active ? React.createElement(\"strong\", {\n      className: \"text-large\"\n    }, \"+\", subjectScores.composite) : null))), React.createElement(\"div\", {\n      className: \"chart-line-container js-scrollable-chart\"\n    }, React.createElement(Line, {\n      data: data\n    })))))));\n  }\n\n}\n\n;\nTestScores.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired\n};\nexport default TestScores;","map":{"version":3,"sources":["/Volumes/HDD/Sites/clearchoicetestprep/clear-choice-admin/components/Student/DetailSummaryPage/components/TestScores/index.js"],"names":["React","PropTypes","Line","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","getIndicatorStatus","activeSection","active","left","right","TestScores","Component","constructor","props","event","openSection","preventDefault","setState","state","render","compositeScore","subjectScores","display","filter","onSetOpenSection","reading","writing","math","composite","propTypes","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Line } from 'react-chartjs-2';\n\nconst data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nconst getIndicatorStatus = (activeSection, active) => ({\n  left: activeSection === 'subjectScores' ? '50%' : '0',\n  right: activeSection === 'subjectScores' ? '0' : '50%',\n  backgroundColor: active ? '#00bbf7' : '#b2b2b2',\n})\n\n// TODO: Implement final line chart data implementation later\nclass TestScores extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openSection: 'compositeScore',\n    }\n  }\n\n  onSetOpenSection = (event, openSection) => {\n    event.preventDefault();\n    this.setState({ openSection })\n  }\n\n  render() {\n    const { openSection } = this.state;\n    const { state: { compositeScore, subjectScores }, active } = this.props;\n    return (\n      <div className=\"col s12 l7 card-width-747\">\n        <div className=\"card-main card card-chart\">\n          <div className=\"card-content\">\n            <h2>Test Scores</h2>\n            <div className=\"tabs-container tabs-charts-container\">\n              <If condition={!active}>\n                <div className=\"card-note-box\" style={{ display: 'block' }}>\n                  <span className=\"title\">Nothing to see here yet.</span>\n                  <span className=\"text-frame\">Once this student has taken multiple tests, you can track the progress here. </span>\n                </div>\n              </If>\n              <ul className=\"tabs\" style={{ filter: !active ? 'blur(3px)': \"\"}}>\n                <li className=\"tab col s6 l6\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => this.onSetOpenSection(event, 'compositeScore')}\n                    className={openSection === 'compositeScore' ? 'active' : ''}\n                  >\n                    Composite Score\n                  </a>\n                </li>\n                <li className=\"tab col s6 l6\">\n                  <a\n                    href=\"#\"\n                    onClick={(event) => this.onSetOpenSection(event, 'subjectScores')}\n                    className={openSection === 'subjectScores' ? 'active' : ''}\n                  >\n                    Subject Scores\n                  </a>\n                </li>\n                <li className=\"indicator\" style={getIndicatorStatus(openSection, active)}></li>\n              </ul>\n              <div id=\"scores_tab01\" className={openSection === 'compositeScore' ? '' : 'tab-content'} style={active ? {} : { filter: 'blur(3px)'}}>\n                <div className={active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'}>\n                  <ul className=\"panel-list\">\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Reading</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.reading}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Writing</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.writing}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Math</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.math}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Composite</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{compositeScore.composite}</strong>\n                      </If>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"chart-line-container js-scrollable-chart\">\n                  <Line data={data} />\n                </div>\n              </div>\n              <div id=\"scores_tab02\" className={openSection === 'subjectScores' ? '' : 'tab-content'} style={active ? {} : { filter: 'blur(3px)'}}>\n                <div className={active ? 'card-panel panel-scores light-blue accent-2 white-text' : 'card-panel panel-scores white-text'}>\n                  <ul className=\"panel-list\">\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Reading</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.reading}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Writing</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.writing}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Math</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.math}</strong>\n                      </If>\n                    </li>\n                    <li className=\"panel-block\">\n                      <strong className=\"text-small\">Composite</strong>\n                      <If condition={active}>\n                        <strong className=\"text-large\">+{subjectScores.composite}</strong>\n                      </If>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"chart-line-container js-scrollable-chart\">\n                  <Line data={data} />\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nTestScores.propTypes = {\n  state: PropTypes.object.isRequired,\n  active: PropTypes.bool.isRequired,\n};\n\nexport default TestScores;\n"]},"metadata":{},"sourceType":"module"}